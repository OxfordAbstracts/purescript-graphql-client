// output/Control.Semigroupoid/index.js
var semigroupoidFn = {
  compose: function(f) {
    return function(g) {
      return function(x) {
        return f(g(x));
      };
    };
  }
};
var compose = function(dict) {
  return dict.compose;
};

// output/Control.Category/index.js
var identity = function(dict) {
  return dict.identity;
};
var categoryFn = {
  identity: function(x) {
    return x;
  },
  Semigroupoid0: function() {
    return semigroupoidFn;
  }
};

// output/Control.Promise/foreign.js
function promise(f) {
  return function() {
    return new Promise(function(success, error2) {
      var succF = function(s) {
        return function() {
          return success(s);
        };
      };
      var failF = function(s) {
        return function() {
          return error2(s);
        };
      };
      try {
        f(succF)(failF)();
      } catch (e) {
        error2(e);
      }
    });
  };
}
function thenImpl(promise2) {
  return function(errCB) {
    return function(succCB) {
      return function() {
        promise2.then(succCB, errCB);
      };
    };
  };
}

// output/Data.Functor/foreign.js
var arrayMap = function(f) {
  return function(arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

// output/Data.Boolean/index.js
var otherwise = true;

// output/Data.Function/index.js
var on = function(f) {
  return function(g) {
    return function(x) {
      return function(y) {
        return f(g(x))(g(y));
      };
    };
  };
};
var flip = function(f) {
  return function(b) {
    return function(a) {
      return f(a)(b);
    };
  };
};
var $$const = function(a) {
  return function(v) {
    return a;
  };
};
var applyFlipped = function(x) {
  return function(f) {
    return f(x);
  };
};
var apply = function(f) {
  return function(x) {
    return f(x);
  };
};

// output/Data.Unit/foreign.js
var unit = void 0;

// output/Type.Proxy/index.js
var $$Proxy = /* @__PURE__ */ function() {
  function $$Proxy2() {
  }
  ;
  $$Proxy2.value = new $$Proxy2();
  return $$Proxy2;
}();

// output/Data.Functor/index.js
var map = function(dict) {
  return dict.map;
};
var mapFlipped = function(dictFunctor) {
  var map117 = map(dictFunctor);
  return function(fa) {
    return function(f) {
      return map117(f)(fa);
    };
  };
};
var $$void = function(dictFunctor) {
  return map(dictFunctor)($$const(unit));
};
var voidLeft = function(dictFunctor) {
  var map117 = map(dictFunctor);
  return function(f) {
    return function(x) {
      return map117($$const(x))(f);
    };
  };
};
var voidRight = function(dictFunctor) {
  var map117 = map(dictFunctor);
  return function(x) {
    return map117($$const(x));
  };
};
var functorFn = {
  map: /* @__PURE__ */ compose(semigroupoidFn)
};
var functorArray = {
  map: arrayMap
};

// output/Data.Semigroup/foreign.js
var concatString = function(s1) {
  return function(s2) {
    return s1 + s2;
  };
};
var concatArray = function(xs) {
  return function(ys) {
    if (xs.length === 0)
      return ys;
    if (ys.length === 0)
      return xs;
    return xs.concat(ys);
  };
};

// output/Data.Symbol/index.js
var reflectSymbol = function(dict) {
  return dict.reflectSymbol;
};

// output/Data.Void/index.js
var absurd = function(a) {
  var spin = function($copy_v) {
    var $tco_result;
    function $tco_loop(v) {
      $copy_v = v;
      return;
    }
    ;
    while (true) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  return spin(a);
};

// output/Record.Unsafe/foreign.js
var unsafeGet = function(label) {
  return function(rec) {
    return rec[label];
  };
};
var unsafeSet = function(label) {
  return function(value) {
    return function(rec) {
      var copy = {};
      for (var key in rec) {
        if ({}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }
      copy[label] = value;
      return copy;
    };
  };
};

// output/Data.Semigroup/index.js
var semigroupString = {
  append: concatString
};
var semigroupRecordNil = {
  appendRecord: function(v) {
    return function(v1) {
      return function(v2) {
        return {};
      };
    };
  }
};
var semigroupArray = {
  append: concatArray
};
var appendRecord = function(dict) {
  return dict.appendRecord;
};
var semigroupRecord = function() {
  return function(dictSemigroupRecord) {
    return {
      append: appendRecord(dictSemigroupRecord)($$Proxy.value)
    };
  };
};
var append = function(dict) {
  return dict.append;
};
var semigroupFn = function(dictSemigroup) {
  var append19 = append(dictSemigroup);
  return {
    append: function(f) {
      return function(g) {
        return function(x) {
          return append19(f(x))(g(x));
        };
      };
    }
  };
};
var semigroupRecordCons = function(dictIsSymbol) {
  var reflectSymbol2 = reflectSymbol(dictIsSymbol);
  return function() {
    return function(dictSemigroupRecord) {
      var appendRecord1 = appendRecord(dictSemigroupRecord);
      return function(dictSemigroup) {
        var append19 = append(dictSemigroup);
        return {
          appendRecord: function(v) {
            return function(ra) {
              return function(rb) {
                var tail3 = appendRecord1($$Proxy.value)(ra)(rb);
                var key = reflectSymbol2($$Proxy.value);
                var insert9 = unsafeSet(key);
                var get4 = unsafeGet(key);
                return insert9(append19(get4(ra))(get4(rb)))(tail3);
              };
            };
          }
        };
      };
    };
  };
};

// output/Control.Alt/index.js
var alt = function(dict) {
  return dict.alt;
};

// output/Control.Bind/foreign.js
var arrayBind = function(arr) {
  return function(f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

// output/Control.Apply/foreign.js
var arrayApply = function(fs) {
  return function(xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l * k);
    var n = 0;
    for (var i = 0; i < l; i++) {
      var f = fs[i];
      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }
    return result;
  };
};

// output/Control.Apply/index.js
var identity2 = /* @__PURE__ */ identity(categoryFn);
var applyFn = {
  apply: function(f) {
    return function(g) {
      return function(x) {
        return f(x)(g(x));
      };
    };
  },
  Functor0: function() {
    return functorFn;
  }
};
var applyArray = {
  apply: arrayApply,
  Functor0: function() {
    return functorArray;
  }
};
var apply2 = function(dict) {
  return dict.apply;
};
var applyFirst = function(dictApply) {
  var apply1 = apply2(dictApply);
  var map37 = map(dictApply.Functor0());
  return function(a) {
    return function(b) {
      return apply1(map37($$const)(a))(b);
    };
  };
};
var applySecond = function(dictApply) {
  var apply1 = apply2(dictApply);
  var map37 = map(dictApply.Functor0());
  return function(a) {
    return function(b) {
      return apply1(map37($$const(identity2))(a))(b);
    };
  };
};
var lift2 = function(dictApply) {
  var apply1 = apply2(dictApply);
  var map37 = map(dictApply.Functor0());
  return function(f) {
    return function(a) {
      return function(b) {
        return apply1(map37(f)(a))(b);
      };
    };
  };
};

// output/Control.Applicative/index.js
var pure = function(dict) {
  return dict.pure;
};
var when = function(dictApplicative) {
  var pure17 = pure(dictApplicative);
  return function(v) {
    return function(v1) {
      if (v) {
        return v1;
      }
      ;
      if (!v) {
        return pure17(unit);
      }
      ;
      throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};
var liftA1 = function(dictApplicative) {
  var apply6 = apply2(dictApplicative.Apply0());
  var pure17 = pure(dictApplicative);
  return function(f) {
    return function(a) {
      return apply6(pure17(f))(a);
    };
  };
};
var applicativeArray = {
  pure: function(x) {
    return [x];
  },
  Apply0: function() {
    return applyArray;
  }
};

// output/Control.Bind/index.js
var discard = function(dict) {
  return dict.discard;
};
var bindFn = {
  bind: function(m) {
    return function(f) {
      return function(x) {
        return f(m(x))(x);
      };
    };
  },
  Apply0: function() {
    return applyFn;
  }
};
var bindArray = {
  bind: arrayBind,
  Apply0: function() {
    return applyArray;
  }
};
var bind = function(dict) {
  return dict.bind;
};
var bindFlipped = function(dictBind) {
  return flip(bind(dictBind));
};
var composeKleisliFlipped = function(dictBind) {
  var bindFlipped1 = bindFlipped(dictBind);
  return function(f) {
    return function(g) {
      return function(a) {
        return bindFlipped1(f)(g(a));
      };
    };
  };
};
var composeKleisli = function(dictBind) {
  var bind15 = bind(dictBind);
  return function(f) {
    return function(g) {
      return function(a) {
        return bind15(f(a))(g);
      };
    };
  };
};
var discardUnit = {
  discard: function(dictBind) {
    return bind(dictBind);
  }
};

// output/Data.Bounded/foreign.js
var topInt = 2147483647;
var bottomInt = -2147483648;
var topChar = String.fromCharCode(65535);
var bottomChar = String.fromCharCode(0);
var topNumber = Number.POSITIVE_INFINITY;
var bottomNumber = Number.NEGATIVE_INFINITY;

// output/Data.Ord/foreign.js
var unsafeCompareImpl = function(lt) {
  return function(eq75) {
    return function(gt) {
      return function(x) {
        return function(y) {
          return x < y ? lt : x === y ? eq75 : gt;
        };
      };
    };
  };
};
var ordBooleanImpl = unsafeCompareImpl;
var ordIntImpl = unsafeCompareImpl;
var ordNumberImpl = unsafeCompareImpl;
var ordStringImpl = unsafeCompareImpl;
var ordCharImpl = unsafeCompareImpl;
var ordArrayImpl = function(f) {
  return function(xs) {
    return function(ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

// output/Data.Eq/foreign.js
var refEq = function(r1) {
  return function(r2) {
    return r1 === r2;
  };
};
var eqBooleanImpl = refEq;
var eqIntImpl = refEq;
var eqNumberImpl = refEq;
var eqCharImpl = refEq;
var eqStringImpl = refEq;
var eqArrayImpl = function(f) {
  return function(xs) {
    return function(ys) {
      if (xs.length !== ys.length)
        return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i]))
          return false;
      }
      return true;
    };
  };
};

// output/Data.Eq/index.js
var eqString = {
  eq: eqStringImpl
};
var eqNumber = {
  eq: eqNumberImpl
};
var eqInt = {
  eq: eqIntImpl
};
var eqChar = {
  eq: eqCharImpl
};
var eqBoolean = {
  eq: eqBooleanImpl
};
var eq1 = function(dict) {
  return dict.eq1;
};
var eq = function(dict) {
  return dict.eq;
};
var eq2 = /* @__PURE__ */ eq(eqBoolean);
var eqArray = function(dictEq) {
  return {
    eq: eqArrayImpl(eq(dictEq))
  };
};
var notEq = function(dictEq) {
  var eq312 = eq(dictEq);
  return function(x) {
    return function(y) {
      return eq2(eq312(x)(y))(false);
    };
  };
};

// output/Data.Ordering/index.js
var LT = /* @__PURE__ */ function() {
  function LT2() {
  }
  ;
  LT2.value = new LT2();
  return LT2;
}();
var GT = /* @__PURE__ */ function() {
  function GT2() {
  }
  ;
  GT2.value = new GT2();
  return GT2;
}();
var EQ = /* @__PURE__ */ function() {
  function EQ2() {
  }
  ;
  EQ2.value = new EQ2();
  return EQ2;
}();
var eqOrdering = {
  eq: function(v) {
    return function(v1) {
      if (v instanceof LT && v1 instanceof LT) {
        return true;
      }
      ;
      if (v instanceof GT && v1 instanceof GT) {
        return true;
      }
      ;
      if (v instanceof EQ && v1 instanceof EQ) {
        return true;
      }
      ;
      return false;
    };
  }
};

// output/Data.Ring/foreign.js
var intSub = function(x) {
  return function(y) {
    return x - y | 0;
  };
};

// output/Data.Semiring/foreign.js
var intAdd = function(x) {
  return function(y) {
    return x + y | 0;
  };
};
var intMul = function(x) {
  return function(y) {
    return x * y | 0;
  };
};

// output/Data.Semiring/index.js
var zeroRecord = function(dict) {
  return dict.zeroRecord;
};
var zero = function(dict) {
  return dict.zero;
};
var semiringRecordNil = {
  addRecord: function(v) {
    return function(v1) {
      return function(v2) {
        return {};
      };
    };
  },
  mulRecord: function(v) {
    return function(v1) {
      return function(v2) {
        return {};
      };
    };
  },
  oneRecord: function(v) {
    return function(v1) {
      return {};
    };
  },
  zeroRecord: function(v) {
    return function(v1) {
      return {};
    };
  }
};
var semiringInt = {
  add: intAdd,
  zero: 0,
  mul: intMul,
  one: 1
};
var oneRecord = function(dict) {
  return dict.oneRecord;
};
var one = function(dict) {
  return dict.one;
};
var mulRecord = function(dict) {
  return dict.mulRecord;
};
var mul = function(dict) {
  return dict.mul;
};
var addRecord = function(dict) {
  return dict.addRecord;
};
var semiringRecord = function() {
  return function(dictSemiringRecord) {
    return {
      add: addRecord(dictSemiringRecord)($$Proxy.value),
      mul: mulRecord(dictSemiringRecord)($$Proxy.value),
      one: oneRecord(dictSemiringRecord)($$Proxy.value)($$Proxy.value),
      zero: zeroRecord(dictSemiringRecord)($$Proxy.value)($$Proxy.value)
    };
  };
};
var add = function(dict) {
  return dict.add;
};
var semiringRecordCons = function(dictIsSymbol) {
  var reflectSymbol2 = reflectSymbol(dictIsSymbol);
  return function() {
    return function(dictSemiringRecord) {
      var addRecord1 = addRecord(dictSemiringRecord);
      var mulRecord1 = mulRecord(dictSemiringRecord);
      var oneRecord1 = oneRecord(dictSemiringRecord);
      var zeroRecord1 = zeroRecord(dictSemiringRecord);
      return function(dictSemiring) {
        var add1 = add(dictSemiring);
        var mul1 = mul(dictSemiring);
        var one1 = one(dictSemiring);
        var zero1 = zero(dictSemiring);
        return {
          addRecord: function(v) {
            return function(ra) {
              return function(rb) {
                var tail3 = addRecord1($$Proxy.value)(ra)(rb);
                var key = reflectSymbol2($$Proxy.value);
                var insert9 = unsafeSet(key);
                var get4 = unsafeGet(key);
                return insert9(add1(get4(ra))(get4(rb)))(tail3);
              };
            };
          },
          mulRecord: function(v) {
            return function(ra) {
              return function(rb) {
                var tail3 = mulRecord1($$Proxy.value)(ra)(rb);
                var key = reflectSymbol2($$Proxy.value);
                var insert9 = unsafeSet(key);
                var get4 = unsafeGet(key);
                return insert9(mul1(get4(ra))(get4(rb)))(tail3);
              };
            };
          },
          oneRecord: function(v) {
            return function(v1) {
              var tail3 = oneRecord1($$Proxy.value)($$Proxy.value);
              var key = reflectSymbol2($$Proxy.value);
              var insert9 = unsafeSet(key);
              return insert9(one1)(tail3);
            };
          },
          zeroRecord: function(v) {
            return function(v1) {
              var tail3 = zeroRecord1($$Proxy.value)($$Proxy.value);
              var key = reflectSymbol2($$Proxy.value);
              var insert9 = unsafeSet(key);
              return insert9(zero1)(tail3);
            };
          }
        };
      };
    };
  };
};

// output/Data.Ring/index.js
var ringInt = {
  sub: intSub,
  Semiring0: function() {
    return semiringInt;
  }
};

// output/Data.Ord/index.js
var ordString = /* @__PURE__ */ function() {
  return {
    compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
    Eq0: function() {
      return eqString;
    }
  };
}();
var ordNumber = /* @__PURE__ */ function() {
  return {
    compare: ordNumberImpl(LT.value)(EQ.value)(GT.value),
    Eq0: function() {
      return eqNumber;
    }
  };
}();
var ordInt = /* @__PURE__ */ function() {
  return {
    compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
    Eq0: function() {
      return eqInt;
    }
  };
}();
var ordChar = /* @__PURE__ */ function() {
  return {
    compare: ordCharImpl(LT.value)(EQ.value)(GT.value),
    Eq0: function() {
      return eqChar;
    }
  };
}();
var ordBoolean = /* @__PURE__ */ function() {
  return {
    compare: ordBooleanImpl(LT.value)(EQ.value)(GT.value),
    Eq0: function() {
      return eqBoolean;
    }
  };
}();
var compare1 = function(dict) {
  return dict.compare1;
};
var compare = function(dict) {
  return dict.compare;
};
var compare2 = /* @__PURE__ */ compare(ordInt);
var comparing = function(dictOrd) {
  var compare312 = compare(dictOrd);
  return function(f) {
    return function(x) {
      return function(y) {
        return compare312(f(x))(f(y));
      };
    };
  };
};
var max = function(dictOrd) {
  var compare312 = compare(dictOrd);
  return function(x) {
    return function(y) {
      var v = compare312(x)(y);
      if (v instanceof LT) {
        return y;
      }
      ;
      if (v instanceof EQ) {
        return x;
      }
      ;
      if (v instanceof GT) {
        return x;
      }
      ;
      throw new Error("Failed pattern match at Data.Ord (line 181, column 3 - line 184, column 12): " + [v.constructor.name]);
    };
  };
};
var min = function(dictOrd) {
  var compare312 = compare(dictOrd);
  return function(x) {
    return function(y) {
      var v = compare312(x)(y);
      if (v instanceof LT) {
        return x;
      }
      ;
      if (v instanceof EQ) {
        return x;
      }
      ;
      if (v instanceof GT) {
        return y;
      }
      ;
      throw new Error("Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): " + [v.constructor.name]);
    };
  };
};
var ordArray = function(dictOrd) {
  var compare312 = compare(dictOrd);
  var eqArray2 = eqArray(dictOrd.Eq0());
  return {
    compare: function() {
      var toDelta = function(x) {
        return function(y) {
          var v = compare312(x)(y);
          if (v instanceof EQ) {
            return 0;
          }
          ;
          if (v instanceof LT) {
            return 1;
          }
          ;
          if (v instanceof GT) {
            return -1 | 0;
          }
          ;
          throw new Error("Failed pattern match at Data.Ord (line 79, column 7 - line 82, column 17): " + [v.constructor.name]);
        };
      };
      return function(xs) {
        return function(ys) {
          return compare2(0)(ordArrayImpl(toDelta)(xs)(ys));
        };
      };
    }(),
    Eq0: function() {
      return eqArray2;
    }
  };
};

// output/Data.Bounded/index.js
var top = function(dict) {
  return dict.top;
};
var boundedInt = {
  top: topInt,
  bottom: bottomInt,
  Ord0: function() {
    return ordInt;
  }
};
var boundedChar = {
  top: topChar,
  bottom: bottomChar,
  Ord0: function() {
    return ordChar;
  }
};
var bottom = function(dict) {
  return dict.bottom;
};

// output/Data.Show/foreign.js
var showIntImpl = function(n) {
  return n.toString();
};
var showStringImpl = function(s) {
  var l = s.length;
  return '"' + s.replace(
    /[\0-\x1F\x7F"\\]/g,
    function(c, i) {
      switch (c) {
        case '"':
        case "\\":
          return "\\" + c;
        case "\x07":
          return "\\a";
        case "\b":
          return "\\b";
        case "\f":
          return "\\f";
        case "\n":
          return "\\n";
        case "\r":
          return "\\r";
        case "	":
          return "\\t";
        case "\v":
          return "\\v";
      }
      var k = i + 1;
      var empty7 = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty7;
    }
  ) + '"';
};

// output/Data.Show/index.js
var showString = {
  show: showStringImpl
};
var showInt = {
  show: showIntImpl
};
var show = function(dict) {
  return dict.show;
};

// output/Data.Maybe/index.js
var identity3 = /* @__PURE__ */ identity(categoryFn);
var Nothing = /* @__PURE__ */ function() {
  function Nothing2() {
  }
  ;
  Nothing2.value = new Nothing2();
  return Nothing2;
}();
var Just = /* @__PURE__ */ function() {
  function Just2(value0) {
    this.value0 = value0;
  }
  ;
  Just2.create = function(value0) {
    return new Just2(value0);
  };
  return Just2;
}();
var maybe$prime = function(v) {
  return function(v1) {
    return function(v2) {
      if (v2 instanceof Nothing) {
        return v(unit);
      }
      ;
      if (v2 instanceof Just) {
        return v1(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};
var maybe = function(v) {
  return function(v1) {
    return function(v2) {
      if (v2 instanceof Nothing) {
        return v;
      }
      ;
      if (v2 instanceof Just) {
        return v1(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};
var isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
var isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
var functorMaybe = {
  map: function(v) {
    return function(v1) {
      if (v1 instanceof Just) {
        return new Just(v(v1.value0));
      }
      ;
      return Nothing.value;
    };
  }
};
var map2 = /* @__PURE__ */ map(functorMaybe);
var fromMaybe$prime = function(a) {
  return maybe$prime(a)(identity3);
};
var fromMaybe = function(a) {
  return maybe(a)(identity3);
};
var fromJust = function() {
  return function(v) {
    if (v instanceof Just) {
      return v.value0;
    }
    ;
    throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v.constructor.name]);
  };
};
var eqMaybe = function(dictEq) {
  var eq75 = eq(dictEq);
  return {
    eq: function(x) {
      return function(y) {
        if (x instanceof Nothing && y instanceof Nothing) {
          return true;
        }
        ;
        if (x instanceof Just && y instanceof Just) {
          return eq75(x.value0)(y.value0);
        }
        ;
        return false;
      };
    }
  };
};
var ordMaybe = function(dictOrd) {
  var compare78 = compare(dictOrd);
  var eqMaybe1 = eqMaybe(dictOrd.Eq0());
  return {
    compare: function(x) {
      return function(y) {
        if (x instanceof Nothing && y instanceof Nothing) {
          return EQ.value;
        }
        ;
        if (x instanceof Nothing) {
          return LT.value;
        }
        ;
        if (y instanceof Nothing) {
          return GT.value;
        }
        ;
        if (x instanceof Just && y instanceof Just) {
          return compare78(x.value0)(y.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
      };
    },
    Eq0: function() {
      return eqMaybe1;
    }
  };
};
var applyMaybe = {
  apply: function(v) {
    return function(v1) {
      if (v instanceof Just) {
        return map2(v.value0)(v1);
      }
      ;
      if (v instanceof Nothing) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Functor0: function() {
    return functorMaybe;
  }
};
var bindMaybe = {
  bind: function(v) {
    return function(v1) {
      if (v instanceof Just) {
        return v1(v.value0);
      }
      ;
      if (v instanceof Nothing) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Apply0: function() {
    return applyMaybe;
  }
};
var applicativeMaybe = /* @__PURE__ */ function() {
  return {
    pure: Just.create,
    Apply0: function() {
      return applyMaybe;
    }
  };
}();
var altMaybe = {
  alt: function(v) {
    return function(v1) {
      if (v instanceof Nothing) {
        return v1;
      }
      ;
      return v;
    };
  },
  Functor0: function() {
    return functorMaybe;
  }
};
var plusMaybe = /* @__PURE__ */ function() {
  return {
    empty: Nothing.value,
    Alt0: function() {
      return altMaybe;
    }
  };
}();
var alternativeMaybe = {
  Applicative0: function() {
    return applicativeMaybe;
  },
  Plus1: function() {
    return plusMaybe;
  }
};

// output/Data.Either/index.js
var Left = /* @__PURE__ */ function() {
  function Left2(value0) {
    this.value0 = value0;
  }
  ;
  Left2.create = function(value0) {
    return new Left2(value0);
  };
  return Left2;
}();
var Right = /* @__PURE__ */ function() {
  function Right2(value0) {
    this.value0 = value0;
  }
  ;
  Right2.create = function(value0) {
    return new Right2(value0);
  };
  return Right2;
}();
var note = function(a) {
  return maybe(new Left(a))(Right.create);
};
var functorEither = {
  map: function(f) {
    return function(m) {
      if (m instanceof Left) {
        return new Left(m.value0);
      }
      ;
      if (m instanceof Right) {
        return new Right(f(m.value0));
      }
      ;
      throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
    };
  }
};
var map3 = /* @__PURE__ */ map(functorEither);
var either = function(v) {
  return function(v1) {
    return function(v2) {
      if (v2 instanceof Left) {
        return v(v2.value0);
      }
      ;
      if (v2 instanceof Right) {
        return v1(v2.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};
var hush = /* @__PURE__ */ function() {
  return either($$const(Nothing.value))(Just.create);
}();
var applyEither = {
  apply: function(v) {
    return function(v1) {
      if (v instanceof Left) {
        return new Left(v.value0);
      }
      ;
      if (v instanceof Right) {
        return map3(v.value0)(v1);
      }
      ;
      throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Functor0: function() {
    return functorEither;
  }
};
var apply3 = /* @__PURE__ */ apply2(applyEither);
var bindEither = {
  bind: /* @__PURE__ */ either(function(e) {
    return function(v) {
      return new Left(e);
    };
  })(function(a) {
    return function(f) {
      return f(a);
    };
  }),
  Apply0: function() {
    return applyEither;
  }
};
var semigroupEither = function(dictSemigroup) {
  var append19 = append(dictSemigroup);
  return {
    append: function(x) {
      return function(y) {
        return apply3(map3(append19)(x))(y);
      };
    }
  };
};
var applicativeEither = /* @__PURE__ */ function() {
  return {
    pure: Right.create,
    Apply0: function() {
      return applyEither;
    }
  };
}();

// output/Effect/foreign.js
var pureE = function(a) {
  return function() {
    return a;
  };
};
var bindE = function(a) {
  return function(f) {
    return function() {
      return f(a())();
    };
  };
};

// output/Control.Monad/index.js
var ap = function(dictMonad) {
  var bind10 = bind(dictMonad.Bind1());
  var pure17 = pure(dictMonad.Applicative0());
  return function(f) {
    return function(a) {
      return bind10(f)(function(f$prime) {
        return bind10(a)(function(a$prime) {
          return pure17(f$prime(a$prime));
        });
      });
    };
  };
};

// output/Data.EuclideanRing/foreign.js
var intDegree = function(x) {
  return Math.min(Math.abs(x), 2147483647);
};
var intDiv = function(x) {
  return function(y) {
    if (y === 0)
      return 0;
    return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
  };
};
var intMod = function(x) {
  return function(y) {
    if (y === 0)
      return 0;
    var yy = Math.abs(y);
    return (x % yy + yy) % yy;
  };
};

// output/Data.CommutativeRing/index.js
var commutativeRingInt = {
  Ring0: function() {
    return ringInt;
  }
};

// output/Data.EuclideanRing/index.js
var mod = function(dict) {
  return dict.mod;
};
var euclideanRingInt = {
  degree: intDegree,
  div: intDiv,
  mod: intMod,
  CommutativeRing0: function() {
    return commutativeRingInt;
  }
};
var div = function(dict) {
  return dict.div;
};

// output/Data.Monoid/index.js
var semigroupRecord2 = /* @__PURE__ */ semigroupRecord();
var mod2 = /* @__PURE__ */ mod(euclideanRingInt);
var div2 = /* @__PURE__ */ div(euclideanRingInt);
var monoidString = {
  mempty: "",
  Semigroup0: function() {
    return semigroupString;
  }
};
var monoidRecordNil = {
  memptyRecord: function(v) {
    return {};
  },
  SemigroupRecord0: function() {
    return semigroupRecordNil;
  }
};
var monoidArray = {
  mempty: [],
  Semigroup0: function() {
    return semigroupArray;
  }
};
var memptyRecord = function(dict) {
  return dict.memptyRecord;
};
var monoidRecord = function() {
  return function(dictMonoidRecord) {
    var semigroupRecord1 = semigroupRecord2(dictMonoidRecord.SemigroupRecord0());
    return {
      mempty: memptyRecord(dictMonoidRecord)($$Proxy.value),
      Semigroup0: function() {
        return semigroupRecord1;
      }
    };
  };
};
var mempty = function(dict) {
  return dict.mempty;
};
var monoidFn = function(dictMonoid) {
  var mempty15 = mempty(dictMonoid);
  var semigroupFn2 = semigroupFn(dictMonoid.Semigroup0());
  return {
    mempty: function(v) {
      return mempty15;
    },
    Semigroup0: function() {
      return semigroupFn2;
    }
  };
};
var monoidRecordCons = function(dictIsSymbol) {
  var reflectSymbol2 = reflectSymbol(dictIsSymbol);
  var semigroupRecordCons2 = semigroupRecordCons(dictIsSymbol)();
  return function(dictMonoid) {
    var mempty15 = mempty(dictMonoid);
    var Semigroup0 = dictMonoid.Semigroup0();
    return function() {
      return function(dictMonoidRecord) {
        var memptyRecord1 = memptyRecord(dictMonoidRecord);
        var semigroupRecordCons1 = semigroupRecordCons2(dictMonoidRecord.SemigroupRecord0())(Semigroup0);
        return {
          memptyRecord: function(v) {
            var tail3 = memptyRecord1($$Proxy.value);
            var key = reflectSymbol2($$Proxy.value);
            var insert9 = unsafeSet(key);
            return insert9(mempty15)(tail3);
          },
          SemigroupRecord0: function() {
            return semigroupRecordCons1;
          }
        };
      };
    };
  };
};
var power = function(dictMonoid) {
  var mempty15 = mempty(dictMonoid);
  var append10 = append(dictMonoid.Semigroup0());
  return function(x) {
    var go = function(p) {
      if (p <= 0) {
        return mempty15;
      }
      ;
      if (p === 1) {
        return x;
      }
      ;
      if (mod2(p)(2) === 0) {
        var x$prime = go(div2(p)(2));
        return append10(x$prime)(x$prime);
      }
      ;
      if (otherwise) {
        var x$prime = go(div2(p)(2));
        return append10(x$prime)(append10(x$prime)(x));
      }
      ;
      throw new Error("Failed pattern match at Data.Monoid (line 88, column 3 - line 88, column 17): " + [p.constructor.name]);
    };
    return go;
  };
};
var guard = function(dictMonoid) {
  var mempty15 = mempty(dictMonoid);
  return function(v) {
    return function(v1) {
      if (v) {
        return v1;
      }
      ;
      if (!v) {
        return mempty15;
      }
      ;
      throw new Error("Failed pattern match at Data.Monoid (line 96, column 1 - line 96, column 49): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

// output/Effect/index.js
var $runtime_lazy = function(name2, moduleName, init3) {
  var state2 = 0;
  var val;
  return function(lineNumber) {
    if (state2 === 2)
      return val;
    if (state2 === 1)
      throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
    state2 = 1;
    val = init3();
    state2 = 2;
    return val;
  };
};
var monadEffect = {
  Applicative0: function() {
    return applicativeEffect;
  },
  Bind1: function() {
    return bindEffect;
  }
};
var bindEffect = {
  bind: bindE,
  Apply0: function() {
    return $lazy_applyEffect(0);
  }
};
var applicativeEffect = {
  pure: pureE,
  Apply0: function() {
    return $lazy_applyEffect(0);
  }
};
var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
  return {
    map: liftA1(applicativeEffect)
  };
});
var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
  return {
    apply: ap(monadEffect),
    Functor0: function() {
      return $lazy_functorEffect(0);
    }
  };
});
var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);

// output/Effect.Exception/foreign.js
function error(msg) {
  return new Error(msg);
}

// output/Control.Monad.Error.Class/index.js
var throwError = function(dict) {
  return dict.throwError;
};
var catchError = function(dict) {
  return dict.catchError;
};
var $$try = function(dictMonadError) {
  var catchError1 = catchError(dictMonadError);
  var Monad0 = dictMonadError.MonadThrow0().Monad0();
  var map37 = map(Monad0.Bind1().Apply0().Functor0());
  var pure17 = pure(Monad0.Applicative0());
  return function(a) {
    return catchError1(map37(Right.create)(a))(function($52) {
      return pure17(Left.create($52));
    });
  };
};

// output/Data.Identity/index.js
var Identity = function(x) {
  return x;
};
var functorIdentity = {
  map: function(f) {
    return function(m) {
      return f(m);
    };
  }
};
var applyIdentity = {
  apply: function(v) {
    return function(v1) {
      return v(v1);
    };
  },
  Functor0: function() {
    return functorIdentity;
  }
};
var bindIdentity = {
  bind: function(v) {
    return function(f) {
      return f(v);
    };
  },
  Apply0: function() {
    return applyIdentity;
  }
};
var applicativeIdentity = {
  pure: Identity,
  Apply0: function() {
    return applyIdentity;
  }
};
var monadIdentity = {
  Applicative0: function() {
    return applicativeIdentity;
  },
  Bind1: function() {
    return bindIdentity;
  }
};

// output/Data.HeytingAlgebra/foreign.js
var boolConj = function(b1) {
  return function(b2) {
    return b1 && b2;
  };
};
var boolDisj = function(b1) {
  return function(b2) {
    return b1 || b2;
  };
};
var boolNot = function(b) {
  return !b;
};

// output/Data.HeytingAlgebra/index.js
var tt = function(dict) {
  return dict.tt;
};
var not = function(dict) {
  return dict.not;
};
var implies = function(dict) {
  return dict.implies;
};
var ff = function(dict) {
  return dict.ff;
};
var disj = function(dict) {
  return dict.disj;
};
var heytingAlgebraBoolean = {
  ff: false,
  tt: true,
  implies: function(a) {
    return function(b) {
      return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
  },
  conj: boolConj,
  disj: boolDisj,
  not: boolNot
};
var conj = function(dict) {
  return dict.conj;
};
var heytingAlgebraFunction = function(dictHeytingAlgebra) {
  var ff1 = ff(dictHeytingAlgebra);
  var tt1 = tt(dictHeytingAlgebra);
  var implies1 = implies(dictHeytingAlgebra);
  var conj1 = conj(dictHeytingAlgebra);
  var disj1 = disj(dictHeytingAlgebra);
  var not1 = not(dictHeytingAlgebra);
  return {
    ff: function(v) {
      return ff1;
    },
    tt: function(v) {
      return tt1;
    },
    implies: function(f) {
      return function(g) {
        return function(a) {
          return implies1(f(a))(g(a));
        };
      };
    },
    conj: function(f) {
      return function(g) {
        return function(a) {
          return conj1(f(a))(g(a));
        };
      };
    },
    disj: function(f) {
      return function(g) {
        return function(a) {
          return disj1(f(a))(g(a));
        };
      };
    },
    not: function(f) {
      return function(a) {
        return not1(f(a));
      };
    }
  };
};

// output/Data.Tuple/index.js
var Tuple = /* @__PURE__ */ function() {
  function Tuple2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Tuple2.create = function(value0) {
    return function(value1) {
      return new Tuple2(value0, value1);
    };
  };
  return Tuple2;
}();
var uncurry = function(f) {
  return function(v) {
    return f(v.value0)(v.value1);
  };
};
var snd = function(v) {
  return v.value1;
};
var functorTuple = {
  map: function(f) {
    return function(m) {
      return new Tuple(m.value0, f(m.value1));
    };
  }
};
var fst = function(v) {
  return v.value0;
};
var eqTuple = function(dictEq) {
  var eq75 = eq(dictEq);
  return function(dictEq1) {
    var eq114 = eq(dictEq1);
    return {
      eq: function(x) {
        return function(y) {
          return eq75(x.value0)(y.value0) && eq114(x.value1)(y.value1);
        };
      }
    };
  };
};
var ordTuple = function(dictOrd) {
  var compare78 = compare(dictOrd);
  var eqTuple1 = eqTuple(dictOrd.Eq0());
  return function(dictOrd1) {
    var compare112 = compare(dictOrd1);
    var eqTuple2 = eqTuple1(dictOrd1.Eq0());
    return {
      compare: function(x) {
        return function(y) {
          var v = compare78(x.value0)(y.value0);
          if (v instanceof LT) {
            return LT.value;
          }
          ;
          if (v instanceof GT) {
            return GT.value;
          }
          ;
          return compare112(x.value1)(y.value1);
        };
      },
      Eq0: function() {
        return eqTuple2;
      }
    };
  };
};
var curry = function(f) {
  return function(a) {
    return function(b) {
      return f(new Tuple(a, b));
    };
  };
};

// output/Control.Monad.State.Class/index.js
var state = function(dict) {
  return dict.state;
};
var modify_ = function(dictMonadState) {
  var state1 = state(dictMonadState);
  return function(f) {
    return state1(function(s) {
      return new Tuple(unit, f(s));
    });
  };
};

// output/Control.Monad.Writer.Class/index.js
var tell = function(dict) {
  return dict.tell;
};

// output/Effect.Class/index.js
var liftEffect = function(dict) {
  return dict.liftEffect;
};

// output/Control.Monad.Except.Trans/index.js
var map4 = /* @__PURE__ */ map(functorEither);
var ExceptT = function(x) {
  return x;
};
var runExceptT = function(v) {
  return v;
};
var mapExceptT = function(f) {
  return function(v) {
    return f(v);
  };
};
var functorExceptT = function(dictFunctor) {
  var map117 = map(dictFunctor);
  return {
    map: function(f) {
      return mapExceptT(map117(map4(f)));
    }
  };
};
var monadExceptT = function(dictMonad) {
  return {
    Applicative0: function() {
      return applicativeExceptT(dictMonad);
    },
    Bind1: function() {
      return bindExceptT(dictMonad);
    }
  };
};
var bindExceptT = function(dictMonad) {
  var bind10 = bind(dictMonad.Bind1());
  var pure17 = pure(dictMonad.Applicative0());
  return {
    bind: function(v) {
      return function(k) {
        return bind10(v)(either(function($187) {
          return pure17(Left.create($187));
        })(function(a) {
          var v1 = k(a);
          return v1;
        }));
      };
    },
    Apply0: function() {
      return applyExceptT(dictMonad);
    }
  };
};
var applyExceptT = function(dictMonad) {
  var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
  return {
    apply: ap(monadExceptT(dictMonad)),
    Functor0: function() {
      return functorExceptT1;
    }
  };
};
var applicativeExceptT = function(dictMonad) {
  return {
    pure: function() {
      var $188 = pure(dictMonad.Applicative0());
      return function($189) {
        return ExceptT($188(Right.create($189)));
      };
    }(),
    Apply0: function() {
      return applyExceptT(dictMonad);
    }
  };
};
var monadThrowExceptT = function(dictMonad) {
  var monadExceptT1 = monadExceptT(dictMonad);
  return {
    throwError: function() {
      var $198 = pure(dictMonad.Applicative0());
      return function($199) {
        return ExceptT($198(Left.create($199)));
      };
    }(),
    Monad0: function() {
      return monadExceptT1;
    }
  };
};
var altExceptT = function(dictSemigroup) {
  var append10 = append(dictSemigroup);
  return function(dictMonad) {
    var Bind1 = dictMonad.Bind1();
    var bind10 = bind(Bind1);
    var pure17 = pure(dictMonad.Applicative0());
    var functorExceptT1 = functorExceptT(Bind1.Apply0().Functor0());
    return {
      alt: function(v) {
        return function(v1) {
          return bind10(v)(function(rm) {
            if (rm instanceof Right) {
              return pure17(new Right(rm.value0));
            }
            ;
            if (rm instanceof Left) {
              return bind10(v1)(function(rn) {
                if (rn instanceof Right) {
                  return pure17(new Right(rn.value0));
                }
                ;
                if (rn instanceof Left) {
                  return pure17(new Left(append10(rm.value0)(rn.value0)));
                }
                ;
                throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [rn.constructor.name]);
              });
            }
            ;
            throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [rm.constructor.name]);
          });
        };
      },
      Functor0: function() {
        return functorExceptT1;
      }
    };
  };
};

// output/Unsafe.Coerce/foreign.js
var unsafeCoerce2 = function(x) {
  return x;
};

// output/Safe.Coerce/index.js
var coerce = function() {
  return unsafeCoerce2;
};

// output/Data.Newtype/index.js
var coerce2 = /* @__PURE__ */ coerce();
var wrap = function() {
  return coerce2;
};
var unwrap = function() {
  return coerce2;
};
var unwrap1 = /* @__PURE__ */ unwrap();
var un = function() {
  return function(v) {
    return unwrap1;
  };
};
var alaF = function() {
  return function() {
    return function() {
      return function() {
        return function(v) {
          return coerce2;
        };
      };
    };
  };
};

// output/Control.Monad.Except/index.js
var unwrap2 = /* @__PURE__ */ unwrap();
var runExcept = function($3) {
  return unwrap2(runExceptT($3));
};

// output/Data.Foldable/foreign.js
var foldrArray = function(f) {
  return function(init3) {
    return function(xs) {
      var acc = init3;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};
var foldlArray = function(f) {
  return function(init3) {
    return function(xs) {
      var acc = init3;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

// output/Control.Plus/index.js
var empty = function(dict) {
  return dict.empty;
};

// output/Data.Bifunctor/index.js
var identity4 = /* @__PURE__ */ identity(categoryFn);
var bimap = function(dict) {
  return dict.bimap;
};
var lmap = function(dictBifunctor) {
  var bimap1 = bimap(dictBifunctor);
  return function(f) {
    return bimap1(f)(identity4);
  };
};
var bifunctorTuple = {
  bimap: function(f) {
    return function(g) {
      return function(v) {
        return new Tuple(f(v.value0), g(v.value1));
      };
    };
  }
};
var bifunctorEither = {
  bimap: function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Left) {
          return new Left(v(v2.value0));
        }
        ;
        if (v2 instanceof Right) {
          return new Right(v1(v2.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  }
};

// output/Data.Monoid.Disj/index.js
var Disj = function(x) {
  return x;
};
var semigroupDisj = function(dictHeytingAlgebra) {
  var disj2 = disj(dictHeytingAlgebra);
  return {
    append: function(v) {
      return function(v1) {
        return disj2(v)(v1);
      };
    }
  };
};
var monoidDisj = function(dictHeytingAlgebra) {
  var semigroupDisj1 = semigroupDisj(dictHeytingAlgebra);
  return {
    mempty: ff(dictHeytingAlgebra),
    Semigroup0: function() {
      return semigroupDisj1;
    }
  };
};

// output/Data.Foldable/index.js
var identity5 = /* @__PURE__ */ identity(categoryFn);
var alaF2 = /* @__PURE__ */ alaF()()()();
var foldr = function(dict) {
  return dict.foldr;
};
var traverse_ = function(dictApplicative) {
  var applySecond3 = applySecond(dictApplicative.Apply0());
  var pure17 = pure(dictApplicative);
  return function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(f) {
      return foldr22(function($454) {
        return applySecond3(f($454));
      })(pure17(unit));
    };
  };
};
var foldl = function(dict) {
  return dict.foldl;
};
var intercalate = function(dictFoldable) {
  var foldl22 = foldl(dictFoldable);
  return function(dictMonoid) {
    var append10 = append(dictMonoid.Semigroup0());
    var mempty11 = mempty(dictMonoid);
    return function(sep) {
      return function(xs) {
        var go = function(v) {
          return function(v1) {
            if (v.init) {
              return {
                init: false,
                acc: v1
              };
            }
            ;
            return {
              init: false,
              acc: append10(v.acc)(append10(sep)(v1))
            };
          };
        };
        return foldl22(go)({
          init: true,
          acc: mempty11
        })(xs).acc;
      };
    };
  };
};
var foldableMaybe = {
  foldr: function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return v1;
        }
        ;
        if (v2 instanceof Just) {
          return v(v2.value0)(v1);
        }
        ;
        throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  },
  foldl: function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return v1;
        }
        ;
        if (v2 instanceof Just) {
          return v(v1)(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  },
  foldMap: function(dictMonoid) {
    var mempty11 = mempty(dictMonoid);
    return function(v) {
      return function(v1) {
        if (v1 instanceof Nothing) {
          return mempty11;
        }
        ;
        if (v1 instanceof Just) {
          return v(v1.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  }
};
var foldMapDefaultR = function(dictFoldable) {
  var foldr22 = foldr(dictFoldable);
  return function(dictMonoid) {
    var append10 = append(dictMonoid.Semigroup0());
    var mempty11 = mempty(dictMonoid);
    return function(f) {
      return foldr22(function(x) {
        return function(acc) {
          return append10(f(x))(acc);
        };
      })(mempty11);
    };
  };
};
var foldableArray = {
  foldr: foldrArray,
  foldl: foldlArray,
  foldMap: function(dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
  }
};
var foldMap = function(dict) {
  return dict.foldMap;
};
var fold = function(dictFoldable) {
  var foldMap23 = foldMap(dictFoldable);
  return function(dictMonoid) {
    return foldMap23(dictMonoid)(identity5);
  };
};
var find = function(dictFoldable) {
  var foldl22 = foldl(dictFoldable);
  return function(p) {
    var go = function(v) {
      return function(v1) {
        if (v instanceof Nothing && p(v1)) {
          return new Just(v1);
        }
        ;
        return v;
      };
    };
    return foldl22(go)(Nothing.value);
  };
};
var any = function(dictFoldable) {
  var foldMap23 = foldMap(dictFoldable);
  return function(dictHeytingAlgebra) {
    return alaF2(Disj)(foldMap23(monoidDisj(dictHeytingAlgebra)));
  };
};

// output/Data.FunctorWithIndex/foreign.js
var mapWithIndexArray = function(f) {
  return function(xs) {
    var l = xs.length;
    var result = Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }
    return result;
  };
};

// output/Data.FunctorWithIndex/index.js
var mapWithIndex = function(dict) {
  return dict.mapWithIndex;
};
var functorWithIndexArray = {
  mapWithIndex: mapWithIndexArray,
  Functor0: function() {
    return functorArray;
  }
};

// output/Data.FoldableWithIndex/index.js
var foldr8 = /* @__PURE__ */ foldr(foldableArray);
var mapWithIndex2 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
var foldl8 = /* @__PURE__ */ foldl(foldableArray);
var foldrWithIndex = function(dict) {
  return dict.foldrWithIndex;
};
var foldlWithIndex = function(dict) {
  return dict.foldlWithIndex;
};
var foldMapWithIndexDefaultR = function(dictFoldableWithIndex) {
  var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
  return function(dictMonoid) {
    var append10 = append(dictMonoid.Semigroup0());
    var mempty11 = mempty(dictMonoid);
    return function(f) {
      return foldrWithIndex1(function(i) {
        return function(x) {
          return function(acc) {
            return append10(f(i)(x))(acc);
          };
        };
      })(mempty11);
    };
  };
};
var foldableWithIndexArray = {
  foldrWithIndex: function(f) {
    return function(z) {
      var $291 = foldr8(function(v) {
        return function(y) {
          return f(v.value0)(v.value1)(y);
        };
      })(z);
      var $292 = mapWithIndex2(Tuple.create);
      return function($293) {
        return $291($292($293));
      };
    };
  },
  foldlWithIndex: function(f) {
    return function(z) {
      var $294 = foldl8(function(y) {
        return function(v) {
          return f(v.value0)(y)(v.value1);
        };
      })(z);
      var $295 = mapWithIndex2(Tuple.create);
      return function($296) {
        return $294($295($296));
      };
    };
  },
  foldMapWithIndex: function(dictMonoid) {
    return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
  },
  Foldable0: function() {
    return foldableArray;
  }
};
var foldMapWithIndex = function(dict) {
  return dict.foldMapWithIndex;
};

// output/Data.Traversable/foreign.js
var traverseArrayImpl = function() {
  function array1(a) {
    return [a];
  }
  function array2(a) {
    return function(b) {
      return [a, b];
    };
  }
  function array3(a) {
    return function(b) {
      return function(c) {
        return [a, b, c];
      };
    };
  }
  function concat2(xs) {
    return function(ys) {
      return xs.concat(ys);
    };
  }
  return function(apply6) {
    return function(map37) {
      return function(pure17) {
        return function(f) {
          return function(array) {
            function go(bot, top4) {
              switch (top4 - bot) {
                case 0:
                  return pure17([]);
                case 1:
                  return map37(array1)(f(array[bot]));
                case 2:
                  return apply6(map37(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3:
                  return apply6(apply6(map37(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  var pivot = bot + Math.floor((top4 - bot) / 4) * 2;
                  return apply6(map37(concat2)(go(bot, pivot)))(go(pivot, top4));
              }
            }
            return go(0, array.length);
          };
        };
      };
    };
  };
}();

// output/Data.Traversable/index.js
var identity6 = /* @__PURE__ */ identity(categoryFn);
var traverse = function(dict) {
  return dict.traverse;
};
var traversableMaybe = {
  traverse: function(dictApplicative) {
    var pure17 = pure(dictApplicative);
    var map37 = map(dictApplicative.Apply0().Functor0());
    return function(v) {
      return function(v1) {
        if (v1 instanceof Nothing) {
          return pure17(Nothing.value);
        }
        ;
        if (v1 instanceof Just) {
          return map37(Just.create)(v(v1.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  },
  sequence: function(dictApplicative) {
    var pure17 = pure(dictApplicative);
    var map37 = map(dictApplicative.Apply0().Functor0());
    return function(v) {
      if (v instanceof Nothing) {
        return pure17(Nothing.value);
      }
      ;
      if (v instanceof Just) {
        return map37(Just.create)(v.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v.constructor.name]);
    };
  },
  Functor0: function() {
    return functorMaybe;
  },
  Foldable1: function() {
    return foldableMaybe;
  }
};
var sequenceDefault = function(dictTraversable) {
  var traverse22 = traverse(dictTraversable);
  return function(dictApplicative) {
    return traverse22(dictApplicative)(identity6);
  };
};
var traversableArray = {
  traverse: function(dictApplicative) {
    var Apply0 = dictApplicative.Apply0();
    return traverseArrayImpl(apply2(Apply0))(map(Apply0.Functor0()))(pure(dictApplicative));
  },
  sequence: function(dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
  },
  Functor0: function() {
    return functorArray;
  },
  Foldable1: function() {
    return foldableArray;
  }
};
var sequence = function(dict) {
  return dict.sequence;
};
var $$for = function(dictApplicative) {
  return function(dictTraversable) {
    var traverse22 = traverse(dictTraversable)(dictApplicative);
    return function(x) {
      return function(f) {
        return traverse22(f)(x);
      };
    };
  };
};

// output/Data.TraversableWithIndex/index.js
var traverseWithIndexDefault = function(dictTraversableWithIndex) {
  var sequence3 = sequence(dictTraversableWithIndex.Traversable2());
  var mapWithIndex4 = mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
  return function(dictApplicative) {
    var sequence12 = sequence3(dictApplicative);
    return function(f) {
      var $174 = mapWithIndex4(f);
      return function($175) {
        return sequence12($174($175));
      };
    };
  };
};
var traverseWithIndex = function(dict) {
  return dict.traverseWithIndex;
};
var traversableWithIndexArray = {
  traverseWithIndex: function(dictApplicative) {
    return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
  },
  FunctorWithIndex0: function() {
    return functorWithIndexArray;
  },
  FoldableWithIndex1: function() {
    return foldableWithIndexArray;
  },
  Traversable2: function() {
    return traversableArray;
  }
};

// output/Data.Unfoldable/foreign.js
var unfoldrArrayImpl = function(isNothing2) {
  return function(fromJust7) {
    return function(fst2) {
      return function(snd2) {
        return function(f) {
          return function(b) {
            var result = [];
            var value = b;
            while (true) {
              var maybe2 = f(value);
              if (isNothing2(maybe2))
                return result;
              var tuple = fromJust7(maybe2);
              result.push(fst2(tuple));
              value = snd2(tuple);
            }
          };
        };
      };
    };
  };
};

// output/Data.Unfoldable1/foreign.js
var unfoldr1ArrayImpl = function(isNothing2) {
  return function(fromJust7) {
    return function(fst2) {
      return function(snd2) {
        return function(f) {
          return function(b) {
            var result = [];
            var value = b;
            while (true) {
              var tuple = f(value);
              result.push(fst2(tuple));
              var maybe2 = snd2(tuple);
              if (isNothing2(maybe2))
                return result;
              value = fromJust7(maybe2);
            }
          };
        };
      };
    };
  };
};

// output/Data.Unfoldable1/index.js
var fromJust2 = /* @__PURE__ */ fromJust();
var unfoldable1Maybe = {
  unfoldr1: function(f) {
    return function(b) {
      return new Just(fst(f(b)));
    };
  }
};
var unfoldable1Array = {
  unfoldr1: /* @__PURE__ */ unfoldr1ArrayImpl(isNothing)(fromJust2)(fst)(snd)
};

// output/Data.Unfoldable/index.js
var map5 = /* @__PURE__ */ map(functorMaybe);
var fromJust3 = /* @__PURE__ */ fromJust();
var unfoldr = function(dict) {
  return dict.unfoldr;
};
var unfoldableMaybe = {
  unfoldr: function(f) {
    return function(b) {
      return map5(fst)(f(b));
    };
  },
  Unfoldable10: function() {
    return unfoldable1Maybe;
  }
};
var unfoldableArray = {
  unfoldr: /* @__PURE__ */ unfoldrArrayImpl(isNothing)(fromJust3)(fst)(snd),
  Unfoldable10: function() {
    return unfoldable1Array;
  }
};
var none = function(dictUnfoldable) {
  return unfoldr(dictUnfoldable)($$const(Nothing.value))(unit);
};

// output/Data.NonEmpty/index.js
var NonEmpty = /* @__PURE__ */ function() {
  function NonEmpty2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  NonEmpty2.create = function(value0) {
    return function(value1) {
      return new NonEmpty2(value0, value1);
    };
  };
  return NonEmpty2;
}();
var singleton2 = function(dictPlus) {
  var empty7 = empty(dictPlus);
  return function(a) {
    return new NonEmpty(a, empty7);
  };
};
var foldableNonEmpty = function(dictFoldable) {
  var foldMap11 = foldMap(dictFoldable);
  var foldl6 = foldl(dictFoldable);
  var foldr12 = foldr(dictFoldable);
  return {
    foldMap: function(dictMonoid) {
      var append19 = append(dictMonoid.Semigroup0());
      var foldMap15 = foldMap11(dictMonoid);
      return function(f) {
        return function(v) {
          return append19(f(v.value0))(foldMap15(f)(v.value1));
        };
      };
    },
    foldl: function(f) {
      return function(b) {
        return function(v) {
          return foldl6(f)(f(b)(v.value0))(v.value1);
        };
      };
    },
    foldr: function(f) {
      return function(b) {
        return function(v) {
          return f(v.value0)(foldr12(f)(b)(v.value1));
        };
      };
    }
  };
};

// output/Data.List.Types/index.js
var identity7 = /* @__PURE__ */ identity(categoryFn);
var Nil = /* @__PURE__ */ function() {
  function Nil3() {
  }
  ;
  Nil3.value = new Nil3();
  return Nil3;
}();
var Cons = /* @__PURE__ */ function() {
  function Cons3(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Cons3.create = function(value0) {
    return function(value1) {
      return new Cons3(value0, value1);
    };
  };
  return Cons3;
}();
var NonEmptyList = function(x) {
  return x;
};
var toList = function(v) {
  return new Cons(v.value0, v.value1);
};
var listMap = function(f) {
  var chunkedRevMap = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
          $tco_var_v = new Cons(v1, v);
          $copy_v1 = v1.value1.value1.value1;
          return;
        }
        ;
        var unrolledMap = function(v2) {
          if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {
            return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));
          }
          ;
          if (v2 instanceof Cons && v2.value1 instanceof Nil) {
            return new Cons(f(v2.value0), Nil.value);
          }
          ;
          return Nil.value;
        };
        var reverseUnrolledMap = function($copy_v2) {
          return function($copy_v3) {
            var $tco_var_v2 = $copy_v2;
            var $tco_done1 = false;
            var $tco_result2;
            function $tco_loop2(v2, v3) {
              if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {
                $tco_var_v2 = v2.value1;
                $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));
                return;
              }
              ;
              $tco_done1 = true;
              return v3;
            }
            ;
            while (!$tco_done1) {
              $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
            }
            ;
            return $tco_result2;
          };
        };
        $tco_done = true;
        return reverseUnrolledMap(v)(unrolledMap(v1));
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  return chunkedRevMap(Nil.value);
};
var functorList = {
  map: listMap
};
var map6 = /* @__PURE__ */ map(functorList);
var foldableList = {
  foldr: function(f) {
    return function(b) {
      var rev = function() {
        var go = function($copy_v) {
          return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
              if (v1 instanceof Nil) {
                $tco_done = true;
                return v;
              }
              ;
              if (v1 instanceof Cons) {
                $tco_var_v = new Cons(v1.value0, v);
                $copy_v1 = v1.value1;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v.constructor.name, v1.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
            }
            ;
            return $tco_result;
          };
        };
        return go(Nil.value);
      }();
      var $284 = foldl(foldableList)(flip(f))(b);
      return function($285) {
        return $284(rev($285));
      };
    };
  },
  foldl: function(f) {
    var go = function($copy_b) {
      return function($copy_v) {
        var $tco_var_b = $copy_b;
        var $tco_done1 = false;
        var $tco_result;
        function $tco_loop(b, v) {
          if (v instanceof Nil) {
            $tco_done1 = true;
            return b;
          }
          ;
          if (v instanceof Cons) {
            $tco_var_b = f(b)(v.value0);
            $copy_v = v.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done1) {
          $tco_result = $tco_loop($tco_var_b, $copy_v);
        }
        ;
        return $tco_result;
      };
    };
    return go;
  },
  foldMap: function(dictMonoid) {
    var append25 = append(dictMonoid.Semigroup0());
    var mempty11 = mempty(dictMonoid);
    return function(f) {
      return foldl(foldableList)(function(acc) {
        var $286 = append25(acc);
        return function($287) {
          return $286(f($287));
        };
      })(mempty11);
    };
  }
};
var foldl2 = /* @__PURE__ */ foldl(foldableList);
var foldr2 = /* @__PURE__ */ foldr(foldableList);
var foldableNonEmptyList = /* @__PURE__ */ foldableNonEmpty(foldableList);
var semigroupList = {
  append: function(xs) {
    return function(ys) {
      return foldr2(Cons.create)(ys)(xs);
    };
  }
};
var append1 = /* @__PURE__ */ append(semigroupList);
var monoidList = /* @__PURE__ */ function() {
  return {
    mempty: Nil.value,
    Semigroup0: function() {
      return semigroupList;
    }
  };
}();
var semigroupNonEmptyList = {
  append: function(v) {
    return function(as$prime) {
      return new NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));
    };
  }
};
var traversableList = {
  traverse: function(dictApplicative) {
    var Apply0 = dictApplicative.Apply0();
    var map117 = map(Apply0.Functor0());
    var lift22 = lift2(Apply0);
    var pure17 = pure(dictApplicative);
    return function(f) {
      var $301 = map117(foldl2(flip(Cons.create))(Nil.value));
      var $302 = foldl2(function(acc) {
        var $304 = lift22(flip(Cons.create))(acc);
        return function($305) {
          return $304(f($305));
        };
      })(pure17(Nil.value));
      return function($303) {
        return $301($302($303));
      };
    };
  },
  sequence: function(dictApplicative) {
    return traverse(traversableList)(dictApplicative)(identity7);
  },
  Functor0: function() {
    return functorList;
  },
  Foldable1: function() {
    return foldableList;
  }
};
var unfoldable1List = {
  unfoldr1: function(f) {
    return function(b) {
      var go = function($copy_source) {
        return function($copy_memo) {
          var $tco_var_source = $copy_source;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(source2, memo) {
            var v = f(source2);
            if (v.value1 instanceof Just) {
              $tco_var_source = v.value1.value0;
              $copy_memo = new Cons(v.value0, memo);
              return;
            }
            ;
            if (v.value1 instanceof Nothing) {
              $tco_done = true;
              return foldl2(flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 135, column 22 - line 137, column 61): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_source, $copy_memo);
          }
          ;
          return $tco_result;
        };
      };
      return go(b)(Nil.value);
    };
  }
};
var unfoldableList = {
  unfoldr: function(f) {
    return function(b) {
      var go = function($copy_source) {
        return function($copy_memo) {
          var $tco_var_source = $copy_source;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(source2, memo) {
            var v = f(source2);
            if (v instanceof Nothing) {
              $tco_done = true;
              return foldl2(flip(Cons.create))(Nil.value)(memo);
            }
            ;
            if (v instanceof Just) {
              $tco_var_source = v.value0.value1;
              $copy_memo = new Cons(v.value0.value0, memo);
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 142, column 22 - line 144, column 52): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_source, $copy_memo);
          }
          ;
          return $tco_result;
        };
      };
      return go(b)(Nil.value);
    };
  },
  Unfoldable10: function() {
    return unfoldable1List;
  }
};
var eq1List = {
  eq1: function(dictEq) {
    var eq75 = eq(dictEq);
    return function(xs) {
      return function(ys) {
        var go = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1, v2) {
                if (!v2) {
                  $tco_done = true;
                  return false;
                }
                ;
                if (v instanceof Nil && v1 instanceof Nil) {
                  $tco_done = true;
                  return v2;
                }
                ;
                if (v instanceof Cons && v1 instanceof Cons) {
                  $tco_var_v = v.value1;
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = v2 && eq75(v1.value0)(v.value0);
                  return;
                }
                ;
                $tco_done = true;
                return false;
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        return go(xs)(ys)(true);
      };
    };
  }
};
var eq12 = /* @__PURE__ */ eq1(eq1List);
var eqList = function(dictEq) {
  return {
    eq: eq12(dictEq)
  };
};
var ord1List = {
  compare1: function(dictOrd) {
    var compare78 = compare(dictOrd);
    return function(xs) {
      return function(ys) {
        var go = function($copy_v) {
          return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
              if (v instanceof Nil && v1 instanceof Nil) {
                $tco_done = true;
                return EQ.value;
              }
              ;
              if (v instanceof Nil) {
                $tco_done = true;
                return LT.value;
              }
              ;
              if (v1 instanceof Nil) {
                $tco_done = true;
                return GT.value;
              }
              ;
              if (v instanceof Cons && v1 instanceof Cons) {
                var v2 = compare78(v.value0)(v1.value0);
                if (v2 instanceof EQ) {
                  $tco_var_v = v.value1;
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                $tco_done = true;
                return v2;
              }
              ;
              throw new Error("Failed pattern match at Data.List.Types (line 60, column 5 - line 60, column 20): " + [v.constructor.name, v1.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
            }
            ;
            return $tco_result;
          };
        };
        return go(xs)(ys);
      };
    };
  },
  Eq10: function() {
    return eq1List;
  }
};
var compare12 = /* @__PURE__ */ compare1(ord1List);
var ordList = function(dictOrd) {
  var eqList1 = eqList(dictOrd.Eq0());
  return {
    compare: compare12(dictOrd),
    Eq0: function() {
      return eqList1;
    }
  };
};
var applyList = {
  apply: function(v) {
    return function(v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }
      ;
      if (v instanceof Cons) {
        return append1(map6(v.value0)(v1))(apply2(applyList)(v.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Functor0: function() {
    return functorList;
  }
};
var bindList = {
  bind: function(v) {
    return function(v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }
      ;
      if (v instanceof Cons) {
        return append1(v1(v.value0))(bind(bindList)(v.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.List.Types (line 164, column 1 - line 166, column 37): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  Apply0: function() {
    return applyList;
  }
};
var applicativeList = {
  pure: function(a) {
    return new Cons(a, Nil.value);
  },
  Apply0: function() {
    return applyList;
  }
};
var altList = {
  alt: append1,
  Functor0: function() {
    return functorList;
  }
};
var plusList = /* @__PURE__ */ function() {
  return {
    empty: Nil.value,
    Alt0: function() {
      return altList;
    }
  };
}();

// output/Effect.Aff/foreign.js
var Aff = function() {
  var EMPTY = {};
  var PURE = "Pure";
  var THROW = "Throw";
  var CATCH = "Catch";
  var SYNC = "Sync";
  var ASYNC = "Async";
  var BIND = "Bind";
  var BRACKET = "Bracket";
  var FORK = "Fork";
  var SEQ = "Sequential";
  var MAP = "Map";
  var APPLY = "Apply";
  var ALT = "Alt";
  var CONS = "Cons";
  var RESUME = "Resume";
  var RELEASE = "Release";
  var FINALIZER = "Finalizer";
  var FINALIZED = "Finalized";
  var FORKED = "Forked";
  var FIBER = "Fiber";
  var THUNK = "Thunk";
  function Aff2(tag, _1, _2, _3) {
    this.tag = tag;
    this._1 = _1;
    this._2 = _2;
    this._3 = _3;
  }
  function AffCtr(tag) {
    var fn = function(_1, _2, _3) {
      return new Aff2(tag, _1, _2, _3);
    };
    fn.tag = tag;
    return fn;
  }
  function nonCanceler2(error2) {
    return new Aff2(PURE, void 0);
  }
  function runEff(eff) {
    try {
      eff();
    } catch (error2) {
      setTimeout(function() {
        throw error2;
      }, 0);
    }
  }
  function runSync(left2, right2, eff) {
    try {
      return right2(eff());
    } catch (error2) {
      return left2(error2);
    }
  }
  function runAsync(left2, eff, k) {
    try {
      return eff(k)();
    } catch (error2) {
      k(left2(error2))();
      return nonCanceler2;
    }
  }
  var Scheduler = function() {
    var limit = 1024;
    var size3 = 0;
    var ix = 0;
    var queue = new Array(limit);
    var draining = false;
    function drain() {
      var thunk;
      draining = true;
      while (size3 !== 0) {
        size3--;
        thunk = queue[ix];
        queue[ix] = void 0;
        ix = (ix + 1) % limit;
        thunk();
      }
      draining = false;
    }
    return {
      isDraining: function() {
        return draining;
      },
      enqueue: function(cb) {
        var i, tmp;
        if (size3 === limit) {
          tmp = draining;
          drain();
          draining = tmp;
        }
        queue[(ix + size3) % limit] = cb;
        size3++;
        if (!draining) {
          drain();
        }
      }
    };
  }();
  function Supervisor(util) {
    var fibers = {};
    var fiberId = 0;
    var count = 0;
    return {
      register: function(fiber) {
        var fid = fiberId++;
        fiber.onComplete({
          rethrow: true,
          handler: function(result) {
            return function() {
              count--;
              delete fibers[fid];
            };
          }
        })();
        fibers[fid] = fiber;
        count++;
      },
      isEmpty: function() {
        return count === 0;
      },
      killAll: function(killError, cb) {
        return function() {
          if (count === 0) {
            return cb();
          }
          var killCount = 0;
          var kills = {};
          function kill(fid) {
            kills[fid] = fibers[fid].kill(killError, function(result) {
              return function() {
                delete kills[fid];
                killCount--;
                if (util.isLeft(result) && util.fromLeft(result)) {
                  setTimeout(function() {
                    throw util.fromLeft(result);
                  }, 0);
                }
                if (killCount === 0) {
                  cb();
                }
              };
            })();
          }
          for (var k in fibers) {
            if (fibers.hasOwnProperty(k)) {
              killCount++;
              kill(k);
            }
          }
          fibers = {};
          fiberId = 0;
          count = 0;
          return function(error2) {
            return new Aff2(SYNC, function() {
              for (var k2 in kills) {
                if (kills.hasOwnProperty(k2)) {
                  kills[k2]();
                }
              }
            });
          };
        };
      }
    };
  }
  var SUSPENDED = 0;
  var CONTINUE = 1;
  var STEP_BIND = 2;
  var STEP_RESULT = 3;
  var PENDING = 4;
  var RETURN = 5;
  var COMPLETED = 6;
  function Fiber(util, supervisor, aff) {
    var runTick = 0;
    var status = SUSPENDED;
    var step3 = aff;
    var fail3 = null;
    var interrupt = null;
    var bhead = null;
    var btail = null;
    var attempts = null;
    var bracketCount = 0;
    var joinId = 0;
    var joins = null;
    var rethrow = true;
    function run3(localRunTick) {
      var tmp, result, attempt;
      while (true) {
        tmp = null;
        result = null;
        attempt = null;
        switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            try {
              step3 = bhead(step3);
              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail3 = util.left(e);
              step3 = null;
            }
            break;
          case STEP_RESULT:
            if (util.isLeft(step3)) {
              status = RETURN;
              fail3 = step3;
              step3 = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step3 = util.fromRight(step3);
            }
            break;
          case CONTINUE:
            switch (step3.tag) {
              case BIND:
                if (bhead) {
                  btail = new Aff2(CONS, bhead, btail);
                }
                bhead = step3._2;
                status = CONTINUE;
                step3 = step3._1;
                break;
              case PURE:
                if (bhead === null) {
                  status = RETURN;
                  step3 = util.right(step3._1);
                } else {
                  status = STEP_BIND;
                  step3 = step3._1;
                }
                break;
              case SYNC:
                status = STEP_RESULT;
                step3 = runSync(util.left, util.right, step3._1);
                break;
              case ASYNC:
                status = PENDING;
                step3 = runAsync(util.left, step3._1, function(result2) {
                  return function() {
                    if (runTick !== localRunTick) {
                      return;
                    }
                    runTick++;
                    Scheduler.enqueue(function() {
                      if (runTick !== localRunTick + 1) {
                        return;
                      }
                      status = STEP_RESULT;
                      step3 = result2;
                      run3(runTick);
                    });
                  };
                });
                return;
              case THROW:
                status = RETURN;
                fail3 = util.left(step3._1);
                step3 = null;
                break;
              case CATCH:
                if (bhead === null) {
                  attempts = new Aff2(CONS, step3, attempts, interrupt);
                } else {
                  attempts = new Aff2(CONS, step3, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }
                bhead = null;
                btail = null;
                status = CONTINUE;
                step3 = step3._1;
                break;
              case BRACKET:
                bracketCount++;
                if (bhead === null) {
                  attempts = new Aff2(CONS, step3, attempts, interrupt);
                } else {
                  attempts = new Aff2(CONS, step3, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }
                bhead = null;
                btail = null;
                status = CONTINUE;
                step3 = step3._1;
                break;
              case FORK:
                status = STEP_RESULT;
                tmp = Fiber(util, supervisor, step3._2);
                if (supervisor) {
                  supervisor.register(tmp);
                }
                if (step3._1) {
                  tmp.run();
                }
                step3 = util.right(tmp);
                break;
              case SEQ:
                status = CONTINUE;
                step3 = sequential2(util, supervisor, step3._1);
                break;
            }
            break;
          case RETURN:
            bhead = null;
            btail = null;
            if (attempts === null) {
              status = COMPLETED;
              step3 = interrupt || fail3 || step3;
            } else {
              tmp = attempts._3;
              attempt = attempts._1;
              attempts = attempts._2;
              switch (attempt.tag) {
                case CATCH:
                  if (interrupt && interrupt !== tmp && bracketCount === 0) {
                    status = RETURN;
                  } else if (fail3) {
                    status = CONTINUE;
                    step3 = attempt._2(util.fromLeft(fail3));
                    fail3 = null;
                  }
                  break;
                case RESUME:
                  if (interrupt && interrupt !== tmp && bracketCount === 0 || fail3) {
                    status = RETURN;
                  } else {
                    bhead = attempt._1;
                    btail = attempt._2;
                    status = STEP_BIND;
                    step3 = util.fromRight(step3);
                  }
                  break;
                case BRACKET:
                  bracketCount--;
                  if (fail3 === null) {
                    result = util.fromRight(step3);
                    attempts = new Aff2(CONS, new Aff2(RELEASE, attempt._2, result), attempts, tmp);
                    if (interrupt === tmp || bracketCount > 0) {
                      status = CONTINUE;
                      step3 = attempt._3(result);
                    }
                  }
                  break;
                case RELEASE:
                  attempts = new Aff2(CONS, new Aff2(FINALIZED, step3, fail3), attempts, interrupt);
                  status = CONTINUE;
                  if (interrupt && interrupt !== tmp && bracketCount === 0) {
                    step3 = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                  } else if (fail3) {
                    step3 = attempt._1.failed(util.fromLeft(fail3))(attempt._2);
                  } else {
                    step3 = attempt._1.completed(util.fromRight(step3))(attempt._2);
                  }
                  fail3 = null;
                  bracketCount++;
                  break;
                case FINALIZER:
                  bracketCount++;
                  attempts = new Aff2(CONS, new Aff2(FINALIZED, step3, fail3), attempts, interrupt);
                  status = CONTINUE;
                  step3 = attempt._1;
                  break;
                case FINALIZED:
                  bracketCount--;
                  status = RETURN;
                  step3 = attempt._1;
                  fail3 = attempt._2;
                  break;
              }
            }
            break;
          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step3));
              }
            }
            joins = null;
            if (interrupt && fail3) {
              setTimeout(function() {
                throw util.fromLeft(fail3);
              }, 0);
            } else if (util.isLeft(step3) && rethrow) {
              setTimeout(function() {
                if (rethrow) {
                  throw util.fromLeft(step3);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING:
            return;
        }
      }
    }
    function onComplete(join3) {
      return function() {
        if (status === COMPLETED) {
          rethrow = rethrow && join3.rethrow;
          join3.handler(step3)();
          return function() {
          };
        }
        var jid = joinId++;
        joins = joins || {};
        joins[jid] = join3;
        return function() {
          if (joins !== null) {
            delete joins[jid];
          }
        };
      };
    }
    function kill(error2, cb) {
      return function() {
        if (status === COMPLETED) {
          cb(util.right(void 0))();
          return function() {
          };
        }
        var canceler = onComplete({
          rethrow: false,
          handler: function() {
            return cb(util.right(void 0));
          }
        })();
        switch (status) {
          case SUSPENDED:
            interrupt = util.left(error2);
            status = COMPLETED;
            step3 = interrupt;
            run3(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error2);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff2(CONS, new Aff2(FINALIZER, step3(error2)), attempts, interrupt);
              }
              status = RETURN;
              step3 = null;
              fail3 = null;
              run3(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error2);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step3 = null;
              fail3 = null;
            }
        }
        return canceler;
      };
    }
    function join2(cb) {
      return function() {
        var canceler = onComplete({
          rethrow: false,
          handler: cb
        })();
        if (status === SUSPENDED) {
          run3(runTick);
        }
        return canceler;
      };
    }
    return {
      kill,
      join: join2,
      onComplete,
      isSuspended: function() {
        return status === SUSPENDED;
      },
      run: function() {
        if (status === SUSPENDED) {
          if (!Scheduler.isDraining()) {
            Scheduler.enqueue(function() {
              run3(runTick);
            });
          } else {
            run3(runTick);
          }
        }
      }
    };
  }
  function runPar(util, supervisor, par, cb) {
    var fiberId = 0;
    var fibers = {};
    var killId = 0;
    var kills = {};
    var early = new Error("[ParAff] Early exit");
    var interrupt = null;
    var root = EMPTY;
    function kill(error2, par2, cb2) {
      var step3 = par2;
      var head4 = null;
      var tail3 = null;
      var count = 0;
      var kills2 = {};
      var tmp, kid;
      loop:
        while (true) {
          tmp = null;
          switch (step3.tag) {
            case FORKED:
              if (step3._3 === EMPTY) {
                tmp = fibers[step3._1];
                kills2[count++] = tmp.kill(error2, function(result) {
                  return function() {
                    count--;
                    if (count === 0) {
                      cb2(result)();
                    }
                  };
                });
              }
              if (head4 === null) {
                break loop;
              }
              step3 = head4._2;
              if (tail3 === null) {
                head4 = null;
              } else {
                head4 = tail3._1;
                tail3 = tail3._2;
              }
              break;
            case MAP:
              step3 = step3._2;
              break;
            case APPLY:
            case ALT:
              if (head4) {
                tail3 = new Aff2(CONS, head4, tail3);
              }
              head4 = step3;
              step3 = step3._1;
              break;
          }
        }
      if (count === 0) {
        cb2(util.right(void 0))();
      } else {
        kid = 0;
        tmp = count;
        for (; kid < tmp; kid++) {
          kills2[kid] = kills2[kid]();
        }
      }
      return kills2;
    }
    function join2(result, head4, tail3) {
      var fail3, step3, lhs, rhs, tmp, kid;
      if (util.isLeft(result)) {
        fail3 = result;
        step3 = null;
      } else {
        step3 = result;
        fail3 = null;
      }
      loop:
        while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;
          if (interrupt !== null) {
            return;
          }
          if (head4 === null) {
            cb(fail3 || step3)();
            return;
          }
          if (head4._3 !== EMPTY) {
            return;
          }
          switch (head4.tag) {
            case MAP:
              if (fail3 === null) {
                head4._3 = util.right(head4._1(util.fromRight(step3)));
                step3 = head4._3;
              } else {
                head4._3 = fail3;
              }
              break;
            case APPLY:
              lhs = head4._1._3;
              rhs = head4._2._3;
              if (fail3) {
                head4._3 = fail3;
                tmp = true;
                kid = killId++;
                kills[kid] = kill(early, fail3 === lhs ? head4._2 : head4._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail3 === null) {
                      join2(fail3, null, null);
                    } else {
                      join2(fail3, tail3._1, tail3._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              } else if (lhs === EMPTY || rhs === EMPTY) {
                return;
              } else {
                step3 = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                head4._3 = step3;
              }
              break;
            case ALT:
              lhs = head4._1._3;
              rhs = head4._2._3;
              if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                return;
              }
              if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                fail3 = step3 === lhs ? rhs : lhs;
                step3 = null;
                head4._3 = fail3;
              } else {
                head4._3 = step3;
                tmp = true;
                kid = killId++;
                kills[kid] = kill(early, step3 === lhs ? head4._2 : head4._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail3 === null) {
                      join2(step3, null, null);
                    } else {
                      join2(step3, tail3._1, tail3._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              }
              break;
          }
          if (tail3 === null) {
            head4 = null;
          } else {
            head4 = tail3._1;
            tail3 = tail3._2;
          }
        }
    }
    function resolve(fiber) {
      return function(result) {
        return function() {
          delete fibers[fiber._1];
          fiber._3 = result;
          join2(result, fiber._2._1, fiber._2._2);
        };
      };
    }
    function run3() {
      var status = CONTINUE;
      var step3 = par;
      var head4 = null;
      var tail3 = null;
      var tmp, fid;
      loop:
        while (true) {
          tmp = null;
          fid = null;
          switch (status) {
            case CONTINUE:
              switch (step3.tag) {
                case MAP:
                  if (head4) {
                    tail3 = new Aff2(CONS, head4, tail3);
                  }
                  head4 = new Aff2(MAP, step3._1, EMPTY, EMPTY);
                  step3 = step3._2;
                  break;
                case APPLY:
                  if (head4) {
                    tail3 = new Aff2(CONS, head4, tail3);
                  }
                  head4 = new Aff2(APPLY, EMPTY, step3._2, EMPTY);
                  step3 = step3._1;
                  break;
                case ALT:
                  if (head4) {
                    tail3 = new Aff2(CONS, head4, tail3);
                  }
                  head4 = new Aff2(ALT, EMPTY, step3._2, EMPTY);
                  step3 = step3._1;
                  break;
                default:
                  fid = fiberId++;
                  status = RETURN;
                  tmp = step3;
                  step3 = new Aff2(FORKED, fid, new Aff2(CONS, head4, tail3), EMPTY);
                  tmp = Fiber(util, supervisor, tmp);
                  tmp.onComplete({
                    rethrow: false,
                    handler: resolve(step3)
                  })();
                  fibers[fid] = tmp;
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
              }
              break;
            case RETURN:
              if (head4 === null) {
                break loop;
              }
              if (head4._1 === EMPTY) {
                head4._1 = step3;
                status = CONTINUE;
                step3 = head4._2;
                head4._2 = EMPTY;
              } else {
                head4._2 = step3;
                step3 = head4;
                if (tail3 === null) {
                  head4 = null;
                } else {
                  head4 = tail3._1;
                  tail3 = tail3._2;
                }
              }
          }
        }
      root = step3;
      for (fid = 0; fid < fiberId; fid++) {
        fibers[fid].run();
      }
    }
    function cancel(error2, cb2) {
      interrupt = util.left(error2);
      var innerKills;
      for (var kid in kills) {
        if (kills.hasOwnProperty(kid)) {
          innerKills = kills[kid];
          for (kid in innerKills) {
            if (innerKills.hasOwnProperty(kid)) {
              innerKills[kid]();
            }
          }
        }
      }
      kills = null;
      var newKills = kill(error2, root, cb2);
      return function(killError) {
        return new Aff2(ASYNC, function(killCb) {
          return function() {
            for (var kid2 in newKills) {
              if (newKills.hasOwnProperty(kid2)) {
                newKills[kid2]();
              }
            }
            return nonCanceler2;
          };
        });
      };
    }
    run3();
    return function(killError) {
      return new Aff2(ASYNC, function(killCb) {
        return function() {
          return cancel(killError, killCb);
        };
      });
    };
  }
  function sequential2(util, supervisor, par) {
    return new Aff2(ASYNC, function(cb) {
      return function() {
        return runPar(util, supervisor, par, cb);
      };
    });
  }
  Aff2.EMPTY = EMPTY;
  Aff2.Pure = AffCtr(PURE);
  Aff2.Throw = AffCtr(THROW);
  Aff2.Catch = AffCtr(CATCH);
  Aff2.Sync = AffCtr(SYNC);
  Aff2.Async = AffCtr(ASYNC);
  Aff2.Bind = AffCtr(BIND);
  Aff2.Bracket = AffCtr(BRACKET);
  Aff2.Fork = AffCtr(FORK);
  Aff2.Seq = AffCtr(SEQ);
  Aff2.ParMap = AffCtr(MAP);
  Aff2.ParApply = AffCtr(APPLY);
  Aff2.ParAlt = AffCtr(ALT);
  Aff2.Fiber = Fiber;
  Aff2.Supervisor = Supervisor;
  Aff2.Scheduler = Scheduler;
  Aff2.nonCanceler = nonCanceler2;
  return Aff2;
}();
var _pure = Aff.Pure;
var _throwError = Aff.Throw;
function _catchError(aff) {
  return function(k) {
    return Aff.Catch(aff, k);
  };
}
function _map(f) {
  return function(aff) {
    if (aff.tag === Aff.Pure.tag) {
      return Aff.Pure(f(aff._1));
    } else {
      return Aff.Bind(aff, function(value) {
        return Aff.Pure(f(value));
      });
    }
  };
}
function _bind(aff) {
  return function(k) {
    return Aff.Bind(aff, k);
  };
}
var _liftEffect = Aff.Sync;
function _parAffMap(f) {
  return function(aff) {
    return Aff.ParMap(f, aff);
  };
}
function _parAffApply(aff1) {
  return function(aff2) {
    return Aff.ParApply(aff1, aff2);
  };
}
var makeAff = Aff.Async;
function _makeFiber(util, aff) {
  return function() {
    return Aff.Fiber(util, null, aff);
  };
}
var _delay = function() {
  function setDelay(n, k) {
    if (n === 0 && typeof setImmediate !== "undefined") {
      return setImmediate(k);
    } else {
      return setTimeout(k, n);
    }
  }
  function clearDelay(n, t) {
    if (n === 0 && typeof clearImmediate !== "undefined") {
      return clearImmediate(t);
    } else {
      return clearTimeout(t);
    }
  }
  return function(right2, ms) {
    return Aff.Async(function(cb) {
      return function() {
        var timer = setDelay(ms, cb(right2()));
        return function() {
          return Aff.Sync(function() {
            return right2(clearDelay(ms, timer));
          });
        };
      };
    });
  };
}();
var _sequential = Aff.Seq;

// output/Control.Monad.ST.Internal/foreign.js
var map_ = function(f) {
  return function(a) {
    return function() {
      return f(a());
    };
  };
};
var pure_ = function(a) {
  return function() {
    return a;
  };
};
var bind_ = function(a) {
  return function(f) {
    return function() {
      return f(a())();
    };
  };
};
var foreach = function(as) {
  return function(f) {
    return function() {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};
function newSTRef(val) {
  return function() {
    return { value: val };
  };
}
var read2 = function(ref) {
  return function() {
    return ref.value;
  };
};
var modifyImpl2 = function(f) {
  return function(ref) {
    return function() {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};
var write2 = function(a) {
  return function(ref) {
    return function() {
      return ref.value = a;
    };
  };
};

// output/Control.Monad.ST.Internal/index.js
var $runtime_lazy2 = function(name2, moduleName, init3) {
  var state2 = 0;
  var val;
  return function(lineNumber) {
    if (state2 === 2)
      return val;
    if (state2 === 1)
      throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
    state2 = 1;
    val = init3();
    state2 = 2;
    return val;
  };
};
var modify$prime = modifyImpl2;
var modify = function(f) {
  return modify$prime(function(s) {
    var s$prime = f(s);
    return {
      state: s$prime,
      value: s$prime
    };
  });
};
var functorST = {
  map: map_
};
var monadST = {
  Applicative0: function() {
    return applicativeST;
  },
  Bind1: function() {
    return bindST;
  }
};
var bindST = {
  bind: bind_,
  Apply0: function() {
    return $lazy_applyST(0);
  }
};
var applicativeST = {
  pure: pure_,
  Apply0: function() {
    return $lazy_applyST(0);
  }
};
var $lazy_applyST = /* @__PURE__ */ $runtime_lazy2("applyST", "Control.Monad.ST.Internal", function() {
  return {
    apply: ap(monadST),
    Functor0: function() {
      return functorST;
    }
  };
});

// output/Type.Equality/index.js
var refl = {
  proof: function(a) {
    return a;
  },
  Coercible0: function() {
    return void 0;
  }
};

// output/Data.Profunctor/index.js
var identity8 = /* @__PURE__ */ identity(categoryFn);
var profunctorFn = {
  dimap: function(a2b) {
    return function(c2d) {
      return function(b2c) {
        return function($18) {
          return c2d(b2c(a2b($18)));
        };
      };
    };
  }
};
var dimap = function(dict) {
  return dict.dimap;
};
var rmap = function(dictProfunctor) {
  var dimap1 = dimap(dictProfunctor);
  return function(b2c) {
    return dimap1(identity8)(b2c);
  };
};

// output/Control.Parallel.Class/index.js
var sequential = function(dict) {
  return dict.sequential;
};
var parallel = function(dict) {
  return dict.parallel;
};

// output/Control.Parallel/index.js
var identity9 = /* @__PURE__ */ identity(categoryFn);
var parTraverse_ = function(dictParallel) {
  var sequential2 = sequential(dictParallel);
  var traverse_2 = traverse_(dictParallel.Applicative1());
  var parallel2 = parallel(dictParallel);
  return function(dictFoldable) {
    var traverse_1 = traverse_2(dictFoldable);
    return function(f) {
      var $48 = traverse_1(function($50) {
        return parallel2(f($50));
      });
      return function($49) {
        return sequential2($48($49));
      };
    };
  };
};
var parSequence_ = function(dictParallel) {
  var parTraverse_1 = parTraverse_(dictParallel);
  return function(dictFoldable) {
    return parTraverse_1(dictFoldable)(identity9);
  };
};

// output/Partial.Unsafe/foreign.js
var _unsafePartial = function(f) {
  return f();
};

// output/Partial/foreign.js
var _crashWith = function(msg) {
  throw new Error(msg);
};

// output/Partial/index.js
var crashWith = function() {
  return _crashWith;
};

// output/Partial.Unsafe/index.js
var crashWith2 = /* @__PURE__ */ crashWith();
var unsafePartial = _unsafePartial;
var unsafeCrashWith = function(msg) {
  return unsafePartial(function() {
    return crashWith2(msg);
  });
};

// output/Effect.Aff/index.js
var $runtime_lazy3 = function(name2, moduleName, init3) {
  var state2 = 0;
  var val;
  return function(lineNumber) {
    if (state2 === 2)
      return val;
    if (state2 === 1)
      throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
    state2 = 1;
    val = init3();
    state2 = 2;
    return val;
  };
};
var $$void2 = /* @__PURE__ */ $$void(functorEffect);
var functorParAff = {
  map: _parAffMap
};
var functorAff = {
  map: _map
};
var ffiUtil = /* @__PURE__ */ function() {
  var unsafeFromRight = function(v) {
    if (v instanceof Right) {
      return v.value0;
    }
    ;
    if (v instanceof Left) {
      return unsafeCrashWith("unsafeFromRight: Left");
    }
    ;
    throw new Error("Failed pattern match at Effect.Aff (line 412, column 21 - line 414, column 54): " + [v.constructor.name]);
  };
  var unsafeFromLeft = function(v) {
    if (v instanceof Left) {
      return v.value0;
    }
    ;
    if (v instanceof Right) {
      return unsafeCrashWith("unsafeFromLeft: Right");
    }
    ;
    throw new Error("Failed pattern match at Effect.Aff (line 407, column 20 - line 409, column 55): " + [v.constructor.name]);
  };
  var isLeft = function(v) {
    if (v instanceof Left) {
      return true;
    }
    ;
    if (v instanceof Right) {
      return false;
    }
    ;
    throw new Error("Failed pattern match at Effect.Aff (line 402, column 12 - line 404, column 21): " + [v.constructor.name]);
  };
  return {
    isLeft,
    fromLeft: unsafeFromLeft,
    fromRight: unsafeFromRight,
    left: Left.create,
    right: Right.create
  };
}();
var makeFiber = function(aff) {
  return _makeFiber(ffiUtil, aff);
};
var launchAff = function(aff) {
  return function __do() {
    var fiber = makeFiber(aff)();
    fiber.run();
    return fiber;
  };
};
var applyParAff = {
  apply: _parAffApply,
  Functor0: function() {
    return functorParAff;
  }
};
var monadAff = {
  Applicative0: function() {
    return applicativeAff;
  },
  Bind1: function() {
    return bindAff;
  }
};
var bindAff = {
  bind: _bind,
  Apply0: function() {
    return $lazy_applyAff(0);
  }
};
var applicativeAff = {
  pure: _pure,
  Apply0: function() {
    return $lazy_applyAff(0);
  }
};
var $lazy_applyAff = /* @__PURE__ */ $runtime_lazy3("applyAff", "Effect.Aff", function() {
  return {
    apply: ap(monadAff),
    Functor0: function() {
      return functorAff;
    }
  };
});
var pure2 = /* @__PURE__ */ pure(applicativeAff);
var bindFlipped2 = /* @__PURE__ */ bindFlipped(bindAff);
var monadEffectAff = {
  liftEffect: _liftEffect,
  Monad0: function() {
    return monadAff;
  }
};
var liftEffect2 = /* @__PURE__ */ liftEffect(monadEffectAff);
var monadThrowAff = {
  throwError: _throwError,
  Monad0: function() {
    return monadAff;
  }
};
var monadErrorAff = {
  catchError: _catchError,
  MonadThrow0: function() {
    return monadThrowAff;
  }
};
var $$try2 = /* @__PURE__ */ $$try(monadErrorAff);
var runAff = function(k) {
  return function(aff) {
    return launchAff(bindFlipped2(function($80) {
      return liftEffect2(k($80));
    })($$try2(aff)));
  };
};
var runAff_ = function(k) {
  return function(aff) {
    return $$void2(runAff(k)(aff));
  };
};
var parallelAff = {
  parallel: unsafeCoerce2,
  sequential: _sequential,
  Monad0: function() {
    return monadAff;
  },
  Applicative1: function() {
    return $lazy_applicativeParAff(0);
  }
};
var $lazy_applicativeParAff = /* @__PURE__ */ $runtime_lazy3("applicativeParAff", "Effect.Aff", function() {
  return {
    pure: function() {
      var $82 = parallel(parallelAff);
      return function($83) {
        return $82(pure2($83));
      };
    }(),
    Apply0: function() {
      return applyParAff;
    }
  };
});
var parSequence_2 = /* @__PURE__ */ parSequence_(parallelAff)(foldableArray);
var semigroupCanceler = {
  append: function(v) {
    return function(v1) {
      return function(err) {
        return parSequence_2([v(err), v1(err)]);
      };
    };
  }
};
var nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure2(unit));
var monoidCanceler = {
  mempty: nonCanceler,
  Semigroup0: function() {
    return semigroupCanceler;
  }
};

// output/Foreign/foreign.js
function typeOf(value) {
  return typeof value;
}
function tagOf(value) {
  return Object.prototype.toString.call(value).slice(8, -1);
}
var isArray = Array.isArray || function(value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

// output/Data.Int/foreign.js
var fromNumberImpl = function(just) {
  return function(nothing) {
    return function(n) {
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};
var toNumber = function(n) {
  return n;
};
var fromStringAsImpl = function(just) {
  return function(nothing) {
    return function(radix) {
      var digits;
      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }
      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
      return function(s) {
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};
var toStringAs = function(radix) {
  return function(i) {
    return i.toString(radix);
  };
};

// output/Data.Number/foreign.js
var isFiniteImpl = isFinite;
function fromStringImpl(str, isFinite2, just, nothing) {
  var num = parseFloat(str);
  if (isFinite2(num)) {
    return just(num);
  } else {
    return nothing;
  }
}
var ceil = Math.ceil;
var floor = Math.floor;

// output/Data.Number/index.js
var fromString = function(str) {
  return fromStringImpl(str, isFiniteImpl, Just.create, Nothing.value);
};

// output/Data.Int/index.js
var top2 = /* @__PURE__ */ top(boundedInt);
var bottom2 = /* @__PURE__ */ bottom(boundedInt);
var hexadecimal = 16;
var fromStringAs = /* @__PURE__ */ function() {
  return fromStringAsImpl(Just.create)(Nothing.value);
}();
var fromString2 = /* @__PURE__ */ fromStringAs(10);
var fromNumber = /* @__PURE__ */ function() {
  return fromNumberImpl(Just.create)(Nothing.value);
}();
var unsafeClamp = function(x) {
  if (!isFiniteImpl(x)) {
    return 0;
  }
  ;
  if (x >= toNumber(top2)) {
    return top2;
  }
  ;
  if (x <= toNumber(bottom2)) {
    return bottom2;
  }
  ;
  if (otherwise) {
    return fromMaybe(0)(fromNumber(x));
  }
  ;
  throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [x.constructor.name]);
};
var floor2 = function($39) {
  return unsafeClamp(floor($39));
};
var ceil2 = function($40) {
  return unsafeClamp(ceil($40));
};

// output/Data.List.Internal/index.js
var Leaf = /* @__PURE__ */ function() {
  function Leaf3() {
  }
  ;
  Leaf3.value = new Leaf3();
  return Leaf3;
}();
var Two = /* @__PURE__ */ function() {
  function Two3(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  Two3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new Two3(value0, value1, value2);
      };
    };
  };
  return Two3;
}();
var Three = /* @__PURE__ */ function() {
  function Three3(value0, value1, value2, value3, value4) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }
  ;
  Three3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return function(value4) {
            return new Three3(value0, value1, value2, value3, value4);
          };
        };
      };
    };
  };
  return Three3;
}();
var TwoLeft = /* @__PURE__ */ function() {
  function TwoLeft3(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TwoLeft3.create = function(value0) {
    return function(value1) {
      return new TwoLeft3(value0, value1);
    };
  };
  return TwoLeft3;
}();
var TwoRight = /* @__PURE__ */ function() {
  function TwoRight3(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TwoRight3.create = function(value0) {
    return function(value1) {
      return new TwoRight3(value0, value1);
    };
  };
  return TwoRight3;
}();
var ThreeLeft = /* @__PURE__ */ function() {
  function ThreeLeft3(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  ThreeLeft3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new ThreeLeft3(value0, value1, value2, value3);
        };
      };
    };
  };
  return ThreeLeft3;
}();
var ThreeMiddle = /* @__PURE__ */ function() {
  function ThreeMiddle3(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  ThreeMiddle3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new ThreeMiddle3(value0, value1, value2, value3);
        };
      };
    };
  };
  return ThreeMiddle3;
}();
var ThreeRight = /* @__PURE__ */ function() {
  function ThreeRight3(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  ThreeRight3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new ThreeRight3(value0, value1, value2, value3);
        };
      };
    };
  };
  return ThreeRight3;
}();
var KickUp = /* @__PURE__ */ function() {
  function KickUp3(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  KickUp3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new KickUp3(value0, value1, value2);
      };
    };
  };
  return KickUp3;
}();
var fromZipper = function($copy_v) {
  return function($copy_v1) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v, v1) {
      if (v instanceof Nil) {
        $tco_done = true;
        return v1;
      }
      ;
      if (v instanceof Cons) {
        if (v.value0 instanceof TwoLeft) {
          $tco_var_v = v.value1;
          $copy_v1 = new Two(v1, v.value0.value0, v.value0.value1);
          return;
        }
        ;
        if (v.value0 instanceof TwoRight) {
          $tco_var_v = v.value1;
          $copy_v1 = new Two(v.value0.value0, v.value0.value1, v1);
          return;
        }
        ;
        if (v.value0 instanceof ThreeLeft) {
          $tco_var_v = v.value1;
          $copy_v1 = new Three(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3);
          return;
        }
        ;
        if (v.value0 instanceof ThreeMiddle) {
          $tco_var_v = v.value1;
          $copy_v1 = new Three(v.value0.value0, v.value0.value1, v1, v.value0.value2, v.value0.value3);
          return;
        }
        ;
        if (v.value0 instanceof ThreeRight) {
          $tco_var_v = v.value1;
          $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Data.List.Internal (line 25, column 3 - line 30, column 76): " + [v.value0.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Data.List.Internal (line 22, column 1 - line 22, column 63): " + [v.constructor.name, v1.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_v1);
    }
    ;
    return $tco_result;
  };
};
var insertAndLookupBy = function(comp) {
  return function(k) {
    return function(orig) {
      var up = function($copy_v) {
        return function($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, v1) {
            if (v instanceof Nil) {
              $tco_done = true;
              return new Two(v1.value0, v1.value1, v1.value2);
            }
            ;
            if (v instanceof Cons) {
              if (v.value0 instanceof TwoLeft) {
                $tco_done = true;
                return fromZipper(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v.value0.value0, v.value0.value1));
              }
              ;
              if (v.value0 instanceof TwoRight) {
                $tco_done = true;
                return fromZipper(v.value1)(new Three(v.value0.value0, v.value0.value1, v1.value0, v1.value1, v1.value2));
              }
              ;
              if (v.value0 instanceof ThreeLeft) {
                $tco_var_v = v.value1;
                $copy_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2), v.value0.value0, new Two(v.value0.value1, v.value0.value2, v.value0.value3));
                return;
              }
              ;
              if (v.value0 instanceof ThreeMiddle) {
                $tco_var_v = v.value1;
                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v1.value0), v1.value1, new Two(v1.value2, v.value0.value2, v.value0.value3));
                return;
              }
              ;
              if (v.value0 instanceof ThreeRight) {
                $tco_var_v = v.value1;
                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2), v.value0.value3, new Two(v1.value0, v1.value1, v1.value2));
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.List.Internal (line 58, column 5 - line 63, column 90): " + [v.value0.constructor.name, v1.constructor.name]);
            }
            ;
            throw new Error("Failed pattern match at Data.List.Internal (line 55, column 3 - line 55, column 50): " + [v.constructor.name, v1.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }
          ;
          return $tco_result;
        };
      };
      var down = function($copy_v) {
        return function($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(v, v1) {
            if (v1 instanceof Leaf) {
              $tco_done1 = true;
              return {
                found: false,
                result: up(v)(new KickUp(Leaf.value, k, Leaf.value))
              };
            }
            ;
            if (v1 instanceof Two) {
              var v2 = comp(k)(v1.value1);
              if (v2 instanceof EQ) {
                $tco_done1 = true;
                return {
                  found: true,
                  result: orig
                };
              }
              ;
              if (v2 instanceof LT) {
                $tco_var_v = new Cons(new TwoLeft(v1.value1, v1.value2), v);
                $copy_v1 = v1.value0;
                return;
              }
              ;
              $tco_var_v = new Cons(new TwoRight(v1.value0, v1.value1), v);
              $copy_v1 = v1.value2;
              return;
            }
            ;
            if (v1 instanceof Three) {
              var v2 = comp(k)(v1.value1);
              if (v2 instanceof EQ) {
                $tco_done1 = true;
                return {
                  found: true,
                  result: orig
                };
              }
              ;
              var v3 = comp(k)(v1.value3);
              if (v3 instanceof EQ) {
                $tco_done1 = true;
                return {
                  found: true,
                  result: orig
                };
              }
              ;
              if (v2 instanceof LT) {
                $tco_var_v = new Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4), v);
                $copy_v1 = v1.value0;
                return;
              }
              ;
              if (v2 instanceof GT && v3 instanceof LT) {
                $tco_var_v = new Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value3, v1.value4), v);
                $copy_v1 = v1.value2;
                return;
              }
              ;
              $tco_var_v = new Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3), v);
              $copy_v1 = v1.value4;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Internal (line 38, column 3 - line 38, column 81): " + [v.constructor.name, v1.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }
          ;
          return $tco_result;
        };
      };
      return down(Nil.value)(orig);
    };
  };
};
var emptySet = /* @__PURE__ */ function() {
  return Leaf.value;
}();

// output/Data.List/index.js
var map7 = /* @__PURE__ */ map(functorMaybe);
var eq3 = /* @__PURE__ */ eq(eqOrdering);
var notEq2 = /* @__PURE__ */ notEq(eqOrdering);
var identity10 = /* @__PURE__ */ identity(categoryFn);
var uncons = function(v) {
  if (v instanceof Nil) {
    return Nothing.value;
  }
  ;
  if (v instanceof Cons) {
    return new Just({
      head: v.value0,
      tail: v.value1
    });
  }
  ;
  throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
};
var toUnfoldable = function(dictUnfoldable) {
  return unfoldr(dictUnfoldable)(function(xs) {
    return map7(function(rec) {
      return new Tuple(rec.head, rec.tail);
    })(uncons(xs));
  });
};
var singleton3 = function(a) {
  return new Cons(a, Nil.value);
};
var sortBy = function(cmp) {
  var merge = function(v) {
    return function(v1) {
      if (v instanceof Cons && v1 instanceof Cons) {
        if (eq3(cmp(v.value0)(v1.value0))(GT.value)) {
          return new Cons(v1.value0, merge(v)(v1.value1));
        }
        ;
        if (otherwise) {
          return new Cons(v.value0, merge(v.value1)(v1));
        }
        ;
      }
      ;
      if (v instanceof Nil) {
        return v1;
      }
      ;
      if (v1 instanceof Nil) {
        return v;
      }
      ;
      throw new Error("Failed pattern match at Data.List (line 466, column 3 - line 466, column 38): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var mergePairs = function(v) {
    if (v instanceof Cons && v.value1 instanceof Cons) {
      return new Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
    }
    ;
    return v;
  };
  var mergeAll = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      if (v instanceof Cons && v.value1 instanceof Nil) {
        $tco_done = true;
        return v.value0;
      }
      ;
      $copy_v = mergePairs(v);
      return;
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var sequences = function(v) {
    if (v instanceof Cons && v.value1 instanceof Cons) {
      if (eq3(cmp(v.value0)(v.value1.value0))(GT.value)) {
        return descending(v.value1.value0)(singleton3(v.value0))(v.value1.value1);
      }
      ;
      if (otherwise) {
        return ascending(v.value1.value0)(function(v1) {
          return new Cons(v.value0, v1);
        })(v.value1.value1);
      }
      ;
    }
    ;
    return singleton3(v);
  };
  var descending = function($copy_v) {
    return function($copy_v1) {
      return function($copy_v2) {
        var $tco_var_v = $copy_v;
        var $tco_var_v1 = $copy_v1;
        var $tco_done1 = false;
        var $tco_result;
        function $tco_loop(v, v1, v2) {
          if (v2 instanceof Cons && eq3(cmp(v)(v2.value0))(GT.value)) {
            $tco_var_v = v2.value0;
            $tco_var_v1 = new Cons(v, v1);
            $copy_v2 = v2.value1;
            return;
          }
          ;
          $tco_done1 = true;
          return new Cons(new Cons(v, v1), sequences(v2));
        }
        ;
        while (!$tco_done1) {
          $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
        }
        ;
        return $tco_result;
      };
    };
  };
  var ascending = function($copy_v) {
    return function($copy_v1) {
      return function($copy_v2) {
        var $tco_var_v = $copy_v;
        var $tco_var_v1 = $copy_v1;
        var $tco_done2 = false;
        var $tco_result;
        function $tco_loop(v, v1, v2) {
          if (v2 instanceof Cons && notEq2(cmp(v)(v2.value0))(GT.value)) {
            $tco_var_v = v2.value0;
            $tco_var_v1 = function(ys) {
              return v1(new Cons(v, ys));
            };
            $copy_v2 = v2.value1;
            return;
          }
          ;
          $tco_done2 = true;
          return new Cons(v1(singleton3(v)), sequences(v2));
        }
        ;
        while (!$tco_done2) {
          $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
        }
        ;
        return $tco_result;
      };
    };
  };
  return function($444) {
    return mergeAll(sequences($444));
  };
};
var sort = function(dictOrd) {
  var compare78 = compare(dictOrd);
  return function(xs) {
    return sortBy(compare78)(xs);
  };
};
var reverse = /* @__PURE__ */ function() {
  var go = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v1 instanceof Nil) {
          $tco_done = true;
          return v;
        }
        ;
        if (v1 instanceof Cons) {
          $tco_var_v = new Cons(v1.value0, v);
          $copy_v1 = v1.value1;
          return;
        }
        ;
        throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  return go(Nil.value);
}();
var nubBy = function(p) {
  var go = function($copy_v) {
    return function($copy_v1) {
      return function($copy_v2) {
        var $tco_var_v = $copy_v;
        var $tco_var_v1 = $copy_v1;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1, v2) {
          if (v2 instanceof Nil) {
            $tco_done = true;
            return v1;
          }
          ;
          if (v2 instanceof Cons) {
            var v3 = insertAndLookupBy(p)(v2.value0)(v);
            if (v3.found) {
              $tco_var_v = v3.result;
              $tco_var_v1 = v1;
              $copy_v2 = v2.value1;
              return;
            }
            ;
            $tco_var_v = v3.result;
            $tco_var_v1 = new Cons(v2.value0, v1);
            $copy_v2 = v2.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 673, column 5 - line 673, column 23): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
        }
        ;
        return $tco_result;
      };
    };
  };
  var $445 = go(emptySet)(Nil.value);
  return function($446) {
    return reverse($445($446));
  };
};
var nub = function(dictOrd) {
  return nubBy(compare(dictOrd));
};
var mapMaybe = function(f) {
  var go = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v1 instanceof Nil) {
          $tco_done = true;
          return reverse(v);
        }
        ;
        if (v1 instanceof Cons) {
          var v2 = f(v1.value0);
          if (v2 instanceof Nothing) {
            $tco_var_v = v;
            $copy_v1 = v1.value1;
            return;
          }
          ;
          if (v2 instanceof Just) {
            $tco_var_v = new Cons(v2.value0, v);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): " + [v2.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  return go(Nil.value);
};
var fromFoldable = function(dictFoldable) {
  return foldr(dictFoldable)(Cons.create)(Nil.value);
};
var filter = function(p) {
  var go = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v1 instanceof Nil) {
          $tco_done = true;
          return reverse(v);
        }
        ;
        if (v1 instanceof Cons) {
          if (p(v1.value0)) {
            $tco_var_v = new Cons(v1.value0, v);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          if (otherwise) {
            $tco_var_v = v;
            $copy_v1 = v1.value1;
            return;
          }
          ;
        }
        ;
        throw new Error("Failed pattern match at Data.List (line 390, column 3 - line 390, column 27): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  return go(Nil.value);
};
var catMaybes = /* @__PURE__ */ mapMaybe(identity10);

// output/Data.List.NonEmpty/index.js
var singleton4 = /* @__PURE__ */ function() {
  var $200 = singleton2(plusList);
  return function($201) {
    return NonEmptyList($200($201));
  };
}();
var cons = function(y) {
  return function(v) {
    return new NonEmpty(y, new Cons(v.value0, v.value1));
  };
};

// output/Data.String.CodeUnits/foreign.js
var singleton5 = function(c) {
  return c;
};
var _charAt = function(just) {
  return function(nothing) {
    return function(i) {
      return function(s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};
var length2 = function(s) {
  return s.length;
};
var _indexOfStartingAt = function(just) {
  return function(nothing) {
    return function(x) {
      return function(startAt) {
        return function(s) {
          if (startAt < 0 || startAt > s.length)
            return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};
var _lastIndexOf = function(just) {
  return function(nothing) {
    return function(x) {
      return function(s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};
var take2 = function(n) {
  return function(s) {
    return s.substr(0, n);
  };
};
var drop2 = function(n) {
  return function(s) {
    return s.substring(n);
  };
};
var splitAt = function(i) {
  return function(s) {
    return { before: s.substring(0, i), after: s.substring(i) };
  };
};

// output/Data.String.Unsafe/foreign.js
var charAt = function(i) {
  return function(s) {
    if (i >= 0 && i < s.length)
      return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

// output/Data.String.CodeUnits/index.js
var stripPrefix = function(v) {
  return function(str) {
    var v1 = splitAt(length2(v))(str);
    var $20 = v1.before === v;
    if ($20) {
      return new Just(v1.after);
    }
    ;
    return Nothing.value;
  };
};
var lastIndexOf = /* @__PURE__ */ function() {
  return _lastIndexOf(Just.create)(Nothing.value);
}();
var indexOf$prime = /* @__PURE__ */ function() {
  return _indexOfStartingAt(Just.create)(Nothing.value);
}();
var dropRight = function(i) {
  return function(s) {
    return take2(length2(s) - i | 0)(s);
  };
};
var charAt2 = /* @__PURE__ */ function() {
  return _charAt(Just.create)(Nothing.value);
}();

// output/Foreign/index.js
var TypeMismatch = /* @__PURE__ */ function() {
  function TypeMismatch3(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TypeMismatch3.create = function(value0) {
    return function(value1) {
      return new TypeMismatch3(value0, value1);
    };
  };
  return TypeMismatch3;
}();
var unsafeToForeign = unsafeCoerce2;
var unsafeFromForeign = unsafeCoerce2;
var fail = function(dictMonad) {
  var $153 = throwError(monadThrowExceptT(dictMonad));
  return function($154) {
    return $153(singleton4($154));
  };
};
var unsafeReadTagged = function(dictMonad) {
  var pure17 = pure(applicativeExceptT(dictMonad));
  var fail1 = fail(dictMonad);
  return function(tag) {
    return function(value) {
      if (tagOf(value) === tag) {
        return pure17(unsafeFromForeign(value));
      }
      ;
      if (otherwise) {
        return fail1(new TypeMismatch(tag, tagOf(value)));
      }
      ;
      throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [tag.constructor.name, value.constructor.name]);
    };
  };
};
var readString = function(dictMonad) {
  return unsafeReadTagged(dictMonad)("String");
};

// output/Control.Promise/index.js
var voidRight2 = /* @__PURE__ */ voidRight(functorEffect);
var mempty2 = /* @__PURE__ */ mempty(monoidCanceler);
var identity11 = /* @__PURE__ */ identity(categoryFn);
var alt2 = /* @__PURE__ */ alt(/* @__PURE__ */ altExceptT(semigroupNonEmptyList)(monadIdentity));
var unsafeReadTagged2 = /* @__PURE__ */ unsafeReadTagged(monadIdentity);
var map8 = /* @__PURE__ */ map(/* @__PURE__ */ functorExceptT(functorIdentity));
var readString2 = /* @__PURE__ */ readString(monadIdentity);
var toAff$prime = function(customCoerce) {
  return function(p) {
    return makeAff(function(cb) {
      return voidRight2(mempty2)(thenImpl(p)(function($14) {
        return cb(Left.create(customCoerce($14)))();
      })(function($15) {
        return cb(Right.create($15))();
      }));
    });
  };
};
var fromAff = function(aff) {
  return promise(function(succ) {
    return function(err) {
      return runAff_(either(err)(succ))(aff);
    };
  });
};
var coerce3 = function(fn) {
  return either(function(v) {
    return error("Promise failed, couldn't extract JS Error or String");
  })(identity11)(runExcept(alt2(unsafeReadTagged2("Error")(fn))(map8(error)(readString2(fn)))));
};
var toAff = /* @__PURE__ */ toAff$prime(coerce3);

// output/Data.Function.Uncurried/foreign.js
var mkFn2 = function(fn) {
  return function(a, b) {
    return fn(a)(b);
  };
};
var runFn4 = function(fn) {
  return function(a) {
    return function(b) {
      return function(c) {
        return function(d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

// output/Data.Lazy/foreign.js
var defer2 = function(thunk) {
  var v = null;
  return function() {
    if (thunk === void 0)
      return v;
    v = thunk();
    thunk = void 0;
    return v;
  };
};
var force = function(l) {
  return l();
};

// output/Data.Map.Internal/index.js
var identity12 = /* @__PURE__ */ identity(categoryFn);
var Leaf2 = /* @__PURE__ */ function() {
  function Leaf3() {
  }
  ;
  Leaf3.value = new Leaf3();
  return Leaf3;
}();
var Two2 = /* @__PURE__ */ function() {
  function Two3(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  Two3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new Two3(value0, value1, value2, value3);
        };
      };
    };
  };
  return Two3;
}();
var Three2 = /* @__PURE__ */ function() {
  function Three3(value0, value1, value2, value3, value4, value5, value6) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }
  ;
  Three3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return function(value4) {
            return function(value5) {
              return function(value6) {
                return new Three3(value0, value1, value2, value3, value4, value5, value6);
              };
            };
          };
        };
      };
    };
  };
  return Three3;
}();
var TwoLeft2 = /* @__PURE__ */ function() {
  function TwoLeft3(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  TwoLeft3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new TwoLeft3(value0, value1, value2);
      };
    };
  };
  return TwoLeft3;
}();
var TwoRight2 = /* @__PURE__ */ function() {
  function TwoRight3(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  TwoRight3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new TwoRight3(value0, value1, value2);
      };
    };
  };
  return TwoRight3;
}();
var ThreeLeft2 = /* @__PURE__ */ function() {
  function ThreeLeft3(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }
  ;
  ThreeLeft3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return function(value4) {
            return function(value5) {
              return new ThreeLeft3(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };
  return ThreeLeft3;
}();
var ThreeMiddle2 = /* @__PURE__ */ function() {
  function ThreeMiddle3(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }
  ;
  ThreeMiddle3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return function(value4) {
            return function(value5) {
              return new ThreeMiddle3(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };
  return ThreeMiddle3;
}();
var ThreeRight2 = /* @__PURE__ */ function() {
  function ThreeRight3(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }
  ;
  ThreeRight3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return function(value4) {
            return function(value5) {
              return new ThreeRight3(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };
  return ThreeRight3;
}();
var KickUp2 = /* @__PURE__ */ function() {
  function KickUp3(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  KickUp3.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new KickUp3(value0, value1, value2, value3);
        };
      };
    };
  };
  return KickUp3;
}();
var singleton6 = function(k) {
  return function(v) {
    return new Two2(Leaf2.value, k, v, Leaf2.value);
  };
};
var toUnfoldable2 = function(dictUnfoldable) {
  var unfoldr3 = unfoldr(dictUnfoldable);
  return function(m) {
    var go = function($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
        if (v instanceof Nil) {
          $tco_done = true;
          return Nothing.value;
        }
        ;
        if (v instanceof Cons) {
          if (v.value0 instanceof Leaf2) {
            $copy_v = v.value1;
            return;
          }
          ;
          if (v.value0 instanceof Two2 && (v.value0.value0 instanceof Leaf2 && v.value0.value3 instanceof Leaf2)) {
            $tco_done = true;
            return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), v.value1));
          }
          ;
          if (v.value0 instanceof Two2 && v.value0.value0 instanceof Leaf2) {
            $tco_done = true;
            return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), new Cons(v.value0.value3, v.value1)));
          }
          ;
          if (v.value0 instanceof Two2) {
            $copy_v = new Cons(v.value0.value0, new Cons(singleton6(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, v.value1)));
            return;
          }
          ;
          if (v.value0 instanceof Three2) {
            $copy_v = new Cons(v.value0.value0, new Cons(singleton6(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, new Cons(singleton6(v.value0.value4)(v.value0.value5), new Cons(v.value0.value6, v.value1)))));
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 624, column 18 - line 633, column 71): " + [v.value0.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 623, column 3 - line 623, column 19): " + [v.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    return unfoldr3(go)(new Cons(m, Nil.value));
  };
};
var lookup = function(dictOrd) {
  var compare78 = compare(dictOrd);
  return function(k) {
    var go = function($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
        if (v instanceof Leaf2) {
          $tco_done = true;
          return Nothing.value;
        }
        ;
        if (v instanceof Two2) {
          var v2 = compare78(k)(v.value1);
          if (v2 instanceof EQ) {
            $tco_done = true;
            return new Just(v.value2);
          }
          ;
          if (v2 instanceof LT) {
            $copy_v = v.value0;
            return;
          }
          ;
          $copy_v = v.value3;
          return;
        }
        ;
        if (v instanceof Three2) {
          var v3 = compare78(k)(v.value1);
          if (v3 instanceof EQ) {
            $tco_done = true;
            return new Just(v.value2);
          }
          ;
          var v4 = compare78(k)(v.value4);
          if (v4 instanceof EQ) {
            $tco_done = true;
            return new Just(v.value5);
          }
          ;
          if (v3 instanceof LT) {
            $copy_v = v.value0;
            return;
          }
          ;
          if (v4 instanceof GT) {
            $copy_v = v.value6;
            return;
          }
          ;
          $copy_v = v.value3;
          return;
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): " + [v.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    return go;
  };
};
var member = function(dictOrd) {
  var lookup12 = lookup(dictOrd);
  return function(k) {
    return function(m) {
      return isJust(lookup12(k)(m));
    };
  };
};
var functorMap = {
  map: function(v) {
    return function(v1) {
      if (v1 instanceof Leaf2) {
        return Leaf2.value;
      }
      ;
      if (v1 instanceof Two2) {
        return new Two2(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3));
      }
      ;
      if (v1 instanceof Three2) {
        return new Three2(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), map(functorMap)(v)(v1.value6));
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 116, column 1 - line 119, column 110): " + [v.constructor.name, v1.constructor.name]);
    };
  }
};
var fromZipper2 = function($copy_dictOrd) {
  return function($copy_v) {
    return function($copy_v1) {
      var $tco_var_dictOrd = $copy_dictOrd;
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(dictOrd, v, v1) {
        if (v instanceof Nil) {
          $tco_done = true;
          return v1;
        }
        ;
        if (v instanceof Cons) {
          if (v.value0 instanceof TwoLeft2) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_v1 = new Two2(v1, v.value0.value0, v.value0.value1, v.value0.value2);
            return;
          }
          ;
          if (v.value0 instanceof TwoRight2) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_v1 = new Two2(v.value0.value0, v.value0.value1, v.value0.value2, v1);
            return;
          }
          ;
          if (v.value0 instanceof ThreeLeft2) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_v1 = new Three2(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
            return;
          }
          ;
          if (v.value0 instanceof ThreeMiddle2) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_v1 = new Three2(v.value0.value0, v.value0.value1, v.value0.value2, v1, v.value0.value3, v.value0.value4, v.value0.value5);
            return;
          }
          ;
          if (v.value0 instanceof ThreeRight2) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_v1 = new Three2(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, v1);
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 462, column 3 - line 467, column 88): " + [v.value0.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 459, column 1 - line 459, column 80): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
};
var insert = function(dictOrd) {
  var fromZipper1 = fromZipper2(dictOrd);
  var compare78 = compare(dictOrd);
  return function(k) {
    return function(v) {
      var up = function($copy_v1) {
        return function($copy_v2) {
          var $tco_var_v1 = $copy_v1;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v1, v2) {
            if (v1 instanceof Nil) {
              $tco_done = true;
              return new Two2(v2.value0, v2.value1, v2.value2, v2.value3);
            }
            ;
            if (v1 instanceof Cons) {
              if (v1.value0 instanceof TwoLeft2) {
                $tco_done = true;
                return fromZipper1(v1.value1)(new Three2(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
              }
              ;
              if (v1.value0 instanceof TwoRight2) {
                $tco_done = true;
                return fromZipper1(v1.value1)(new Three2(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
              }
              ;
              if (v1.value0 instanceof ThreeLeft2) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = new KickUp2(new Two2(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two2(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                return;
              }
              ;
              if (v1.value0 instanceof ThreeMiddle2) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = new KickUp2(new Two2(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two2(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                return;
              }
              ;
              if (v1.value0 instanceof ThreeRight2) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = new KickUp2(new Two2(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two2(v2.value0, v2.value1, v2.value2, v2.value3));
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 5 - line 503, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 3 - line 495, column 56): " + [v1.constructor.name, v2.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v1, $copy_v2);
          }
          ;
          return $tco_result;
        };
      };
      var down = function($copy_v1) {
        return function($copy_v2) {
          var $tco_var_v1 = $copy_v1;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(v1, v2) {
            if (v2 instanceof Leaf2) {
              $tco_done1 = true;
              return up(v1)(new KickUp2(Leaf2.value, k, v, Leaf2.value));
            }
            ;
            if (v2 instanceof Two2) {
              var v3 = compare78(k)(v2.value1);
              if (v3 instanceof EQ) {
                $tco_done1 = true;
                return fromZipper1(v1)(new Two2(v2.value0, k, v, v2.value3));
              }
              ;
              if (v3 instanceof LT) {
                $tco_var_v1 = new Cons(new TwoLeft2(v2.value1, v2.value2, v2.value3), v1);
                $copy_v2 = v2.value0;
                return;
              }
              ;
              $tco_var_v1 = new Cons(new TwoRight2(v2.value0, v2.value1, v2.value2), v1);
              $copy_v2 = v2.value3;
              return;
            }
            ;
            if (v2 instanceof Three2) {
              var v3 = compare78(k)(v2.value1);
              if (v3 instanceof EQ) {
                $tco_done1 = true;
                return fromZipper1(v1)(new Three2(v2.value0, k, v, v2.value3, v2.value4, v2.value5, v2.value6));
              }
              ;
              var v4 = compare78(k)(v2.value4);
              if (v4 instanceof EQ) {
                $tco_done1 = true;
                return fromZipper1(v1)(new Three2(v2.value0, v2.value1, v2.value2, v2.value3, k, v, v2.value6));
              }
              ;
              if (v3 instanceof LT) {
                $tco_var_v1 = new Cons(new ThreeLeft2(v2.value1, v2.value2, v2.value3, v2.value4, v2.value5, v2.value6), v1);
                $copy_v2 = v2.value0;
                return;
              }
              ;
              if (v3 instanceof GT && v4 instanceof LT) {
                $tco_var_v1 = new Cons(new ThreeMiddle2(v2.value0, v2.value1, v2.value2, v2.value4, v2.value5, v2.value6), v1);
                $copy_v2 = v2.value3;
                return;
              }
              ;
              $tco_var_v1 = new Cons(new ThreeRight2(v2.value0, v2.value1, v2.value2, v2.value3, v2.value4, v2.value5), v1);
              $copy_v2 = v2.value6;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 478, column 3 - line 478, column 55): " + [v1.constructor.name, v2.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_v1, $copy_v2);
          }
          ;
          return $tco_result;
        };
      };
      return down(Nil.value);
    };
  };
};
var pop = function(dictOrd) {
  var fromZipper1 = fromZipper2(dictOrd);
  var compare78 = compare(dictOrd);
  return function(k) {
    var up = function($copy_ctxs) {
      return function($copy_tree) {
        var $tco_var_ctxs = $copy_ctxs;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(ctxs, tree) {
          if (ctxs instanceof Nil) {
            $tco_done = true;
            return tree;
          }
          ;
          if (ctxs instanceof Cons) {
            if (ctxs.value0 instanceof TwoLeft2 && (ctxs.value0.value2 instanceof Leaf2 && tree instanceof Leaf2)) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Two2(Leaf2.value, ctxs.value0.value0, ctxs.value0.value1, Leaf2.value));
            }
            ;
            if (ctxs.value0 instanceof TwoRight2 && (ctxs.value0.value0 instanceof Leaf2 && tree instanceof Leaf2)) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Two2(Leaf2.value, ctxs.value0.value1, ctxs.value0.value2, Leaf2.value));
            }
            ;
            if (ctxs.value0 instanceof TwoLeft2 && ctxs.value0.value2 instanceof Two2) {
              $tco_var_ctxs = ctxs.value1;
              $copy_tree = new Three2(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
              return;
            }
            ;
            if (ctxs.value0 instanceof TwoRight2 && ctxs.value0.value0 instanceof Two2) {
              $tco_var_ctxs = ctxs.value1;
              $copy_tree = new Three2(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
              return;
            }
            ;
            if (ctxs.value0 instanceof TwoLeft2 && ctxs.value0.value2 instanceof Three2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Two2(new Two2(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two2(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
            }
            ;
            if (ctxs.value0 instanceof TwoRight2 && ctxs.value0.value0 instanceof Three2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Two2(new Two2(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two2(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
            }
            ;
            if (ctxs.value0 instanceof ThreeLeft2 && (ctxs.value0.value2 instanceof Leaf2 && (ctxs.value0.value5 instanceof Leaf2 && tree instanceof Leaf2))) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Three2(Leaf2.value, ctxs.value0.value0, ctxs.value0.value1, Leaf2.value, ctxs.value0.value3, ctxs.value0.value4, Leaf2.value));
            }
            ;
            if (ctxs.value0 instanceof ThreeMiddle2 && (ctxs.value0.value0 instanceof Leaf2 && (ctxs.value0.value5 instanceof Leaf2 && tree instanceof Leaf2))) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Three2(Leaf2.value, ctxs.value0.value1, ctxs.value0.value2, Leaf2.value, ctxs.value0.value3, ctxs.value0.value4, Leaf2.value));
            }
            ;
            if (ctxs.value0 instanceof ThreeRight2 && (ctxs.value0.value0 instanceof Leaf2 && (ctxs.value0.value3 instanceof Leaf2 && tree instanceof Leaf2))) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Three2(Leaf2.value, ctxs.value0.value1, ctxs.value0.value2, Leaf2.value, ctxs.value0.value4, ctxs.value0.value5, Leaf2.value));
            }
            ;
            if (ctxs.value0 instanceof ThreeLeft2 && ctxs.value0.value2 instanceof Two2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Two2(new Three2(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }
            ;
            if (ctxs.value0 instanceof ThreeMiddle2 && ctxs.value0.value0 instanceof Two2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Two2(new Three2(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }
            ;
            if (ctxs.value0 instanceof ThreeMiddle2 && ctxs.value0.value5 instanceof Two2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Two2(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three2(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
            }
            ;
            if (ctxs.value0 instanceof ThreeRight2 && ctxs.value0.value3 instanceof Two2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Two2(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three2(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
            }
            ;
            if (ctxs.value0 instanceof ThreeLeft2 && ctxs.value0.value2 instanceof Three2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Three2(new Two2(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two2(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }
            ;
            if (ctxs.value0 instanceof ThreeMiddle2 && ctxs.value0.value0 instanceof Three2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Three2(new Two2(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two2(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }
            ;
            if (ctxs.value0 instanceof ThreeMiddle2 && ctxs.value0.value5 instanceof Three2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Three2(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two2(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two2(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
            }
            ;
            if (ctxs.value0 instanceof ThreeRight2 && ctxs.value0.value3 instanceof Three2) {
              $tco_done = true;
              return fromZipper1(ctxs.value1)(new Three2(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two2(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two2(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
            }
            ;
            $tco_done = true;
            return unsafeCrashWith("The impossible happened in partial function `up`.");
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 552, column 5 - line 573, column 86): " + [ctxs.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
        }
        ;
        return $tco_result;
      };
    };
    var removeMaxNode = function($copy_ctx) {
      return function($copy_m) {
        var $tco_var_ctx = $copy_ctx;
        var $tco_done1 = false;
        var $tco_result;
        function $tco_loop(ctx, m) {
          if (m instanceof Two2 && (m.value0 instanceof Leaf2 && m.value3 instanceof Leaf2)) {
            $tco_done1 = true;
            return up(ctx)(Leaf2.value);
          }
          ;
          if (m instanceof Two2) {
            $tco_var_ctx = new Cons(new TwoRight2(m.value0, m.value1, m.value2), ctx);
            $copy_m = m.value3;
            return;
          }
          ;
          if (m instanceof Three2 && (m.value0 instanceof Leaf2 && (m.value3 instanceof Leaf2 && m.value6 instanceof Leaf2))) {
            $tco_done1 = true;
            return up(new Cons(new TwoRight2(Leaf2.value, m.value1, m.value2), ctx))(Leaf2.value);
          }
          ;
          if (m instanceof Three2) {
            $tco_var_ctx = new Cons(new ThreeRight2(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
            $copy_m = m.value6;
            return;
          }
          ;
          $tco_done1 = true;
          return unsafeCrashWith("The impossible happened in partial function `removeMaxNode`.");
        }
        ;
        while (!$tco_done1) {
          $tco_result = $tco_loop($tco_var_ctx, $copy_m);
        }
        ;
        return $tco_result;
      };
    };
    var maxNode = function($copy_m) {
      var $tco_done2 = false;
      var $tco_result;
      function $tco_loop(m) {
        if (m instanceof Two2 && m.value3 instanceof Leaf2) {
          $tco_done2 = true;
          return {
            key: m.value1,
            value: m.value2
          };
        }
        ;
        if (m instanceof Two2) {
          $copy_m = m.value3;
          return;
        }
        ;
        if (m instanceof Three2 && m.value6 instanceof Leaf2) {
          $tco_done2 = true;
          return {
            key: m.value4,
            value: m.value5
          };
        }
        ;
        if (m instanceof Three2) {
          $copy_m = m.value6;
          return;
        }
        ;
        $tco_done2 = true;
        return unsafeCrashWith("The impossible happened in partial function `maxNode`.");
      }
      ;
      while (!$tco_done2) {
        $tco_result = $tco_loop($copy_m);
      }
      ;
      return $tco_result;
    };
    var down = function($copy_ctx) {
      return function($copy_m) {
        var $tco_var_ctx = $copy_ctx;
        var $tco_done3 = false;
        var $tco_result;
        function $tco_loop(ctx, m) {
          if (m instanceof Leaf2) {
            $tco_done3 = true;
            return Nothing.value;
          }
          ;
          if (m instanceof Two2) {
            var v = compare78(k)(m.value1);
            if (m.value3 instanceof Leaf2 && v instanceof EQ) {
              $tco_done3 = true;
              return new Just(new Tuple(m.value2, up(ctx)(Leaf2.value)));
            }
            ;
            if (v instanceof EQ) {
              var max6 = maxNode(m.value0);
              $tco_done3 = true;
              return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new TwoLeft2(max6.key, max6.value, m.value3), ctx))(m.value0)));
            }
            ;
            if (v instanceof LT) {
              $tco_var_ctx = new Cons(new TwoLeft2(m.value1, m.value2, m.value3), ctx);
              $copy_m = m.value0;
              return;
            }
            ;
            $tco_var_ctx = new Cons(new TwoRight2(m.value0, m.value1, m.value2), ctx);
            $copy_m = m.value3;
            return;
          }
          ;
          if (m instanceof Three2) {
            var leaves = function() {
              if (m.value0 instanceof Leaf2 && (m.value3 instanceof Leaf2 && m.value6 instanceof Leaf2)) {
                return true;
              }
              ;
              return false;
            }();
            var v = compare78(k)(m.value4);
            var v3 = compare78(k)(m.value1);
            if (leaves && v3 instanceof EQ) {
              $tco_done3 = true;
              return new Just(new Tuple(m.value2, fromZipper1(ctx)(new Two2(Leaf2.value, m.value4, m.value5, Leaf2.value))));
            }
            ;
            if (leaves && v instanceof EQ) {
              $tco_done3 = true;
              return new Just(new Tuple(m.value5, fromZipper1(ctx)(new Two2(Leaf2.value, m.value1, m.value2, Leaf2.value))));
            }
            ;
            if (v3 instanceof EQ) {
              var max6 = maxNode(m.value0);
              $tco_done3 = true;
              return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new ThreeLeft2(max6.key, max6.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
            }
            ;
            if (v instanceof EQ) {
              var max6 = maxNode(m.value3);
              $tco_done3 = true;
              return new Just(new Tuple(m.value5, removeMaxNode(new Cons(new ThreeMiddle2(m.value0, m.value1, m.value2, max6.key, max6.value, m.value6), ctx))(m.value3)));
            }
            ;
            if (v3 instanceof LT) {
              $tco_var_ctx = new Cons(new ThreeLeft2(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
              $copy_m = m.value0;
              return;
            }
            ;
            if (v3 instanceof GT && v instanceof LT) {
              $tco_var_ctx = new Cons(new ThreeMiddle2(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
              $copy_m = m.value3;
              return;
            }
            ;
            $tco_var_ctx = new Cons(new ThreeRight2(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
            $copy_m = m.value6;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 16 - line 548, column 80): " + [m.constructor.name]);
        }
        ;
        while (!$tco_done3) {
          $tco_result = $tco_loop($tco_var_ctx, $copy_m);
        }
        ;
        return $tco_result;
      };
    };
    return down(Nil.value);
  };
};
var foldableMap = {
  foldr: function(f) {
    return function(z) {
      return function(m) {
        if (m instanceof Leaf2) {
          return z;
        }
        ;
        if (m instanceof Two2) {
          return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(z)(m.value3)))(m.value0);
        }
        ;
        if (m instanceof Three2) {
          return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(f(m.value5)(foldr(foldableMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 133, column 17 - line 136, column 85): " + [m.constructor.name]);
      };
    };
  },
  foldl: function(f) {
    return function(z) {
      return function(m) {
        if (m instanceof Leaf2) {
          return z;
        }
        ;
        if (m instanceof Two2) {
          return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3);
        }
        ;
        if (m instanceof Three2) {
          return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 137, column 17 - line 140, column 85): " + [m.constructor.name]);
      };
    };
  },
  foldMap: function(dictMonoid) {
    var mempty11 = mempty(dictMonoid);
    var append25 = append(dictMonoid.Semigroup0());
    return function(f) {
      return function(m) {
        if (m instanceof Leaf2) {
          return mempty11;
        }
        ;
        if (m instanceof Two2) {
          return append25(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append25(f(m.value2))(foldMap(foldableMap)(dictMonoid)(f)(m.value3)));
        }
        ;
        if (m instanceof Three2) {
          return append25(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append25(f(m.value2))(append25(foldMap(foldableMap)(dictMonoid)(f)(m.value3))(append25(f(m.value5))(foldMap(foldableMap)(dictMonoid)(f)(m.value6)))));
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 141, column 17 - line 144, column 93): " + [m.constructor.name]);
      };
    };
  }
};
var foldableWithIndexMap = {
  foldrWithIndex: function(f) {
    return function(z) {
      return function(m) {
        if (m instanceof Leaf2) {
          return z;
        }
        ;
        if (m instanceof Two2) {
          return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value3)))(m.value0);
        }
        ;
        if (m instanceof Three2) {
          return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(f(m.value4)(m.value5)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 147, column 26 - line 150, column 120): " + [m.constructor.name]);
      };
    };
  },
  foldlWithIndex: function(f) {
    return function(z) {
      return function(m) {
        if (m instanceof Leaf2) {
          return z;
        }
        ;
        if (m instanceof Two2) {
          return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3);
        }
        ;
        if (m instanceof Three2) {
          return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value4)(foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 151, column 26 - line 154, column 120): " + [m.constructor.name]);
      };
    };
  },
  foldMapWithIndex: function(dictMonoid) {
    var mempty11 = mempty(dictMonoid);
    var append25 = append(dictMonoid.Semigroup0());
    return function(f) {
      return function(m) {
        if (m instanceof Leaf2) {
          return mempty11;
        }
        ;
        if (m instanceof Two2) {
          return append25(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append25(f(m.value1)(m.value2))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3)));
        }
        ;
        if (m instanceof Three2) {
          return append25(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append25(f(m.value1)(m.value2))(append25(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3))(append25(f(m.value4)(m.value5))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value6)))));
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 155, column 26 - line 158, column 128): " + [m.constructor.name]);
      };
    };
  },
  Foldable0: function() {
    return foldableMap;
  }
};
var foldrWithIndex2 = /* @__PURE__ */ foldrWithIndex(foldableWithIndexMap);
var keys = /* @__PURE__ */ function() {
  return foldrWithIndex2(function(k) {
    return function(v) {
      return function(acc) {
        return new Cons(k, acc);
      };
    };
  })(Nil.value);
}();
var traversableMap = {
  traverse: function(dictApplicative) {
    var pure17 = pure(dictApplicative);
    var Apply0 = dictApplicative.Apply0();
    var apply6 = apply2(Apply0);
    var map117 = map(Apply0.Functor0());
    return function(v) {
      return function(v1) {
        if (v1 instanceof Leaf2) {
          return pure17(Leaf2.value);
        }
        ;
        if (v1 instanceof Two2) {
          return apply6(apply6(apply6(map117(Two2.create)(traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(pure17(v1.value1)))(v(v1.value2)))(traverse(traversableMap)(dictApplicative)(v)(v1.value3));
        }
        ;
        if (v1 instanceof Three2) {
          return apply6(apply6(apply6(apply6(apply6(apply6(map117(Three2.create)(traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(pure17(v1.value1)))(v(v1.value2)))(traverse(traversableMap)(dictApplicative)(v)(v1.value3)))(pure17(v1.value4)))(v(v1.value5)))(traverse(traversableMap)(dictApplicative)(v)(v1.value6));
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 160, column 1 - line 175, column 31): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  },
  sequence: function(dictApplicative) {
    return traverse(traversableMap)(dictApplicative)(identity12);
  },
  Functor0: function() {
    return functorMap;
  },
  Foldable1: function() {
    return foldableMap;
  }
};
var empty2 = /* @__PURE__ */ function() {
  return Leaf2.value;
}();
var fromFoldable2 = function(dictOrd) {
  var insert12 = insert(dictOrd);
  return function(dictFoldable) {
    return foldl(dictFoldable)(function(m) {
      return function(v) {
        return insert12(v.value0)(v.value1)(m);
      };
    })(empty2);
  };
};
var fromFoldableWithIndex = function(dictOrd) {
  var insert12 = insert(dictOrd);
  return function(dictFoldableWithIndex) {
    return foldlWithIndex(dictFoldableWithIndex)(function(k) {
      return function(m) {
        return function(v) {
          return insert12(k)(v)(m);
        };
      };
    })(empty2);
  };
};
var $$delete = function(dictOrd) {
  var pop1 = pop(dictOrd);
  return function(k) {
    return function(m) {
      return maybe(m)(snd)(pop1(k)(m));
    };
  };
};
var alter = function(dictOrd) {
  var lookup12 = lookup(dictOrd);
  var delete1 = $$delete(dictOrd);
  var insert12 = insert(dictOrd);
  return function(f) {
    return function(k) {
      return function(m) {
        var v = f(lookup12(k)(m));
        if (v instanceof Nothing) {
          return delete1(k)(m);
        }
        ;
        if (v instanceof Just) {
          return insert12(k)(v.value0)(m);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 596, column 15 - line 598, column 25): " + [v.constructor.name]);
      };
    };
  };
};

// output/Data.Nullable/foreign.js
function nullable(a, r, f) {
  return a == null ? r : f(a);
}

// output/Data.Nullable/index.js
var toMaybe = function(n) {
  return nullable(n, Nothing.value, Just.create);
};

// output/Foreign.Object/foreign.js
function _copyST(m) {
  return function() {
    var r = {};
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }
    return r;
  };
}
var empty3 = {};
function runST(f) {
  return f();
}
function _fmapObject(m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }
  return m;
}
function _foldM(bind10) {
  return function(f) {
    return function(mz) {
      return function(m) {
        var acc = mz;
        function g(k2) {
          return function(z) {
            return f(z)(k2)(m[k2]);
          };
        }
        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind10(acc)(g(k));
          }
        }
        return acc;
      };
    };
  };
}
function _lookup(no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
}
function toArrayWithKey(f) {
  return function(m) {
    var r = [];
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }
    return r;
  };
}
var keys2 = Object.keys || toArrayWithKey(function(k) {
  return function() {
    return k;
  };
});

// output/Data.Array/foreign.js
var range2 = function(start) {
  return function(end) {
    var step3 = start > end ? -1 : 1;
    var result = new Array(step3 * (end - start) + 1);
    var i = start, n = 0;
    while (i !== end) {
      result[n++] = i;
      i += step3;
    }
    result[n] = i;
    return result;
  };
};
var replicateFill = function(count) {
  return function(value) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value);
  };
};
var replicatePolyfill = function(count) {
  return function(value) {
    var result = [];
    var n = 0;
    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }
    return result;
  };
};
var replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
var fromFoldableImpl = function() {
  function Cons3(head4, tail3) {
    this.head = head4;
    this.tail = tail3;
  }
  var emptyList = {};
  function curryCons(head4) {
    return function(tail3) {
      return new Cons3(head4, tail3);
    };
  }
  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;
    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }
    return result;
  }
  return function(foldr12) {
    return function(xs) {
      return listToArray(foldr12(curryCons)(emptyList)(xs));
    };
  };
}();
var length3 = function(xs) {
  return xs.length;
};
var unconsImpl = function(empty7) {
  return function(next2) {
    return function(xs) {
      return xs.length === 0 ? empty7({}) : next2(xs[0])(xs.slice(1));
    };
  };
};
var indexImpl = function(just) {
  return function(nothing) {
    return function(xs) {
      return function(i) {
        return i < 0 || i >= xs.length ? nothing : just(xs[i]);
      };
    };
  };
};
var findIndexImpl = function(just) {
  return function(nothing) {
    return function(f) {
      return function(xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i]))
            return just(i);
        }
        return nothing;
      };
    };
  };
};
var _updateAt = function(just) {
  return function(nothing) {
    return function(i) {
      return function(a) {
        return function(l) {
          if (i < 0 || i >= l.length)
            return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};
var filter3 = function(f) {
  return function(xs) {
    return xs.filter(f);
  };
};
var partition2 = function(f) {
  return function(xs) {
    var yes = [];
    var no = [];
    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x))
        yes.push(x);
      else
        no.push(x);
    }
    return { yes, no };
  };
};
var sortByImpl = function() {
  function mergeFromTo(compare78, fromOrdering, xs1, xs2, from3, to2) {
    var mid;
    var i;
    var j;
    var k;
    var x;
    var y;
    var c;
    mid = from3 + (to2 - from3 >> 1);
    if (mid - from3 > 1)
      mergeFromTo(compare78, fromOrdering, xs2, xs1, from3, mid);
    if (to2 - mid > 1)
      mergeFromTo(compare78, fromOrdering, xs2, xs1, mid, to2);
    i = from3;
    j = mid;
    k = from3;
    while (i < mid && j < to2) {
      x = xs2[i];
      y = xs2[j];
      c = fromOrdering(compare78(x)(y));
      if (c > 0) {
        xs1[k++] = y;
        ++j;
      } else {
        xs1[k++] = x;
        ++i;
      }
    }
    while (i < mid) {
      xs1[k++] = xs2[i++];
    }
    while (j < to2) {
      xs1[k++] = xs2[j++];
    }
  }
  return function(compare78) {
    return function(fromOrdering) {
      return function(xs) {
        var out;
        if (xs.length < 2)
          return xs;
        out = xs.slice(0);
        mergeFromTo(compare78, fromOrdering, out, xs.slice(0), 0, xs.length);
        return out;
      };
    };
  };
}();
var slice2 = function(s) {
  return function(e) {
    return function(l) {
      return l.slice(s, e);
    };
  };
};
var zipWith2 = function(f) {
  return function(xs) {
    return function(ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};
var all2 = function(p) {
  return function(xs) {
    var len = xs.length;
    for (var i = 0; i < len; i++) {
      if (!p(xs[i]))
        return false;
    }
    return true;
  };
};
var unsafeIndexImpl = function(xs) {
  return function(n) {
    return xs[n];
  };
};

// output/Data.Array.ST/foreign.js
function newSTArray() {
  return [];
}
var pushAll = function(as) {
  return function(xs) {
    return function() {
      return xs.push.apply(xs, as);
    };
  };
};
var unsafeFreeze = function(xs) {
  return function() {
    return xs;
  };
};
var unsafeThaw = function(xs) {
  return function() {
    return xs;
  };
};
function copyImpl(xs) {
  return function() {
    return xs.slice();
  };
}
var thaw = copyImpl;
var sortByImpl2 = function() {
  function mergeFromTo(compare78, fromOrdering, xs1, xs2, from3, to2) {
    var mid;
    var i;
    var j;
    var k;
    var x;
    var y;
    var c;
    mid = from3 + (to2 - from3 >> 1);
    if (mid - from3 > 1)
      mergeFromTo(compare78, fromOrdering, xs2, xs1, from3, mid);
    if (to2 - mid > 1)
      mergeFromTo(compare78, fromOrdering, xs2, xs1, mid, to2);
    i = from3;
    j = mid;
    k = from3;
    while (i < mid && j < to2) {
      x = xs2[i];
      y = xs2[j];
      c = fromOrdering(compare78(x)(y));
      if (c > 0) {
        xs1[k++] = y;
        ++j;
      } else {
        xs1[k++] = x;
        ++i;
      }
    }
    while (i < mid) {
      xs1[k++] = xs2[i++];
    }
    while (j < to2) {
      xs1[k++] = xs2[j++];
    }
  }
  return function(compare78) {
    return function(fromOrdering) {
      return function(xs) {
        return function() {
          if (xs.length < 2)
            return xs;
          mergeFromTo(compare78, fromOrdering, xs, xs.slice(0), 0, xs.length);
          return xs;
        };
      };
    };
  };
}();

// output/Data.Array.ST/index.js
var withArray = function(f) {
  return function(xs) {
    return function __do() {
      var result = thaw(xs)();
      f(result)();
      return unsafeFreeze(result)();
    };
  };
};
var push = function(a) {
  return pushAll([a]);
};

// output/Data.Array.ST.Iterator/index.js
var map9 = /* @__PURE__ */ map(functorST);
var not2 = /* @__PURE__ */ not(heytingAlgebraBoolean);
var $$void3 = /* @__PURE__ */ $$void(functorST);
var Iterator = /* @__PURE__ */ function() {
  function Iterator2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Iterator2.create = function(value0) {
    return function(value1) {
      return new Iterator2(value0, value1);
    };
  };
  return Iterator2;
}();
var next = function(v) {
  return function __do() {
    var i = read2(v.value1)();
    modify(function(v1) {
      return v1 + 1 | 0;
    })(v.value1)();
    return v.value0(i);
  };
};
var iterator = function(f) {
  return map9(Iterator.create(f))(newSTRef(0));
};
var iterate = function(iter) {
  return function(f) {
    return function __do() {
      var $$break3 = newSTRef(false)();
      while (map9(not2)(read2($$break3))()) {
        (function __do2() {
          var mx = next(iter)();
          if (mx instanceof Just) {
            return f(mx.value0)();
          }
          ;
          if (mx instanceof Nothing) {
            return $$void3(write2(true)($$break3))();
          }
          ;
          throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
        })();
      }
      ;
      return {};
    };
  };
};

// output/Data.Array/index.js
var map10 = /* @__PURE__ */ map(functorST);
var when2 = /* @__PURE__ */ when(applicativeST);
var $$void4 = /* @__PURE__ */ $$void(functorST);
var intercalate1 = /* @__PURE__ */ intercalate(foldableArray);
var apply4 = /* @__PURE__ */ apply2(applyMaybe);
var map1 = /* @__PURE__ */ map(functorMaybe);
var map22 = /* @__PURE__ */ map(functorArray);
var fromJust4 = /* @__PURE__ */ fromJust();
var notEq3 = /* @__PURE__ */ notEq(eqOrdering);
var foldMap12 = /* @__PURE__ */ foldMap(foldableArray);
var append2 = /* @__PURE__ */ append(semigroupArray);
var zip = /* @__PURE__ */ function() {
  return zipWith2(Tuple.create);
}();
var updateAt2 = /* @__PURE__ */ function() {
  return _updateAt(Just.create)(Nothing.value);
}();
var unsafeIndex = function() {
  return unsafeIndexImpl;
};
var uncons2 = /* @__PURE__ */ function() {
  return unconsImpl($$const(Nothing.value))(function(x) {
    return function(xs) {
      return new Just({
        head: x,
        tail: xs
      });
    };
  });
}();
var tail = /* @__PURE__ */ function() {
  return unconsImpl($$const(Nothing.value))(function(v) {
    return function(xs) {
      return new Just(xs);
    };
  });
}();
var sortBy2 = function(comp) {
  return sortByImpl(comp)(function(v) {
    if (v instanceof GT) {
      return 1;
    }
    ;
    if (v instanceof EQ) {
      return 0;
    }
    ;
    if (v instanceof LT) {
      return -1 | 0;
    }
    ;
    throw new Error("Failed pattern match at Data.Array (line 870, column 31 - line 873, column 11): " + [v.constructor.name]);
  });
};
var sortWith = function(dictOrd) {
  var comparing3 = comparing(dictOrd);
  return function(f) {
    return sortBy2(comparing3(f));
  };
};
var sortWith1 = /* @__PURE__ */ sortWith(ordInt);
var sort2 = function(dictOrd) {
  var compare78 = compare(dictOrd);
  return function(xs) {
    return sortBy2(compare78)(xs);
  };
};
var snoc2 = function(xs) {
  return function(x) {
    return withArray(push(x))(xs)();
  };
};
var singleton7 = function(a) {
  return [a];
};
var $$null = function(xs) {
  return length3(xs) === 0;
};
var mapWithIndex3 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
var intercalate2 = function(dictMonoid) {
  return intercalate1(dictMonoid);
};
var init2 = function(xs) {
  if ($$null(xs)) {
    return Nothing.value;
  }
  ;
  if (otherwise) {
    return new Just(slice2(0)(length3(xs) - 1 | 0)(xs));
  }
  ;
  throw new Error("Failed pattern match at Data.Array (line 340, column 1 - line 340, column 45): " + [xs.constructor.name]);
};
var index2 = /* @__PURE__ */ function() {
  return indexImpl(Just.create)(Nothing.value);
}();
var last2 = function(xs) {
  return index2(xs)(length3(xs) - 1 | 0);
};
var unsnoc2 = function(xs) {
  return apply4(map1(function(v) {
    return function(v1) {
      return {
        init: v,
        last: v1
      };
    };
  })(init2(xs)))(last2(xs));
};
var modifyAt2 = function(i) {
  return function(f) {
    return function(xs) {
      var go = function(x) {
        return updateAt2(i)(f(x))(xs);
      };
      return maybe(Nothing.value)(go)(index2(xs)(i));
    };
  };
};
var unzip = function(xs) {
  return function __do() {
    var fsts = newSTArray();
    var snds = newSTArray();
    var iter = iterator(function(v) {
      return index2(xs)(v);
    })();
    iterate(iter)(function(v) {
      return function __do2() {
        $$void4(push(v.value0)(fsts))();
        return $$void4(push(v.value1)(snds))();
      };
    })();
    var fsts$prime = unsafeFreeze(fsts)();
    var snds$prime = unsafeFreeze(snds)();
    return new Tuple(fsts$prime, snds$prime);
  }();
};
var head2 = function(xs) {
  return index2(xs)(0);
};
var nubBy2 = function(comp) {
  return function(xs) {
    var indexedAndSorted = sortBy2(function(x) {
      return function(y) {
        return comp(snd(x))(snd(y));
      };
    })(mapWithIndex3(Tuple.create)(xs));
    var v = head2(indexedAndSorted);
    if (v instanceof Nothing) {
      return [];
    }
    ;
    if (v instanceof Just) {
      return map22(snd)(sortWith1(fst)(function __do() {
        var result = unsafeThaw(singleton7(v.value0))();
        foreach(indexedAndSorted)(function(v1) {
          return function __do2() {
            var lst = map10(function() {
              var $185 = function($187) {
                return fromJust4(last2($187));
              };
              return function($186) {
                return snd($185($186));
              };
            }())(unsafeFreeze(result))();
            return when2(notEq3(comp(lst)(v1.value1))(EQ.value))($$void4(push(v1)(result)))();
          };
        })();
        return unsafeFreeze(result)();
      }()));
    }
    ;
    throw new Error("Failed pattern match at Data.Array (line 1085, column 17 - line 1093, column 29): " + [v.constructor.name]);
  };
};
var nub2 = function(dictOrd) {
  return nubBy2(compare(dictOrd));
};
var fromFoldable3 = function(dictFoldable) {
  return fromFoldableImpl(foldr(dictFoldable));
};
var foldr3 = /* @__PURE__ */ foldr(foldableArray);
var foldMap2 = function(dictMonoid) {
  return foldMap12(dictMonoid);
};
var findIndex2 = /* @__PURE__ */ function() {
  return findIndexImpl(Just.create)(Nothing.value);
}();
var elemIndex = function(dictEq) {
  var eq213 = eq(dictEq);
  return function(x) {
    return findIndex2(function(v) {
      return eq213(v)(x);
    });
  };
};
var elem2 = function(dictEq) {
  var elemIndex1 = elemIndex(dictEq);
  return function(a) {
    return function(arr) {
      return isJust(elemIndex1(a)(arr));
    };
  };
};
var cons3 = function(x) {
  return function(xs) {
    return append2([x])(xs);
  };
};
var concatMap = /* @__PURE__ */ flip(/* @__PURE__ */ bind(bindArray));
var mapMaybe2 = function(f) {
  return concatMap(function() {
    var $191 = maybe([])(singleton7);
    return function($192) {
      return $191(f($192));
    };
  }());
};
var catMaybes2 = /* @__PURE__ */ mapMaybe2(/* @__PURE__ */ identity(categoryFn));

// output/Foreign.Object.ST/foreign.js
function poke2(k) {
  return function(v) {
    return function(m) {
      return function() {
        m[k] = v;
        return m;
      };
    };
  };
}

// output/Foreign.Object/index.js
var foldr4 = /* @__PURE__ */ foldr(foldableArray);
var values = /* @__PURE__ */ toArrayWithKey(function(v) {
  return function(v1) {
    return v1;
  };
});
var thawST = _copyST;
var mutate = function(f) {
  return function(m) {
    return runST(function __do() {
      var s = thawST(m)();
      f(s)();
      return s;
    });
  };
};
var lookup2 = /* @__PURE__ */ function() {
  return runFn4(_lookup)(Nothing.value)(Just.create);
}();
var insert2 = function(k) {
  return function(v) {
    return mutate(poke2(k)(v));
  };
};
var functorObject = {
  map: function(f) {
    return function(m) {
      return _fmapObject(m, f);
    };
  }
};
var fold2 = /* @__PURE__ */ _foldM(applyFlipped);
var foldMap3 = function(dictMonoid) {
  var append19 = append(dictMonoid.Semigroup0());
  var mempty11 = mempty(dictMonoid);
  return function(f) {
    return fold2(function(acc) {
      return function(k) {
        return function(v) {
          return append19(acc)(f(k)(v));
        };
      };
    })(mempty11);
  };
};
var foldableObject = {
  foldl: function(f) {
    return fold2(function(z) {
      return function(v) {
        return f(z);
      };
    });
  },
  foldr: function(f) {
    return function(z) {
      return function(m) {
        return foldr4(f)(z)(values(m));
      };
    };
  },
  foldMap: function(dictMonoid) {
    var foldMap15 = foldMap3(dictMonoid);
    return function(f) {
      return foldMap15($$const(f));
    };
  }
};
var foldableWithIndexObject = {
  foldlWithIndex: function(f) {
    return fold2(flip(f));
  },
  foldrWithIndex: function(f) {
    return function(z) {
      return function(m) {
        return foldr4(uncurry(f))(z)(toArrayWithKey(Tuple.create)(m));
      };
    };
  },
  foldMapWithIndex: function(dictMonoid) {
    return foldMap3(dictMonoid);
  },
  Foldable0: function() {
    return foldableObject;
  }
};

// output/Data.Argonaut.Core/foreign.js
function id(x) {
  return x;
}
var jsonNull = null;
function stringify(j) {
  return JSON.stringify(j);
}
function _caseJson(isNull3, isBool, isNum, isStr, isArr, isObj, j) {
  if (j == null)
    return isNull3();
  else if (typeof j === "boolean")
    return isBool(j);
  else if (typeof j === "number")
    return isNum(j);
  else if (typeof j === "string")
    return isStr(j);
  else if (Object.prototype.toString.call(j) === "[object Array]")
    return isArr(j);
  else
    return isObj(j);
}

// output/Data.Argonaut.Core/index.js
var verbJsonType = function(def) {
  return function(f) {
    return function(g) {
      return g(def)(f);
    };
  };
};
var toJsonType = /* @__PURE__ */ function() {
  return verbJsonType(Nothing.value)(Just.create);
}();
var isJsonType = /* @__PURE__ */ verbJsonType(false)(/* @__PURE__ */ $$const(true));
var caseJsonString = function(d) {
  return function(f) {
    return function(j) {
      return _caseJson($$const(d), $$const(d), $$const(d), f, $$const(d), $$const(d), j);
    };
  };
};
var caseJsonObject = function(d) {
  return function(f) {
    return function(j) {
      return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), $$const(d), f, j);
    };
  };
};
var toObject = /* @__PURE__ */ toJsonType(caseJsonObject);
var caseJsonNull = function(d) {
  return function(f) {
    return function(j) {
      return _caseJson(f, $$const(d), $$const(d), $$const(d), $$const(d), $$const(d), j);
    };
  };
};
var isNull2 = /* @__PURE__ */ isJsonType(caseJsonNull);
var caseJsonBoolean = function(d) {
  return function(f) {
    return function(j) {
      return _caseJson($$const(d), f, $$const(d), $$const(d), $$const(d), $$const(d), j);
    };
  };
};
var caseJsonArray = function(d) {
  return function(f) {
    return function(j) {
      return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), f, $$const(d), j);
    };
  };
};
var toArray = /* @__PURE__ */ toJsonType(caseJsonArray);

// output/Data.Argonaut.Decode.Error/index.js
var show1 = /* @__PURE__ */ show(showInt);
var TypeMismatch2 = /* @__PURE__ */ function() {
  function TypeMismatch3(value0) {
    this.value0 = value0;
  }
  ;
  TypeMismatch3.create = function(value0) {
    return new TypeMismatch3(value0);
  };
  return TypeMismatch3;
}();
var UnexpectedValue = /* @__PURE__ */ function() {
  function UnexpectedValue2(value0) {
    this.value0 = value0;
  }
  ;
  UnexpectedValue2.create = function(value0) {
    return new UnexpectedValue2(value0);
  };
  return UnexpectedValue2;
}();
var AtIndex = /* @__PURE__ */ function() {
  function AtIndex2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  AtIndex2.create = function(value0) {
    return function(value1) {
      return new AtIndex2(value0, value1);
    };
  };
  return AtIndex2;
}();
var AtKey = /* @__PURE__ */ function() {
  function AtKey2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  AtKey2.create = function(value0) {
    return function(value1) {
      return new AtKey2(value0, value1);
    };
  };
  return AtKey2;
}();
var Named = /* @__PURE__ */ function() {
  function Named2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Named2.create = function(value0) {
    return function(value1) {
      return new Named2(value0, value1);
    };
  };
  return Named2;
}();
var MissingValue = /* @__PURE__ */ function() {
  function MissingValue2() {
  }
  ;
  MissingValue2.value = new MissingValue2();
  return MissingValue2;
}();
var printJsonDecodeError = function(err) {
  var go = function(v) {
    if (v instanceof TypeMismatch2) {
      return "  Expected value of type '" + (v.value0 + "'.");
    }
    ;
    if (v instanceof UnexpectedValue) {
      return "  Unexpected value " + (stringify(v.value0) + ".");
    }
    ;
    if (v instanceof AtIndex) {
      return "  At array index " + (show1(v.value0) + (":\n" + go(v.value1)));
    }
    ;
    if (v instanceof AtKey) {
      return "  At object key '" + (v.value0 + ("':\n" + go(v.value1)));
    }
    ;
    if (v instanceof Named) {
      return "  Under '" + (v.value0 + ("':\n" + go(v.value1)));
    }
    ;
    if (v instanceof MissingValue) {
      return "  No value was found.";
    }
    ;
    throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 37, column 8 - line 43, column 44): " + [v.constructor.name]);
  };
  return "An error occurred while decoding a JSON value:\n" + go(err);
};

// output/Data.Array.NonEmpty.Internal/foreign.js
var traverse1Impl = function() {
  function Cont(fn) {
    this.fn = fn;
  }
  var emptyList = {};
  var ConsCell = function(head4, tail3) {
    this.head = head4;
    this.tail = tail3;
  };
  function finalCell(head4) {
    return new ConsCell(head4, emptyList);
  }
  function consList(x) {
    return function(xs) {
      return new ConsCell(x, xs);
    };
  }
  function listToArray(list) {
    var arr = [];
    var xs = list;
    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }
    return arr;
  }
  return function(apply6) {
    return function(map37) {
      return function(f) {
        var buildFrom = function(x, ys) {
          return apply6(map37(consList)(f(x)))(ys);
        };
        var go = function(acc, currentLen, xs) {
          if (currentLen === 0) {
            return acc;
          } else {
            var last3 = xs[currentLen - 1];
            return new Cont(function() {
              var built = go(buildFrom(last3, acc), currentLen - 1, xs);
              return built;
            });
          }
        };
        return function(array) {
          var acc = map37(finalCell)(f(array[array.length - 1]));
          var result = go(acc, array.length - 1, array);
          while (result instanceof Cont) {
            result = result.fn();
          }
          return map37(listToArray)(result);
        };
      };
    };
  };
}();

// output/Data.Array.NonEmpty.Internal/index.js
var NonEmptyArray = function(x) {
  return x;
};
var semigroupNonEmptyArray = semigroupArray;
var functorNonEmptyArray = functorArray;
var foldableNonEmptyArray = foldableArray;
var applicativeNonEmptyArray = applicativeArray;

// output/Data.Array.NonEmpty/index.js
var fromJust5 = /* @__PURE__ */ fromJust();
var unsafeFromArray = NonEmptyArray;
var toArray2 = function(v) {
  return v;
};
var unzip2 = /* @__PURE__ */ function() {
  var $104 = bimap(bifunctorTuple)(unsafeFromArray)(unsafeFromArray);
  return function($105) {
    return $104(unzip(toArray2($105)));
  };
}();
var snoc$prime = function(xs) {
  return function(x) {
    return unsafeFromArray(snoc2(xs)(x));
  };
};
var snoc3 = function(xs) {
  return function(x) {
    return unsafeFromArray(snoc2(toArray2(xs))(x));
  };
};
var fromArray = function(xs) {
  if (length3(xs) > 0) {
    return new Just(unsafeFromArray(xs));
  }
  ;
  if (otherwise) {
    return Nothing.value;
  }
  ;
  throw new Error("Failed pattern match at Data.Array.NonEmpty (line 161, column 1 - line 161, column 58): " + [xs.constructor.name]);
};
var cons$prime = function(x) {
  return function(xs) {
    return unsafeFromArray(cons3(x)(xs));
  };
};
var adaptMaybe = function(f) {
  return function($126) {
    return fromJust5(f(toArray2($126)));
  };
};
var head3 = /* @__PURE__ */ adaptMaybe(head2);
var tail2 = /* @__PURE__ */ adaptMaybe(tail);
var uncons3 = /* @__PURE__ */ adaptMaybe(uncons2);
var unsnoc3 = /* @__PURE__ */ adaptMaybe(unsnoc2);
var adaptAny = function(f) {
  return function($128) {
    return f(toArray2($128));
  };
};
var catMaybes3 = /* @__PURE__ */ adaptAny(catMaybes2);
var length5 = /* @__PURE__ */ adaptAny(length3);
var unsafeAdapt = function(f) {
  var $129 = adaptAny(f);
  return function($130) {
    return unsafeFromArray($129($130));
  };
};
var sortWith2 = function(dictOrd) {
  var sortWith13 = sortWith(dictOrd);
  return function(f) {
    return unsafeAdapt(sortWith13(f));
  };
};

// output/Data.Set/index.js
var foldMap4 = /* @__PURE__ */ foldMap(foldableList);
var foldl3 = /* @__PURE__ */ foldl(foldableList);
var foldr5 = /* @__PURE__ */ foldr(foldableList);
var toList2 = function(v) {
  return keys(v);
};
var toUnfoldable4 = function(dictUnfoldable) {
  var $127 = toUnfoldable(dictUnfoldable);
  return function($128) {
    return $127(toList2($128));
  };
};
var singleton9 = function(a) {
  return singleton6(a)(unit);
};
var member2 = function(dictOrd) {
  var member1 = member(dictOrd);
  return function(a) {
    return function(v) {
      return member1(a)(v);
    };
  };
};
var insert4 = function(dictOrd) {
  var insert12 = insert(dictOrd);
  return function(a) {
    return function(v) {
      return insert12(a)(unit)(v);
    };
  };
};
var foldableSet = {
  foldMap: function(dictMonoid) {
    var foldMap15 = foldMap4(dictMonoid);
    return function(f) {
      var $129 = foldMap15(f);
      return function($130) {
        return $129(toList2($130));
      };
    };
  },
  foldl: function(f) {
    return function(x) {
      var $131 = foldl3(f)(x);
      return function($132) {
        return $131(toList2($132));
      };
    };
  },
  foldr: function(f) {
    return function(x) {
      var $133 = foldr5(f)(x);
      return function($134) {
        return $133(toList2($134));
      };
    };
  }
};
var empty4 = empty2;
var fromFoldable4 = function(dictFoldable) {
  var foldl22 = foldl(dictFoldable);
  return function(dictOrd) {
    var insert12 = insert4(dictOrd);
    return foldl22(function(m) {
      return function(a) {
        return insert12(a)(m);
      };
    })(empty4);
  };
};
var $$delete3 = function(dictOrd) {
  var delete1 = $$delete(dictOrd);
  return function(a) {
    return function(v) {
      return delete1(a)(v);
    };
  };
};

// output/Data.String.CodePoints/foreign.js
var hasArrayFrom = typeof Array.from === "function";
var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
var hasCodePointAt = typeof String.prototype.codePointAt === "function";
var _unsafeCodePointAt0 = function(fallback) {
  return hasCodePointAt ? function(str) {
    return str.codePointAt(0);
  } : fallback;
};
var _countPrefix = function(fallback) {
  return function(unsafeCodePointAt02) {
    if (hasStringIterator) {
      return function(pred) {
        return function(str) {
          var iter = str[Symbol.iterator]();
          for (var cpCount = 0; ; ++cpCount) {
            var o = iter.next();
            if (o.done)
              return cpCount;
            var cp = unsafeCodePointAt02(o.value);
            if (!pred(cp))
              return cpCount;
          }
        };
      };
    }
    return fallback;
  };
};
var _fromCodePointArray = function(singleton12) {
  return hasFromCodePoint ? function(cps) {
    if (cps.length < 1e4) {
      return String.fromCodePoint.apply(String, cps);
    }
    return cps.map(singleton12).join("");
  } : function(cps) {
    return cps.map(singleton12).join("");
  };
};
var _singleton = function(fallback) {
  return hasFromCodePoint ? String.fromCodePoint : fallback;
};
var _take = function(fallback) {
  return function(n) {
    if (hasStringIterator) {
      return function(str) {
        var accum = "";
        var iter = str[Symbol.iterator]();
        for (var i = 0; i < n; ++i) {
          var o = iter.next();
          if (o.done)
            return accum;
          accum += o.value;
        }
        return accum;
      };
    }
    return fallback(n);
  };
};
var _toCodePointArray = function(fallback) {
  return function(unsafeCodePointAt02) {
    if (hasArrayFrom) {
      return function(str) {
        return Array.from(str, unsafeCodePointAt02);
      };
    }
    return fallback;
  };
};

// output/Data.Enum/foreign.js
function toCharCode(c) {
  return c.charCodeAt(0);
}
function fromCharCode(c) {
  return String.fromCharCode(c);
}

// output/Control.Alternative/index.js
var guard2 = function(dictAlternative) {
  var pure17 = pure(dictAlternative.Applicative0());
  var empty7 = empty(dictAlternative.Plus1());
  return function(v) {
    if (v) {
      return pure17(unit);
    }
    ;
    if (!v) {
      return empty7;
    }
    ;
    throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [v.constructor.name]);
  };
};

// output/Data.Enum/index.js
var bottom1 = /* @__PURE__ */ bottom(boundedChar);
var top1 = /* @__PURE__ */ top(boundedChar);
var toEnum = function(dict) {
  return dict.toEnum;
};
var fromEnum = function(dict) {
  return dict.fromEnum;
};
var toEnumWithDefaults = function(dictBoundedEnum) {
  var toEnum1 = toEnum(dictBoundedEnum);
  var fromEnum1 = fromEnum(dictBoundedEnum);
  var bottom22 = bottom(dictBoundedEnum.Bounded0());
  return function(low) {
    return function(high) {
      return function(x) {
        var v = toEnum1(x);
        if (v instanceof Just) {
          return v.value0;
        }
        ;
        if (v instanceof Nothing) {
          var $140 = x < fromEnum1(bottom22);
          if ($140) {
            return low;
          }
          ;
          return high;
        }
        ;
        throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
      };
    };
  };
};
var defaultSucc = function(toEnum$prime) {
  return function(fromEnum$prime) {
    return function(a) {
      return toEnum$prime(fromEnum$prime(a) + 1 | 0);
    };
  };
};
var defaultPred = function(toEnum$prime) {
  return function(fromEnum$prime) {
    return function(a) {
      return toEnum$prime(fromEnum$prime(a) - 1 | 0);
    };
  };
};
var charToEnum = function(v) {
  if (v >= toCharCode(bottom1) && v <= toCharCode(top1)) {
    return new Just(fromCharCode(v));
  }
  ;
  return Nothing.value;
};
var enumChar = {
  succ: /* @__PURE__ */ defaultSucc(charToEnum)(toCharCode),
  pred: /* @__PURE__ */ defaultPred(charToEnum)(toCharCode),
  Ord0: function() {
    return ordChar;
  }
};
var boundedEnumChar = /* @__PURE__ */ function() {
  return {
    cardinality: toCharCode(top1) - toCharCode(bottom1) | 0,
    toEnum: charToEnum,
    fromEnum: toCharCode,
    Bounded0: function() {
      return boundedChar;
    },
    Enum1: function() {
      return enumChar;
    }
  };
}();

// output/Data.String.Common/foreign.js
var replaceAll = function(s1) {
  return function(s2) {
    return function(s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
    };
  };
};
var split = function(sep) {
  return function(s) {
    return s.split(sep);
  };
};
var toLower = function(s) {
  return s.toLowerCase();
};
var joinWith = function(s) {
  return function(xs) {
    return xs.join(s);
  };
};

// output/Data.String.Common/index.js
var $$null2 = function(s) {
  return s === "";
};

// output/Data.String.CodePoints/index.js
var $runtime_lazy4 = function(name2, moduleName, init3) {
  var state2 = 0;
  var val;
  return function(lineNumber) {
    if (state2 === 2)
      return val;
    if (state2 === 1)
      throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
    state2 = 1;
    val = init3();
    state2 = 2;
    return val;
  };
};
var fromEnum2 = /* @__PURE__ */ fromEnum(boundedEnumChar);
var map11 = /* @__PURE__ */ map(functorMaybe);
var unfoldr2 = /* @__PURE__ */ unfoldr(unfoldableArray);
var div3 = /* @__PURE__ */ div(euclideanRingInt);
var mod3 = /* @__PURE__ */ mod(euclideanRingInt);
var compare3 = /* @__PURE__ */ compare(ordInt);
var CodePoint = function(x) {
  return x;
};
var unsurrogate = function(lead) {
  return function(trail) {
    return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
  };
};
var isTrail = function(cu) {
  return 56320 <= cu && cu <= 57343;
};
var isLead = function(cu) {
  return 55296 <= cu && cu <= 56319;
};
var uncons4 = function(s) {
  var v = length2(s);
  if (v === 0) {
    return Nothing.value;
  }
  ;
  if (v === 1) {
    return new Just({
      head: fromEnum2(charAt(0)(s)),
      tail: ""
    });
  }
  ;
  var cu1 = fromEnum2(charAt(1)(s));
  var cu0 = fromEnum2(charAt(0)(s));
  var $43 = isLead(cu0) && isTrail(cu1);
  if ($43) {
    return new Just({
      head: unsurrogate(cu0)(cu1),
      tail: drop2(2)(s)
    });
  }
  ;
  return new Just({
    head: cu0,
    tail: drop2(1)(s)
  });
};
var unconsButWithTuple = function(s) {
  return map11(function(v) {
    return new Tuple(v.head, v.tail);
  })(uncons4(s));
};
var toCodePointArrayFallback = function(s) {
  return unfoldr2(unconsButWithTuple)(s);
};
var unsafeCodePointAt0Fallback = function(s) {
  var cu0 = fromEnum2(charAt(0)(s));
  var $47 = isLead(cu0) && length2(s) > 1;
  if ($47) {
    var cu1 = fromEnum2(charAt(1)(s));
    var $48 = isTrail(cu1);
    if ($48) {
      return unsurrogate(cu0)(cu1);
    }
    ;
    return cu0;
  }
  ;
  return cu0;
};
var unsafeCodePointAt0 = /* @__PURE__ */ _unsafeCodePointAt0(unsafeCodePointAt0Fallback);
var toCodePointArray = /* @__PURE__ */ _toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
var length6 = function($74) {
  return length3(toCodePointArray($74));
};
var lastIndexOf2 = function(p) {
  return function(s) {
    return map11(function(i) {
      return length6(take2(i)(s));
    })(lastIndexOf(p)(s));
  };
};
var fromCharCode2 = /* @__PURE__ */ function() {
  var $75 = toEnumWithDefaults(boundedEnumChar)(bottom(boundedChar))(top(boundedChar));
  return function($76) {
    return singleton5($75($76));
  };
}();
var singletonFallback = function(v) {
  if (v <= 65535) {
    return fromCharCode2(v);
  }
  ;
  var lead = div3(v - 65536 | 0)(1024) + 55296 | 0;
  var trail = mod3(v - 65536 | 0)(1024) + 56320 | 0;
  return fromCharCode2(lead) + fromCharCode2(trail);
};
var fromCodePointArray = /* @__PURE__ */ _fromCodePointArray(singletonFallback);
var singleton10 = /* @__PURE__ */ _singleton(singletonFallback);
var takeFallback = function(v) {
  return function(v1) {
    if (v < 1) {
      return "";
    }
    ;
    var v2 = uncons4(v1);
    if (v2 instanceof Just) {
      return singleton10(v2.value0.head) + takeFallback(v - 1 | 0)(v2.value0.tail);
    }
    ;
    return v1;
  };
};
var take4 = /* @__PURE__ */ _take(takeFallback);
var eqCodePoint = {
  eq: function(x) {
    return function(y) {
      return x === y;
    };
  }
};
var ordCodePoint = {
  compare: function(x) {
    return function(y) {
      return compare3(x)(y);
    };
  },
  Eq0: function() {
    return eqCodePoint;
  }
};
var drop4 = function(n) {
  return function(s) {
    return drop2(length2(take4(n)(s)))(s);
  };
};
var countTail = function($copy_p) {
  return function($copy_s) {
    return function($copy_accum) {
      var $tco_var_p = $copy_p;
      var $tco_var_s = $copy_s;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(p, s, accum) {
        var v = uncons4(s);
        if (v instanceof Just) {
          var $61 = p(v.value0.head);
          if ($61) {
            $tco_var_p = p;
            $tco_var_s = v.value0.tail;
            $copy_accum = accum + 1 | 0;
            return;
          }
          ;
          $tco_done = true;
          return accum;
        }
        ;
        $tco_done = true;
        return accum;
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_p, $tco_var_s, $copy_accum);
      }
      ;
      return $tco_result;
    };
  };
};
var countFallback = function(p) {
  return function(s) {
    return countTail(p)(s)(0);
  };
};
var countPrefix2 = /* @__PURE__ */ _countPrefix(countFallback)(unsafeCodePointAt0);
var takeWhile3 = function(p) {
  return function(s) {
    return take4(countPrefix2(p)(s))(s);
  };
};
var codePointFromChar = function($77) {
  return CodePoint(fromEnum2($77));
};
var boundedCodePoint = {
  bottom: 0,
  top: 1114111,
  Ord0: function() {
    return ordCodePoint;
  }
};
var boundedEnumCodePoint = /* @__PURE__ */ function() {
  return {
    cardinality: 1114111 + 1 | 0,
    fromEnum: function(v) {
      return v;
    },
    toEnum: function(n) {
      if (n >= 0 && n <= 1114111) {
        return new Just(n);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 68, column 26): " + [n.constructor.name]);
    },
    Bounded0: function() {
      return boundedCodePoint;
    },
    Enum1: function() {
      return $lazy_enumCodePoint(0);
    }
  };
}();
var $lazy_enumCodePoint = /* @__PURE__ */ $runtime_lazy4("enumCodePoint", "Data.String.CodePoints", function() {
  return {
    succ: defaultSucc(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
    pred: defaultPred(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
    Ord0: function() {
      return ordCodePoint;
    }
  };
});

// output/Data.Argonaut.Decode.Decoders/index.js
var pure3 = /* @__PURE__ */ pure(applicativeEither);
var map12 = /* @__PURE__ */ map(functorEither);
var lmap2 = /* @__PURE__ */ lmap(bifunctorEither);
var composeKleisliFlipped2 = /* @__PURE__ */ composeKleisliFlipped(bindEither);
var traverseWithIndex2 = /* @__PURE__ */ traverseWithIndex(traversableWithIndexArray)(applicativeEither);
var decodeString = /* @__PURE__ */ function() {
  return caseJsonString(new Left(new TypeMismatch2("String")))(Right.create);
}();
var decodeMaybe = function(decoder) {
  return function(json) {
    if (isNull2(json)) {
      return pure3(Nothing.value);
    }
    ;
    if (otherwise) {
      return map12(Just.create)(decoder(json));
    }
    ;
    throw new Error("Failed pattern match at Data.Argonaut.Decode.Decoders (line 37, column 1 - line 41, column 38): " + [decoder.constructor.name, json.constructor.name]);
  };
};
var decodeJArray = /* @__PURE__ */ function() {
  var $52 = note(new TypeMismatch2("Array"));
  return function($53) {
    return $52(toArray($53));
  };
}();
var decodeBoolean = /* @__PURE__ */ function() {
  return caseJsonBoolean(new Left(new TypeMismatch2("Boolean")))(Right.create);
}();
var decodeArray = function(decoder) {
  return composeKleisliFlipped2(function() {
    var $89 = lmap2(Named.create("Array"));
    var $90 = traverseWithIndex2(function(i) {
      var $92 = lmap2(AtIndex.create(i));
      return function($93) {
        return $92(decoder($93));
      };
    });
    return function($91) {
      return $89($90($91));
    };
  }())(decodeJArray);
};

// output/Record/index.js
var insert5 = function(dictIsSymbol) {
  var reflectSymbol2 = reflectSymbol(dictIsSymbol);
  return function() {
    return function() {
      return function(l) {
        return function(a) {
          return function(r) {
            return unsafeSet(reflectSymbol2(l))(a)(r);
          };
        };
      };
    };
  };
};
var get = function(dictIsSymbol) {
  var reflectSymbol2 = reflectSymbol(dictIsSymbol);
  return function() {
    return function(l) {
      return function(r) {
        return unsafeGet(reflectSymbol2(l))(r);
      };
    };
  };
};

// output/Data.Argonaut.Decode.Class/index.js
var bind2 = /* @__PURE__ */ bind(bindEither);
var lmap3 = /* @__PURE__ */ lmap(bifunctorEither);
var map13 = /* @__PURE__ */ map(functorMaybe);
var gDecodeJsonNil = {
  gDecodeJson: function(v) {
    return function(v1) {
      return new Right({});
    };
  }
};
var gDecodeJson = function(dict) {
  return dict.gDecodeJson;
};
var decodeRecord = function(dictGDecodeJson) {
  var gDecodeJson1 = gDecodeJson(dictGDecodeJson);
  return function() {
    return {
      decodeJson: function(json) {
        var v = toObject(json);
        if (v instanceof Just) {
          return gDecodeJson1(v.value0)($$Proxy.value);
        }
        ;
        if (v instanceof Nothing) {
          return new Left(new TypeMismatch2("Object"));
        }
        ;
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 103, column 5 - line 105, column 46): " + [v.constructor.name]);
      }
    };
  };
};
var decodeJsonString = {
  decodeJson: decodeString
};
var decodeJsonField = function(dict) {
  return dict.decodeJsonField;
};
var gDecodeJsonCons = function(dictDecodeJsonField) {
  var decodeJsonField1 = decodeJsonField(dictDecodeJsonField);
  return function(dictGDecodeJson) {
    var gDecodeJson1 = gDecodeJson(dictGDecodeJson);
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      var insert9 = insert5(dictIsSymbol)()();
      return function() {
        return function() {
          return {
            gDecodeJson: function(object) {
              return function(v) {
                var fieldName = reflectSymbol2($$Proxy.value);
                var fieldValue = lookup2(fieldName)(object);
                var v1 = decodeJsonField1(fieldValue);
                if (v1 instanceof Just) {
                  return bind2(lmap3(AtKey.create(fieldName))(v1.value0))(function(val) {
                    return bind2(gDecodeJson1(object)($$Proxy.value))(function(rest) {
                      return new Right(insert9($$Proxy.value)(val)(rest));
                    });
                  });
                }
                ;
                if (v1 instanceof Nothing) {
                  return new Left(new AtKey(fieldName, MissingValue.value));
                }
                ;
                throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 127, column 5 - line 134, column 44): " + [v1.constructor.name]);
              };
            }
          };
        };
      };
    };
  };
};
var decodeJsonBoolean = {
  decodeJson: decodeBoolean
};
var decodeJson = function(dict) {
  return dict.decodeJson;
};
var decodeJsonMaybe = function(dictDecodeJson) {
  return {
    decodeJson: decodeMaybe(decodeJson(dictDecodeJson))
  };
};
var decodeFieldMaybe = function(dictDecodeJson) {
  var decodeJson1 = decodeJson(decodeJsonMaybe(dictDecodeJson));
  return {
    decodeJsonField: function(v) {
      if (v instanceof Nothing) {
        return new Just(new Right(Nothing.value));
      }
      ;
      if (v instanceof Just) {
        return new Just(decodeJson1(v.value0));
      }
      ;
      throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 139, column 1 - line 143, column 49): " + [v.constructor.name]);
    }
  };
};
var decodeFieldId = function(dictDecodeJson) {
  var decodeJson1 = decodeJson(dictDecodeJson);
  return {
    decodeJsonField: function(j) {
      return map13(decodeJson1)(j);
    }
  };
};
var decodeArray2 = function(dictDecodeJson) {
  return {
    decodeJson: decodeArray(decodeJson(dictDecodeJson))
  };
};

// output/Data.Argonaut.Encode.Encoders/index.js
var map14 = /* @__PURE__ */ map(functorArray);
var encodeString = id;
var encodeMaybe = function(encoder) {
  return function(v) {
    if (v instanceof Nothing) {
      return jsonNull;
    }
    ;
    if (v instanceof Just) {
      return encoder(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Data.Argonaut.Encode.Encoders (line 31, column 23 - line 33, column 22): " + [v.constructor.name]);
  };
};
var encodeArray = function(encoder) {
  var $58 = map14(encoder);
  return function($59) {
    return id($58($59));
  };
};

// output/Data.Argonaut.Encode.Class/index.js
var gEncodeJsonNil = {
  gEncodeJson: function(v) {
    return function(v1) {
      return empty3;
    };
  }
};
var gEncodeJson = function(dict) {
  return dict.gEncodeJson;
};
var encodeRecord = function(dictGEncodeJson) {
  var gEncodeJson1 = gEncodeJson(dictGEncodeJson);
  return function() {
    return {
      encodeJson: function(rec) {
        return id(gEncodeJson1(rec)($$Proxy.value));
      }
    };
  };
};
var encodeJsonJString = {
  encodeJson: encodeString
};
var encodeJson = function(dict) {
  return dict.encodeJson;
};
var encodeJsonArray = function(dictEncodeJson) {
  return {
    encodeJson: encodeArray(encodeJson(dictEncodeJson))
  };
};
var encodeJsonMaybe = function(dictEncodeJson) {
  return {
    encodeJson: encodeMaybe(encodeJson(dictEncodeJson))
  };
};
var gEncodeJsonCons = function(dictEncodeJson) {
  var encodeJson1 = encodeJson(dictEncodeJson);
  return function(dictGEncodeJson) {
    var gEncodeJson1 = gEncodeJson(dictGEncodeJson);
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      var get4 = get(dictIsSymbol)();
      return function() {
        return {
          gEncodeJson: function(row) {
            return function(v) {
              return insert2(reflectSymbol2($$Proxy.value))(encodeJson1(get4($$Proxy.value)(row)))(gEncodeJson1(row)($$Proxy.value));
            };
          }
        };
      };
    };
  };
};

// output/Data.GraphQL.AST/index.js
var compare4 = /* @__PURE__ */ compare(ordString);
var compare13 = /* @__PURE__ */ compare(ordInt);
var compare22 = /* @__PURE__ */ compare(ordNumber);
var compare32 = /* @__PURE__ */ compare(ordBoolean);
var eq4 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(eqString));
var compare42 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(ordString));
var SCHEMA = /* @__PURE__ */ function() {
  function SCHEMA2() {
  }
  ;
  SCHEMA2.value = new SCHEMA2();
  return SCHEMA2;
}();
var SCALAR = /* @__PURE__ */ function() {
  function SCALAR2() {
  }
  ;
  SCALAR2.value = new SCALAR2();
  return SCALAR2;
}();
var OBJECT = /* @__PURE__ */ function() {
  function OBJECT2() {
  }
  ;
  OBJECT2.value = new OBJECT2();
  return OBJECT2;
}();
var FIELD_DEFINITION = /* @__PURE__ */ function() {
  function FIELD_DEFINITION2() {
  }
  ;
  FIELD_DEFINITION2.value = new FIELD_DEFINITION2();
  return FIELD_DEFINITION2;
}();
var ARGUMENT_DEFINITION = /* @__PURE__ */ function() {
  function ARGUMENT_DEFINITION2() {
  }
  ;
  ARGUMENT_DEFINITION2.value = new ARGUMENT_DEFINITION2();
  return ARGUMENT_DEFINITION2;
}();
var INTERFACE = /* @__PURE__ */ function() {
  function INTERFACE2() {
  }
  ;
  INTERFACE2.value = new INTERFACE2();
  return INTERFACE2;
}();
var UNION = /* @__PURE__ */ function() {
  function UNION2() {
  }
  ;
  UNION2.value = new UNION2();
  return UNION2;
}();
var ENUM = /* @__PURE__ */ function() {
  function ENUM2() {
  }
  ;
  ENUM2.value = new ENUM2();
  return ENUM2;
}();
var ENUM_VALUE = /* @__PURE__ */ function() {
  function ENUM_VALUE2() {
  }
  ;
  ENUM_VALUE2.value = new ENUM_VALUE2();
  return ENUM_VALUE2;
}();
var INPUT_OBJECT = /* @__PURE__ */ function() {
  function INPUT_OBJECT2() {
  }
  ;
  INPUT_OBJECT2.value = new INPUT_OBJECT2();
  return INPUT_OBJECT2;
}();
var INPUT_FIELD_DEFINITION = /* @__PURE__ */ function() {
  function INPUT_FIELD_DEFINITION2() {
  }
  ;
  INPUT_FIELD_DEFINITION2.value = new INPUT_FIELD_DEFINITION2();
  return INPUT_FIELD_DEFINITION2;
}();
var Query = /* @__PURE__ */ function() {
  function Query2() {
  }
  ;
  Query2.value = new Query2();
  return Query2;
}();
var Mutation = /* @__PURE__ */ function() {
  function Mutation2() {
  }
  ;
  Mutation2.value = new Mutation2();
  return Mutation2;
}();
var Subscription = /* @__PURE__ */ function() {
  function Subscription2() {
  }
  ;
  Subscription2.value = new Subscription2();
  return Subscription2;
}();
var NamedType = function(x) {
  return x;
};
var UnionMemberTypes = function(x) {
  return x;
};
var Type_NamedType = /* @__PURE__ */ function() {
  function Type_NamedType2(value0) {
    this.value0 = value0;
  }
  ;
  Type_NamedType2.create = function(value0) {
    return new Type_NamedType2(value0);
  };
  return Type_NamedType2;
}();
var Type_ListType = /* @__PURE__ */ function() {
  function Type_ListType2(value0) {
    this.value0 = value0;
  }
  ;
  Type_ListType2.create = function(value0) {
    return new Type_ListType2(value0);
  };
  return Type_ListType2;
}();
var Type_NonNullType = /* @__PURE__ */ function() {
  function Type_NonNullType2(value0) {
    this.value0 = value0;
  }
  ;
  Type_NonNullType2.create = function(value0) {
    return new Type_NonNullType2(value0);
  };
  return Type_NonNullType2;
}();
var NonNullType_NamedType = /* @__PURE__ */ function() {
  function NonNullType_NamedType2(value0) {
    this.value0 = value0;
  }
  ;
  NonNullType_NamedType2.create = function(value0) {
    return new NonNullType_NamedType2(value0);
  };
  return NonNullType_NamedType2;
}();
var NonNullType_ListType = /* @__PURE__ */ function() {
  function NonNullType_ListType2(value0) {
    this.value0 = value0;
  }
  ;
  NonNullType_ListType2.create = function(value0) {
    return new NonNullType_ListType2(value0);
  };
  return NonNullType_ListType2;
}();
var QUERY = /* @__PURE__ */ function() {
  function QUERY2() {
  }
  ;
  QUERY2.value = new QUERY2();
  return QUERY2;
}();
var MUTATION = /* @__PURE__ */ function() {
  function MUTATION2() {
  }
  ;
  MUTATION2.value = new MUTATION2();
  return MUTATION2;
}();
var SUBSCRIPTION = /* @__PURE__ */ function() {
  function SUBSCRIPTION2() {
  }
  ;
  SUBSCRIPTION2.value = new SUBSCRIPTION2();
  return SUBSCRIPTION2;
}();
var FIELD = /* @__PURE__ */ function() {
  function FIELD2() {
  }
  ;
  FIELD2.value = new FIELD2();
  return FIELD2;
}();
var FRAGMENT_DEFINITION = /* @__PURE__ */ function() {
  function FRAGMENT_DEFINITION2() {
  }
  ;
  FRAGMENT_DEFINITION2.value = new FRAGMENT_DEFINITION2();
  return FRAGMENT_DEFINITION2;
}();
var FRAGMENT_SPREAD = /* @__PURE__ */ function() {
  function FRAGMENT_SPREAD2() {
  }
  ;
  FRAGMENT_SPREAD2.value = new FRAGMENT_SPREAD2();
  return FRAGMENT_SPREAD2;
}();
var INLINE_FRAGMENT = /* @__PURE__ */ function() {
  function INLINE_FRAGMENT2() {
  }
  ;
  INLINE_FRAGMENT2.value = new INLINE_FRAGMENT2();
  return INLINE_FRAGMENT2;
}();
var DirectiveLocation_ExecutableDirectiveLocation = /* @__PURE__ */ function() {
  function DirectiveLocation_ExecutableDirectiveLocation2(value0) {
    this.value0 = value0;
  }
  ;
  DirectiveLocation_ExecutableDirectiveLocation2.create = function(value0) {
    return new DirectiveLocation_ExecutableDirectiveLocation2(value0);
  };
  return DirectiveLocation_ExecutableDirectiveLocation2;
}();
var DirectiveLocation_TypeSystemDirectiveLocation = /* @__PURE__ */ function() {
  function DirectiveLocation_TypeSystemDirectiveLocation2(value0) {
    this.value0 = value0;
  }
  ;
  DirectiveLocation_TypeSystemDirectiveLocation2.create = function(value0) {
    return new DirectiveLocation_TypeSystemDirectiveLocation2(value0);
  };
  return DirectiveLocation_TypeSystemDirectiveLocation2;
}();
var Value_Variable = /* @__PURE__ */ function() {
  function Value_Variable2(value0) {
    this.value0 = value0;
  }
  ;
  Value_Variable2.create = function(value0) {
    return new Value_Variable2(value0);
  };
  return Value_Variable2;
}();
var Value_IntValue = /* @__PURE__ */ function() {
  function Value_IntValue2(value0) {
    this.value0 = value0;
  }
  ;
  Value_IntValue2.create = function(value0) {
    return new Value_IntValue2(value0);
  };
  return Value_IntValue2;
}();
var Value_FloatValue = /* @__PURE__ */ function() {
  function Value_FloatValue2(value0) {
    this.value0 = value0;
  }
  ;
  Value_FloatValue2.create = function(value0) {
    return new Value_FloatValue2(value0);
  };
  return Value_FloatValue2;
}();
var Value_StringValue = /* @__PURE__ */ function() {
  function Value_StringValue2(value0) {
    this.value0 = value0;
  }
  ;
  Value_StringValue2.create = function(value0) {
    return new Value_StringValue2(value0);
  };
  return Value_StringValue2;
}();
var Value_BooleanValue = /* @__PURE__ */ function() {
  function Value_BooleanValue2(value0) {
    this.value0 = value0;
  }
  ;
  Value_BooleanValue2.create = function(value0) {
    return new Value_BooleanValue2(value0);
  };
  return Value_BooleanValue2;
}();
var Value_NullValue = /* @__PURE__ */ function() {
  function Value_NullValue2(value0) {
    this.value0 = value0;
  }
  ;
  Value_NullValue2.create = function(value0) {
    return new Value_NullValue2(value0);
  };
  return Value_NullValue2;
}();
var Value_EnumValue = /* @__PURE__ */ function() {
  function Value_EnumValue2(value0) {
    this.value0 = value0;
  }
  ;
  Value_EnumValue2.create = function(value0) {
    return new Value_EnumValue2(value0);
  };
  return Value_EnumValue2;
}();
var Value_ListValue = /* @__PURE__ */ function() {
  function Value_ListValue2(value0) {
    this.value0 = value0;
  }
  ;
  Value_ListValue2.create = function(value0) {
    return new Value_ListValue2(value0);
  };
  return Value_ListValue2;
}();
var Value_ObjectValue = /* @__PURE__ */ function() {
  function Value_ObjectValue2(value0) {
    this.value0 = value0;
  }
  ;
  Value_ObjectValue2.create = function(value0) {
    return new Value_ObjectValue2(value0);
  };
  return Value_ObjectValue2;
}();
var EnumValuesDefinition = function(x) {
  return x;
};
var EnumTypeExtension_With_EnumValuesDefinition = /* @__PURE__ */ function() {
  function EnumTypeExtension_With_EnumValuesDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  EnumTypeExtension_With_EnumValuesDefinition2.create = function(value0) {
    return new EnumTypeExtension_With_EnumValuesDefinition2(value0);
  };
  return EnumTypeExtension_With_EnumValuesDefinition2;
}();
var EnumTypeExtension_With_Directives = /* @__PURE__ */ function() {
  function EnumTypeExtension_With_Directives2(value0) {
    this.value0 = value0;
  }
  ;
  EnumTypeExtension_With_Directives2.create = function(value0) {
    return new EnumTypeExtension_With_Directives2(value0);
  };
  return EnumTypeExtension_With_Directives2;
}();
var SchemaExtension_With_OperationTypeDefinition = /* @__PURE__ */ function() {
  function SchemaExtension_With_OperationTypeDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  SchemaExtension_With_OperationTypeDefinition2.create = function(value0) {
    return new SchemaExtension_With_OperationTypeDefinition2(value0);
  };
  return SchemaExtension_With_OperationTypeDefinition2;
}();
var SchemaExtension_With_Directives = /* @__PURE__ */ function() {
  function SchemaExtension_With_Directives2(value0) {
    this.value0 = value0;
  }
  ;
  SchemaExtension_With_Directives2.create = function(value0) {
    return new SchemaExtension_With_Directives2(value0);
  };
  return SchemaExtension_With_Directives2;
}();
var UnionTypeExtension_With_UnionMemberTypes = /* @__PURE__ */ function() {
  function UnionTypeExtension_With_UnionMemberTypes2(value0) {
    this.value0 = value0;
  }
  ;
  UnionTypeExtension_With_UnionMemberTypes2.create = function(value0) {
    return new UnionTypeExtension_With_UnionMemberTypes2(value0);
  };
  return UnionTypeExtension_With_UnionMemberTypes2;
}();
var UnionTypeExtension_With_Directives = /* @__PURE__ */ function() {
  function UnionTypeExtension_With_Directives2(value0) {
    this.value0 = value0;
  }
  ;
  UnionTypeExtension_With_Directives2.create = function(value0) {
    return new UnionTypeExtension_With_Directives2(value0);
  };
  return UnionTypeExtension_With_Directives2;
}();
var Selection_Field = /* @__PURE__ */ function() {
  function Selection_Field2(value0) {
    this.value0 = value0;
  }
  ;
  Selection_Field2.create = function(value0) {
    return new Selection_Field2(value0);
  };
  return Selection_Field2;
}();
var Selection_FragmentSpread = /* @__PURE__ */ function() {
  function Selection_FragmentSpread2(value0) {
    this.value0 = value0;
  }
  ;
  Selection_FragmentSpread2.create = function(value0) {
    return new Selection_FragmentSpread2(value0);
  };
  return Selection_FragmentSpread2;
}();
var Selection_InlineFragment = /* @__PURE__ */ function() {
  function Selection_InlineFragment2(value0) {
    this.value0 = value0;
  }
  ;
  Selection_InlineFragment2.create = function(value0) {
    return new Selection_InlineFragment2(value0);
  };
  return Selection_InlineFragment2;
}();
var ArgumentsDefinition = function(x) {
  return x;
};
var FieldsDefinition = function(x) {
  return x;
};
var InterfaceTypeExtension_With_FieldsDefinition = /* @__PURE__ */ function() {
  function InterfaceTypeExtension_With_FieldsDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  InterfaceTypeExtension_With_FieldsDefinition2.create = function(value0) {
    return new InterfaceTypeExtension_With_FieldsDefinition2(value0);
  };
  return InterfaceTypeExtension_With_FieldsDefinition2;
}();
var InterfaceTypeExtension_With_Directives = /* @__PURE__ */ function() {
  function InterfaceTypeExtension_With_Directives2(value0) {
    this.value0 = value0;
  }
  ;
  InterfaceTypeExtension_With_Directives2.create = function(value0) {
    return new InterfaceTypeExtension_With_Directives2(value0);
  };
  return InterfaceTypeExtension_With_Directives2;
}();
var ObjectTypeExtension_With_FieldsDefinition = /* @__PURE__ */ function() {
  function ObjectTypeExtension_With_FieldsDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  ObjectTypeExtension_With_FieldsDefinition2.create = function(value0) {
    return new ObjectTypeExtension_With_FieldsDefinition2(value0);
  };
  return ObjectTypeExtension_With_FieldsDefinition2;
}();
var ObjectTypeExtension_With_Directives = /* @__PURE__ */ function() {
  function ObjectTypeExtension_With_Directives2(value0) {
    this.value0 = value0;
  }
  ;
  ObjectTypeExtension_With_Directives2.create = function(value0) {
    return new ObjectTypeExtension_With_Directives2(value0);
  };
  return ObjectTypeExtension_With_Directives2;
}();
var ObjectTypeExtension_With_ImplementsInterfaces = /* @__PURE__ */ function() {
  function ObjectTypeExtension_With_ImplementsInterfaces2(value0) {
    this.value0 = value0;
  }
  ;
  ObjectTypeExtension_With_ImplementsInterfaces2.create = function(value0) {
    return new ObjectTypeExtension_With_ImplementsInterfaces2(value0);
  };
  return ObjectTypeExtension_With_ImplementsInterfaces2;
}();
var InputFieldsDefinition = function(x) {
  return x;
};
var TypeDefinition_ScalarTypeDefinition = /* @__PURE__ */ function() {
  function TypeDefinition_ScalarTypeDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  TypeDefinition_ScalarTypeDefinition2.create = function(value0) {
    return new TypeDefinition_ScalarTypeDefinition2(value0);
  };
  return TypeDefinition_ScalarTypeDefinition2;
}();
var TypeDefinition_ObjectTypeDefinition = /* @__PURE__ */ function() {
  function TypeDefinition_ObjectTypeDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  TypeDefinition_ObjectTypeDefinition2.create = function(value0) {
    return new TypeDefinition_ObjectTypeDefinition2(value0);
  };
  return TypeDefinition_ObjectTypeDefinition2;
}();
var TypeDefinition_InterfaceTypeDefinition = /* @__PURE__ */ function() {
  function TypeDefinition_InterfaceTypeDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  TypeDefinition_InterfaceTypeDefinition2.create = function(value0) {
    return new TypeDefinition_InterfaceTypeDefinition2(value0);
  };
  return TypeDefinition_InterfaceTypeDefinition2;
}();
var TypeDefinition_UnionTypeDefinition = /* @__PURE__ */ function() {
  function TypeDefinition_UnionTypeDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  TypeDefinition_UnionTypeDefinition2.create = function(value0) {
    return new TypeDefinition_UnionTypeDefinition2(value0);
  };
  return TypeDefinition_UnionTypeDefinition2;
}();
var TypeDefinition_EnumTypeDefinition = /* @__PURE__ */ function() {
  function TypeDefinition_EnumTypeDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  TypeDefinition_EnumTypeDefinition2.create = function(value0) {
    return new TypeDefinition_EnumTypeDefinition2(value0);
  };
  return TypeDefinition_EnumTypeDefinition2;
}();
var TypeDefinition_InputObjectTypeDefinition = /* @__PURE__ */ function() {
  function TypeDefinition_InputObjectTypeDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  TypeDefinition_InputObjectTypeDefinition2.create = function(value0) {
    return new TypeDefinition_InputObjectTypeDefinition2(value0);
  };
  return TypeDefinition_InputObjectTypeDefinition2;
}();
var TypeSystemDefinition_SchemaDefinition = /* @__PURE__ */ function() {
  function TypeSystemDefinition_SchemaDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  TypeSystemDefinition_SchemaDefinition2.create = function(value0) {
    return new TypeSystemDefinition_SchemaDefinition2(value0);
  };
  return TypeSystemDefinition_SchemaDefinition2;
}();
var TypeSystemDefinition_TypeDefinition = /* @__PURE__ */ function() {
  function TypeSystemDefinition_TypeDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  TypeSystemDefinition_TypeDefinition2.create = function(value0) {
    return new TypeSystemDefinition_TypeDefinition2(value0);
  };
  return TypeSystemDefinition_TypeDefinition2;
}();
var TypeSystemDefinition_DirectiveDefinition = /* @__PURE__ */ function() {
  function TypeSystemDefinition_DirectiveDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  TypeSystemDefinition_DirectiveDefinition2.create = function(value0) {
    return new TypeSystemDefinition_DirectiveDefinition2(value0);
  };
  return TypeSystemDefinition_DirectiveDefinition2;
}();
var InputObjectTypeExtension_With_InputFieldsDefinition = /* @__PURE__ */ function() {
  function InputObjectTypeExtension_With_InputFieldsDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  InputObjectTypeExtension_With_InputFieldsDefinition2.create = function(value0) {
    return new InputObjectTypeExtension_With_InputFieldsDefinition2(value0);
  };
  return InputObjectTypeExtension_With_InputFieldsDefinition2;
}();
var InputObjectTypeExtension_With_Directives = /* @__PURE__ */ function() {
  function InputObjectTypeExtension_With_Directives2(value0) {
    this.value0 = value0;
  }
  ;
  InputObjectTypeExtension_With_Directives2.create = function(value0) {
    return new InputObjectTypeExtension_With_Directives2(value0);
  };
  return InputObjectTypeExtension_With_Directives2;
}();
var TypeExtension_ScalarTypeExtension = /* @__PURE__ */ function() {
  function TypeExtension_ScalarTypeExtension2(value0) {
    this.value0 = value0;
  }
  ;
  TypeExtension_ScalarTypeExtension2.create = function(value0) {
    return new TypeExtension_ScalarTypeExtension2(value0);
  };
  return TypeExtension_ScalarTypeExtension2;
}();
var TypeExtension_ObjectTypeExtension = /* @__PURE__ */ function() {
  function TypeExtension_ObjectTypeExtension2(value0) {
    this.value0 = value0;
  }
  ;
  TypeExtension_ObjectTypeExtension2.create = function(value0) {
    return new TypeExtension_ObjectTypeExtension2(value0);
  };
  return TypeExtension_ObjectTypeExtension2;
}();
var TypeExtension_InterfaceTypeExtension = /* @__PURE__ */ function() {
  function TypeExtension_InterfaceTypeExtension2(value0) {
    this.value0 = value0;
  }
  ;
  TypeExtension_InterfaceTypeExtension2.create = function(value0) {
    return new TypeExtension_InterfaceTypeExtension2(value0);
  };
  return TypeExtension_InterfaceTypeExtension2;
}();
var TypeExtension_UnionTypeExtension = /* @__PURE__ */ function() {
  function TypeExtension_UnionTypeExtension2(value0) {
    this.value0 = value0;
  }
  ;
  TypeExtension_UnionTypeExtension2.create = function(value0) {
    return new TypeExtension_UnionTypeExtension2(value0);
  };
  return TypeExtension_UnionTypeExtension2;
}();
var TypeExtension_EnumTypeExtension = /* @__PURE__ */ function() {
  function TypeExtension_EnumTypeExtension2(value0) {
    this.value0 = value0;
  }
  ;
  TypeExtension_EnumTypeExtension2.create = function(value0) {
    return new TypeExtension_EnumTypeExtension2(value0);
  };
  return TypeExtension_EnumTypeExtension2;
}();
var TypeExtension_InputObjectTypeExtension = /* @__PURE__ */ function() {
  function TypeExtension_InputObjectTypeExtension2(value0) {
    this.value0 = value0;
  }
  ;
  TypeExtension_InputObjectTypeExtension2.create = function(value0) {
    return new TypeExtension_InputObjectTypeExtension2(value0);
  };
  return TypeExtension_InputObjectTypeExtension2;
}();
var TypeSystemExtension_SchemaExtension = /* @__PURE__ */ function() {
  function TypeSystemExtension_SchemaExtension2(value0) {
    this.value0 = value0;
  }
  ;
  TypeSystemExtension_SchemaExtension2.create = function(value0) {
    return new TypeSystemExtension_SchemaExtension2(value0);
  };
  return TypeSystemExtension_SchemaExtension2;
}();
var TypeSystemExtension_TypeExtension = /* @__PURE__ */ function() {
  function TypeSystemExtension_TypeExtension2(value0) {
    this.value0 = value0;
  }
  ;
  TypeSystemExtension_TypeExtension2.create = function(value0) {
    return new TypeSystemExtension_TypeExtension2(value0);
  };
  return TypeSystemExtension_TypeExtension2;
}();
var OperationDefinition_SelectionSet = /* @__PURE__ */ function() {
  function OperationDefinition_SelectionSet2(value0) {
    this.value0 = value0;
  }
  ;
  OperationDefinition_SelectionSet2.create = function(value0) {
    return new OperationDefinition_SelectionSet2(value0);
  };
  return OperationDefinition_SelectionSet2;
}();
var OperationDefinition_OperationType = /* @__PURE__ */ function() {
  function OperationDefinition_OperationType2(value0) {
    this.value0 = value0;
  }
  ;
  OperationDefinition_OperationType2.create = function(value0) {
    return new OperationDefinition_OperationType2(value0);
  };
  return OperationDefinition_OperationType2;
}();
var ExecutableDefinition_OperationDefinition = /* @__PURE__ */ function() {
  function ExecutableDefinition_OperationDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  ExecutableDefinition_OperationDefinition2.create = function(value0) {
    return new ExecutableDefinition_OperationDefinition2(value0);
  };
  return ExecutableDefinition_OperationDefinition2;
}();
var ExecutableDefinition_FragmentDefinition = /* @__PURE__ */ function() {
  function ExecutableDefinition_FragmentDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  ExecutableDefinition_FragmentDefinition2.create = function(value0) {
    return new ExecutableDefinition_FragmentDefinition2(value0);
  };
  return ExecutableDefinition_FragmentDefinition2;
}();
var Definition_ExecutableDefinition = /* @__PURE__ */ function() {
  function Definition_ExecutableDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  Definition_ExecutableDefinition2.create = function(value0) {
    return new Definition_ExecutableDefinition2(value0);
  };
  return Definition_ExecutableDefinition2;
}();
var Definition_TypeSystemDefinition = /* @__PURE__ */ function() {
  function Definition_TypeSystemDefinition2(value0) {
    this.value0 = value0;
  }
  ;
  Definition_TypeSystemDefinition2.create = function(value0) {
    return new Definition_TypeSystemDefinition2(value0);
  };
  return Definition_TypeSystemDefinition2;
}();
var Definition_TypeSystemExtension = /* @__PURE__ */ function() {
  function Definition_TypeSystemExtension2(value0) {
    this.value0 = value0;
  }
  ;
  Definition_TypeSystemExtension2.create = function(value0) {
    return new Definition_TypeSystemExtension2(value0);
  };
  return Definition_TypeSystemExtension2;
}();
var Document = function(x) {
  return x;
};
var variableEq = {
  eq: function(x) {
    return function(y) {
      return x === y;
    };
  }
};
var eq5 = /* @__PURE__ */ eq(variableEq);
var variableOrd = {
  compare: function(x) {
    return function(y) {
      return compare4(x)(y);
    };
  },
  Eq0: function() {
    return variableEq;
  }
};
var compare5 = /* @__PURE__ */ compare(variableOrd);
var typeSystemDirectiveLocationEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof SCHEMA && y instanceof SCHEMA) {
        return true;
      }
      ;
      if (x instanceof SCALAR && y instanceof SCALAR) {
        return true;
      }
      ;
      if (x instanceof OBJECT && y instanceof OBJECT) {
        return true;
      }
      ;
      if (x instanceof FIELD_DEFINITION && y instanceof FIELD_DEFINITION) {
        return true;
      }
      ;
      if (x instanceof ARGUMENT_DEFINITION && y instanceof ARGUMENT_DEFINITION) {
        return true;
      }
      ;
      if (x instanceof INTERFACE && y instanceof INTERFACE) {
        return true;
      }
      ;
      if (x instanceof UNION && y instanceof UNION) {
        return true;
      }
      ;
      if (x instanceof ENUM && y instanceof ENUM) {
        return true;
      }
      ;
      if (x instanceof ENUM_VALUE && y instanceof ENUM_VALUE) {
        return true;
      }
      ;
      if (x instanceof INPUT_OBJECT && y instanceof INPUT_OBJECT) {
        return true;
      }
      ;
      if (x instanceof INPUT_FIELD_DEFINITION && y instanceof INPUT_FIELD_DEFINITION) {
        return true;
      }
      ;
      return false;
    };
  }
};
var eq6 = /* @__PURE__ */ eq(typeSystemDirectiveLocationEq);
var typeSystemDirectiveLocationOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof SCHEMA && y instanceof SCHEMA) {
        return EQ.value;
      }
      ;
      if (x instanceof SCHEMA) {
        return LT.value;
      }
      ;
      if (y instanceof SCHEMA) {
        return GT.value;
      }
      ;
      if (x instanceof SCALAR && y instanceof SCALAR) {
        return EQ.value;
      }
      ;
      if (x instanceof SCALAR) {
        return LT.value;
      }
      ;
      if (y instanceof SCALAR) {
        return GT.value;
      }
      ;
      if (x instanceof OBJECT && y instanceof OBJECT) {
        return EQ.value;
      }
      ;
      if (x instanceof OBJECT) {
        return LT.value;
      }
      ;
      if (y instanceof OBJECT) {
        return GT.value;
      }
      ;
      if (x instanceof FIELD_DEFINITION && y instanceof FIELD_DEFINITION) {
        return EQ.value;
      }
      ;
      if (x instanceof FIELD_DEFINITION) {
        return LT.value;
      }
      ;
      if (y instanceof FIELD_DEFINITION) {
        return GT.value;
      }
      ;
      if (x instanceof ARGUMENT_DEFINITION && y instanceof ARGUMENT_DEFINITION) {
        return EQ.value;
      }
      ;
      if (x instanceof ARGUMENT_DEFINITION) {
        return LT.value;
      }
      ;
      if (y instanceof ARGUMENT_DEFINITION) {
        return GT.value;
      }
      ;
      if (x instanceof INTERFACE && y instanceof INTERFACE) {
        return EQ.value;
      }
      ;
      if (x instanceof INTERFACE) {
        return LT.value;
      }
      ;
      if (y instanceof INTERFACE) {
        return GT.value;
      }
      ;
      if (x instanceof UNION && y instanceof UNION) {
        return EQ.value;
      }
      ;
      if (x instanceof UNION) {
        return LT.value;
      }
      ;
      if (y instanceof UNION) {
        return GT.value;
      }
      ;
      if (x instanceof ENUM && y instanceof ENUM) {
        return EQ.value;
      }
      ;
      if (x instanceof ENUM) {
        return LT.value;
      }
      ;
      if (y instanceof ENUM) {
        return GT.value;
      }
      ;
      if (x instanceof ENUM_VALUE && y instanceof ENUM_VALUE) {
        return EQ.value;
      }
      ;
      if (x instanceof ENUM_VALUE) {
        return LT.value;
      }
      ;
      if (y instanceof ENUM_VALUE) {
        return GT.value;
      }
      ;
      if (x instanceof INPUT_OBJECT && y instanceof INPUT_OBJECT) {
        return EQ.value;
      }
      ;
      if (x instanceof INPUT_OBJECT) {
        return LT.value;
      }
      ;
      if (y instanceof INPUT_OBJECT) {
        return GT.value;
      }
      ;
      if (x instanceof INPUT_FIELD_DEFINITION && y instanceof INPUT_FIELD_DEFINITION) {
        return EQ.value;
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return typeSystemDirectiveLocationEq;
  }
};
var compare6 = /* @__PURE__ */ compare(typeSystemDirectiveLocationOrd);
var stringValueEq = {
  eq: function(x) {
    return function(y) {
      return x === y;
    };
  }
};
var eq7 = /* @__PURE__ */ eq(stringValueEq);
var stringValueOrd = {
  compare: function(x) {
    return function(y) {
      return compare4(x)(y);
    };
  },
  Eq0: function() {
    return stringValueEq;
  }
};
var compare7 = /* @__PURE__ */ compare(stringValueOrd);
var operationTypeEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof Query && y instanceof Query) {
        return true;
      }
      ;
      if (x instanceof Mutation && y instanceof Mutation) {
        return true;
      }
      ;
      if (x instanceof Subscription && y instanceof Subscription) {
        return true;
      }
      ;
      return false;
    };
  }
};
var eq8 = /* @__PURE__ */ eq(operationTypeEq);
var operationTypeOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof Query && y instanceof Query) {
        return EQ.value;
      }
      ;
      if (x instanceof Query) {
        return LT.value;
      }
      ;
      if (y instanceof Query) {
        return GT.value;
      }
      ;
      if (x instanceof Mutation && y instanceof Mutation) {
        return EQ.value;
      }
      ;
      if (x instanceof Mutation) {
        return LT.value;
      }
      ;
      if (y instanceof Mutation) {
        return GT.value;
      }
      ;
      if (x instanceof Subscription && y instanceof Subscription) {
        return EQ.value;
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return operationTypeEq;
  }
};
var compare8 = /* @__PURE__ */ compare(operationTypeOrd);
var nullValueEq = {
  eq: function(x) {
    return function(y) {
      return true;
    };
  }
};
var eq9 = /* @__PURE__ */ eq(nullValueEq);
var nullValueOrd = {
  compare: function(x) {
    return function(y) {
      return EQ.value;
    };
  },
  Eq0: function() {
    return nullValueEq;
  }
};
var compare9 = /* @__PURE__ */ compare(nullValueOrd);
var namedTypeEq = {
  eq: function(x) {
    return function(y) {
      return x === y;
    };
  }
};
var eq10 = /* @__PURE__ */ eq(namedTypeEq);
var eq11 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(namedTypeEq));
var namedTypeOrd = {
  compare: function(x) {
    return function(y) {
      return compare4(x)(y);
    };
  },
  Eq0: function() {
    return namedTypeEq;
  }
};
var compare10 = /* @__PURE__ */ compare(namedTypeOrd);
var compare11 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(namedTypeOrd));
var operationTypeDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq10(x.namedType)(y.namedType) && eq8(x.operationType)(y.operationType);
    };
  }
};
var eq122 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(operationTypeDefinitionEq));
var operationTypeDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare10(x.namedType)(y.namedType);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      return compare8(x.operationType)(y.operationType);
    };
  },
  Eq0: function() {
    return operationTypeDefinitionEq;
  }
};
var compare122 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(operationTypeDefinitionOrd));
var rootOperationTypeDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq10(x.namedType)(y.namedType) && eq8(x.operationType)(y.operationType);
    };
  }
};
var eq13 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(rootOperationTypeDefinitionEq));
var rootOperationTypeDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare10(x.namedType)(y.namedType);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      return compare8(x.operationType)(y.operationType);
    };
  },
  Eq0: function() {
    return rootOperationTypeDefinitionEq;
  }
};
var compare132 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(rootOperationTypeDefinitionOrd));
var typeConditionEq = {
  eq: function(x) {
    return function(y) {
      return eq10(x)(y);
    };
  }
};
var eq14 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(typeConditionEq));
var eq15 = /* @__PURE__ */ eq(typeConditionEq);
var typeConditionOrd = {
  compare: function(x) {
    return function(y) {
      return compare10(x)(y);
    };
  },
  Eq0: function() {
    return typeConditionEq;
  }
};
var compare14 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(typeConditionOrd));
var compare15 = /* @__PURE__ */ compare(typeConditionOrd);
var unionMemberTypesEq = {
  eq: function(x) {
    return function(y) {
      return eq11(x)(y);
    };
  }
};
var eq16 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(unionMemberTypesEq));
var eq17 = /* @__PURE__ */ eq(unionMemberTypesEq);
var unionMemberTypesOrd = {
  compare: function(x) {
    return function(y) {
      return compare11(x)(y);
    };
  },
  Eq0: function() {
    return unionMemberTypesEq;
  }
};
var compare16 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(unionMemberTypesOrd));
var compare17 = /* @__PURE__ */ compare(unionMemberTypesOrd);
var typeEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof Type_NamedType && y instanceof Type_NamedType) {
        return eq10(x.value0)(y.value0);
      }
      ;
      if (x instanceof Type_ListType && y instanceof Type_ListType) {
        return eq(listTypeEq)(x.value0)(y.value0);
      }
      ;
      if (x instanceof Type_NonNullType && y instanceof Type_NonNullType) {
        return eq(nonNullTypeEq)(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var nonNullTypeEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof NonNullType_NamedType && y instanceof NonNullType_NamedType) {
        return eq10(x.value0)(y.value0);
      }
      ;
      if (x instanceof NonNullType_ListType && y instanceof NonNullType_ListType) {
        return eq(listTypeEq)(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var listTypeEq = {
  eq: function(x) {
    return function(y) {
      return eq(typeEq)(x)(y);
    };
  }
};
var eq18 = /* @__PURE__ */ eq(typeEq);
var typeOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof Type_NamedType && y instanceof Type_NamedType) {
        return compare10(x.value0)(y.value0);
      }
      ;
      if (x instanceof Type_NamedType) {
        return LT.value;
      }
      ;
      if (y instanceof Type_NamedType) {
        return GT.value;
      }
      ;
      if (x instanceof Type_ListType && y instanceof Type_ListType) {
        return compare(listTypeOrd)(x.value0)(y.value0);
      }
      ;
      if (x instanceof Type_ListType) {
        return LT.value;
      }
      ;
      if (y instanceof Type_ListType) {
        return GT.value;
      }
      ;
      if (x instanceof Type_NonNullType && y instanceof Type_NonNullType) {
        return compare(nonNullTypeOrd)(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return typeEq;
  }
};
var nonNullTypeOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof NonNullType_NamedType && y instanceof NonNullType_NamedType) {
        return compare10(x.value0)(y.value0);
      }
      ;
      if (x instanceof NonNullType_NamedType) {
        return LT.value;
      }
      ;
      if (y instanceof NonNullType_NamedType) {
        return GT.value;
      }
      ;
      if (x instanceof NonNullType_ListType && y instanceof NonNullType_ListType) {
        return compare(listTypeOrd)(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return nonNullTypeEq;
  }
};
var listTypeOrd = {
  compare: function(x) {
    return function(y) {
      return compare(typeOrd)(x)(y);
    };
  },
  Eq0: function() {
    return listTypeEq;
  }
};
var compare18 = /* @__PURE__ */ compare(typeOrd);
var intValueEq = {
  eq: function(x) {
    return function(y) {
      return x === y;
    };
  }
};
var eq19 = /* @__PURE__ */ eq(intValueEq);
var intValueOrd = {
  compare: function(x) {
    return function(y) {
      return compare13(x)(y);
    };
  },
  Eq0: function() {
    return intValueEq;
  }
};
var compare19 = /* @__PURE__ */ compare(intValueOrd);
var implementsInterfacesEq = {
  eq: function(x) {
    return function(y) {
      return eq11(x)(y);
    };
  }
};
var eq20 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(implementsInterfacesEq));
var eq21 = /* @__PURE__ */ eq(implementsInterfacesEq);
var implementsInterfacesOrd = {
  compare: function(x) {
    return function(y) {
      return compare11(x)(y);
    };
  },
  Eq0: function() {
    return implementsInterfacesEq;
  }
};
var compare20 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(implementsInterfacesOrd));
var compare21 = /* @__PURE__ */ compare(implementsInterfacesOrd);
var floatValueEq = {
  eq: function(x) {
    return function(y) {
      return x === y;
    };
  }
};
var eq22 = /* @__PURE__ */ eq(floatValueEq);
var floatValueOrd = {
  compare: function(x) {
    return function(y) {
      return compare22(x)(y);
    };
  },
  Eq0: function() {
    return floatValueEq;
  }
};
var compare222 = /* @__PURE__ */ compare(floatValueOrd);
var executableDirectiveLocationEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof QUERY && y instanceof QUERY) {
        return true;
      }
      ;
      if (x instanceof MUTATION && y instanceof MUTATION) {
        return true;
      }
      ;
      if (x instanceof SUBSCRIPTION && y instanceof SUBSCRIPTION) {
        return true;
      }
      ;
      if (x instanceof FIELD && y instanceof FIELD) {
        return true;
      }
      ;
      if (x instanceof FRAGMENT_DEFINITION && y instanceof FRAGMENT_DEFINITION) {
        return true;
      }
      ;
      if (x instanceof FRAGMENT_SPREAD && y instanceof FRAGMENT_SPREAD) {
        return true;
      }
      ;
      if (x instanceof INLINE_FRAGMENT && y instanceof INLINE_FRAGMENT) {
        return true;
      }
      ;
      return false;
    };
  }
};
var eq23 = /* @__PURE__ */ eq(executableDirectiveLocationEq);
var executableDirectiveLocationOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof QUERY && y instanceof QUERY) {
        return EQ.value;
      }
      ;
      if (x instanceof QUERY) {
        return LT.value;
      }
      ;
      if (y instanceof QUERY) {
        return GT.value;
      }
      ;
      if (x instanceof MUTATION && y instanceof MUTATION) {
        return EQ.value;
      }
      ;
      if (x instanceof MUTATION) {
        return LT.value;
      }
      ;
      if (y instanceof MUTATION) {
        return GT.value;
      }
      ;
      if (x instanceof SUBSCRIPTION && y instanceof SUBSCRIPTION) {
        return EQ.value;
      }
      ;
      if (x instanceof SUBSCRIPTION) {
        return LT.value;
      }
      ;
      if (y instanceof SUBSCRIPTION) {
        return GT.value;
      }
      ;
      if (x instanceof FIELD && y instanceof FIELD) {
        return EQ.value;
      }
      ;
      if (x instanceof FIELD) {
        return LT.value;
      }
      ;
      if (y instanceof FIELD) {
        return GT.value;
      }
      ;
      if (x instanceof FRAGMENT_DEFINITION && y instanceof FRAGMENT_DEFINITION) {
        return EQ.value;
      }
      ;
      if (x instanceof FRAGMENT_DEFINITION) {
        return LT.value;
      }
      ;
      if (y instanceof FRAGMENT_DEFINITION) {
        return GT.value;
      }
      ;
      if (x instanceof FRAGMENT_SPREAD && y instanceof FRAGMENT_SPREAD) {
        return EQ.value;
      }
      ;
      if (x instanceof FRAGMENT_SPREAD) {
        return LT.value;
      }
      ;
      if (y instanceof FRAGMENT_SPREAD) {
        return GT.value;
      }
      ;
      if (x instanceof INLINE_FRAGMENT && y instanceof INLINE_FRAGMENT) {
        return EQ.value;
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return executableDirectiveLocationEq;
  }
};
var compare23 = /* @__PURE__ */ compare(executableDirectiveLocationOrd);
var enumValueEq = {
  eq: function(x) {
    return function(y) {
      return x === y;
    };
  }
};
var eq24 = /* @__PURE__ */ eq(enumValueEq);
var enumValueOrd = {
  compare: function(x) {
    return function(y) {
      return compare4(x)(y);
    };
  },
  Eq0: function() {
    return enumValueEq;
  }
};
var compare24 = /* @__PURE__ */ compare(enumValueOrd);
var directiveLocationEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof DirectiveLocation_ExecutableDirectiveLocation && y instanceof DirectiveLocation_ExecutableDirectiveLocation) {
        return eq23(x.value0)(y.value0);
      }
      ;
      if (x instanceof DirectiveLocation_TypeSystemDirectiveLocation && y instanceof DirectiveLocation_TypeSystemDirectiveLocation) {
        return eq6(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var eq25 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(directiveLocationEq));
var directiveLocationOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof DirectiveLocation_ExecutableDirectiveLocation && y instanceof DirectiveLocation_ExecutableDirectiveLocation) {
        return compare23(x.value0)(y.value0);
      }
      ;
      if (x instanceof DirectiveLocation_ExecutableDirectiveLocation) {
        return LT.value;
      }
      ;
      if (y instanceof DirectiveLocation_ExecutableDirectiveLocation) {
        return GT.value;
      }
      ;
      if (x instanceof DirectiveLocation_TypeSystemDirectiveLocation && y instanceof DirectiveLocation_TypeSystemDirectiveLocation) {
        return compare6(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return directiveLocationEq;
  }
};
var compare25 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(directiveLocationOrd));
var directiveLocationsEq = {
  eq: function(x) {
    return function(y) {
      return eq25(x)(y);
    };
  }
};
var eq26 = /* @__PURE__ */ eq(directiveLocationsEq);
var directiveLocationsOrd = {
  compare: function(x) {
    return function(y) {
      return compare25(x)(y);
    };
  },
  Eq0: function() {
    return directiveLocationsEq;
  }
};
var compare26 = /* @__PURE__ */ compare(directiveLocationsOrd);
var booleanValueEq = {
  eq: function(x) {
    return function(y) {
      return x === y;
    };
  }
};
var eq27 = /* @__PURE__ */ eq(booleanValueEq);
var booleanValueOrd = {
  compare: function(x) {
    return function(y) {
      return compare32(x)(y);
    };
  },
  Eq0: function() {
    return booleanValueEq;
  }
};
var compare27 = /* @__PURE__ */ compare(booleanValueOrd);
var valueEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof Value_Variable && y instanceof Value_Variable) {
        return eq5(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_IntValue && y instanceof Value_IntValue) {
        return eq19(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_FloatValue && y instanceof Value_FloatValue) {
        return eq22(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_StringValue && y instanceof Value_StringValue) {
        return eq7(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_BooleanValue && y instanceof Value_BooleanValue) {
        return eq27(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_NullValue && y instanceof Value_NullValue) {
        return eq9(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_EnumValue && y instanceof Value_EnumValue) {
        return eq24(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_ListValue && y instanceof Value_ListValue) {
        return eq(listValueEq)(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_ObjectValue && y instanceof Value_ObjectValue) {
        return eq(objectValueEq)(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var objectValueEq = {
  eq: function(x) {
    return function(y) {
      return eq(eqList(argumentEq))(x)(y);
    };
  }
};
var listValueEq = {
  eq: function(x) {
    return function(y) {
      return eq(eqList(valueEq))(x)(y);
    };
  }
};
var argumentEq = {
  eq: function(x) {
    return function(y) {
      return x.name === y.name && eq(valueEq)(x.value)(y.value);
    };
  }
};
var eq28 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(argumentEq));
var eq29 = /* @__PURE__ */ eq(valueEq);
var argumentsEq = {
  eq: function(x) {
    return function(y) {
      return eq28(x)(y);
    };
  }
};
var eq30 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(argumentsEq));
var directiveEq = {
  eq: function(x) {
    return function(y) {
      return eq30(x["arguments"])(y["arguments"]) && x.name === y.name;
    };
  }
};
var eq31 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(directiveEq));
var directivesEq = {
  eq: function(x) {
    return function(y) {
      return eq31(x)(y);
    };
  }
};
var eq32 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(directivesEq));
var eq33 = /* @__PURE__ */ eq(directivesEq);
var enumValueDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq4(x.description)(y.description) && eq32(x.directives)(y.directives) && eq24(x.enumValue)(y.enumValue);
    };
  }
};
var eq34 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(enumValueDefinitionEq));
var enumValuesDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq34(x)(y);
    };
  }
};
var eq35 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(enumValuesDefinitionEq));
var eq36 = /* @__PURE__ */ eq(enumValuesDefinitionEq);
var enumTypeDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq4(x.description)(y.description) && eq32(x.directives)(y.directives) && eq35(x.enumValuesDefinition)(y.enumValuesDefinition) && x.name === y.name;
    };
  }
};
var eq37 = /* @__PURE__ */ eq(enumTypeDefinitionEq);
var enumTypeExtensionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof EnumTypeExtension_With_EnumValuesDefinition && y instanceof EnumTypeExtension_With_EnumValuesDefinition) {
        return eq32(x.value0.directives)(y.value0.directives) && eq36(x.value0.enumValuesDefinition)(y.value0.enumValuesDefinition) && x.value0.name === y.value0.name;
      }
      ;
      if (x instanceof EnumTypeExtension_With_Directives && y instanceof EnumTypeExtension_With_Directives) {
        return eq33(x.value0.directives)(y.value0.directives) && x.value0.name === y.value0.name;
      }
      ;
      return false;
    };
  }
};
var eq38 = /* @__PURE__ */ eq(enumTypeExtensionEq);
var fragmentSpreadEq = {
  eq: function(x) {
    return function(y) {
      return eq32(x.directives)(y.directives) && x.fragmentName === y.fragmentName;
    };
  }
};
var eq39 = /* @__PURE__ */ eq(fragmentSpreadEq);
var scalarTypeDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq4(x.description)(y.description) && eq32(x.directives)(y.directives) && x.name === y.name;
    };
  }
};
var eq40 = /* @__PURE__ */ eq(scalarTypeDefinitionEq);
var scalarTypeExtensionEq = {
  eq: function(x) {
    return function(y) {
      return eq33(x.directives)(y.directives) && x.name === y.name;
    };
  }
};
var eq41 = /* @__PURE__ */ eq(scalarTypeExtensionEq);
var schemaDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq32(x.directives)(y.directives) && eq13(x.rootOperationTypeDefinition)(y.rootOperationTypeDefinition);
    };
  }
};
var eq42 = /* @__PURE__ */ eq(schemaDefinitionEq);
var schemaExtensionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof SchemaExtension_With_OperationTypeDefinition && y instanceof SchemaExtension_With_OperationTypeDefinition) {
        return eq32(x.value0.directives)(y.value0.directives) && eq122(x.value0.operationTypesDefinition)(y.value0.operationTypesDefinition);
      }
      ;
      if (x instanceof SchemaExtension_With_Directives && y instanceof SchemaExtension_With_Directives) {
        return eq33(x.value0.directives)(y.value0.directives);
      }
      ;
      return false;
    };
  }
};
var eq43 = /* @__PURE__ */ eq(schemaExtensionEq);
var unionTypeDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq4(x.description)(y.description) && eq32(x.directives)(y.directives) && x.name === y.name && eq16(x.unionMemberTypes)(y.unionMemberTypes);
    };
  }
};
var eq44 = /* @__PURE__ */ eq(unionTypeDefinitionEq);
var unionTypeExtensionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof UnionTypeExtension_With_UnionMemberTypes && y instanceof UnionTypeExtension_With_UnionMemberTypes) {
        return eq32(x.value0.directives)(y.value0.directives) && x.value0.name === y.value0.name && eq17(x.value0.unionMemberTypes)(y.value0.unionMemberTypes);
      }
      ;
      if (x instanceof UnionTypeExtension_With_Directives && y instanceof UnionTypeExtension_With_Directives) {
        return eq33(x.value0.directives)(y.value0.directives) && x.value0.name === y.value0.name;
      }
      ;
      return false;
    };
  }
};
var eq45 = /* @__PURE__ */ eq(unionTypeExtensionEq);
var selectionSetEq = {
  eq: function(x) {
    return function(y) {
      return eq(eqList(selectionEq))(x)(y);
    };
  }
};
var selectionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof Selection_Field && y instanceof Selection_Field) {
        return eq(fieldEq)(x.value0)(y.value0);
      }
      ;
      if (x instanceof Selection_FragmentSpread && y instanceof Selection_FragmentSpread) {
        return eq39(x.value0)(y.value0);
      }
      ;
      if (x instanceof Selection_InlineFragment && y instanceof Selection_InlineFragment) {
        return eq(inlineFragmentEq)(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var inlineFragmentEq = {
  eq: function(x) {
    return function(y) {
      return eq32(x.directives)(y.directives) && eq(selectionSetEq)(x.selectionSet)(y.selectionSet) && eq14(x.typeCondition)(y.typeCondition);
    };
  }
};
var fieldEq = {
  eq: function(x) {
    return function(y) {
      return eq4(x.alias)(y.alias) && eq30(x["arguments"])(y["arguments"]) && eq32(x.directives)(y.directives) && x.name === y.name && eq(eqMaybe(selectionSetEq))(x.selectionSet)(y.selectionSet);
    };
  }
};
var eq46 = /* @__PURE__ */ eq(selectionSetEq);
var fragmentDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq32(x.directives)(y.directives) && x.fragmentName === y.fragmentName && eq46(x.selectionSet)(y.selectionSet) && eq15(x.typeCondition)(y.typeCondition);
    };
  }
};
var eq47 = /* @__PURE__ */ eq(fragmentDefinitionEq);
var defaultValueEq = {
  eq: function(x) {
    return function(y) {
      return eq29(x)(y);
    };
  }
};
var eq48 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(defaultValueEq));
var inputValueDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq48(x.defaultValue)(y.defaultValue) && eq4(x.description)(y.description) && eq32(x.directives)(y.directives) && x.name === y.name && eq18(x.type)(y.type);
    };
  }
};
var eq49 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(inputValueDefinitionEq));
var argumentsDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq49(x)(y);
    };
  }
};
var eq50 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(argumentsDefinitionEq));
var directiveDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq50(x.argumentsDefinition)(y.argumentsDefinition) && eq4(x.description)(y.description) && eq26(x.directiveLocations)(y.directiveLocations) && x.name === y.name;
    };
  }
};
var eq51 = /* @__PURE__ */ eq(directiveDefinitionEq);
var fieldDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq50(x.argumentsDefinition)(y.argumentsDefinition) && eq4(x.description)(y.description) && eq32(x.directives)(y.directives) && x.name === y.name && eq18(x.type)(y.type);
    };
  }
};
var eq52 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(fieldDefinitionEq));
var fieldsDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq52(x)(y);
    };
  }
};
var eq53 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(fieldsDefinitionEq));
var eq54 = /* @__PURE__ */ eq(fieldsDefinitionEq);
var interfaceTypeDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq4(x.description)(y.description) && eq32(x.directives)(y.directives) && eq53(x.fieldsDefinition)(y.fieldsDefinition) && x.name === y.name;
    };
  }
};
var eq55 = /* @__PURE__ */ eq(interfaceTypeDefinitionEq);
var interfaceTypeExtensionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof InterfaceTypeExtension_With_FieldsDefinition && y instanceof InterfaceTypeExtension_With_FieldsDefinition) {
        return eq32(x.value0.directives)(y.value0.directives) && eq54(x.value0.fieldsDefinition)(y.value0.fieldsDefinition) && x.value0.name === y.value0.name;
      }
      ;
      if (x instanceof InterfaceTypeExtension_With_Directives && y instanceof InterfaceTypeExtension_With_Directives) {
        return eq33(x.value0.directives)(y.value0.directives) && x.value0.name === y.value0.name;
      }
      ;
      return false;
    };
  }
};
var eq56 = /* @__PURE__ */ eq(interfaceTypeExtensionEq);
var objectTypeDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq4(x.description)(y.description) && eq32(x.directives)(y.directives) && eq53(x.fieldsDefinition)(y.fieldsDefinition) && eq20(x.implementsInterfaces)(y.implementsInterfaces) && x.name === y.name;
    };
  }
};
var eq57 = /* @__PURE__ */ eq(objectTypeDefinitionEq);
var objectTypeExtensionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof ObjectTypeExtension_With_FieldsDefinition && y instanceof ObjectTypeExtension_With_FieldsDefinition) {
        return eq32(x.value0.directives)(y.value0.directives) && eq54(x.value0.fieldsDefinition)(y.value0.fieldsDefinition) && eq20(x.value0.implementsInterfaces)(y.value0.implementsInterfaces) && x.value0.name === y.value0.name;
      }
      ;
      if (x instanceof ObjectTypeExtension_With_Directives && y instanceof ObjectTypeExtension_With_Directives) {
        return eq33(x.value0.directives)(y.value0.directives) && eq20(x.value0.implementsInterfaces)(y.value0.implementsInterfaces) && x.value0.name === y.value0.name;
      }
      ;
      if (x instanceof ObjectTypeExtension_With_ImplementsInterfaces && y instanceof ObjectTypeExtension_With_ImplementsInterfaces) {
        return eq21(x.value0.implementsInterfaces)(y.value0.implementsInterfaces) && x.value0.name === y.value0.name;
      }
      ;
      return false;
    };
  }
};
var eq58 = /* @__PURE__ */ eq(objectTypeExtensionEq);
var inputFieldsDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq49(x)(y);
    };
  }
};
var eq59 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(inputFieldsDefinitionEq));
var eq60 = /* @__PURE__ */ eq(inputFieldsDefinitionEq);
var inputObjectTypeDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq4(x.description)(y.description) && eq32(x.directives)(y.directives) && eq59(x.inputFieldsDefinition)(y.inputFieldsDefinition) && x.name === y.name;
    };
  }
};
var eq61 = /* @__PURE__ */ eq(inputObjectTypeDefinitionEq);
var typeDefinitionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof TypeDefinition_ScalarTypeDefinition && y instanceof TypeDefinition_ScalarTypeDefinition) {
        return eq40(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_ObjectTypeDefinition && y instanceof TypeDefinition_ObjectTypeDefinition) {
        return eq57(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_InterfaceTypeDefinition && y instanceof TypeDefinition_InterfaceTypeDefinition) {
        return eq55(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_UnionTypeDefinition && y instanceof TypeDefinition_UnionTypeDefinition) {
        return eq44(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_EnumTypeDefinition && y instanceof TypeDefinition_EnumTypeDefinition) {
        return eq37(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_InputObjectTypeDefinition && y instanceof TypeDefinition_InputObjectTypeDefinition) {
        return eq61(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var eq62 = /* @__PURE__ */ eq(typeDefinitionEq);
var typeSystemDefinitionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof TypeSystemDefinition_SchemaDefinition && y instanceof TypeSystemDefinition_SchemaDefinition) {
        return eq42(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeSystemDefinition_TypeDefinition && y instanceof TypeSystemDefinition_TypeDefinition) {
        return eq62(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeSystemDefinition_DirectiveDefinition && y instanceof TypeSystemDefinition_DirectiveDefinition) {
        return eq51(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var eq63 = /* @__PURE__ */ eq(typeSystemDefinitionEq);
var inputObjectTypeExtensionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof InputObjectTypeExtension_With_InputFieldsDefinition && y instanceof InputObjectTypeExtension_With_InputFieldsDefinition) {
        return eq32(x.value0.directives)(y.value0.directives) && eq60(x.value0.inputFieldsDefinition)(y.value0.inputFieldsDefinition) && x.value0.name === y.value0.name;
      }
      ;
      if (x instanceof InputObjectTypeExtension_With_Directives && y instanceof InputObjectTypeExtension_With_Directives) {
        return eq33(x.value0.directives)(y.value0.directives) && x.value0.name === y.value0.name;
      }
      ;
      return false;
    };
  }
};
var eq64 = /* @__PURE__ */ eq(inputObjectTypeExtensionEq);
var typeExtensionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof TypeExtension_ScalarTypeExtension && y instanceof TypeExtension_ScalarTypeExtension) {
        return eq41(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_ObjectTypeExtension && y instanceof TypeExtension_ObjectTypeExtension) {
        return eq58(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_InterfaceTypeExtension && y instanceof TypeExtension_InterfaceTypeExtension) {
        return eq56(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_UnionTypeExtension && y instanceof TypeExtension_UnionTypeExtension) {
        return eq45(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_EnumTypeExtension && y instanceof TypeExtension_EnumTypeExtension) {
        return eq38(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_InputObjectTypeExtension && y instanceof TypeExtension_InputObjectTypeExtension) {
        return eq64(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var eq65 = /* @__PURE__ */ eq(typeExtensionEq);
var typeSystemExtensionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof TypeSystemExtension_SchemaExtension && y instanceof TypeSystemExtension_SchemaExtension) {
        return eq43(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeSystemExtension_TypeExtension && y instanceof TypeSystemExtension_TypeExtension) {
        return eq65(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var eq66 = /* @__PURE__ */ eq(typeSystemExtensionEq);
var variableDefinitionEq = {
  eq: function(x) {
    return function(y) {
      return eq48(x.defaultValue)(y.defaultValue) && eq18(x.type)(y.type) && eq5(x.variable)(y.variable);
    };
  }
};
var eq67 = /* @__PURE__ */ eq(/* @__PURE__ */ eqList(variableDefinitionEq));
var variableDefinitionsEq = {
  eq: function(x) {
    return function(y) {
      return eq67(x)(y);
    };
  }
};
var eq68 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(variableDefinitionsEq));
var operationDefinitionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof OperationDefinition_SelectionSet && y instanceof OperationDefinition_SelectionSet) {
        return eq46(x.value0)(y.value0);
      }
      ;
      if (x instanceof OperationDefinition_OperationType && y instanceof OperationDefinition_OperationType) {
        return eq32(x.value0.directives)(y.value0.directives) && eq4(x.value0.name)(y.value0.name) && eq8(x.value0.operationType)(y.value0.operationType) && eq46(x.value0.selectionSet)(y.value0.selectionSet) && eq68(x.value0.variableDefinitions)(y.value0.variableDefinitions);
      }
      ;
      return false;
    };
  }
};
var eq69 = /* @__PURE__ */ eq(operationDefinitionEq);
var executableDefinitionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof ExecutableDefinition_OperationDefinition && y instanceof ExecutableDefinition_OperationDefinition) {
        return eq69(x.value0)(y.value0);
      }
      ;
      if (x instanceof ExecutableDefinition_FragmentDefinition && y instanceof ExecutableDefinition_FragmentDefinition) {
        return eq47(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var eq70 = /* @__PURE__ */ eq(executableDefinitionEq);
var definitionEq = {
  eq: function(x) {
    return function(y) {
      if (x instanceof Definition_ExecutableDefinition && y instanceof Definition_ExecutableDefinition) {
        return eq70(x.value0)(y.value0);
      }
      ;
      if (x instanceof Definition_TypeSystemDefinition && y instanceof Definition_TypeSystemDefinition) {
        return eq63(x.value0)(y.value0);
      }
      ;
      if (x instanceof Definition_TypeSystemExtension && y instanceof Definition_TypeSystemExtension) {
        return eq66(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var valueOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof Value_Variable && y instanceof Value_Variable) {
        return compare5(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_Variable) {
        return LT.value;
      }
      ;
      if (y instanceof Value_Variable) {
        return GT.value;
      }
      ;
      if (x instanceof Value_IntValue && y instanceof Value_IntValue) {
        return compare19(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_IntValue) {
        return LT.value;
      }
      ;
      if (y instanceof Value_IntValue) {
        return GT.value;
      }
      ;
      if (x instanceof Value_FloatValue && y instanceof Value_FloatValue) {
        return compare222(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_FloatValue) {
        return LT.value;
      }
      ;
      if (y instanceof Value_FloatValue) {
        return GT.value;
      }
      ;
      if (x instanceof Value_StringValue && y instanceof Value_StringValue) {
        return compare7(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_StringValue) {
        return LT.value;
      }
      ;
      if (y instanceof Value_StringValue) {
        return GT.value;
      }
      ;
      if (x instanceof Value_BooleanValue && y instanceof Value_BooleanValue) {
        return compare27(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_BooleanValue) {
        return LT.value;
      }
      ;
      if (y instanceof Value_BooleanValue) {
        return GT.value;
      }
      ;
      if (x instanceof Value_NullValue && y instanceof Value_NullValue) {
        return compare9(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_NullValue) {
        return LT.value;
      }
      ;
      if (y instanceof Value_NullValue) {
        return GT.value;
      }
      ;
      if (x instanceof Value_EnumValue && y instanceof Value_EnumValue) {
        return compare24(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_EnumValue) {
        return LT.value;
      }
      ;
      if (y instanceof Value_EnumValue) {
        return GT.value;
      }
      ;
      if (x instanceof Value_ListValue && y instanceof Value_ListValue) {
        return compare(listValueOrd)(x.value0)(y.value0);
      }
      ;
      if (x instanceof Value_ListValue) {
        return LT.value;
      }
      ;
      if (y instanceof Value_ListValue) {
        return GT.value;
      }
      ;
      if (x instanceof Value_ObjectValue && y instanceof Value_ObjectValue) {
        return compare(objectValueOrd)(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return valueEq;
  }
};
var objectValueOrd = {
  compare: function(x) {
    return function(y) {
      return compare(ordList(argumentOrd))(x)(y);
    };
  },
  Eq0: function() {
    return objectValueEq;
  }
};
var listValueOrd = {
  compare: function(x) {
    return function(y) {
      return compare(ordList(valueOrd))(x)(y);
    };
  },
  Eq0: function() {
    return listValueEq;
  }
};
var argumentOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare4(x.name)(y.name);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      return compare(valueOrd)(x.value)(y.value);
    };
  },
  Eq0: function() {
    return argumentEq;
  }
};
var compare28 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(argumentOrd));
var compare29 = /* @__PURE__ */ compare(valueOrd);
var argumentsOrd = {
  compare: function(x) {
    return function(y) {
      return compare28(x)(y);
    };
  },
  Eq0: function() {
    return argumentsEq;
  }
};
var compare30 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(argumentsOrd));
var directiveOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare30(x["arguments"])(y["arguments"]);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      return compare4(x.name)(y.name);
    };
  },
  Eq0: function() {
    return directiveEq;
  }
};
var compare31 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(directiveOrd));
var directivesOrd = {
  compare: function(x) {
    return function(y) {
      return compare31(x)(y);
    };
  },
  Eq0: function() {
    return directivesEq;
  }
};
var compare322 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(directivesOrd));
var compare33 = /* @__PURE__ */ compare(directivesOrd);
var enumValueDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare42(x.description)(y.description);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare322(x.directives)(y.directives);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      return compare24(x.enumValue)(y.enumValue);
    };
  },
  Eq0: function() {
    return enumValueDefinitionEq;
  }
};
var compare34 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(enumValueDefinitionOrd));
var enumValuesDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      return compare34(x)(y);
    };
  },
  Eq0: function() {
    return enumValuesDefinitionEq;
  }
};
var compare35 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(enumValuesDefinitionOrd));
var compare36 = /* @__PURE__ */ compare(enumValuesDefinitionOrd);
var enumTypeDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare42(x.description)(y.description);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare322(x.directives)(y.directives);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare35(x.enumValuesDefinition)(y.enumValuesDefinition);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      return compare4(x.name)(y.name);
    };
  },
  Eq0: function() {
    return enumTypeDefinitionEq;
  }
};
var compare37 = /* @__PURE__ */ compare(enumTypeDefinitionOrd);
var enumTypeExtensionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof EnumTypeExtension_With_EnumValuesDefinition && y instanceof EnumTypeExtension_With_EnumValuesDefinition) {
        var v = compare322(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        var v1 = compare36(x.value0.enumValuesDefinition)(y.value0.enumValuesDefinition);
        if (v1 instanceof LT) {
          return LT.value;
        }
        ;
        if (v1 instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      if (x instanceof EnumTypeExtension_With_EnumValuesDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof EnumTypeExtension_With_EnumValuesDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof EnumTypeExtension_With_Directives && y instanceof EnumTypeExtension_With_Directives) {
        var v = compare33(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return enumTypeExtensionEq;
  }
};
var compare38 = /* @__PURE__ */ compare(enumTypeExtensionOrd);
var fragmentSpreadOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare322(x.directives)(y.directives);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      return compare4(x.fragmentName)(y.fragmentName);
    };
  },
  Eq0: function() {
    return fragmentSpreadEq;
  }
};
var compare39 = /* @__PURE__ */ compare(fragmentSpreadOrd);
var scalarTypeDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare42(x.description)(y.description);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare322(x.directives)(y.directives);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      return compare4(x.name)(y.name);
    };
  },
  Eq0: function() {
    return scalarTypeDefinitionEq;
  }
};
var compare40 = /* @__PURE__ */ compare(scalarTypeDefinitionOrd);
var scalarTypeExtensionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare33(x.directives)(y.directives);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      return compare4(x.name)(y.name);
    };
  },
  Eq0: function() {
    return scalarTypeExtensionEq;
  }
};
var compare41 = /* @__PURE__ */ compare(scalarTypeExtensionOrd);
var schemaDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare322(x.directives)(y.directives);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      return compare132(x.rootOperationTypeDefinition)(y.rootOperationTypeDefinition);
    };
  },
  Eq0: function() {
    return schemaDefinitionEq;
  }
};
var compare422 = /* @__PURE__ */ compare(schemaDefinitionOrd);
var schemaExtensionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof SchemaExtension_With_OperationTypeDefinition && y instanceof SchemaExtension_With_OperationTypeDefinition) {
        var v = compare322(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        return compare122(x.value0.operationTypesDefinition)(y.value0.operationTypesDefinition);
      }
      ;
      if (x instanceof SchemaExtension_With_OperationTypeDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof SchemaExtension_With_OperationTypeDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof SchemaExtension_With_Directives && y instanceof SchemaExtension_With_Directives) {
        return compare33(x.value0.directives)(y.value0.directives);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return schemaExtensionEq;
  }
};
var compare43 = /* @__PURE__ */ compare(schemaExtensionOrd);
var unionTypeDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare42(x.description)(y.description);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare322(x.directives)(y.directives);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare4(x.name)(y.name);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      return compare16(x.unionMemberTypes)(y.unionMemberTypes);
    };
  },
  Eq0: function() {
    return unionTypeDefinitionEq;
  }
};
var compare44 = /* @__PURE__ */ compare(unionTypeDefinitionOrd);
var unionTypeExtensionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof UnionTypeExtension_With_UnionMemberTypes && y instanceof UnionTypeExtension_With_UnionMemberTypes) {
        var v = compare322(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        var v1 = compare4(x.value0.name)(y.value0.name);
        if (v1 instanceof LT) {
          return LT.value;
        }
        ;
        if (v1 instanceof GT) {
          return GT.value;
        }
        ;
        return compare17(x.value0.unionMemberTypes)(y.value0.unionMemberTypes);
      }
      ;
      if (x instanceof UnionTypeExtension_With_UnionMemberTypes) {
        return LT.value;
      }
      ;
      if (y instanceof UnionTypeExtension_With_UnionMemberTypes) {
        return GT.value;
      }
      ;
      if (x instanceof UnionTypeExtension_With_Directives && y instanceof UnionTypeExtension_With_Directives) {
        var v = compare33(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return unionTypeExtensionEq;
  }
};
var compare45 = /* @__PURE__ */ compare(unionTypeExtensionOrd);
var selectionSetOrd = {
  compare: function(x) {
    return function(y) {
      return compare(ordList(selectionOrd))(x)(y);
    };
  },
  Eq0: function() {
    return selectionSetEq;
  }
};
var selectionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof Selection_Field && y instanceof Selection_Field) {
        return compare(fieldOrd)(x.value0)(y.value0);
      }
      ;
      if (x instanceof Selection_Field) {
        return LT.value;
      }
      ;
      if (y instanceof Selection_Field) {
        return GT.value;
      }
      ;
      if (x instanceof Selection_FragmentSpread && y instanceof Selection_FragmentSpread) {
        return compare39(x.value0)(y.value0);
      }
      ;
      if (x instanceof Selection_FragmentSpread) {
        return LT.value;
      }
      ;
      if (y instanceof Selection_FragmentSpread) {
        return GT.value;
      }
      ;
      if (x instanceof Selection_InlineFragment && y instanceof Selection_InlineFragment) {
        return compare(inlineFragmentOrd)(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return selectionEq;
  }
};
var inlineFragmentOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare322(x.directives)(y.directives);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare(selectionSetOrd)(x.selectionSet)(y.selectionSet);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      return compare14(x.typeCondition)(y.typeCondition);
    };
  },
  Eq0: function() {
    return inlineFragmentEq;
  }
};
var fieldOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare42(x.alias)(y.alias);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare30(x["arguments"])(y["arguments"]);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare322(x.directives)(y.directives);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      var v3 = compare4(x.name)(y.name);
      if (v3 instanceof LT) {
        return LT.value;
      }
      ;
      if (v3 instanceof GT) {
        return GT.value;
      }
      ;
      return compare(ordMaybe(selectionSetOrd))(x.selectionSet)(y.selectionSet);
    };
  },
  Eq0: function() {
    return fieldEq;
  }
};
var compare46 = /* @__PURE__ */ compare(selectionSetOrd);
var fragmentDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare322(x.directives)(y.directives);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare4(x.fragmentName)(y.fragmentName);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare46(x.selectionSet)(y.selectionSet);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      return compare15(x.typeCondition)(y.typeCondition);
    };
  },
  Eq0: function() {
    return fragmentDefinitionEq;
  }
};
var compare47 = /* @__PURE__ */ compare(fragmentDefinitionOrd);
var defaultValueOrd = {
  compare: function(x) {
    return function(y) {
      return compare29(x)(y);
    };
  },
  Eq0: function() {
    return defaultValueEq;
  }
};
var compare48 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(defaultValueOrd));
var inputValueDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare48(x.defaultValue)(y.defaultValue);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare42(x.description)(y.description);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare322(x.directives)(y.directives);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      var v3 = compare4(x.name)(y.name);
      if (v3 instanceof LT) {
        return LT.value;
      }
      ;
      if (v3 instanceof GT) {
        return GT.value;
      }
      ;
      return compare18(x.type)(y.type);
    };
  },
  Eq0: function() {
    return inputValueDefinitionEq;
  }
};
var compare49 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(inputValueDefinitionOrd));
var argumentsDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      return compare49(x)(y);
    };
  },
  Eq0: function() {
    return argumentsDefinitionEq;
  }
};
var compare50 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(argumentsDefinitionOrd));
var directiveDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare50(x.argumentsDefinition)(y.argumentsDefinition);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare42(x.description)(y.description);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare26(x.directiveLocations)(y.directiveLocations);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      return compare4(x.name)(y.name);
    };
  },
  Eq0: function() {
    return directiveDefinitionEq;
  }
};
var compare51 = /* @__PURE__ */ compare(directiveDefinitionOrd);
var fieldDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare50(x.argumentsDefinition)(y.argumentsDefinition);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare42(x.description)(y.description);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare322(x.directives)(y.directives);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      var v3 = compare4(x.name)(y.name);
      if (v3 instanceof LT) {
        return LT.value;
      }
      ;
      if (v3 instanceof GT) {
        return GT.value;
      }
      ;
      return compare18(x.type)(y.type);
    };
  },
  Eq0: function() {
    return fieldDefinitionEq;
  }
};
var compare52 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(fieldDefinitionOrd));
var fieldsDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      return compare52(x)(y);
    };
  },
  Eq0: function() {
    return fieldsDefinitionEq;
  }
};
var compare53 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(fieldsDefinitionOrd));
var compare54 = /* @__PURE__ */ compare(fieldsDefinitionOrd);
var interfaceTypeDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare42(x.description)(y.description);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare322(x.directives)(y.directives);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare53(x.fieldsDefinition)(y.fieldsDefinition);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      return compare4(x.name)(y.name);
    };
  },
  Eq0: function() {
    return interfaceTypeDefinitionEq;
  }
};
var compare55 = /* @__PURE__ */ compare(interfaceTypeDefinitionOrd);
var interfaceTypeExtensionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof InterfaceTypeExtension_With_FieldsDefinition && y instanceof InterfaceTypeExtension_With_FieldsDefinition) {
        var v = compare322(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        var v1 = compare54(x.value0.fieldsDefinition)(y.value0.fieldsDefinition);
        if (v1 instanceof LT) {
          return LT.value;
        }
        ;
        if (v1 instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      if (x instanceof InterfaceTypeExtension_With_FieldsDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof InterfaceTypeExtension_With_FieldsDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof InterfaceTypeExtension_With_Directives && y instanceof InterfaceTypeExtension_With_Directives) {
        var v = compare33(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return interfaceTypeExtensionEq;
  }
};
var compare56 = /* @__PURE__ */ compare(interfaceTypeExtensionOrd);
var objectTypeDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare42(x.description)(y.description);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare322(x.directives)(y.directives);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare53(x.fieldsDefinition)(y.fieldsDefinition);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      var v3 = compare20(x.implementsInterfaces)(y.implementsInterfaces);
      if (v3 instanceof LT) {
        return LT.value;
      }
      ;
      if (v3 instanceof GT) {
        return GT.value;
      }
      ;
      return compare4(x.name)(y.name);
    };
  },
  Eq0: function() {
    return objectTypeDefinitionEq;
  }
};
var compare57 = /* @__PURE__ */ compare(objectTypeDefinitionOrd);
var objectTypeExtensionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof ObjectTypeExtension_With_FieldsDefinition && y instanceof ObjectTypeExtension_With_FieldsDefinition) {
        var v = compare322(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        var v1 = compare54(x.value0.fieldsDefinition)(y.value0.fieldsDefinition);
        if (v1 instanceof LT) {
          return LT.value;
        }
        ;
        if (v1 instanceof GT) {
          return GT.value;
        }
        ;
        var v2 = compare20(x.value0.implementsInterfaces)(y.value0.implementsInterfaces);
        if (v2 instanceof LT) {
          return LT.value;
        }
        ;
        if (v2 instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      if (x instanceof ObjectTypeExtension_With_FieldsDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof ObjectTypeExtension_With_FieldsDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof ObjectTypeExtension_With_Directives && y instanceof ObjectTypeExtension_With_Directives) {
        var v = compare33(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        var v1 = compare20(x.value0.implementsInterfaces)(y.value0.implementsInterfaces);
        if (v1 instanceof LT) {
          return LT.value;
        }
        ;
        if (v1 instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      if (x instanceof ObjectTypeExtension_With_Directives) {
        return LT.value;
      }
      ;
      if (y instanceof ObjectTypeExtension_With_Directives) {
        return GT.value;
      }
      ;
      if (x instanceof ObjectTypeExtension_With_ImplementsInterfaces && y instanceof ObjectTypeExtension_With_ImplementsInterfaces) {
        var v = compare21(x.value0.implementsInterfaces)(y.value0.implementsInterfaces);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return objectTypeExtensionEq;
  }
};
var compare58 = /* @__PURE__ */ compare(objectTypeExtensionOrd);
var inputFieldsDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      return compare49(x)(y);
    };
  },
  Eq0: function() {
    return inputFieldsDefinitionEq;
  }
};
var compare59 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(inputFieldsDefinitionOrd));
var compare60 = /* @__PURE__ */ compare(inputFieldsDefinitionOrd);
var inputObjectTypeDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare42(x.description)(y.description);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare322(x.directives)(y.directives);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare59(x.inputFieldsDefinition)(y.inputFieldsDefinition);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      return compare4(x.name)(y.name);
    };
  },
  Eq0: function() {
    return inputObjectTypeDefinitionEq;
  }
};
var compare61 = /* @__PURE__ */ compare(inputObjectTypeDefinitionOrd);
var typeDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof TypeDefinition_ScalarTypeDefinition && y instanceof TypeDefinition_ScalarTypeDefinition) {
        return compare40(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_ScalarTypeDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof TypeDefinition_ScalarTypeDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof TypeDefinition_ObjectTypeDefinition && y instanceof TypeDefinition_ObjectTypeDefinition) {
        return compare57(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_ObjectTypeDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof TypeDefinition_ObjectTypeDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof TypeDefinition_InterfaceTypeDefinition && y instanceof TypeDefinition_InterfaceTypeDefinition) {
        return compare55(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_InterfaceTypeDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof TypeDefinition_InterfaceTypeDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof TypeDefinition_UnionTypeDefinition && y instanceof TypeDefinition_UnionTypeDefinition) {
        return compare44(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_UnionTypeDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof TypeDefinition_UnionTypeDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof TypeDefinition_EnumTypeDefinition && y instanceof TypeDefinition_EnumTypeDefinition) {
        return compare37(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeDefinition_EnumTypeDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof TypeDefinition_EnumTypeDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof TypeDefinition_InputObjectTypeDefinition && y instanceof TypeDefinition_InputObjectTypeDefinition) {
        return compare61(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return typeDefinitionEq;
  }
};
var compare62 = /* @__PURE__ */ compare(typeDefinitionOrd);
var typeSystemDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof TypeSystemDefinition_SchemaDefinition && y instanceof TypeSystemDefinition_SchemaDefinition) {
        return compare422(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeSystemDefinition_SchemaDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof TypeSystemDefinition_SchemaDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof TypeSystemDefinition_TypeDefinition && y instanceof TypeSystemDefinition_TypeDefinition) {
        return compare62(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeSystemDefinition_TypeDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof TypeSystemDefinition_TypeDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof TypeSystemDefinition_DirectiveDefinition && y instanceof TypeSystemDefinition_DirectiveDefinition) {
        return compare51(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return typeSystemDefinitionEq;
  }
};
var compare63 = /* @__PURE__ */ compare(typeSystemDefinitionOrd);
var inputObjectTypeExtensionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof InputObjectTypeExtension_With_InputFieldsDefinition && y instanceof InputObjectTypeExtension_With_InputFieldsDefinition) {
        var v = compare322(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        var v1 = compare60(x.value0.inputFieldsDefinition)(y.value0.inputFieldsDefinition);
        if (v1 instanceof LT) {
          return LT.value;
        }
        ;
        if (v1 instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      if (x instanceof InputObjectTypeExtension_With_InputFieldsDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof InputObjectTypeExtension_With_InputFieldsDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof InputObjectTypeExtension_With_Directives && y instanceof InputObjectTypeExtension_With_Directives) {
        var v = compare33(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        return compare4(x.value0.name)(y.value0.name);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return inputObjectTypeExtensionEq;
  }
};
var compare64 = /* @__PURE__ */ compare(inputObjectTypeExtensionOrd);
var typeExtensionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof TypeExtension_ScalarTypeExtension && y instanceof TypeExtension_ScalarTypeExtension) {
        return compare41(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_ScalarTypeExtension) {
        return LT.value;
      }
      ;
      if (y instanceof TypeExtension_ScalarTypeExtension) {
        return GT.value;
      }
      ;
      if (x instanceof TypeExtension_ObjectTypeExtension && y instanceof TypeExtension_ObjectTypeExtension) {
        return compare58(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_ObjectTypeExtension) {
        return LT.value;
      }
      ;
      if (y instanceof TypeExtension_ObjectTypeExtension) {
        return GT.value;
      }
      ;
      if (x instanceof TypeExtension_InterfaceTypeExtension && y instanceof TypeExtension_InterfaceTypeExtension) {
        return compare56(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_InterfaceTypeExtension) {
        return LT.value;
      }
      ;
      if (y instanceof TypeExtension_InterfaceTypeExtension) {
        return GT.value;
      }
      ;
      if (x instanceof TypeExtension_UnionTypeExtension && y instanceof TypeExtension_UnionTypeExtension) {
        return compare45(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_UnionTypeExtension) {
        return LT.value;
      }
      ;
      if (y instanceof TypeExtension_UnionTypeExtension) {
        return GT.value;
      }
      ;
      if (x instanceof TypeExtension_EnumTypeExtension && y instanceof TypeExtension_EnumTypeExtension) {
        return compare38(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeExtension_EnumTypeExtension) {
        return LT.value;
      }
      ;
      if (y instanceof TypeExtension_EnumTypeExtension) {
        return GT.value;
      }
      ;
      if (x instanceof TypeExtension_InputObjectTypeExtension && y instanceof TypeExtension_InputObjectTypeExtension) {
        return compare64(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return typeExtensionEq;
  }
};
var compare65 = /* @__PURE__ */ compare(typeExtensionOrd);
var typeSystemExtensionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof TypeSystemExtension_SchemaExtension && y instanceof TypeSystemExtension_SchemaExtension) {
        return compare43(x.value0)(y.value0);
      }
      ;
      if (x instanceof TypeSystemExtension_SchemaExtension) {
        return LT.value;
      }
      ;
      if (y instanceof TypeSystemExtension_SchemaExtension) {
        return GT.value;
      }
      ;
      if (x instanceof TypeSystemExtension_TypeExtension && y instanceof TypeSystemExtension_TypeExtension) {
        return compare65(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return typeSystemExtensionEq;
  }
};
var compare66 = /* @__PURE__ */ compare(typeSystemExtensionOrd);
var variableDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      var v = compare48(x.defaultValue)(y.defaultValue);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare18(x.type)(y.type);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      return compare5(x.variable)(y.variable);
    };
  },
  Eq0: function() {
    return variableDefinitionEq;
  }
};
var compare67 = /* @__PURE__ */ compare(/* @__PURE__ */ ordList(variableDefinitionOrd));
var variableDefinitionsOrd = {
  compare: function(x) {
    return function(y) {
      return compare67(x)(y);
    };
  },
  Eq0: function() {
    return variableDefinitionsEq;
  }
};
var compare68 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(variableDefinitionsOrd));
var operationDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof OperationDefinition_SelectionSet && y instanceof OperationDefinition_SelectionSet) {
        return compare46(x.value0)(y.value0);
      }
      ;
      if (x instanceof OperationDefinition_SelectionSet) {
        return LT.value;
      }
      ;
      if (y instanceof OperationDefinition_SelectionSet) {
        return GT.value;
      }
      ;
      if (x instanceof OperationDefinition_OperationType && y instanceof OperationDefinition_OperationType) {
        var v = compare322(x.value0.directives)(y.value0.directives);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        var v1 = compare42(x.value0.name)(y.value0.name);
        if (v1 instanceof LT) {
          return LT.value;
        }
        ;
        if (v1 instanceof GT) {
          return GT.value;
        }
        ;
        var v2 = compare8(x.value0.operationType)(y.value0.operationType);
        if (v2 instanceof LT) {
          return LT.value;
        }
        ;
        if (v2 instanceof GT) {
          return GT.value;
        }
        ;
        var v3 = compare46(x.value0.selectionSet)(y.value0.selectionSet);
        if (v3 instanceof LT) {
          return LT.value;
        }
        ;
        if (v3 instanceof GT) {
          return GT.value;
        }
        ;
        return compare68(x.value0.variableDefinitions)(y.value0.variableDefinitions);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return operationDefinitionEq;
  }
};
var compare69 = /* @__PURE__ */ compare(operationDefinitionOrd);
var executableDefinitionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof ExecutableDefinition_OperationDefinition && y instanceof ExecutableDefinition_OperationDefinition) {
        return compare69(x.value0)(y.value0);
      }
      ;
      if (x instanceof ExecutableDefinition_OperationDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof ExecutableDefinition_OperationDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof ExecutableDefinition_FragmentDefinition && y instanceof ExecutableDefinition_FragmentDefinition) {
        return compare47(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return executableDefinitionEq;
  }
};
var compare70 = /* @__PURE__ */ compare(executableDefinitionOrd);
var definitionOrd = {
  compare: function(x) {
    return function(y) {
      if (x instanceof Definition_ExecutableDefinition && y instanceof Definition_ExecutableDefinition) {
        return compare70(x.value0)(y.value0);
      }
      ;
      if (x instanceof Definition_ExecutableDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof Definition_ExecutableDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof Definition_TypeSystemDefinition && y instanceof Definition_TypeSystemDefinition) {
        return compare63(x.value0)(y.value0);
      }
      ;
      if (x instanceof Definition_TypeSystemDefinition) {
        return LT.value;
      }
      ;
      if (y instanceof Definition_TypeSystemDefinition) {
        return GT.value;
      }
      ;
      if (x instanceof Definition_TypeSystemExtension && y instanceof Definition_TypeSystemExtension) {
        return compare66(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.GraphQL.AST (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return definitionEq;
  }
};
var _TypeSystemDefinition_TypeDefinition = /* @__PURE__ */ function() {
  return new Tuple(TypeSystemDefinition_TypeDefinition.create, function(v) {
    if (v instanceof TypeSystemDefinition_TypeDefinition) {
      return new Just(v.value0);
    }
    ;
    return Nothing.value;
  });
}();
var _TypeDefinition_ObjectTypeDefinition = /* @__PURE__ */ function() {
  return new Tuple(TypeDefinition_ObjectTypeDefinition.create, function(v) {
    if (v instanceof TypeDefinition_ObjectTypeDefinition) {
      return new Just(v.value0);
    }
    ;
    return Nothing.value;
  });
}();
var _TypeDefinition_InputObjectTypeDefinition = /* @__PURE__ */ function() {
  return new Tuple(TypeDefinition_InputObjectTypeDefinition.create, function(v) {
    if (v instanceof TypeDefinition_InputObjectTypeDefinition) {
      return new Just(v.value0);
    }
    ;
    return Nothing.value;
  });
}();
var _InputFieldsDefinition = /* @__PURE__ */ function() {
  return new Tuple(InputFieldsDefinition, function(v) {
    return new Just(v);
  });
}();
var _Document = /* @__PURE__ */ function() {
  return new Tuple(Document, function(v) {
    return new Just(v);
  });
}();
var _Definition_TypeSystemDefinition = /* @__PURE__ */ function() {
  return new Tuple(Definition_TypeSystemDefinition.create, function(v) {
    if (v instanceof Definition_TypeSystemDefinition) {
      return new Just(v.value0);
    }
    ;
    return Nothing.value;
  });
}();

// output/Data.Char/index.js
var fromCharCode3 = /* @__PURE__ */ toEnum(boundedEnumChar);

// output/Data.CodePoint.Unicode.Internal/index.js
var unsafeIndex2 = /* @__PURE__ */ unsafeIndex();
var elemIndex2 = /* @__PURE__ */ elemIndex(eqInt);
var map15 = /* @__PURE__ */ map(functorMaybe);
var NUMCAT_LU = /* @__PURE__ */ function() {
  function NUMCAT_LU2() {
  }
  ;
  NUMCAT_LU2.value = new NUMCAT_LU2();
  return NUMCAT_LU2;
}();
var NUMCAT_LL = /* @__PURE__ */ function() {
  function NUMCAT_LL2() {
  }
  ;
  NUMCAT_LL2.value = new NUMCAT_LL2();
  return NUMCAT_LL2;
}();
var NUMCAT_LT = /* @__PURE__ */ function() {
  function NUMCAT_LT2() {
  }
  ;
  NUMCAT_LT2.value = new NUMCAT_LT2();
  return NUMCAT_LT2;
}();
var NUMCAT_LM = /* @__PURE__ */ function() {
  function NUMCAT_LM2() {
  }
  ;
  NUMCAT_LM2.value = new NUMCAT_LM2();
  return NUMCAT_LM2;
}();
var NUMCAT_LO = /* @__PURE__ */ function() {
  function NUMCAT_LO2() {
  }
  ;
  NUMCAT_LO2.value = new NUMCAT_LO2();
  return NUMCAT_LO2;
}();
var NUMCAT_MN = /* @__PURE__ */ function() {
  function NUMCAT_MN2() {
  }
  ;
  NUMCAT_MN2.value = new NUMCAT_MN2();
  return NUMCAT_MN2;
}();
var NUMCAT_MC = /* @__PURE__ */ function() {
  function NUMCAT_MC2() {
  }
  ;
  NUMCAT_MC2.value = new NUMCAT_MC2();
  return NUMCAT_MC2;
}();
var NUMCAT_ME = /* @__PURE__ */ function() {
  function NUMCAT_ME2() {
  }
  ;
  NUMCAT_ME2.value = new NUMCAT_ME2();
  return NUMCAT_ME2;
}();
var NUMCAT_ND = /* @__PURE__ */ function() {
  function NUMCAT_ND2() {
  }
  ;
  NUMCAT_ND2.value = new NUMCAT_ND2();
  return NUMCAT_ND2;
}();
var NUMCAT_NL = /* @__PURE__ */ function() {
  function NUMCAT_NL2() {
  }
  ;
  NUMCAT_NL2.value = new NUMCAT_NL2();
  return NUMCAT_NL2;
}();
var NUMCAT_NO = /* @__PURE__ */ function() {
  function NUMCAT_NO2() {
  }
  ;
  NUMCAT_NO2.value = new NUMCAT_NO2();
  return NUMCAT_NO2;
}();
var NUMCAT_PC = /* @__PURE__ */ function() {
  function NUMCAT_PC2() {
  }
  ;
  NUMCAT_PC2.value = new NUMCAT_PC2();
  return NUMCAT_PC2;
}();
var NUMCAT_PD = /* @__PURE__ */ function() {
  function NUMCAT_PD2() {
  }
  ;
  NUMCAT_PD2.value = new NUMCAT_PD2();
  return NUMCAT_PD2;
}();
var NUMCAT_PS = /* @__PURE__ */ function() {
  function NUMCAT_PS2() {
  }
  ;
  NUMCAT_PS2.value = new NUMCAT_PS2();
  return NUMCAT_PS2;
}();
var NUMCAT_PE = /* @__PURE__ */ function() {
  function NUMCAT_PE2() {
  }
  ;
  NUMCAT_PE2.value = new NUMCAT_PE2();
  return NUMCAT_PE2;
}();
var NUMCAT_PI = /* @__PURE__ */ function() {
  function NUMCAT_PI2() {
  }
  ;
  NUMCAT_PI2.value = new NUMCAT_PI2();
  return NUMCAT_PI2;
}();
var NUMCAT_PF = /* @__PURE__ */ function() {
  function NUMCAT_PF2() {
  }
  ;
  NUMCAT_PF2.value = new NUMCAT_PF2();
  return NUMCAT_PF2;
}();
var NUMCAT_PO = /* @__PURE__ */ function() {
  function NUMCAT_PO2() {
  }
  ;
  NUMCAT_PO2.value = new NUMCAT_PO2();
  return NUMCAT_PO2;
}();
var NUMCAT_SM = /* @__PURE__ */ function() {
  function NUMCAT_SM2() {
  }
  ;
  NUMCAT_SM2.value = new NUMCAT_SM2();
  return NUMCAT_SM2;
}();
var NUMCAT_SC = /* @__PURE__ */ function() {
  function NUMCAT_SC2() {
  }
  ;
  NUMCAT_SC2.value = new NUMCAT_SC2();
  return NUMCAT_SC2;
}();
var NUMCAT_SK = /* @__PURE__ */ function() {
  function NUMCAT_SK2() {
  }
  ;
  NUMCAT_SK2.value = new NUMCAT_SK2();
  return NUMCAT_SK2;
}();
var NUMCAT_SO = /* @__PURE__ */ function() {
  function NUMCAT_SO2() {
  }
  ;
  NUMCAT_SO2.value = new NUMCAT_SO2();
  return NUMCAT_SO2;
}();
var NUMCAT_ZS = /* @__PURE__ */ function() {
  function NUMCAT_ZS2() {
  }
  ;
  NUMCAT_ZS2.value = new NUMCAT_ZS2();
  return NUMCAT_ZS2;
}();
var NUMCAT_ZL = /* @__PURE__ */ function() {
  function NUMCAT_ZL2() {
  }
  ;
  NUMCAT_ZL2.value = new NUMCAT_ZL2();
  return NUMCAT_ZL2;
}();
var NUMCAT_ZP = /* @__PURE__ */ function() {
  function NUMCAT_ZP2() {
  }
  ;
  NUMCAT_ZP2.value = new NUMCAT_ZP2();
  return NUMCAT_ZP2;
}();
var NUMCAT_CC = /* @__PURE__ */ function() {
  function NUMCAT_CC2() {
  }
  ;
  NUMCAT_CC2.value = new NUMCAT_CC2();
  return NUMCAT_CC2;
}();
var NUMCAT_CF = /* @__PURE__ */ function() {
  function NUMCAT_CF2() {
  }
  ;
  NUMCAT_CF2.value = new NUMCAT_CF2();
  return NUMCAT_CF2;
}();
var NUMCAT_CS = /* @__PURE__ */ function() {
  function NUMCAT_CS2() {
  }
  ;
  NUMCAT_CS2.value = new NUMCAT_CS2();
  return NUMCAT_CS2;
}();
var NUMCAT_CO = /* @__PURE__ */ function() {
  function NUMCAT_CO2() {
  }
  ;
  NUMCAT_CO2.value = new NUMCAT_CO2();
  return NUMCAT_CO2;
}();
var NUMCAT_CN = /* @__PURE__ */ function() {
  function NUMCAT_CN2() {
  }
  ;
  NUMCAT_CN2.value = new NUMCAT_CN2();
  return NUMCAT_CN2;
}();
var numLat1Blocks = 63;
var numConvBlocks = 1332;
var numBlocks = 3396;
var gencatZS = 2;
var rule1 = /* @__PURE__ */ function() {
  return {
    category: gencatZS,
    unicodeCat: NUMCAT_ZS.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatZP = 67108864;
var rule162 = /* @__PURE__ */ function() {
  return {
    category: gencatZP,
    unicodeCat: NUMCAT_ZP.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatZL = 33554432;
var rule161 = /* @__PURE__ */ function() {
  return {
    category: gencatZL,
    unicodeCat: NUMCAT_ZL.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatSO = 8192;
var rule13 = /* @__PURE__ */ function() {
  return {
    category: gencatSO,
    unicodeCat: NUMCAT_SO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var rule170 = /* @__PURE__ */ function() {
  return {
    category: gencatSO,
    unicodeCat: NUMCAT_SO.value,
    possible: 1,
    updist: 0,
    lowdist: 26,
    titledist: 0
  };
}();
var rule171 = /* @__PURE__ */ function() {
  return {
    category: gencatSO,
    unicodeCat: NUMCAT_SO.value,
    possible: 1,
    updist: -26 | 0,
    lowdist: 0,
    titledist: -26 | 0
  };
}();
var gencatSM = 64;
var rule6 = /* @__PURE__ */ function() {
  return {
    category: gencatSM,
    unicodeCat: NUMCAT_SM.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatSK = 1024;
var rule10 = /* @__PURE__ */ function() {
  return {
    category: gencatSK,
    unicodeCat: NUMCAT_SK.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatSC = 8;
var rule3 = /* @__PURE__ */ function() {
  return {
    category: gencatSC,
    unicodeCat: NUMCAT_SC.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatPS = 16;
var rule4 = /* @__PURE__ */ function() {
  return {
    category: gencatPS,
    unicodeCat: NUMCAT_PS.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatPO = 4;
var rule2 = /* @__PURE__ */ function() {
  return {
    category: gencatPO,
    unicodeCat: NUMCAT_PO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatPI = 32768;
var rule15 = /* @__PURE__ */ function() {
  return {
    category: gencatPI,
    unicodeCat: NUMCAT_PI.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatPF = 262144;
var rule19 = /* @__PURE__ */ function() {
  return {
    category: gencatPF,
    unicodeCat: NUMCAT_PF.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatPE = 32;
var rule5 = /* @__PURE__ */ function() {
  return {
    category: gencatPE,
    unicodeCat: NUMCAT_PE.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatPD = 128;
var rule7 = /* @__PURE__ */ function() {
  return {
    category: gencatPD,
    unicodeCat: NUMCAT_PD.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatPC = 2048;
var rule11 = /* @__PURE__ */ function() {
  return {
    category: gencatPC,
    unicodeCat: NUMCAT_PC.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatNO = 131072;
var rule17 = /* @__PURE__ */ function() {
  return {
    category: gencatNO,
    unicodeCat: NUMCAT_NO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatNL = 16777216;
var rule128 = /* @__PURE__ */ function() {
  return {
    category: gencatNL,
    unicodeCat: NUMCAT_NL.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var rule168 = /* @__PURE__ */ function() {
  return {
    category: gencatNL,
    unicodeCat: NUMCAT_NL.value,
    possible: 1,
    updist: 0,
    lowdist: 16,
    titledist: 0
  };
}();
var rule169 = /* @__PURE__ */ function() {
  return {
    category: gencatNL,
    unicodeCat: NUMCAT_NL.value,
    possible: 1,
    updist: -16 | 0,
    lowdist: 0,
    titledist: -16 | 0
  };
}();
var gencatND = 256;
var rule8 = /* @__PURE__ */ function() {
  return {
    category: gencatND,
    unicodeCat: NUMCAT_ND.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatMN = 2097152;
var rule92 = /* @__PURE__ */ function() {
  return {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var rule93 = /* @__PURE__ */ function() {
  return {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    possible: 1,
    updist: 84,
    lowdist: 0,
    titledist: 84
  };
}();
var gencatME = 4194304;
var rule119 = /* @__PURE__ */ function() {
  return {
    category: gencatME,
    unicodeCat: NUMCAT_ME.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatMC = 8388608;
var rule124 = /* @__PURE__ */ function() {
  return {
    category: gencatMC,
    unicodeCat: NUMCAT_MC.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatLU = 512;
var nullrule = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_CN.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var rule104 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 8,
    titledist: 0
  };
}();
var rule107 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var rule115 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -60 | 0,
    titledist: 0
  };
}();
var rule117 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -7 | 0,
    titledist: 0
  };
}();
var rule118 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 80,
    titledist: 0
  };
}();
var rule120 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 15,
    titledist: 0
  };
}();
var rule122 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 48,
    titledist: 0
  };
}();
var rule125 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 7264,
    titledist: 0
  };
}();
var rule127 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 38864,
    titledist: 0
  };
}();
var rule137 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -3008 | 0,
    titledist: 0
  };
}();
var rule142 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -7615 | 0,
    titledist: 0
  };
}();
var rule144 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -8 | 0,
    titledist: 0
  };
}();
var rule153 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -74 | 0,
    titledist: 0
  };
}();
var rule156 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -86 | 0,
    titledist: 0
  };
}();
var rule157 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -100 | 0,
    titledist: 0
  };
}();
var rule158 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -112 | 0,
    titledist: 0
  };
}();
var rule159 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -128 | 0,
    titledist: 0
  };
}();
var rule160 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -126 | 0,
    titledist: 0
  };
}();
var rule163 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -7517 | 0,
    titledist: 0
  };
}();
var rule164 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -8383 | 0,
    titledist: 0
  };
}();
var rule165 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -8262 | 0,
    titledist: 0
  };
}();
var rule166 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 28,
    titledist: 0
  };
}();
var rule172 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10743 | 0,
    titledist: 0
  };
}();
var rule173 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -3814 | 0,
    titledist: 0
  };
}();
var rule174 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10727 | 0,
    titledist: 0
  };
}();
var rule177 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10780 | 0,
    titledist: 0
  };
}();
var rule178 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10749 | 0,
    titledist: 0
  };
}();
var rule179 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10783 | 0,
    titledist: 0
  };
}();
var rule180 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10782 | 0,
    titledist: 0
  };
}();
var rule181 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10815 | 0,
    titledist: 0
  };
}();
var rule183 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -35332 | 0,
    titledist: 0
  };
}();
var rule184 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42280 | 0,
    titledist: 0
  };
}();
var rule186 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42308 | 0,
    titledist: 0
  };
}();
var rule187 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42319 | 0,
    titledist: 0
  };
}();
var rule188 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42315 | 0,
    titledist: 0
  };
}();
var rule189 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42305 | 0,
    titledist: 0
  };
}();
var rule190 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42258 | 0,
    titledist: 0
  };
}();
var rule191 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42282 | 0,
    titledist: 0
  };
}();
var rule192 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42261 | 0,
    titledist: 0
  };
}();
var rule193 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 928,
    titledist: 0
  };
}();
var rule194 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -48 | 0,
    titledist: 0
  };
}();
var rule195 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42307 | 0,
    titledist: 0
  };
}();
var rule196 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -35384 | 0,
    titledist: 0
  };
}();
var rule201 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 40,
    titledist: 0
  };
}();
var rule203 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 34,
    titledist: 0
  };
}();
var rule22 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 1,
    titledist: 0
  };
}();
var rule24 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -199 | 0,
    titledist: 0
  };
}();
var rule26 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -121 | 0,
    titledist: 0
  };
}();
var rule29 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 210,
    titledist: 0
  };
}();
var rule30 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 206,
    titledist: 0
  };
}();
var rule31 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 205,
    titledist: 0
  };
}();
var rule32 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 79,
    titledist: 0
  };
}();
var rule33 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 202,
    titledist: 0
  };
}();
var rule34 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 203,
    titledist: 0
  };
}();
var rule35 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 207,
    titledist: 0
  };
}();
var rule37 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 211,
    titledist: 0
  };
}();
var rule38 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 209,
    titledist: 0
  };
}();
var rule40 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 213,
    titledist: 0
  };
}();
var rule42 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 214,
    titledist: 0
  };
}();
var rule43 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 218,
    titledist: 0
  };
}();
var rule44 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 217,
    titledist: 0
  };
}();
var rule45 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 219,
    titledist: 0
  };
}();
var rule47 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 2,
    titledist: 1
  };
}();
var rule51 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -97 | 0,
    titledist: 0
  };
}();
var rule52 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -56 | 0,
    titledist: 0
  };
}();
var rule53 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -130 | 0,
    titledist: 0
  };
}();
var rule54 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 10795,
    titledist: 0
  };
}();
var rule55 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -163 | 0,
    titledist: 0
  };
}();
var rule56 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 10792,
    titledist: 0
  };
}();
var rule58 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -195 | 0,
    titledist: 0
  };
}();
var rule59 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 69,
    titledist: 0
  };
}();
var rule60 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 71,
    titledist: 0
  };
}();
var rule9 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 32,
    titledist: 0
  };
}();
var rule94 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 116,
    titledist: 0
  };
}();
var rule95 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 38,
    titledist: 0
  };
}();
var rule96 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 37,
    titledist: 0
  };
}();
var rule97 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 64,
    titledist: 0
  };
}();
var rule98 = /* @__PURE__ */ function() {
  return {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 63,
    titledist: 0
  };
}();
var gencatLT = 524288;
var rule151 = /* @__PURE__ */ function() {
  return {
    category: gencatLT,
    unicodeCat: NUMCAT_LT.value,
    possible: 1,
    updist: 0,
    lowdist: -8 | 0,
    titledist: 0
  };
}();
var rule154 = /* @__PURE__ */ function() {
  return {
    category: gencatLT,
    unicodeCat: NUMCAT_LT.value,
    possible: 1,
    updist: 0,
    lowdist: -9 | 0,
    titledist: 0
  };
}();
var rule48 = /* @__PURE__ */ function() {
  return {
    category: gencatLT,
    unicodeCat: NUMCAT_LT.value,
    possible: 1,
    updist: -1 | 0,
    lowdist: 1,
    titledist: 0
  };
}();
var gencatLO = 16384;
var rule14 = /* @__PURE__ */ function() {
  return {
    category: gencatLO,
    unicodeCat: NUMCAT_LO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatLM = 1048576;
var rule91 = /* @__PURE__ */ function() {
  return {
    category: gencatLM,
    unicodeCat: NUMCAT_LM.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatLL = 4096;
var rule100 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -37 | 0,
    lowdist: 0,
    titledist: -37 | 0
  };
}();
var rule101 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -31 | 0,
    lowdist: 0,
    titledist: -31 | 0
  };
}();
var rule102 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -64 | 0,
    lowdist: 0,
    titledist: -64 | 0
  };
}();
var rule103 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -63 | 0,
    lowdist: 0,
    titledist: -63 | 0
  };
}();
var rule105 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -62 | 0,
    lowdist: 0,
    titledist: -62 | 0
  };
}();
var rule106 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -57 | 0,
    lowdist: 0,
    titledist: -57 | 0
  };
}();
var rule108 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -47 | 0,
    lowdist: 0,
    titledist: -47 | 0
  };
}();
var rule109 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -54 | 0,
    lowdist: 0,
    titledist: -54 | 0
  };
}();
var rule110 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -8 | 0,
    lowdist: 0,
    titledist: -8 | 0
  };
}();
var rule111 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -86 | 0,
    lowdist: 0,
    titledist: -86 | 0
  };
}();
var rule112 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -80 | 0,
    lowdist: 0,
    titledist: -80 | 0
  };
}();
var rule113 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 7,
    lowdist: 0,
    titledist: 7
  };
}();
var rule114 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -116 | 0,
    lowdist: 0,
    titledist: -116 | 0
  };
}();
var rule116 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -96 | 0,
    lowdist: 0,
    titledist: -96 | 0
  };
}();
var rule12 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -32 | 0,
    lowdist: 0,
    titledist: -32 | 0
  };
}();
var rule121 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -15 | 0,
    lowdist: 0,
    titledist: -15 | 0
  };
}();
var rule123 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -48 | 0,
    lowdist: 0,
    titledist: -48 | 0
  };
}();
var rule126 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 3008,
    lowdist: 0,
    titledist: 0
  };
}();
var rule129 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -6254 | 0,
    lowdist: 0,
    titledist: -6254 | 0
  };
}();
var rule130 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -6253 | 0,
    lowdist: 0,
    titledist: -6253 | 0
  };
}();
var rule131 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -6244 | 0,
    lowdist: 0,
    titledist: -6244 | 0
  };
}();
var rule132 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -6242 | 0,
    lowdist: 0,
    titledist: -6242 | 0
  };
}();
var rule133 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -6243 | 0,
    lowdist: 0,
    titledist: -6243 | 0
  };
}();
var rule134 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -6236 | 0,
    lowdist: 0,
    titledist: -6236 | 0
  };
}();
var rule135 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -6181 | 0,
    lowdist: 0,
    titledist: -6181 | 0
  };
}();
var rule136 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 35266,
    lowdist: 0,
    titledist: 35266
  };
}();
var rule138 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 35332,
    lowdist: 0,
    titledist: 35332
  };
}();
var rule139 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 3814,
    lowdist: 0,
    titledist: 3814
  };
}();
var rule140 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 35384,
    lowdist: 0,
    titledist: 35384
  };
}();
var rule141 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -59 | 0,
    lowdist: 0,
    titledist: -59 | 0
  };
}();
var rule143 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 8,
    lowdist: 0,
    titledist: 8
  };
}();
var rule145 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 74,
    lowdist: 0,
    titledist: 74
  };
}();
var rule146 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 86,
    lowdist: 0,
    titledist: 86
  };
}();
var rule147 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 100,
    lowdist: 0,
    titledist: 100
  };
}();
var rule148 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 128,
    lowdist: 0,
    titledist: 128
  };
}();
var rule149 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 112,
    lowdist: 0,
    titledist: 112
  };
}();
var rule150 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 126,
    lowdist: 0,
    titledist: 126
  };
}();
var rule152 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 9,
    lowdist: 0,
    titledist: 9
  };
}();
var rule155 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -7205 | 0,
    lowdist: 0,
    titledist: -7205 | 0
  };
}();
var rule167 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -28 | 0,
    lowdist: 0,
    titledist: -28 | 0
  };
}();
var rule175 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -10795 | 0,
    lowdist: 0,
    titledist: -10795 | 0
  };
}();
var rule176 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -10792 | 0,
    lowdist: 0,
    titledist: -10792 | 0
  };
}();
var rule18 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 743,
    lowdist: 0,
    titledist: 743
  };
}();
var rule182 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -7264 | 0,
    lowdist: 0,
    titledist: -7264 | 0
  };
}();
var rule185 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 48,
    lowdist: 0,
    titledist: 48
  };
}();
var rule197 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -928 | 0,
    lowdist: 0,
    titledist: -928 | 0
  };
}();
var rule198 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -38864 | 0,
    lowdist: 0,
    titledist: -38864 | 0
  };
}();
var rule20 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var rule202 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -40 | 0,
    lowdist: 0,
    titledist: -40 | 0
  };
}();
var rule204 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -34 | 0,
    lowdist: 0,
    titledist: -34 | 0
  };
}();
var rule21 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 121,
    lowdist: 0,
    titledist: 121
  };
}();
var rule23 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -1 | 0,
    lowdist: 0,
    titledist: -1 | 0
  };
}();
var rule25 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -232 | 0,
    lowdist: 0,
    titledist: -232 | 0
  };
}();
var rule27 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -300 | 0,
    lowdist: 0,
    titledist: -300 | 0
  };
}();
var rule28 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 195,
    lowdist: 0,
    titledist: 195
  };
}();
var rule36 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 97,
    lowdist: 0,
    titledist: 97
  };
}();
var rule39 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 163,
    lowdist: 0,
    titledist: 163
  };
}();
var rule41 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 130,
    lowdist: 0,
    titledist: 130
  };
}();
var rule46 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 56,
    lowdist: 0,
    titledist: 56
  };
}();
var rule49 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -2 | 0,
    lowdist: 0,
    titledist: -1 | 0
  };
}();
var rule50 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -79 | 0,
    lowdist: 0,
    titledist: -79 | 0
  };
}();
var rule57 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10815,
    lowdist: 0,
    titledist: 10815
  };
}();
var rule61 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10783,
    lowdist: 0,
    titledist: 10783
  };
}();
var rule62 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10780,
    lowdist: 0,
    titledist: 10780
  };
}();
var rule63 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10782,
    lowdist: 0,
    titledist: 10782
  };
}();
var rule64 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -210 | 0,
    lowdist: 0,
    titledist: -210 | 0
  };
}();
var rule65 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -206 | 0,
    lowdist: 0,
    titledist: -206 | 0
  };
}();
var rule66 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -205 | 0,
    lowdist: 0,
    titledist: -205 | 0
  };
}();
var rule67 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -202 | 0,
    lowdist: 0,
    titledist: -202 | 0
  };
}();
var rule68 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -203 | 0,
    lowdist: 0,
    titledist: -203 | 0
  };
}();
var rule69 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42319,
    lowdist: 0,
    titledist: 42319
  };
}();
var rule70 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42315,
    lowdist: 0,
    titledist: 42315
  };
}();
var rule71 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -207 | 0,
    lowdist: 0,
    titledist: -207 | 0
  };
}();
var rule72 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42280,
    lowdist: 0,
    titledist: 42280
  };
}();
var rule73 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42308,
    lowdist: 0,
    titledist: 42308
  };
}();
var rule74 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -209 | 0,
    lowdist: 0,
    titledist: -209 | 0
  };
}();
var rule75 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -211 | 0,
    lowdist: 0,
    titledist: -211 | 0
  };
}();
var rule76 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10743,
    lowdist: 0,
    titledist: 10743
  };
}();
var rule77 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42305,
    lowdist: 0,
    titledist: 42305
  };
}();
var rule78 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10749,
    lowdist: 0,
    titledist: 10749
  };
}();
var rule79 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -213 | 0,
    lowdist: 0,
    titledist: -213 | 0
  };
}();
var rule80 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -214 | 0,
    lowdist: 0,
    titledist: -214 | 0
  };
}();
var rule81 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10727,
    lowdist: 0,
    titledist: 10727
  };
}();
var rule82 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -218 | 0,
    lowdist: 0,
    titledist: -218 | 0
  };
}();
var rule83 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42307,
    lowdist: 0,
    titledist: 42307
  };
}();
var rule84 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42282,
    lowdist: 0,
    titledist: 42282
  };
}();
var rule85 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -69 | 0,
    lowdist: 0,
    titledist: -69 | 0
  };
}();
var rule86 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -217 | 0,
    lowdist: 0,
    titledist: -217 | 0
  };
}();
var rule87 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -71 | 0,
    lowdist: 0,
    titledist: -71 | 0
  };
}();
var rule88 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -219 | 0,
    lowdist: 0,
    titledist: -219 | 0
  };
}();
var rule89 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42261,
    lowdist: 0,
    titledist: 42261
  };
}();
var rule90 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42258,
    lowdist: 0,
    titledist: 42258
  };
}();
var rule99 = /* @__PURE__ */ function() {
  return {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -38 | 0,
    lowdist: 0,
    titledist: -38 | 0
  };
}();
var gencatCS = 134217728;
var rule199 = /* @__PURE__ */ function() {
  return {
    category: gencatCS,
    unicodeCat: NUMCAT_CS.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatCO = 268435456;
var rule200 = /* @__PURE__ */ function() {
  return {
    category: gencatCO,
    unicodeCat: NUMCAT_CO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatCF = 65536;
var rule16 = /* @__PURE__ */ function() {
  return {
    category: gencatCF,
    unicodeCat: NUMCAT_CF.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var gencatCC = 1;
var rule0 = /* @__PURE__ */ function() {
  return {
    category: gencatCC,
    unicodeCat: NUMCAT_CC.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
}();
var convchars = [{
  start: 65,
  length: 26,
  convRule: rule9
}, {
  start: 97,
  length: 26,
  convRule: rule12
}, {
  start: 181,
  length: 1,
  convRule: rule18
}, {
  start: 192,
  length: 23,
  convRule: rule9
}, {
  start: 216,
  length: 7,
  convRule: rule9
}, {
  start: 224,
  length: 23,
  convRule: rule12
}, {
  start: 248,
  length: 7,
  convRule: rule12
}, {
  start: 255,
  length: 1,
  convRule: rule21
}, {
  start: 256,
  length: 1,
  convRule: rule22
}, {
  start: 257,
  length: 1,
  convRule: rule23
}, {
  start: 258,
  length: 1,
  convRule: rule22
}, {
  start: 259,
  length: 1,
  convRule: rule23
}, {
  start: 260,
  length: 1,
  convRule: rule22
}, {
  start: 261,
  length: 1,
  convRule: rule23
}, {
  start: 262,
  length: 1,
  convRule: rule22
}, {
  start: 263,
  length: 1,
  convRule: rule23
}, {
  start: 264,
  length: 1,
  convRule: rule22
}, {
  start: 265,
  length: 1,
  convRule: rule23
}, {
  start: 266,
  length: 1,
  convRule: rule22
}, {
  start: 267,
  length: 1,
  convRule: rule23
}, {
  start: 268,
  length: 1,
  convRule: rule22
}, {
  start: 269,
  length: 1,
  convRule: rule23
}, {
  start: 270,
  length: 1,
  convRule: rule22
}, {
  start: 271,
  length: 1,
  convRule: rule23
}, {
  start: 272,
  length: 1,
  convRule: rule22
}, {
  start: 273,
  length: 1,
  convRule: rule23
}, {
  start: 274,
  length: 1,
  convRule: rule22
}, {
  start: 275,
  length: 1,
  convRule: rule23
}, {
  start: 276,
  length: 1,
  convRule: rule22
}, {
  start: 277,
  length: 1,
  convRule: rule23
}, {
  start: 278,
  length: 1,
  convRule: rule22
}, {
  start: 279,
  length: 1,
  convRule: rule23
}, {
  start: 280,
  length: 1,
  convRule: rule22
}, {
  start: 281,
  length: 1,
  convRule: rule23
}, {
  start: 282,
  length: 1,
  convRule: rule22
}, {
  start: 283,
  length: 1,
  convRule: rule23
}, {
  start: 284,
  length: 1,
  convRule: rule22
}, {
  start: 285,
  length: 1,
  convRule: rule23
}, {
  start: 286,
  length: 1,
  convRule: rule22
}, {
  start: 287,
  length: 1,
  convRule: rule23
}, {
  start: 288,
  length: 1,
  convRule: rule22
}, {
  start: 289,
  length: 1,
  convRule: rule23
}, {
  start: 290,
  length: 1,
  convRule: rule22
}, {
  start: 291,
  length: 1,
  convRule: rule23
}, {
  start: 292,
  length: 1,
  convRule: rule22
}, {
  start: 293,
  length: 1,
  convRule: rule23
}, {
  start: 294,
  length: 1,
  convRule: rule22
}, {
  start: 295,
  length: 1,
  convRule: rule23
}, {
  start: 296,
  length: 1,
  convRule: rule22
}, {
  start: 297,
  length: 1,
  convRule: rule23
}, {
  start: 298,
  length: 1,
  convRule: rule22
}, {
  start: 299,
  length: 1,
  convRule: rule23
}, {
  start: 300,
  length: 1,
  convRule: rule22
}, {
  start: 301,
  length: 1,
  convRule: rule23
}, {
  start: 302,
  length: 1,
  convRule: rule22
}, {
  start: 303,
  length: 1,
  convRule: rule23
}, {
  start: 304,
  length: 1,
  convRule: rule24
}, {
  start: 305,
  length: 1,
  convRule: rule25
}, {
  start: 306,
  length: 1,
  convRule: rule22
}, {
  start: 307,
  length: 1,
  convRule: rule23
}, {
  start: 308,
  length: 1,
  convRule: rule22
}, {
  start: 309,
  length: 1,
  convRule: rule23
}, {
  start: 310,
  length: 1,
  convRule: rule22
}, {
  start: 311,
  length: 1,
  convRule: rule23
}, {
  start: 313,
  length: 1,
  convRule: rule22
}, {
  start: 314,
  length: 1,
  convRule: rule23
}, {
  start: 315,
  length: 1,
  convRule: rule22
}, {
  start: 316,
  length: 1,
  convRule: rule23
}, {
  start: 317,
  length: 1,
  convRule: rule22
}, {
  start: 318,
  length: 1,
  convRule: rule23
}, {
  start: 319,
  length: 1,
  convRule: rule22
}, {
  start: 320,
  length: 1,
  convRule: rule23
}, {
  start: 321,
  length: 1,
  convRule: rule22
}, {
  start: 322,
  length: 1,
  convRule: rule23
}, {
  start: 323,
  length: 1,
  convRule: rule22
}, {
  start: 324,
  length: 1,
  convRule: rule23
}, {
  start: 325,
  length: 1,
  convRule: rule22
}, {
  start: 326,
  length: 1,
  convRule: rule23
}, {
  start: 327,
  length: 1,
  convRule: rule22
}, {
  start: 328,
  length: 1,
  convRule: rule23
}, {
  start: 330,
  length: 1,
  convRule: rule22
}, {
  start: 331,
  length: 1,
  convRule: rule23
}, {
  start: 332,
  length: 1,
  convRule: rule22
}, {
  start: 333,
  length: 1,
  convRule: rule23
}, {
  start: 334,
  length: 1,
  convRule: rule22
}, {
  start: 335,
  length: 1,
  convRule: rule23
}, {
  start: 336,
  length: 1,
  convRule: rule22
}, {
  start: 337,
  length: 1,
  convRule: rule23
}, {
  start: 338,
  length: 1,
  convRule: rule22
}, {
  start: 339,
  length: 1,
  convRule: rule23
}, {
  start: 340,
  length: 1,
  convRule: rule22
}, {
  start: 341,
  length: 1,
  convRule: rule23
}, {
  start: 342,
  length: 1,
  convRule: rule22
}, {
  start: 343,
  length: 1,
  convRule: rule23
}, {
  start: 344,
  length: 1,
  convRule: rule22
}, {
  start: 345,
  length: 1,
  convRule: rule23
}, {
  start: 346,
  length: 1,
  convRule: rule22
}, {
  start: 347,
  length: 1,
  convRule: rule23
}, {
  start: 348,
  length: 1,
  convRule: rule22
}, {
  start: 349,
  length: 1,
  convRule: rule23
}, {
  start: 350,
  length: 1,
  convRule: rule22
}, {
  start: 351,
  length: 1,
  convRule: rule23
}, {
  start: 352,
  length: 1,
  convRule: rule22
}, {
  start: 353,
  length: 1,
  convRule: rule23
}, {
  start: 354,
  length: 1,
  convRule: rule22
}, {
  start: 355,
  length: 1,
  convRule: rule23
}, {
  start: 356,
  length: 1,
  convRule: rule22
}, {
  start: 357,
  length: 1,
  convRule: rule23
}, {
  start: 358,
  length: 1,
  convRule: rule22
}, {
  start: 359,
  length: 1,
  convRule: rule23
}, {
  start: 360,
  length: 1,
  convRule: rule22
}, {
  start: 361,
  length: 1,
  convRule: rule23
}, {
  start: 362,
  length: 1,
  convRule: rule22
}, {
  start: 363,
  length: 1,
  convRule: rule23
}, {
  start: 364,
  length: 1,
  convRule: rule22
}, {
  start: 365,
  length: 1,
  convRule: rule23
}, {
  start: 366,
  length: 1,
  convRule: rule22
}, {
  start: 367,
  length: 1,
  convRule: rule23
}, {
  start: 368,
  length: 1,
  convRule: rule22
}, {
  start: 369,
  length: 1,
  convRule: rule23
}, {
  start: 370,
  length: 1,
  convRule: rule22
}, {
  start: 371,
  length: 1,
  convRule: rule23
}, {
  start: 372,
  length: 1,
  convRule: rule22
}, {
  start: 373,
  length: 1,
  convRule: rule23
}, {
  start: 374,
  length: 1,
  convRule: rule22
}, {
  start: 375,
  length: 1,
  convRule: rule23
}, {
  start: 376,
  length: 1,
  convRule: rule26
}, {
  start: 377,
  length: 1,
  convRule: rule22
}, {
  start: 378,
  length: 1,
  convRule: rule23
}, {
  start: 379,
  length: 1,
  convRule: rule22
}, {
  start: 380,
  length: 1,
  convRule: rule23
}, {
  start: 381,
  length: 1,
  convRule: rule22
}, {
  start: 382,
  length: 1,
  convRule: rule23
}, {
  start: 383,
  length: 1,
  convRule: rule27
}, {
  start: 384,
  length: 1,
  convRule: rule28
}, {
  start: 385,
  length: 1,
  convRule: rule29
}, {
  start: 386,
  length: 1,
  convRule: rule22
}, {
  start: 387,
  length: 1,
  convRule: rule23
}, {
  start: 388,
  length: 1,
  convRule: rule22
}, {
  start: 389,
  length: 1,
  convRule: rule23
}, {
  start: 390,
  length: 1,
  convRule: rule30
}, {
  start: 391,
  length: 1,
  convRule: rule22
}, {
  start: 392,
  length: 1,
  convRule: rule23
}, {
  start: 393,
  length: 2,
  convRule: rule31
}, {
  start: 395,
  length: 1,
  convRule: rule22
}, {
  start: 396,
  length: 1,
  convRule: rule23
}, {
  start: 398,
  length: 1,
  convRule: rule32
}, {
  start: 399,
  length: 1,
  convRule: rule33
}, {
  start: 400,
  length: 1,
  convRule: rule34
}, {
  start: 401,
  length: 1,
  convRule: rule22
}, {
  start: 402,
  length: 1,
  convRule: rule23
}, {
  start: 403,
  length: 1,
  convRule: rule31
}, {
  start: 404,
  length: 1,
  convRule: rule35
}, {
  start: 405,
  length: 1,
  convRule: rule36
}, {
  start: 406,
  length: 1,
  convRule: rule37
}, {
  start: 407,
  length: 1,
  convRule: rule38
}, {
  start: 408,
  length: 1,
  convRule: rule22
}, {
  start: 409,
  length: 1,
  convRule: rule23
}, {
  start: 410,
  length: 1,
  convRule: rule39
}, {
  start: 412,
  length: 1,
  convRule: rule37
}, {
  start: 413,
  length: 1,
  convRule: rule40
}, {
  start: 414,
  length: 1,
  convRule: rule41
}, {
  start: 415,
  length: 1,
  convRule: rule42
}, {
  start: 416,
  length: 1,
  convRule: rule22
}, {
  start: 417,
  length: 1,
  convRule: rule23
}, {
  start: 418,
  length: 1,
  convRule: rule22
}, {
  start: 419,
  length: 1,
  convRule: rule23
}, {
  start: 420,
  length: 1,
  convRule: rule22
}, {
  start: 421,
  length: 1,
  convRule: rule23
}, {
  start: 422,
  length: 1,
  convRule: rule43
}, {
  start: 423,
  length: 1,
  convRule: rule22
}, {
  start: 424,
  length: 1,
  convRule: rule23
}, {
  start: 425,
  length: 1,
  convRule: rule43
}, {
  start: 428,
  length: 1,
  convRule: rule22
}, {
  start: 429,
  length: 1,
  convRule: rule23
}, {
  start: 430,
  length: 1,
  convRule: rule43
}, {
  start: 431,
  length: 1,
  convRule: rule22
}, {
  start: 432,
  length: 1,
  convRule: rule23
}, {
  start: 433,
  length: 2,
  convRule: rule44
}, {
  start: 435,
  length: 1,
  convRule: rule22
}, {
  start: 436,
  length: 1,
  convRule: rule23
}, {
  start: 437,
  length: 1,
  convRule: rule22
}, {
  start: 438,
  length: 1,
  convRule: rule23
}, {
  start: 439,
  length: 1,
  convRule: rule45
}, {
  start: 440,
  length: 1,
  convRule: rule22
}, {
  start: 441,
  length: 1,
  convRule: rule23
}, {
  start: 444,
  length: 1,
  convRule: rule22
}, {
  start: 445,
  length: 1,
  convRule: rule23
}, {
  start: 447,
  length: 1,
  convRule: rule46
}, {
  start: 452,
  length: 1,
  convRule: rule47
}, {
  start: 453,
  length: 1,
  convRule: rule48
}, {
  start: 454,
  length: 1,
  convRule: rule49
}, {
  start: 455,
  length: 1,
  convRule: rule47
}, {
  start: 456,
  length: 1,
  convRule: rule48
}, {
  start: 457,
  length: 1,
  convRule: rule49
}, {
  start: 458,
  length: 1,
  convRule: rule47
}, {
  start: 459,
  length: 1,
  convRule: rule48
}, {
  start: 460,
  length: 1,
  convRule: rule49
}, {
  start: 461,
  length: 1,
  convRule: rule22
}, {
  start: 462,
  length: 1,
  convRule: rule23
}, {
  start: 463,
  length: 1,
  convRule: rule22
}, {
  start: 464,
  length: 1,
  convRule: rule23
}, {
  start: 465,
  length: 1,
  convRule: rule22
}, {
  start: 466,
  length: 1,
  convRule: rule23
}, {
  start: 467,
  length: 1,
  convRule: rule22
}, {
  start: 468,
  length: 1,
  convRule: rule23
}, {
  start: 469,
  length: 1,
  convRule: rule22
}, {
  start: 470,
  length: 1,
  convRule: rule23
}, {
  start: 471,
  length: 1,
  convRule: rule22
}, {
  start: 472,
  length: 1,
  convRule: rule23
}, {
  start: 473,
  length: 1,
  convRule: rule22
}, {
  start: 474,
  length: 1,
  convRule: rule23
}, {
  start: 475,
  length: 1,
  convRule: rule22
}, {
  start: 476,
  length: 1,
  convRule: rule23
}, {
  start: 477,
  length: 1,
  convRule: rule50
}, {
  start: 478,
  length: 1,
  convRule: rule22
}, {
  start: 479,
  length: 1,
  convRule: rule23
}, {
  start: 480,
  length: 1,
  convRule: rule22
}, {
  start: 481,
  length: 1,
  convRule: rule23
}, {
  start: 482,
  length: 1,
  convRule: rule22
}, {
  start: 483,
  length: 1,
  convRule: rule23
}, {
  start: 484,
  length: 1,
  convRule: rule22
}, {
  start: 485,
  length: 1,
  convRule: rule23
}, {
  start: 486,
  length: 1,
  convRule: rule22
}, {
  start: 487,
  length: 1,
  convRule: rule23
}, {
  start: 488,
  length: 1,
  convRule: rule22
}, {
  start: 489,
  length: 1,
  convRule: rule23
}, {
  start: 490,
  length: 1,
  convRule: rule22
}, {
  start: 491,
  length: 1,
  convRule: rule23
}, {
  start: 492,
  length: 1,
  convRule: rule22
}, {
  start: 493,
  length: 1,
  convRule: rule23
}, {
  start: 494,
  length: 1,
  convRule: rule22
}, {
  start: 495,
  length: 1,
  convRule: rule23
}, {
  start: 497,
  length: 1,
  convRule: rule47
}, {
  start: 498,
  length: 1,
  convRule: rule48
}, {
  start: 499,
  length: 1,
  convRule: rule49
}, {
  start: 500,
  length: 1,
  convRule: rule22
}, {
  start: 501,
  length: 1,
  convRule: rule23
}, {
  start: 502,
  length: 1,
  convRule: rule51
}, {
  start: 503,
  length: 1,
  convRule: rule52
}, {
  start: 504,
  length: 1,
  convRule: rule22
}, {
  start: 505,
  length: 1,
  convRule: rule23
}, {
  start: 506,
  length: 1,
  convRule: rule22
}, {
  start: 507,
  length: 1,
  convRule: rule23
}, {
  start: 508,
  length: 1,
  convRule: rule22
}, {
  start: 509,
  length: 1,
  convRule: rule23
}, {
  start: 510,
  length: 1,
  convRule: rule22
}, {
  start: 511,
  length: 1,
  convRule: rule23
}, {
  start: 512,
  length: 1,
  convRule: rule22
}, {
  start: 513,
  length: 1,
  convRule: rule23
}, {
  start: 514,
  length: 1,
  convRule: rule22
}, {
  start: 515,
  length: 1,
  convRule: rule23
}, {
  start: 516,
  length: 1,
  convRule: rule22
}, {
  start: 517,
  length: 1,
  convRule: rule23
}, {
  start: 518,
  length: 1,
  convRule: rule22
}, {
  start: 519,
  length: 1,
  convRule: rule23
}, {
  start: 520,
  length: 1,
  convRule: rule22
}, {
  start: 521,
  length: 1,
  convRule: rule23
}, {
  start: 522,
  length: 1,
  convRule: rule22
}, {
  start: 523,
  length: 1,
  convRule: rule23
}, {
  start: 524,
  length: 1,
  convRule: rule22
}, {
  start: 525,
  length: 1,
  convRule: rule23
}, {
  start: 526,
  length: 1,
  convRule: rule22
}, {
  start: 527,
  length: 1,
  convRule: rule23
}, {
  start: 528,
  length: 1,
  convRule: rule22
}, {
  start: 529,
  length: 1,
  convRule: rule23
}, {
  start: 530,
  length: 1,
  convRule: rule22
}, {
  start: 531,
  length: 1,
  convRule: rule23
}, {
  start: 532,
  length: 1,
  convRule: rule22
}, {
  start: 533,
  length: 1,
  convRule: rule23
}, {
  start: 534,
  length: 1,
  convRule: rule22
}, {
  start: 535,
  length: 1,
  convRule: rule23
}, {
  start: 536,
  length: 1,
  convRule: rule22
}, {
  start: 537,
  length: 1,
  convRule: rule23
}, {
  start: 538,
  length: 1,
  convRule: rule22
}, {
  start: 539,
  length: 1,
  convRule: rule23
}, {
  start: 540,
  length: 1,
  convRule: rule22
}, {
  start: 541,
  length: 1,
  convRule: rule23
}, {
  start: 542,
  length: 1,
  convRule: rule22
}, {
  start: 543,
  length: 1,
  convRule: rule23
}, {
  start: 544,
  length: 1,
  convRule: rule53
}, {
  start: 546,
  length: 1,
  convRule: rule22
}, {
  start: 547,
  length: 1,
  convRule: rule23
}, {
  start: 548,
  length: 1,
  convRule: rule22
}, {
  start: 549,
  length: 1,
  convRule: rule23
}, {
  start: 550,
  length: 1,
  convRule: rule22
}, {
  start: 551,
  length: 1,
  convRule: rule23
}, {
  start: 552,
  length: 1,
  convRule: rule22
}, {
  start: 553,
  length: 1,
  convRule: rule23
}, {
  start: 554,
  length: 1,
  convRule: rule22
}, {
  start: 555,
  length: 1,
  convRule: rule23
}, {
  start: 556,
  length: 1,
  convRule: rule22
}, {
  start: 557,
  length: 1,
  convRule: rule23
}, {
  start: 558,
  length: 1,
  convRule: rule22
}, {
  start: 559,
  length: 1,
  convRule: rule23
}, {
  start: 560,
  length: 1,
  convRule: rule22
}, {
  start: 561,
  length: 1,
  convRule: rule23
}, {
  start: 562,
  length: 1,
  convRule: rule22
}, {
  start: 563,
  length: 1,
  convRule: rule23
}, {
  start: 570,
  length: 1,
  convRule: rule54
}, {
  start: 571,
  length: 1,
  convRule: rule22
}, {
  start: 572,
  length: 1,
  convRule: rule23
}, {
  start: 573,
  length: 1,
  convRule: rule55
}, {
  start: 574,
  length: 1,
  convRule: rule56
}, {
  start: 575,
  length: 2,
  convRule: rule57
}, {
  start: 577,
  length: 1,
  convRule: rule22
}, {
  start: 578,
  length: 1,
  convRule: rule23
}, {
  start: 579,
  length: 1,
  convRule: rule58
}, {
  start: 580,
  length: 1,
  convRule: rule59
}, {
  start: 581,
  length: 1,
  convRule: rule60
}, {
  start: 582,
  length: 1,
  convRule: rule22
}, {
  start: 583,
  length: 1,
  convRule: rule23
}, {
  start: 584,
  length: 1,
  convRule: rule22
}, {
  start: 585,
  length: 1,
  convRule: rule23
}, {
  start: 586,
  length: 1,
  convRule: rule22
}, {
  start: 587,
  length: 1,
  convRule: rule23
}, {
  start: 588,
  length: 1,
  convRule: rule22
}, {
  start: 589,
  length: 1,
  convRule: rule23
}, {
  start: 590,
  length: 1,
  convRule: rule22
}, {
  start: 591,
  length: 1,
  convRule: rule23
}, {
  start: 592,
  length: 1,
  convRule: rule61
}, {
  start: 593,
  length: 1,
  convRule: rule62
}, {
  start: 594,
  length: 1,
  convRule: rule63
}, {
  start: 595,
  length: 1,
  convRule: rule64
}, {
  start: 596,
  length: 1,
  convRule: rule65
}, {
  start: 598,
  length: 2,
  convRule: rule66
}, {
  start: 601,
  length: 1,
  convRule: rule67
}, {
  start: 603,
  length: 1,
  convRule: rule68
}, {
  start: 604,
  length: 1,
  convRule: rule69
}, {
  start: 608,
  length: 1,
  convRule: rule66
}, {
  start: 609,
  length: 1,
  convRule: rule70
}, {
  start: 611,
  length: 1,
  convRule: rule71
}, {
  start: 613,
  length: 1,
  convRule: rule72
}, {
  start: 614,
  length: 1,
  convRule: rule73
}, {
  start: 616,
  length: 1,
  convRule: rule74
}, {
  start: 617,
  length: 1,
  convRule: rule75
}, {
  start: 618,
  length: 1,
  convRule: rule73
}, {
  start: 619,
  length: 1,
  convRule: rule76
}, {
  start: 620,
  length: 1,
  convRule: rule77
}, {
  start: 623,
  length: 1,
  convRule: rule75
}, {
  start: 625,
  length: 1,
  convRule: rule78
}, {
  start: 626,
  length: 1,
  convRule: rule79
}, {
  start: 629,
  length: 1,
  convRule: rule80
}, {
  start: 637,
  length: 1,
  convRule: rule81
}, {
  start: 640,
  length: 1,
  convRule: rule82
}, {
  start: 642,
  length: 1,
  convRule: rule83
}, {
  start: 643,
  length: 1,
  convRule: rule82
}, {
  start: 647,
  length: 1,
  convRule: rule84
}, {
  start: 648,
  length: 1,
  convRule: rule82
}, {
  start: 649,
  length: 1,
  convRule: rule85
}, {
  start: 650,
  length: 2,
  convRule: rule86
}, {
  start: 652,
  length: 1,
  convRule: rule87
}, {
  start: 658,
  length: 1,
  convRule: rule88
}, {
  start: 669,
  length: 1,
  convRule: rule89
}, {
  start: 670,
  length: 1,
  convRule: rule90
}, {
  start: 837,
  length: 1,
  convRule: rule93
}, {
  start: 880,
  length: 1,
  convRule: rule22
}, {
  start: 881,
  length: 1,
  convRule: rule23
}, {
  start: 882,
  length: 1,
  convRule: rule22
}, {
  start: 883,
  length: 1,
  convRule: rule23
}, {
  start: 886,
  length: 1,
  convRule: rule22
}, {
  start: 887,
  length: 1,
  convRule: rule23
}, {
  start: 891,
  length: 3,
  convRule: rule41
}, {
  start: 895,
  length: 1,
  convRule: rule94
}, {
  start: 902,
  length: 1,
  convRule: rule95
}, {
  start: 904,
  length: 3,
  convRule: rule96
}, {
  start: 908,
  length: 1,
  convRule: rule97
}, {
  start: 910,
  length: 2,
  convRule: rule98
}, {
  start: 913,
  length: 17,
  convRule: rule9
}, {
  start: 931,
  length: 9,
  convRule: rule9
}, {
  start: 940,
  length: 1,
  convRule: rule99
}, {
  start: 941,
  length: 3,
  convRule: rule100
}, {
  start: 945,
  length: 17,
  convRule: rule12
}, {
  start: 962,
  length: 1,
  convRule: rule101
}, {
  start: 963,
  length: 9,
  convRule: rule12
}, {
  start: 972,
  length: 1,
  convRule: rule102
}, {
  start: 973,
  length: 2,
  convRule: rule103
}, {
  start: 975,
  length: 1,
  convRule: rule104
}, {
  start: 976,
  length: 1,
  convRule: rule105
}, {
  start: 977,
  length: 1,
  convRule: rule106
}, {
  start: 981,
  length: 1,
  convRule: rule108
}, {
  start: 982,
  length: 1,
  convRule: rule109
}, {
  start: 983,
  length: 1,
  convRule: rule110
}, {
  start: 984,
  length: 1,
  convRule: rule22
}, {
  start: 985,
  length: 1,
  convRule: rule23
}, {
  start: 986,
  length: 1,
  convRule: rule22
}, {
  start: 987,
  length: 1,
  convRule: rule23
}, {
  start: 988,
  length: 1,
  convRule: rule22
}, {
  start: 989,
  length: 1,
  convRule: rule23
}, {
  start: 990,
  length: 1,
  convRule: rule22
}, {
  start: 991,
  length: 1,
  convRule: rule23
}, {
  start: 992,
  length: 1,
  convRule: rule22
}, {
  start: 993,
  length: 1,
  convRule: rule23
}, {
  start: 994,
  length: 1,
  convRule: rule22
}, {
  start: 995,
  length: 1,
  convRule: rule23
}, {
  start: 996,
  length: 1,
  convRule: rule22
}, {
  start: 997,
  length: 1,
  convRule: rule23
}, {
  start: 998,
  length: 1,
  convRule: rule22
}, {
  start: 999,
  length: 1,
  convRule: rule23
}, {
  start: 1e3,
  length: 1,
  convRule: rule22
}, {
  start: 1001,
  length: 1,
  convRule: rule23
}, {
  start: 1002,
  length: 1,
  convRule: rule22
}, {
  start: 1003,
  length: 1,
  convRule: rule23
}, {
  start: 1004,
  length: 1,
  convRule: rule22
}, {
  start: 1005,
  length: 1,
  convRule: rule23
}, {
  start: 1006,
  length: 1,
  convRule: rule22
}, {
  start: 1007,
  length: 1,
  convRule: rule23
}, {
  start: 1008,
  length: 1,
  convRule: rule111
}, {
  start: 1009,
  length: 1,
  convRule: rule112
}, {
  start: 1010,
  length: 1,
  convRule: rule113
}, {
  start: 1011,
  length: 1,
  convRule: rule114
}, {
  start: 1012,
  length: 1,
  convRule: rule115
}, {
  start: 1013,
  length: 1,
  convRule: rule116
}, {
  start: 1015,
  length: 1,
  convRule: rule22
}, {
  start: 1016,
  length: 1,
  convRule: rule23
}, {
  start: 1017,
  length: 1,
  convRule: rule117
}, {
  start: 1018,
  length: 1,
  convRule: rule22
}, {
  start: 1019,
  length: 1,
  convRule: rule23
}, {
  start: 1021,
  length: 3,
  convRule: rule53
}, {
  start: 1024,
  length: 16,
  convRule: rule118
}, {
  start: 1040,
  length: 32,
  convRule: rule9
}, {
  start: 1072,
  length: 32,
  convRule: rule12
}, {
  start: 1104,
  length: 16,
  convRule: rule112
}, {
  start: 1120,
  length: 1,
  convRule: rule22
}, {
  start: 1121,
  length: 1,
  convRule: rule23
}, {
  start: 1122,
  length: 1,
  convRule: rule22
}, {
  start: 1123,
  length: 1,
  convRule: rule23
}, {
  start: 1124,
  length: 1,
  convRule: rule22
}, {
  start: 1125,
  length: 1,
  convRule: rule23
}, {
  start: 1126,
  length: 1,
  convRule: rule22
}, {
  start: 1127,
  length: 1,
  convRule: rule23
}, {
  start: 1128,
  length: 1,
  convRule: rule22
}, {
  start: 1129,
  length: 1,
  convRule: rule23
}, {
  start: 1130,
  length: 1,
  convRule: rule22
}, {
  start: 1131,
  length: 1,
  convRule: rule23
}, {
  start: 1132,
  length: 1,
  convRule: rule22
}, {
  start: 1133,
  length: 1,
  convRule: rule23
}, {
  start: 1134,
  length: 1,
  convRule: rule22
}, {
  start: 1135,
  length: 1,
  convRule: rule23
}, {
  start: 1136,
  length: 1,
  convRule: rule22
}, {
  start: 1137,
  length: 1,
  convRule: rule23
}, {
  start: 1138,
  length: 1,
  convRule: rule22
}, {
  start: 1139,
  length: 1,
  convRule: rule23
}, {
  start: 1140,
  length: 1,
  convRule: rule22
}, {
  start: 1141,
  length: 1,
  convRule: rule23
}, {
  start: 1142,
  length: 1,
  convRule: rule22
}, {
  start: 1143,
  length: 1,
  convRule: rule23
}, {
  start: 1144,
  length: 1,
  convRule: rule22
}, {
  start: 1145,
  length: 1,
  convRule: rule23
}, {
  start: 1146,
  length: 1,
  convRule: rule22
}, {
  start: 1147,
  length: 1,
  convRule: rule23
}, {
  start: 1148,
  length: 1,
  convRule: rule22
}, {
  start: 1149,
  length: 1,
  convRule: rule23
}, {
  start: 1150,
  length: 1,
  convRule: rule22
}, {
  start: 1151,
  length: 1,
  convRule: rule23
}, {
  start: 1152,
  length: 1,
  convRule: rule22
}, {
  start: 1153,
  length: 1,
  convRule: rule23
}, {
  start: 1162,
  length: 1,
  convRule: rule22
}, {
  start: 1163,
  length: 1,
  convRule: rule23
}, {
  start: 1164,
  length: 1,
  convRule: rule22
}, {
  start: 1165,
  length: 1,
  convRule: rule23
}, {
  start: 1166,
  length: 1,
  convRule: rule22
}, {
  start: 1167,
  length: 1,
  convRule: rule23
}, {
  start: 1168,
  length: 1,
  convRule: rule22
}, {
  start: 1169,
  length: 1,
  convRule: rule23
}, {
  start: 1170,
  length: 1,
  convRule: rule22
}, {
  start: 1171,
  length: 1,
  convRule: rule23
}, {
  start: 1172,
  length: 1,
  convRule: rule22
}, {
  start: 1173,
  length: 1,
  convRule: rule23
}, {
  start: 1174,
  length: 1,
  convRule: rule22
}, {
  start: 1175,
  length: 1,
  convRule: rule23
}, {
  start: 1176,
  length: 1,
  convRule: rule22
}, {
  start: 1177,
  length: 1,
  convRule: rule23
}, {
  start: 1178,
  length: 1,
  convRule: rule22
}, {
  start: 1179,
  length: 1,
  convRule: rule23
}, {
  start: 1180,
  length: 1,
  convRule: rule22
}, {
  start: 1181,
  length: 1,
  convRule: rule23
}, {
  start: 1182,
  length: 1,
  convRule: rule22
}, {
  start: 1183,
  length: 1,
  convRule: rule23
}, {
  start: 1184,
  length: 1,
  convRule: rule22
}, {
  start: 1185,
  length: 1,
  convRule: rule23
}, {
  start: 1186,
  length: 1,
  convRule: rule22
}, {
  start: 1187,
  length: 1,
  convRule: rule23
}, {
  start: 1188,
  length: 1,
  convRule: rule22
}, {
  start: 1189,
  length: 1,
  convRule: rule23
}, {
  start: 1190,
  length: 1,
  convRule: rule22
}, {
  start: 1191,
  length: 1,
  convRule: rule23
}, {
  start: 1192,
  length: 1,
  convRule: rule22
}, {
  start: 1193,
  length: 1,
  convRule: rule23
}, {
  start: 1194,
  length: 1,
  convRule: rule22
}, {
  start: 1195,
  length: 1,
  convRule: rule23
}, {
  start: 1196,
  length: 1,
  convRule: rule22
}, {
  start: 1197,
  length: 1,
  convRule: rule23
}, {
  start: 1198,
  length: 1,
  convRule: rule22
}, {
  start: 1199,
  length: 1,
  convRule: rule23
}, {
  start: 1200,
  length: 1,
  convRule: rule22
}, {
  start: 1201,
  length: 1,
  convRule: rule23
}, {
  start: 1202,
  length: 1,
  convRule: rule22
}, {
  start: 1203,
  length: 1,
  convRule: rule23
}, {
  start: 1204,
  length: 1,
  convRule: rule22
}, {
  start: 1205,
  length: 1,
  convRule: rule23
}, {
  start: 1206,
  length: 1,
  convRule: rule22
}, {
  start: 1207,
  length: 1,
  convRule: rule23
}, {
  start: 1208,
  length: 1,
  convRule: rule22
}, {
  start: 1209,
  length: 1,
  convRule: rule23
}, {
  start: 1210,
  length: 1,
  convRule: rule22
}, {
  start: 1211,
  length: 1,
  convRule: rule23
}, {
  start: 1212,
  length: 1,
  convRule: rule22
}, {
  start: 1213,
  length: 1,
  convRule: rule23
}, {
  start: 1214,
  length: 1,
  convRule: rule22
}, {
  start: 1215,
  length: 1,
  convRule: rule23
}, {
  start: 1216,
  length: 1,
  convRule: rule120
}, {
  start: 1217,
  length: 1,
  convRule: rule22
}, {
  start: 1218,
  length: 1,
  convRule: rule23
}, {
  start: 1219,
  length: 1,
  convRule: rule22
}, {
  start: 1220,
  length: 1,
  convRule: rule23
}, {
  start: 1221,
  length: 1,
  convRule: rule22
}, {
  start: 1222,
  length: 1,
  convRule: rule23
}, {
  start: 1223,
  length: 1,
  convRule: rule22
}, {
  start: 1224,
  length: 1,
  convRule: rule23
}, {
  start: 1225,
  length: 1,
  convRule: rule22
}, {
  start: 1226,
  length: 1,
  convRule: rule23
}, {
  start: 1227,
  length: 1,
  convRule: rule22
}, {
  start: 1228,
  length: 1,
  convRule: rule23
}, {
  start: 1229,
  length: 1,
  convRule: rule22
}, {
  start: 1230,
  length: 1,
  convRule: rule23
}, {
  start: 1231,
  length: 1,
  convRule: rule121
}, {
  start: 1232,
  length: 1,
  convRule: rule22
}, {
  start: 1233,
  length: 1,
  convRule: rule23
}, {
  start: 1234,
  length: 1,
  convRule: rule22
}, {
  start: 1235,
  length: 1,
  convRule: rule23
}, {
  start: 1236,
  length: 1,
  convRule: rule22
}, {
  start: 1237,
  length: 1,
  convRule: rule23
}, {
  start: 1238,
  length: 1,
  convRule: rule22
}, {
  start: 1239,
  length: 1,
  convRule: rule23
}, {
  start: 1240,
  length: 1,
  convRule: rule22
}, {
  start: 1241,
  length: 1,
  convRule: rule23
}, {
  start: 1242,
  length: 1,
  convRule: rule22
}, {
  start: 1243,
  length: 1,
  convRule: rule23
}, {
  start: 1244,
  length: 1,
  convRule: rule22
}, {
  start: 1245,
  length: 1,
  convRule: rule23
}, {
  start: 1246,
  length: 1,
  convRule: rule22
}, {
  start: 1247,
  length: 1,
  convRule: rule23
}, {
  start: 1248,
  length: 1,
  convRule: rule22
}, {
  start: 1249,
  length: 1,
  convRule: rule23
}, {
  start: 1250,
  length: 1,
  convRule: rule22
}, {
  start: 1251,
  length: 1,
  convRule: rule23
}, {
  start: 1252,
  length: 1,
  convRule: rule22
}, {
  start: 1253,
  length: 1,
  convRule: rule23
}, {
  start: 1254,
  length: 1,
  convRule: rule22
}, {
  start: 1255,
  length: 1,
  convRule: rule23
}, {
  start: 1256,
  length: 1,
  convRule: rule22
}, {
  start: 1257,
  length: 1,
  convRule: rule23
}, {
  start: 1258,
  length: 1,
  convRule: rule22
}, {
  start: 1259,
  length: 1,
  convRule: rule23
}, {
  start: 1260,
  length: 1,
  convRule: rule22
}, {
  start: 1261,
  length: 1,
  convRule: rule23
}, {
  start: 1262,
  length: 1,
  convRule: rule22
}, {
  start: 1263,
  length: 1,
  convRule: rule23
}, {
  start: 1264,
  length: 1,
  convRule: rule22
}, {
  start: 1265,
  length: 1,
  convRule: rule23
}, {
  start: 1266,
  length: 1,
  convRule: rule22
}, {
  start: 1267,
  length: 1,
  convRule: rule23
}, {
  start: 1268,
  length: 1,
  convRule: rule22
}, {
  start: 1269,
  length: 1,
  convRule: rule23
}, {
  start: 1270,
  length: 1,
  convRule: rule22
}, {
  start: 1271,
  length: 1,
  convRule: rule23
}, {
  start: 1272,
  length: 1,
  convRule: rule22
}, {
  start: 1273,
  length: 1,
  convRule: rule23
}, {
  start: 1274,
  length: 1,
  convRule: rule22
}, {
  start: 1275,
  length: 1,
  convRule: rule23
}, {
  start: 1276,
  length: 1,
  convRule: rule22
}, {
  start: 1277,
  length: 1,
  convRule: rule23
}, {
  start: 1278,
  length: 1,
  convRule: rule22
}, {
  start: 1279,
  length: 1,
  convRule: rule23
}, {
  start: 1280,
  length: 1,
  convRule: rule22
}, {
  start: 1281,
  length: 1,
  convRule: rule23
}, {
  start: 1282,
  length: 1,
  convRule: rule22
}, {
  start: 1283,
  length: 1,
  convRule: rule23
}, {
  start: 1284,
  length: 1,
  convRule: rule22
}, {
  start: 1285,
  length: 1,
  convRule: rule23
}, {
  start: 1286,
  length: 1,
  convRule: rule22
}, {
  start: 1287,
  length: 1,
  convRule: rule23
}, {
  start: 1288,
  length: 1,
  convRule: rule22
}, {
  start: 1289,
  length: 1,
  convRule: rule23
}, {
  start: 1290,
  length: 1,
  convRule: rule22
}, {
  start: 1291,
  length: 1,
  convRule: rule23
}, {
  start: 1292,
  length: 1,
  convRule: rule22
}, {
  start: 1293,
  length: 1,
  convRule: rule23
}, {
  start: 1294,
  length: 1,
  convRule: rule22
}, {
  start: 1295,
  length: 1,
  convRule: rule23
}, {
  start: 1296,
  length: 1,
  convRule: rule22
}, {
  start: 1297,
  length: 1,
  convRule: rule23
}, {
  start: 1298,
  length: 1,
  convRule: rule22
}, {
  start: 1299,
  length: 1,
  convRule: rule23
}, {
  start: 1300,
  length: 1,
  convRule: rule22
}, {
  start: 1301,
  length: 1,
  convRule: rule23
}, {
  start: 1302,
  length: 1,
  convRule: rule22
}, {
  start: 1303,
  length: 1,
  convRule: rule23
}, {
  start: 1304,
  length: 1,
  convRule: rule22
}, {
  start: 1305,
  length: 1,
  convRule: rule23
}, {
  start: 1306,
  length: 1,
  convRule: rule22
}, {
  start: 1307,
  length: 1,
  convRule: rule23
}, {
  start: 1308,
  length: 1,
  convRule: rule22
}, {
  start: 1309,
  length: 1,
  convRule: rule23
}, {
  start: 1310,
  length: 1,
  convRule: rule22
}, {
  start: 1311,
  length: 1,
  convRule: rule23
}, {
  start: 1312,
  length: 1,
  convRule: rule22
}, {
  start: 1313,
  length: 1,
  convRule: rule23
}, {
  start: 1314,
  length: 1,
  convRule: rule22
}, {
  start: 1315,
  length: 1,
  convRule: rule23
}, {
  start: 1316,
  length: 1,
  convRule: rule22
}, {
  start: 1317,
  length: 1,
  convRule: rule23
}, {
  start: 1318,
  length: 1,
  convRule: rule22
}, {
  start: 1319,
  length: 1,
  convRule: rule23
}, {
  start: 1320,
  length: 1,
  convRule: rule22
}, {
  start: 1321,
  length: 1,
  convRule: rule23
}, {
  start: 1322,
  length: 1,
  convRule: rule22
}, {
  start: 1323,
  length: 1,
  convRule: rule23
}, {
  start: 1324,
  length: 1,
  convRule: rule22
}, {
  start: 1325,
  length: 1,
  convRule: rule23
}, {
  start: 1326,
  length: 1,
  convRule: rule22
}, {
  start: 1327,
  length: 1,
  convRule: rule23
}, {
  start: 1329,
  length: 38,
  convRule: rule122
}, {
  start: 1377,
  length: 38,
  convRule: rule123
}, {
  start: 4256,
  length: 38,
  convRule: rule125
}, {
  start: 4295,
  length: 1,
  convRule: rule125
}, {
  start: 4301,
  length: 1,
  convRule: rule125
}, {
  start: 4304,
  length: 43,
  convRule: rule126
}, {
  start: 4349,
  length: 3,
  convRule: rule126
}, {
  start: 5024,
  length: 80,
  convRule: rule127
}, {
  start: 5104,
  length: 6,
  convRule: rule104
}, {
  start: 5112,
  length: 6,
  convRule: rule110
}, {
  start: 7296,
  length: 1,
  convRule: rule129
}, {
  start: 7297,
  length: 1,
  convRule: rule130
}, {
  start: 7298,
  length: 1,
  convRule: rule131
}, {
  start: 7299,
  length: 2,
  convRule: rule132
}, {
  start: 7301,
  length: 1,
  convRule: rule133
}, {
  start: 7302,
  length: 1,
  convRule: rule134
}, {
  start: 7303,
  length: 1,
  convRule: rule135
}, {
  start: 7304,
  length: 1,
  convRule: rule136
}, {
  start: 7312,
  length: 43,
  convRule: rule137
}, {
  start: 7357,
  length: 3,
  convRule: rule137
}, {
  start: 7545,
  length: 1,
  convRule: rule138
}, {
  start: 7549,
  length: 1,
  convRule: rule139
}, {
  start: 7566,
  length: 1,
  convRule: rule140
}, {
  start: 7680,
  length: 1,
  convRule: rule22
}, {
  start: 7681,
  length: 1,
  convRule: rule23
}, {
  start: 7682,
  length: 1,
  convRule: rule22
}, {
  start: 7683,
  length: 1,
  convRule: rule23
}, {
  start: 7684,
  length: 1,
  convRule: rule22
}, {
  start: 7685,
  length: 1,
  convRule: rule23
}, {
  start: 7686,
  length: 1,
  convRule: rule22
}, {
  start: 7687,
  length: 1,
  convRule: rule23
}, {
  start: 7688,
  length: 1,
  convRule: rule22
}, {
  start: 7689,
  length: 1,
  convRule: rule23
}, {
  start: 7690,
  length: 1,
  convRule: rule22
}, {
  start: 7691,
  length: 1,
  convRule: rule23
}, {
  start: 7692,
  length: 1,
  convRule: rule22
}, {
  start: 7693,
  length: 1,
  convRule: rule23
}, {
  start: 7694,
  length: 1,
  convRule: rule22
}, {
  start: 7695,
  length: 1,
  convRule: rule23
}, {
  start: 7696,
  length: 1,
  convRule: rule22
}, {
  start: 7697,
  length: 1,
  convRule: rule23
}, {
  start: 7698,
  length: 1,
  convRule: rule22
}, {
  start: 7699,
  length: 1,
  convRule: rule23
}, {
  start: 7700,
  length: 1,
  convRule: rule22
}, {
  start: 7701,
  length: 1,
  convRule: rule23
}, {
  start: 7702,
  length: 1,
  convRule: rule22
}, {
  start: 7703,
  length: 1,
  convRule: rule23
}, {
  start: 7704,
  length: 1,
  convRule: rule22
}, {
  start: 7705,
  length: 1,
  convRule: rule23
}, {
  start: 7706,
  length: 1,
  convRule: rule22
}, {
  start: 7707,
  length: 1,
  convRule: rule23
}, {
  start: 7708,
  length: 1,
  convRule: rule22
}, {
  start: 7709,
  length: 1,
  convRule: rule23
}, {
  start: 7710,
  length: 1,
  convRule: rule22
}, {
  start: 7711,
  length: 1,
  convRule: rule23
}, {
  start: 7712,
  length: 1,
  convRule: rule22
}, {
  start: 7713,
  length: 1,
  convRule: rule23
}, {
  start: 7714,
  length: 1,
  convRule: rule22
}, {
  start: 7715,
  length: 1,
  convRule: rule23
}, {
  start: 7716,
  length: 1,
  convRule: rule22
}, {
  start: 7717,
  length: 1,
  convRule: rule23
}, {
  start: 7718,
  length: 1,
  convRule: rule22
}, {
  start: 7719,
  length: 1,
  convRule: rule23
}, {
  start: 7720,
  length: 1,
  convRule: rule22
}, {
  start: 7721,
  length: 1,
  convRule: rule23
}, {
  start: 7722,
  length: 1,
  convRule: rule22
}, {
  start: 7723,
  length: 1,
  convRule: rule23
}, {
  start: 7724,
  length: 1,
  convRule: rule22
}, {
  start: 7725,
  length: 1,
  convRule: rule23
}, {
  start: 7726,
  length: 1,
  convRule: rule22
}, {
  start: 7727,
  length: 1,
  convRule: rule23
}, {
  start: 7728,
  length: 1,
  convRule: rule22
}, {
  start: 7729,
  length: 1,
  convRule: rule23
}, {
  start: 7730,
  length: 1,
  convRule: rule22
}, {
  start: 7731,
  length: 1,
  convRule: rule23
}, {
  start: 7732,
  length: 1,
  convRule: rule22
}, {
  start: 7733,
  length: 1,
  convRule: rule23
}, {
  start: 7734,
  length: 1,
  convRule: rule22
}, {
  start: 7735,
  length: 1,
  convRule: rule23
}, {
  start: 7736,
  length: 1,
  convRule: rule22
}, {
  start: 7737,
  length: 1,
  convRule: rule23
}, {
  start: 7738,
  length: 1,
  convRule: rule22
}, {
  start: 7739,
  length: 1,
  convRule: rule23
}, {
  start: 7740,
  length: 1,
  convRule: rule22
}, {
  start: 7741,
  length: 1,
  convRule: rule23
}, {
  start: 7742,
  length: 1,
  convRule: rule22
}, {
  start: 7743,
  length: 1,
  convRule: rule23
}, {
  start: 7744,
  length: 1,
  convRule: rule22
}, {
  start: 7745,
  length: 1,
  convRule: rule23
}, {
  start: 7746,
  length: 1,
  convRule: rule22
}, {
  start: 7747,
  length: 1,
  convRule: rule23
}, {
  start: 7748,
  length: 1,
  convRule: rule22
}, {
  start: 7749,
  length: 1,
  convRule: rule23
}, {
  start: 7750,
  length: 1,
  convRule: rule22
}, {
  start: 7751,
  length: 1,
  convRule: rule23
}, {
  start: 7752,
  length: 1,
  convRule: rule22
}, {
  start: 7753,
  length: 1,
  convRule: rule23
}, {
  start: 7754,
  length: 1,
  convRule: rule22
}, {
  start: 7755,
  length: 1,
  convRule: rule23
}, {
  start: 7756,
  length: 1,
  convRule: rule22
}, {
  start: 7757,
  length: 1,
  convRule: rule23
}, {
  start: 7758,
  length: 1,
  convRule: rule22
}, {
  start: 7759,
  length: 1,
  convRule: rule23
}, {
  start: 7760,
  length: 1,
  convRule: rule22
}, {
  start: 7761,
  length: 1,
  convRule: rule23
}, {
  start: 7762,
  length: 1,
  convRule: rule22
}, {
  start: 7763,
  length: 1,
  convRule: rule23
}, {
  start: 7764,
  length: 1,
  convRule: rule22
}, {
  start: 7765,
  length: 1,
  convRule: rule23
}, {
  start: 7766,
  length: 1,
  convRule: rule22
}, {
  start: 7767,
  length: 1,
  convRule: rule23
}, {
  start: 7768,
  length: 1,
  convRule: rule22
}, {
  start: 7769,
  length: 1,
  convRule: rule23
}, {
  start: 7770,
  length: 1,
  convRule: rule22
}, {
  start: 7771,
  length: 1,
  convRule: rule23
}, {
  start: 7772,
  length: 1,
  convRule: rule22
}, {
  start: 7773,
  length: 1,
  convRule: rule23
}, {
  start: 7774,
  length: 1,
  convRule: rule22
}, {
  start: 7775,
  length: 1,
  convRule: rule23
}, {
  start: 7776,
  length: 1,
  convRule: rule22
}, {
  start: 7777,
  length: 1,
  convRule: rule23
}, {
  start: 7778,
  length: 1,
  convRule: rule22
}, {
  start: 7779,
  length: 1,
  convRule: rule23
}, {
  start: 7780,
  length: 1,
  convRule: rule22
}, {
  start: 7781,
  length: 1,
  convRule: rule23
}, {
  start: 7782,
  length: 1,
  convRule: rule22
}, {
  start: 7783,
  length: 1,
  convRule: rule23
}, {
  start: 7784,
  length: 1,
  convRule: rule22
}, {
  start: 7785,
  length: 1,
  convRule: rule23
}, {
  start: 7786,
  length: 1,
  convRule: rule22
}, {
  start: 7787,
  length: 1,
  convRule: rule23
}, {
  start: 7788,
  length: 1,
  convRule: rule22
}, {
  start: 7789,
  length: 1,
  convRule: rule23
}, {
  start: 7790,
  length: 1,
  convRule: rule22
}, {
  start: 7791,
  length: 1,
  convRule: rule23
}, {
  start: 7792,
  length: 1,
  convRule: rule22
}, {
  start: 7793,
  length: 1,
  convRule: rule23
}, {
  start: 7794,
  length: 1,
  convRule: rule22
}, {
  start: 7795,
  length: 1,
  convRule: rule23
}, {
  start: 7796,
  length: 1,
  convRule: rule22
}, {
  start: 7797,
  length: 1,
  convRule: rule23
}, {
  start: 7798,
  length: 1,
  convRule: rule22
}, {
  start: 7799,
  length: 1,
  convRule: rule23
}, {
  start: 7800,
  length: 1,
  convRule: rule22
}, {
  start: 7801,
  length: 1,
  convRule: rule23
}, {
  start: 7802,
  length: 1,
  convRule: rule22
}, {
  start: 7803,
  length: 1,
  convRule: rule23
}, {
  start: 7804,
  length: 1,
  convRule: rule22
}, {
  start: 7805,
  length: 1,
  convRule: rule23
}, {
  start: 7806,
  length: 1,
  convRule: rule22
}, {
  start: 7807,
  length: 1,
  convRule: rule23
}, {
  start: 7808,
  length: 1,
  convRule: rule22
}, {
  start: 7809,
  length: 1,
  convRule: rule23
}, {
  start: 7810,
  length: 1,
  convRule: rule22
}, {
  start: 7811,
  length: 1,
  convRule: rule23
}, {
  start: 7812,
  length: 1,
  convRule: rule22
}, {
  start: 7813,
  length: 1,
  convRule: rule23
}, {
  start: 7814,
  length: 1,
  convRule: rule22
}, {
  start: 7815,
  length: 1,
  convRule: rule23
}, {
  start: 7816,
  length: 1,
  convRule: rule22
}, {
  start: 7817,
  length: 1,
  convRule: rule23
}, {
  start: 7818,
  length: 1,
  convRule: rule22
}, {
  start: 7819,
  length: 1,
  convRule: rule23
}, {
  start: 7820,
  length: 1,
  convRule: rule22
}, {
  start: 7821,
  length: 1,
  convRule: rule23
}, {
  start: 7822,
  length: 1,
  convRule: rule22
}, {
  start: 7823,
  length: 1,
  convRule: rule23
}, {
  start: 7824,
  length: 1,
  convRule: rule22
}, {
  start: 7825,
  length: 1,
  convRule: rule23
}, {
  start: 7826,
  length: 1,
  convRule: rule22
}, {
  start: 7827,
  length: 1,
  convRule: rule23
}, {
  start: 7828,
  length: 1,
  convRule: rule22
}, {
  start: 7829,
  length: 1,
  convRule: rule23
}, {
  start: 7835,
  length: 1,
  convRule: rule141
}, {
  start: 7838,
  length: 1,
  convRule: rule142
}, {
  start: 7840,
  length: 1,
  convRule: rule22
}, {
  start: 7841,
  length: 1,
  convRule: rule23
}, {
  start: 7842,
  length: 1,
  convRule: rule22
}, {
  start: 7843,
  length: 1,
  convRule: rule23
}, {
  start: 7844,
  length: 1,
  convRule: rule22
}, {
  start: 7845,
  length: 1,
  convRule: rule23
}, {
  start: 7846,
  length: 1,
  convRule: rule22
}, {
  start: 7847,
  length: 1,
  convRule: rule23
}, {
  start: 7848,
  length: 1,
  convRule: rule22
}, {
  start: 7849,
  length: 1,
  convRule: rule23
}, {
  start: 7850,
  length: 1,
  convRule: rule22
}, {
  start: 7851,
  length: 1,
  convRule: rule23
}, {
  start: 7852,
  length: 1,
  convRule: rule22
}, {
  start: 7853,
  length: 1,
  convRule: rule23
}, {
  start: 7854,
  length: 1,
  convRule: rule22
}, {
  start: 7855,
  length: 1,
  convRule: rule23
}, {
  start: 7856,
  length: 1,
  convRule: rule22
}, {
  start: 7857,
  length: 1,
  convRule: rule23
}, {
  start: 7858,
  length: 1,
  convRule: rule22
}, {
  start: 7859,
  length: 1,
  convRule: rule23
}, {
  start: 7860,
  length: 1,
  convRule: rule22
}, {
  start: 7861,
  length: 1,
  convRule: rule23
}, {
  start: 7862,
  length: 1,
  convRule: rule22
}, {
  start: 7863,
  length: 1,
  convRule: rule23
}, {
  start: 7864,
  length: 1,
  convRule: rule22
}, {
  start: 7865,
  length: 1,
  convRule: rule23
}, {
  start: 7866,
  length: 1,
  convRule: rule22
}, {
  start: 7867,
  length: 1,
  convRule: rule23
}, {
  start: 7868,
  length: 1,
  convRule: rule22
}, {
  start: 7869,
  length: 1,
  convRule: rule23
}, {
  start: 7870,
  length: 1,
  convRule: rule22
}, {
  start: 7871,
  length: 1,
  convRule: rule23
}, {
  start: 7872,
  length: 1,
  convRule: rule22
}, {
  start: 7873,
  length: 1,
  convRule: rule23
}, {
  start: 7874,
  length: 1,
  convRule: rule22
}, {
  start: 7875,
  length: 1,
  convRule: rule23
}, {
  start: 7876,
  length: 1,
  convRule: rule22
}, {
  start: 7877,
  length: 1,
  convRule: rule23
}, {
  start: 7878,
  length: 1,
  convRule: rule22
}, {
  start: 7879,
  length: 1,
  convRule: rule23
}, {
  start: 7880,
  length: 1,
  convRule: rule22
}, {
  start: 7881,
  length: 1,
  convRule: rule23
}, {
  start: 7882,
  length: 1,
  convRule: rule22
}, {
  start: 7883,
  length: 1,
  convRule: rule23
}, {
  start: 7884,
  length: 1,
  convRule: rule22
}, {
  start: 7885,
  length: 1,
  convRule: rule23
}, {
  start: 7886,
  length: 1,
  convRule: rule22
}, {
  start: 7887,
  length: 1,
  convRule: rule23
}, {
  start: 7888,
  length: 1,
  convRule: rule22
}, {
  start: 7889,
  length: 1,
  convRule: rule23
}, {
  start: 7890,
  length: 1,
  convRule: rule22
}, {
  start: 7891,
  length: 1,
  convRule: rule23
}, {
  start: 7892,
  length: 1,
  convRule: rule22
}, {
  start: 7893,
  length: 1,
  convRule: rule23
}, {
  start: 7894,
  length: 1,
  convRule: rule22
}, {
  start: 7895,
  length: 1,
  convRule: rule23
}, {
  start: 7896,
  length: 1,
  convRule: rule22
}, {
  start: 7897,
  length: 1,
  convRule: rule23
}, {
  start: 7898,
  length: 1,
  convRule: rule22
}, {
  start: 7899,
  length: 1,
  convRule: rule23
}, {
  start: 7900,
  length: 1,
  convRule: rule22
}, {
  start: 7901,
  length: 1,
  convRule: rule23
}, {
  start: 7902,
  length: 1,
  convRule: rule22
}, {
  start: 7903,
  length: 1,
  convRule: rule23
}, {
  start: 7904,
  length: 1,
  convRule: rule22
}, {
  start: 7905,
  length: 1,
  convRule: rule23
}, {
  start: 7906,
  length: 1,
  convRule: rule22
}, {
  start: 7907,
  length: 1,
  convRule: rule23
}, {
  start: 7908,
  length: 1,
  convRule: rule22
}, {
  start: 7909,
  length: 1,
  convRule: rule23
}, {
  start: 7910,
  length: 1,
  convRule: rule22
}, {
  start: 7911,
  length: 1,
  convRule: rule23
}, {
  start: 7912,
  length: 1,
  convRule: rule22
}, {
  start: 7913,
  length: 1,
  convRule: rule23
}, {
  start: 7914,
  length: 1,
  convRule: rule22
}, {
  start: 7915,
  length: 1,
  convRule: rule23
}, {
  start: 7916,
  length: 1,
  convRule: rule22
}, {
  start: 7917,
  length: 1,
  convRule: rule23
}, {
  start: 7918,
  length: 1,
  convRule: rule22
}, {
  start: 7919,
  length: 1,
  convRule: rule23
}, {
  start: 7920,
  length: 1,
  convRule: rule22
}, {
  start: 7921,
  length: 1,
  convRule: rule23
}, {
  start: 7922,
  length: 1,
  convRule: rule22
}, {
  start: 7923,
  length: 1,
  convRule: rule23
}, {
  start: 7924,
  length: 1,
  convRule: rule22
}, {
  start: 7925,
  length: 1,
  convRule: rule23
}, {
  start: 7926,
  length: 1,
  convRule: rule22
}, {
  start: 7927,
  length: 1,
  convRule: rule23
}, {
  start: 7928,
  length: 1,
  convRule: rule22
}, {
  start: 7929,
  length: 1,
  convRule: rule23
}, {
  start: 7930,
  length: 1,
  convRule: rule22
}, {
  start: 7931,
  length: 1,
  convRule: rule23
}, {
  start: 7932,
  length: 1,
  convRule: rule22
}, {
  start: 7933,
  length: 1,
  convRule: rule23
}, {
  start: 7934,
  length: 1,
  convRule: rule22
}, {
  start: 7935,
  length: 1,
  convRule: rule23
}, {
  start: 7936,
  length: 8,
  convRule: rule143
}, {
  start: 7944,
  length: 8,
  convRule: rule144
}, {
  start: 7952,
  length: 6,
  convRule: rule143
}, {
  start: 7960,
  length: 6,
  convRule: rule144
}, {
  start: 7968,
  length: 8,
  convRule: rule143
}, {
  start: 7976,
  length: 8,
  convRule: rule144
}, {
  start: 7984,
  length: 8,
  convRule: rule143
}, {
  start: 7992,
  length: 8,
  convRule: rule144
}, {
  start: 8e3,
  length: 6,
  convRule: rule143
}, {
  start: 8008,
  length: 6,
  convRule: rule144
}, {
  start: 8017,
  length: 1,
  convRule: rule143
}, {
  start: 8019,
  length: 1,
  convRule: rule143
}, {
  start: 8021,
  length: 1,
  convRule: rule143
}, {
  start: 8023,
  length: 1,
  convRule: rule143
}, {
  start: 8025,
  length: 1,
  convRule: rule144
}, {
  start: 8027,
  length: 1,
  convRule: rule144
}, {
  start: 8029,
  length: 1,
  convRule: rule144
}, {
  start: 8031,
  length: 1,
  convRule: rule144
}, {
  start: 8032,
  length: 8,
  convRule: rule143
}, {
  start: 8040,
  length: 8,
  convRule: rule144
}, {
  start: 8048,
  length: 2,
  convRule: rule145
}, {
  start: 8050,
  length: 4,
  convRule: rule146
}, {
  start: 8054,
  length: 2,
  convRule: rule147
}, {
  start: 8056,
  length: 2,
  convRule: rule148
}, {
  start: 8058,
  length: 2,
  convRule: rule149
}, {
  start: 8060,
  length: 2,
  convRule: rule150
}, {
  start: 8064,
  length: 8,
  convRule: rule143
}, {
  start: 8072,
  length: 8,
  convRule: rule151
}, {
  start: 8080,
  length: 8,
  convRule: rule143
}, {
  start: 8088,
  length: 8,
  convRule: rule151
}, {
  start: 8096,
  length: 8,
  convRule: rule143
}, {
  start: 8104,
  length: 8,
  convRule: rule151
}, {
  start: 8112,
  length: 2,
  convRule: rule143
}, {
  start: 8115,
  length: 1,
  convRule: rule152
}, {
  start: 8120,
  length: 2,
  convRule: rule144
}, {
  start: 8122,
  length: 2,
  convRule: rule153
}, {
  start: 8124,
  length: 1,
  convRule: rule154
}, {
  start: 8126,
  length: 1,
  convRule: rule155
}, {
  start: 8131,
  length: 1,
  convRule: rule152
}, {
  start: 8136,
  length: 4,
  convRule: rule156
}, {
  start: 8140,
  length: 1,
  convRule: rule154
}, {
  start: 8144,
  length: 2,
  convRule: rule143
}, {
  start: 8152,
  length: 2,
  convRule: rule144
}, {
  start: 8154,
  length: 2,
  convRule: rule157
}, {
  start: 8160,
  length: 2,
  convRule: rule143
}, {
  start: 8165,
  length: 1,
  convRule: rule113
}, {
  start: 8168,
  length: 2,
  convRule: rule144
}, {
  start: 8170,
  length: 2,
  convRule: rule158
}, {
  start: 8172,
  length: 1,
  convRule: rule117
}, {
  start: 8179,
  length: 1,
  convRule: rule152
}, {
  start: 8184,
  length: 2,
  convRule: rule159
}, {
  start: 8186,
  length: 2,
  convRule: rule160
}, {
  start: 8188,
  length: 1,
  convRule: rule154
}, {
  start: 8486,
  length: 1,
  convRule: rule163
}, {
  start: 8490,
  length: 1,
  convRule: rule164
}, {
  start: 8491,
  length: 1,
  convRule: rule165
}, {
  start: 8498,
  length: 1,
  convRule: rule166
}, {
  start: 8526,
  length: 1,
  convRule: rule167
}, {
  start: 8544,
  length: 16,
  convRule: rule168
}, {
  start: 8560,
  length: 16,
  convRule: rule169
}, {
  start: 8579,
  length: 1,
  convRule: rule22
}, {
  start: 8580,
  length: 1,
  convRule: rule23
}, {
  start: 9398,
  length: 26,
  convRule: rule170
}, {
  start: 9424,
  length: 26,
  convRule: rule171
}, {
  start: 11264,
  length: 47,
  convRule: rule122
}, {
  start: 11312,
  length: 47,
  convRule: rule123
}, {
  start: 11360,
  length: 1,
  convRule: rule22
}, {
  start: 11361,
  length: 1,
  convRule: rule23
}, {
  start: 11362,
  length: 1,
  convRule: rule172
}, {
  start: 11363,
  length: 1,
  convRule: rule173
}, {
  start: 11364,
  length: 1,
  convRule: rule174
}, {
  start: 11365,
  length: 1,
  convRule: rule175
}, {
  start: 11366,
  length: 1,
  convRule: rule176
}, {
  start: 11367,
  length: 1,
  convRule: rule22
}, {
  start: 11368,
  length: 1,
  convRule: rule23
}, {
  start: 11369,
  length: 1,
  convRule: rule22
}, {
  start: 11370,
  length: 1,
  convRule: rule23
}, {
  start: 11371,
  length: 1,
  convRule: rule22
}, {
  start: 11372,
  length: 1,
  convRule: rule23
}, {
  start: 11373,
  length: 1,
  convRule: rule177
}, {
  start: 11374,
  length: 1,
  convRule: rule178
}, {
  start: 11375,
  length: 1,
  convRule: rule179
}, {
  start: 11376,
  length: 1,
  convRule: rule180
}, {
  start: 11378,
  length: 1,
  convRule: rule22
}, {
  start: 11379,
  length: 1,
  convRule: rule23
}, {
  start: 11381,
  length: 1,
  convRule: rule22
}, {
  start: 11382,
  length: 1,
  convRule: rule23
}, {
  start: 11390,
  length: 2,
  convRule: rule181
}, {
  start: 11392,
  length: 1,
  convRule: rule22
}, {
  start: 11393,
  length: 1,
  convRule: rule23
}, {
  start: 11394,
  length: 1,
  convRule: rule22
}, {
  start: 11395,
  length: 1,
  convRule: rule23
}, {
  start: 11396,
  length: 1,
  convRule: rule22
}, {
  start: 11397,
  length: 1,
  convRule: rule23
}, {
  start: 11398,
  length: 1,
  convRule: rule22
}, {
  start: 11399,
  length: 1,
  convRule: rule23
}, {
  start: 11400,
  length: 1,
  convRule: rule22
}, {
  start: 11401,
  length: 1,
  convRule: rule23
}, {
  start: 11402,
  length: 1,
  convRule: rule22
}, {
  start: 11403,
  length: 1,
  convRule: rule23
}, {
  start: 11404,
  length: 1,
  convRule: rule22
}, {
  start: 11405,
  length: 1,
  convRule: rule23
}, {
  start: 11406,
  length: 1,
  convRule: rule22
}, {
  start: 11407,
  length: 1,
  convRule: rule23
}, {
  start: 11408,
  length: 1,
  convRule: rule22
}, {
  start: 11409,
  length: 1,
  convRule: rule23
}, {
  start: 11410,
  length: 1,
  convRule: rule22
}, {
  start: 11411,
  length: 1,
  convRule: rule23
}, {
  start: 11412,
  length: 1,
  convRule: rule22
}, {
  start: 11413,
  length: 1,
  convRule: rule23
}, {
  start: 11414,
  length: 1,
  convRule: rule22
}, {
  start: 11415,
  length: 1,
  convRule: rule23
}, {
  start: 11416,
  length: 1,
  convRule: rule22
}, {
  start: 11417,
  length: 1,
  convRule: rule23
}, {
  start: 11418,
  length: 1,
  convRule: rule22
}, {
  start: 11419,
  length: 1,
  convRule: rule23
}, {
  start: 11420,
  length: 1,
  convRule: rule22
}, {
  start: 11421,
  length: 1,
  convRule: rule23
}, {
  start: 11422,
  length: 1,
  convRule: rule22
}, {
  start: 11423,
  length: 1,
  convRule: rule23
}, {
  start: 11424,
  length: 1,
  convRule: rule22
}, {
  start: 11425,
  length: 1,
  convRule: rule23
}, {
  start: 11426,
  length: 1,
  convRule: rule22
}, {
  start: 11427,
  length: 1,
  convRule: rule23
}, {
  start: 11428,
  length: 1,
  convRule: rule22
}, {
  start: 11429,
  length: 1,
  convRule: rule23
}, {
  start: 11430,
  length: 1,
  convRule: rule22
}, {
  start: 11431,
  length: 1,
  convRule: rule23
}, {
  start: 11432,
  length: 1,
  convRule: rule22
}, {
  start: 11433,
  length: 1,
  convRule: rule23
}, {
  start: 11434,
  length: 1,
  convRule: rule22
}, {
  start: 11435,
  length: 1,
  convRule: rule23
}, {
  start: 11436,
  length: 1,
  convRule: rule22
}, {
  start: 11437,
  length: 1,
  convRule: rule23
}, {
  start: 11438,
  length: 1,
  convRule: rule22
}, {
  start: 11439,
  length: 1,
  convRule: rule23
}, {
  start: 11440,
  length: 1,
  convRule: rule22
}, {
  start: 11441,
  length: 1,
  convRule: rule23
}, {
  start: 11442,
  length: 1,
  convRule: rule22
}, {
  start: 11443,
  length: 1,
  convRule: rule23
}, {
  start: 11444,
  length: 1,
  convRule: rule22
}, {
  start: 11445,
  length: 1,
  convRule: rule23
}, {
  start: 11446,
  length: 1,
  convRule: rule22
}, {
  start: 11447,
  length: 1,
  convRule: rule23
}, {
  start: 11448,
  length: 1,
  convRule: rule22
}, {
  start: 11449,
  length: 1,
  convRule: rule23
}, {
  start: 11450,
  length: 1,
  convRule: rule22
}, {
  start: 11451,
  length: 1,
  convRule: rule23
}, {
  start: 11452,
  length: 1,
  convRule: rule22
}, {
  start: 11453,
  length: 1,
  convRule: rule23
}, {
  start: 11454,
  length: 1,
  convRule: rule22
}, {
  start: 11455,
  length: 1,
  convRule: rule23
}, {
  start: 11456,
  length: 1,
  convRule: rule22
}, {
  start: 11457,
  length: 1,
  convRule: rule23
}, {
  start: 11458,
  length: 1,
  convRule: rule22
}, {
  start: 11459,
  length: 1,
  convRule: rule23
}, {
  start: 11460,
  length: 1,
  convRule: rule22
}, {
  start: 11461,
  length: 1,
  convRule: rule23
}, {
  start: 11462,
  length: 1,
  convRule: rule22
}, {
  start: 11463,
  length: 1,
  convRule: rule23
}, {
  start: 11464,
  length: 1,
  convRule: rule22
}, {
  start: 11465,
  length: 1,
  convRule: rule23
}, {
  start: 11466,
  length: 1,
  convRule: rule22
}, {
  start: 11467,
  length: 1,
  convRule: rule23
}, {
  start: 11468,
  length: 1,
  convRule: rule22
}, {
  start: 11469,
  length: 1,
  convRule: rule23
}, {
  start: 11470,
  length: 1,
  convRule: rule22
}, {
  start: 11471,
  length: 1,
  convRule: rule23
}, {
  start: 11472,
  length: 1,
  convRule: rule22
}, {
  start: 11473,
  length: 1,
  convRule: rule23
}, {
  start: 11474,
  length: 1,
  convRule: rule22
}, {
  start: 11475,
  length: 1,
  convRule: rule23
}, {
  start: 11476,
  length: 1,
  convRule: rule22
}, {
  start: 11477,
  length: 1,
  convRule: rule23
}, {
  start: 11478,
  length: 1,
  convRule: rule22
}, {
  start: 11479,
  length: 1,
  convRule: rule23
}, {
  start: 11480,
  length: 1,
  convRule: rule22
}, {
  start: 11481,
  length: 1,
  convRule: rule23
}, {
  start: 11482,
  length: 1,
  convRule: rule22
}, {
  start: 11483,
  length: 1,
  convRule: rule23
}, {
  start: 11484,
  length: 1,
  convRule: rule22
}, {
  start: 11485,
  length: 1,
  convRule: rule23
}, {
  start: 11486,
  length: 1,
  convRule: rule22
}, {
  start: 11487,
  length: 1,
  convRule: rule23
}, {
  start: 11488,
  length: 1,
  convRule: rule22
}, {
  start: 11489,
  length: 1,
  convRule: rule23
}, {
  start: 11490,
  length: 1,
  convRule: rule22
}, {
  start: 11491,
  length: 1,
  convRule: rule23
}, {
  start: 11499,
  length: 1,
  convRule: rule22
}, {
  start: 11500,
  length: 1,
  convRule: rule23
}, {
  start: 11501,
  length: 1,
  convRule: rule22
}, {
  start: 11502,
  length: 1,
  convRule: rule23
}, {
  start: 11506,
  length: 1,
  convRule: rule22
}, {
  start: 11507,
  length: 1,
  convRule: rule23
}, {
  start: 11520,
  length: 38,
  convRule: rule182
}, {
  start: 11559,
  length: 1,
  convRule: rule182
}, {
  start: 11565,
  length: 1,
  convRule: rule182
}, {
  start: 42560,
  length: 1,
  convRule: rule22
}, {
  start: 42561,
  length: 1,
  convRule: rule23
}, {
  start: 42562,
  length: 1,
  convRule: rule22
}, {
  start: 42563,
  length: 1,
  convRule: rule23
}, {
  start: 42564,
  length: 1,
  convRule: rule22
}, {
  start: 42565,
  length: 1,
  convRule: rule23
}, {
  start: 42566,
  length: 1,
  convRule: rule22
}, {
  start: 42567,
  length: 1,
  convRule: rule23
}, {
  start: 42568,
  length: 1,
  convRule: rule22
}, {
  start: 42569,
  length: 1,
  convRule: rule23
}, {
  start: 42570,
  length: 1,
  convRule: rule22
}, {
  start: 42571,
  length: 1,
  convRule: rule23
}, {
  start: 42572,
  length: 1,
  convRule: rule22
}, {
  start: 42573,
  length: 1,
  convRule: rule23
}, {
  start: 42574,
  length: 1,
  convRule: rule22
}, {
  start: 42575,
  length: 1,
  convRule: rule23
}, {
  start: 42576,
  length: 1,
  convRule: rule22
}, {
  start: 42577,
  length: 1,
  convRule: rule23
}, {
  start: 42578,
  length: 1,
  convRule: rule22
}, {
  start: 42579,
  length: 1,
  convRule: rule23
}, {
  start: 42580,
  length: 1,
  convRule: rule22
}, {
  start: 42581,
  length: 1,
  convRule: rule23
}, {
  start: 42582,
  length: 1,
  convRule: rule22
}, {
  start: 42583,
  length: 1,
  convRule: rule23
}, {
  start: 42584,
  length: 1,
  convRule: rule22
}, {
  start: 42585,
  length: 1,
  convRule: rule23
}, {
  start: 42586,
  length: 1,
  convRule: rule22
}, {
  start: 42587,
  length: 1,
  convRule: rule23
}, {
  start: 42588,
  length: 1,
  convRule: rule22
}, {
  start: 42589,
  length: 1,
  convRule: rule23
}, {
  start: 42590,
  length: 1,
  convRule: rule22
}, {
  start: 42591,
  length: 1,
  convRule: rule23
}, {
  start: 42592,
  length: 1,
  convRule: rule22
}, {
  start: 42593,
  length: 1,
  convRule: rule23
}, {
  start: 42594,
  length: 1,
  convRule: rule22
}, {
  start: 42595,
  length: 1,
  convRule: rule23
}, {
  start: 42596,
  length: 1,
  convRule: rule22
}, {
  start: 42597,
  length: 1,
  convRule: rule23
}, {
  start: 42598,
  length: 1,
  convRule: rule22
}, {
  start: 42599,
  length: 1,
  convRule: rule23
}, {
  start: 42600,
  length: 1,
  convRule: rule22
}, {
  start: 42601,
  length: 1,
  convRule: rule23
}, {
  start: 42602,
  length: 1,
  convRule: rule22
}, {
  start: 42603,
  length: 1,
  convRule: rule23
}, {
  start: 42604,
  length: 1,
  convRule: rule22
}, {
  start: 42605,
  length: 1,
  convRule: rule23
}, {
  start: 42624,
  length: 1,
  convRule: rule22
}, {
  start: 42625,
  length: 1,
  convRule: rule23
}, {
  start: 42626,
  length: 1,
  convRule: rule22
}, {
  start: 42627,
  length: 1,
  convRule: rule23
}, {
  start: 42628,
  length: 1,
  convRule: rule22
}, {
  start: 42629,
  length: 1,
  convRule: rule23
}, {
  start: 42630,
  length: 1,
  convRule: rule22
}, {
  start: 42631,
  length: 1,
  convRule: rule23
}, {
  start: 42632,
  length: 1,
  convRule: rule22
}, {
  start: 42633,
  length: 1,
  convRule: rule23
}, {
  start: 42634,
  length: 1,
  convRule: rule22
}, {
  start: 42635,
  length: 1,
  convRule: rule23
}, {
  start: 42636,
  length: 1,
  convRule: rule22
}, {
  start: 42637,
  length: 1,
  convRule: rule23
}, {
  start: 42638,
  length: 1,
  convRule: rule22
}, {
  start: 42639,
  length: 1,
  convRule: rule23
}, {
  start: 42640,
  length: 1,
  convRule: rule22
}, {
  start: 42641,
  length: 1,
  convRule: rule23
}, {
  start: 42642,
  length: 1,
  convRule: rule22
}, {
  start: 42643,
  length: 1,
  convRule: rule23
}, {
  start: 42644,
  length: 1,
  convRule: rule22
}, {
  start: 42645,
  length: 1,
  convRule: rule23
}, {
  start: 42646,
  length: 1,
  convRule: rule22
}, {
  start: 42647,
  length: 1,
  convRule: rule23
}, {
  start: 42648,
  length: 1,
  convRule: rule22
}, {
  start: 42649,
  length: 1,
  convRule: rule23
}, {
  start: 42650,
  length: 1,
  convRule: rule22
}, {
  start: 42651,
  length: 1,
  convRule: rule23
}, {
  start: 42786,
  length: 1,
  convRule: rule22
}, {
  start: 42787,
  length: 1,
  convRule: rule23
}, {
  start: 42788,
  length: 1,
  convRule: rule22
}, {
  start: 42789,
  length: 1,
  convRule: rule23
}, {
  start: 42790,
  length: 1,
  convRule: rule22
}, {
  start: 42791,
  length: 1,
  convRule: rule23
}, {
  start: 42792,
  length: 1,
  convRule: rule22
}, {
  start: 42793,
  length: 1,
  convRule: rule23
}, {
  start: 42794,
  length: 1,
  convRule: rule22
}, {
  start: 42795,
  length: 1,
  convRule: rule23
}, {
  start: 42796,
  length: 1,
  convRule: rule22
}, {
  start: 42797,
  length: 1,
  convRule: rule23
}, {
  start: 42798,
  length: 1,
  convRule: rule22
}, {
  start: 42799,
  length: 1,
  convRule: rule23
}, {
  start: 42802,
  length: 1,
  convRule: rule22
}, {
  start: 42803,
  length: 1,
  convRule: rule23
}, {
  start: 42804,
  length: 1,
  convRule: rule22
}, {
  start: 42805,
  length: 1,
  convRule: rule23
}, {
  start: 42806,
  length: 1,
  convRule: rule22
}, {
  start: 42807,
  length: 1,
  convRule: rule23
}, {
  start: 42808,
  length: 1,
  convRule: rule22
}, {
  start: 42809,
  length: 1,
  convRule: rule23
}, {
  start: 42810,
  length: 1,
  convRule: rule22
}, {
  start: 42811,
  length: 1,
  convRule: rule23
}, {
  start: 42812,
  length: 1,
  convRule: rule22
}, {
  start: 42813,
  length: 1,
  convRule: rule23
}, {
  start: 42814,
  length: 1,
  convRule: rule22
}, {
  start: 42815,
  length: 1,
  convRule: rule23
}, {
  start: 42816,
  length: 1,
  convRule: rule22
}, {
  start: 42817,
  length: 1,
  convRule: rule23
}, {
  start: 42818,
  length: 1,
  convRule: rule22
}, {
  start: 42819,
  length: 1,
  convRule: rule23
}, {
  start: 42820,
  length: 1,
  convRule: rule22
}, {
  start: 42821,
  length: 1,
  convRule: rule23
}, {
  start: 42822,
  length: 1,
  convRule: rule22
}, {
  start: 42823,
  length: 1,
  convRule: rule23
}, {
  start: 42824,
  length: 1,
  convRule: rule22
}, {
  start: 42825,
  length: 1,
  convRule: rule23
}, {
  start: 42826,
  length: 1,
  convRule: rule22
}, {
  start: 42827,
  length: 1,
  convRule: rule23
}, {
  start: 42828,
  length: 1,
  convRule: rule22
}, {
  start: 42829,
  length: 1,
  convRule: rule23
}, {
  start: 42830,
  length: 1,
  convRule: rule22
}, {
  start: 42831,
  length: 1,
  convRule: rule23
}, {
  start: 42832,
  length: 1,
  convRule: rule22
}, {
  start: 42833,
  length: 1,
  convRule: rule23
}, {
  start: 42834,
  length: 1,
  convRule: rule22
}, {
  start: 42835,
  length: 1,
  convRule: rule23
}, {
  start: 42836,
  length: 1,
  convRule: rule22
}, {
  start: 42837,
  length: 1,
  convRule: rule23
}, {
  start: 42838,
  length: 1,
  convRule: rule22
}, {
  start: 42839,
  length: 1,
  convRule: rule23
}, {
  start: 42840,
  length: 1,
  convRule: rule22
}, {
  start: 42841,
  length: 1,
  convRule: rule23
}, {
  start: 42842,
  length: 1,
  convRule: rule22
}, {
  start: 42843,
  length: 1,
  convRule: rule23
}, {
  start: 42844,
  length: 1,
  convRule: rule22
}, {
  start: 42845,
  length: 1,
  convRule: rule23
}, {
  start: 42846,
  length: 1,
  convRule: rule22
}, {
  start: 42847,
  length: 1,
  convRule: rule23
}, {
  start: 42848,
  length: 1,
  convRule: rule22
}, {
  start: 42849,
  length: 1,
  convRule: rule23
}, {
  start: 42850,
  length: 1,
  convRule: rule22
}, {
  start: 42851,
  length: 1,
  convRule: rule23
}, {
  start: 42852,
  length: 1,
  convRule: rule22
}, {
  start: 42853,
  length: 1,
  convRule: rule23
}, {
  start: 42854,
  length: 1,
  convRule: rule22
}, {
  start: 42855,
  length: 1,
  convRule: rule23
}, {
  start: 42856,
  length: 1,
  convRule: rule22
}, {
  start: 42857,
  length: 1,
  convRule: rule23
}, {
  start: 42858,
  length: 1,
  convRule: rule22
}, {
  start: 42859,
  length: 1,
  convRule: rule23
}, {
  start: 42860,
  length: 1,
  convRule: rule22
}, {
  start: 42861,
  length: 1,
  convRule: rule23
}, {
  start: 42862,
  length: 1,
  convRule: rule22
}, {
  start: 42863,
  length: 1,
  convRule: rule23
}, {
  start: 42873,
  length: 1,
  convRule: rule22
}, {
  start: 42874,
  length: 1,
  convRule: rule23
}, {
  start: 42875,
  length: 1,
  convRule: rule22
}, {
  start: 42876,
  length: 1,
  convRule: rule23
}, {
  start: 42877,
  length: 1,
  convRule: rule183
}, {
  start: 42878,
  length: 1,
  convRule: rule22
}, {
  start: 42879,
  length: 1,
  convRule: rule23
}, {
  start: 42880,
  length: 1,
  convRule: rule22
}, {
  start: 42881,
  length: 1,
  convRule: rule23
}, {
  start: 42882,
  length: 1,
  convRule: rule22
}, {
  start: 42883,
  length: 1,
  convRule: rule23
}, {
  start: 42884,
  length: 1,
  convRule: rule22
}, {
  start: 42885,
  length: 1,
  convRule: rule23
}, {
  start: 42886,
  length: 1,
  convRule: rule22
}, {
  start: 42887,
  length: 1,
  convRule: rule23
}, {
  start: 42891,
  length: 1,
  convRule: rule22
}, {
  start: 42892,
  length: 1,
  convRule: rule23
}, {
  start: 42893,
  length: 1,
  convRule: rule184
}, {
  start: 42896,
  length: 1,
  convRule: rule22
}, {
  start: 42897,
  length: 1,
  convRule: rule23
}, {
  start: 42898,
  length: 1,
  convRule: rule22
}, {
  start: 42899,
  length: 1,
  convRule: rule23
}, {
  start: 42900,
  length: 1,
  convRule: rule185
}, {
  start: 42902,
  length: 1,
  convRule: rule22
}, {
  start: 42903,
  length: 1,
  convRule: rule23
}, {
  start: 42904,
  length: 1,
  convRule: rule22
}, {
  start: 42905,
  length: 1,
  convRule: rule23
}, {
  start: 42906,
  length: 1,
  convRule: rule22
}, {
  start: 42907,
  length: 1,
  convRule: rule23
}, {
  start: 42908,
  length: 1,
  convRule: rule22
}, {
  start: 42909,
  length: 1,
  convRule: rule23
}, {
  start: 42910,
  length: 1,
  convRule: rule22
}, {
  start: 42911,
  length: 1,
  convRule: rule23
}, {
  start: 42912,
  length: 1,
  convRule: rule22
}, {
  start: 42913,
  length: 1,
  convRule: rule23
}, {
  start: 42914,
  length: 1,
  convRule: rule22
}, {
  start: 42915,
  length: 1,
  convRule: rule23
}, {
  start: 42916,
  length: 1,
  convRule: rule22
}, {
  start: 42917,
  length: 1,
  convRule: rule23
}, {
  start: 42918,
  length: 1,
  convRule: rule22
}, {
  start: 42919,
  length: 1,
  convRule: rule23
}, {
  start: 42920,
  length: 1,
  convRule: rule22
}, {
  start: 42921,
  length: 1,
  convRule: rule23
}, {
  start: 42922,
  length: 1,
  convRule: rule186
}, {
  start: 42923,
  length: 1,
  convRule: rule187
}, {
  start: 42924,
  length: 1,
  convRule: rule188
}, {
  start: 42925,
  length: 1,
  convRule: rule189
}, {
  start: 42926,
  length: 1,
  convRule: rule186
}, {
  start: 42928,
  length: 1,
  convRule: rule190
}, {
  start: 42929,
  length: 1,
  convRule: rule191
}, {
  start: 42930,
  length: 1,
  convRule: rule192
}, {
  start: 42931,
  length: 1,
  convRule: rule193
}, {
  start: 42932,
  length: 1,
  convRule: rule22
}, {
  start: 42933,
  length: 1,
  convRule: rule23
}, {
  start: 42934,
  length: 1,
  convRule: rule22
}, {
  start: 42935,
  length: 1,
  convRule: rule23
}, {
  start: 42936,
  length: 1,
  convRule: rule22
}, {
  start: 42937,
  length: 1,
  convRule: rule23
}, {
  start: 42938,
  length: 1,
  convRule: rule22
}, {
  start: 42939,
  length: 1,
  convRule: rule23
}, {
  start: 42940,
  length: 1,
  convRule: rule22
}, {
  start: 42941,
  length: 1,
  convRule: rule23
}, {
  start: 42942,
  length: 1,
  convRule: rule22
}, {
  start: 42943,
  length: 1,
  convRule: rule23
}, {
  start: 42946,
  length: 1,
  convRule: rule22
}, {
  start: 42947,
  length: 1,
  convRule: rule23
}, {
  start: 42948,
  length: 1,
  convRule: rule194
}, {
  start: 42949,
  length: 1,
  convRule: rule195
}, {
  start: 42950,
  length: 1,
  convRule: rule196
}, {
  start: 42951,
  length: 1,
  convRule: rule22
}, {
  start: 42952,
  length: 1,
  convRule: rule23
}, {
  start: 42953,
  length: 1,
  convRule: rule22
}, {
  start: 42954,
  length: 1,
  convRule: rule23
}, {
  start: 42997,
  length: 1,
  convRule: rule22
}, {
  start: 42998,
  length: 1,
  convRule: rule23
}, {
  start: 43859,
  length: 1,
  convRule: rule197
}, {
  start: 43888,
  length: 80,
  convRule: rule198
}, {
  start: 65313,
  length: 26,
  convRule: rule9
}, {
  start: 65345,
  length: 26,
  convRule: rule12
}, {
  start: 66560,
  length: 40,
  convRule: rule201
}, {
  start: 66600,
  length: 40,
  convRule: rule202
}, {
  start: 66736,
  length: 36,
  convRule: rule201
}, {
  start: 66776,
  length: 36,
  convRule: rule202
}, {
  start: 68736,
  length: 51,
  convRule: rule97
}, {
  start: 68800,
  length: 51,
  convRule: rule102
}, {
  start: 71840,
  length: 32,
  convRule: rule9
}, {
  start: 71872,
  length: 32,
  convRule: rule12
}, {
  start: 93760,
  length: 32,
  convRule: rule9
}, {
  start: 93792,
  length: 32,
  convRule: rule12
}, {
  start: 125184,
  length: 34,
  convRule: rule203
}, {
  start: 125218,
  length: 34,
  convRule: rule204
}];
var bsearch = function(a) {
  return function(array) {
    return function(size3) {
      return function(compare78) {
        var go = function($copy_i) {
          return function($copy_k) {
            var $tco_var_i = $copy_i;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i, k) {
              if (i > k || i >= length3(array)) {
                $tco_done = true;
                return Nothing.value;
              }
              ;
              if (otherwise) {
                var j = floor2(toNumber(i + k | 0) / 2);
                var b = unsafeIndex2(array)(j);
                var v = compare78(a)(b);
                if (v instanceof EQ) {
                  $tco_done = true;
                  return new Just(b);
                }
                ;
                if (v instanceof GT) {
                  $tco_var_i = j + 1 | 0;
                  $copy_k = k;
                  return;
                }
                ;
                $tco_var_i = i;
                $copy_k = j - 1 | 0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5622, column 3 - line 5632, column 30): " + [i.constructor.name, k.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_i, $copy_k);
            }
            ;
            return $tco_result;
          };
        };
        return go(0)(size3);
      };
    };
  };
};
var blkCmp = function(v) {
  return function(v1) {
    if (v.start >= v1.start && v.start < (v1.start + v1.length | 0)) {
      return EQ.value;
    }
    ;
    if (v.start > v1.start) {
      return GT.value;
    }
    ;
    if (otherwise) {
      return LT.value;
    }
    ;
    throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5598, column 1 - line 5598, column 45): " + [v.constructor.name, v1.constructor.name]);
  };
};
var getRule = function(blocks) {
  return function(unichar) {
    return function(size3) {
      var key = {
        start: unichar,
        length: 1,
        convRule: nullrule
      };
      var maybeCharBlock = bsearch(key)(blocks)(size3)(blkCmp);
      if (maybeCharBlock instanceof Nothing) {
        return Nothing.value;
      }
      ;
      if (maybeCharBlock instanceof Just) {
        return new Just(maybeCharBlock.value0.convRule);
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5612, column 5 - line 5614, column 60): " + [maybeCharBlock.constructor.name]);
    };
  };
};
var caseConv = function(f) {
  return function($$char2) {
    var maybeConversionRule = getRule(convchars)($$char2)(numConvBlocks);
    if (maybeConversionRule instanceof Nothing) {
      return $$char2;
    }
    ;
    if (maybeConversionRule instanceof Just) {
      return $$char2 + f(maybeConversionRule.value0) | 0;
    }
    ;
    throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5727, column 5 - line 5729, column 53): " + [maybeConversionRule.constructor.name]);
  };
};
var uTowlower = /* @__PURE__ */ caseConv(function(v) {
  return v.lowdist;
});
var uTowtitle = /* @__PURE__ */ caseConv(function(v) {
  return v.titledist;
});
var uTowupper = /* @__PURE__ */ caseConv(function(v) {
  return v.updist;
});
var allchars = [{
  start: 0,
  length: 32,
  convRule: rule0
}, {
  start: 32,
  length: 1,
  convRule: rule1
}, {
  start: 33,
  length: 3,
  convRule: rule2
}, {
  start: 36,
  length: 1,
  convRule: rule3
}, {
  start: 37,
  length: 3,
  convRule: rule2
}, {
  start: 40,
  length: 1,
  convRule: rule4
}, {
  start: 41,
  length: 1,
  convRule: rule5
}, {
  start: 42,
  length: 1,
  convRule: rule2
}, {
  start: 43,
  length: 1,
  convRule: rule6
}, {
  start: 44,
  length: 1,
  convRule: rule2
}, {
  start: 45,
  length: 1,
  convRule: rule7
}, {
  start: 46,
  length: 2,
  convRule: rule2
}, {
  start: 48,
  length: 10,
  convRule: rule8
}, {
  start: 58,
  length: 2,
  convRule: rule2
}, {
  start: 60,
  length: 3,
  convRule: rule6
}, {
  start: 63,
  length: 2,
  convRule: rule2
}, {
  start: 65,
  length: 26,
  convRule: rule9
}, {
  start: 91,
  length: 1,
  convRule: rule4
}, {
  start: 92,
  length: 1,
  convRule: rule2
}, {
  start: 93,
  length: 1,
  convRule: rule5
}, {
  start: 94,
  length: 1,
  convRule: rule10
}, {
  start: 95,
  length: 1,
  convRule: rule11
}, {
  start: 96,
  length: 1,
  convRule: rule10
}, {
  start: 97,
  length: 26,
  convRule: rule12
}, {
  start: 123,
  length: 1,
  convRule: rule4
}, {
  start: 124,
  length: 1,
  convRule: rule6
}, {
  start: 125,
  length: 1,
  convRule: rule5
}, {
  start: 126,
  length: 1,
  convRule: rule6
}, {
  start: 127,
  length: 33,
  convRule: rule0
}, {
  start: 160,
  length: 1,
  convRule: rule1
}, {
  start: 161,
  length: 1,
  convRule: rule2
}, {
  start: 162,
  length: 4,
  convRule: rule3
}, {
  start: 166,
  length: 1,
  convRule: rule13
}, {
  start: 167,
  length: 1,
  convRule: rule2
}, {
  start: 168,
  length: 1,
  convRule: rule10
}, {
  start: 169,
  length: 1,
  convRule: rule13
}, {
  start: 170,
  length: 1,
  convRule: rule14
}, {
  start: 171,
  length: 1,
  convRule: rule15
}, {
  start: 172,
  length: 1,
  convRule: rule6
}, {
  start: 173,
  length: 1,
  convRule: rule16
}, {
  start: 174,
  length: 1,
  convRule: rule13
}, {
  start: 175,
  length: 1,
  convRule: rule10
}, {
  start: 176,
  length: 1,
  convRule: rule13
}, {
  start: 177,
  length: 1,
  convRule: rule6
}, {
  start: 178,
  length: 2,
  convRule: rule17
}, {
  start: 180,
  length: 1,
  convRule: rule10
}, {
  start: 181,
  length: 1,
  convRule: rule18
}, {
  start: 182,
  length: 2,
  convRule: rule2
}, {
  start: 184,
  length: 1,
  convRule: rule10
}, {
  start: 185,
  length: 1,
  convRule: rule17
}, {
  start: 186,
  length: 1,
  convRule: rule14
}, {
  start: 187,
  length: 1,
  convRule: rule19
}, {
  start: 188,
  length: 3,
  convRule: rule17
}, {
  start: 191,
  length: 1,
  convRule: rule2
}, {
  start: 192,
  length: 23,
  convRule: rule9
}, {
  start: 215,
  length: 1,
  convRule: rule6
}, {
  start: 216,
  length: 7,
  convRule: rule9
}, {
  start: 223,
  length: 1,
  convRule: rule20
}, {
  start: 224,
  length: 23,
  convRule: rule12
}, {
  start: 247,
  length: 1,
  convRule: rule6
}, {
  start: 248,
  length: 7,
  convRule: rule12
}, {
  start: 255,
  length: 1,
  convRule: rule21
}, {
  start: 256,
  length: 1,
  convRule: rule22
}, {
  start: 257,
  length: 1,
  convRule: rule23
}, {
  start: 258,
  length: 1,
  convRule: rule22
}, {
  start: 259,
  length: 1,
  convRule: rule23
}, {
  start: 260,
  length: 1,
  convRule: rule22
}, {
  start: 261,
  length: 1,
  convRule: rule23
}, {
  start: 262,
  length: 1,
  convRule: rule22
}, {
  start: 263,
  length: 1,
  convRule: rule23
}, {
  start: 264,
  length: 1,
  convRule: rule22
}, {
  start: 265,
  length: 1,
  convRule: rule23
}, {
  start: 266,
  length: 1,
  convRule: rule22
}, {
  start: 267,
  length: 1,
  convRule: rule23
}, {
  start: 268,
  length: 1,
  convRule: rule22
}, {
  start: 269,
  length: 1,
  convRule: rule23
}, {
  start: 270,
  length: 1,
  convRule: rule22
}, {
  start: 271,
  length: 1,
  convRule: rule23
}, {
  start: 272,
  length: 1,
  convRule: rule22
}, {
  start: 273,
  length: 1,
  convRule: rule23
}, {
  start: 274,
  length: 1,
  convRule: rule22
}, {
  start: 275,
  length: 1,
  convRule: rule23
}, {
  start: 276,
  length: 1,
  convRule: rule22
}, {
  start: 277,
  length: 1,
  convRule: rule23
}, {
  start: 278,
  length: 1,
  convRule: rule22
}, {
  start: 279,
  length: 1,
  convRule: rule23
}, {
  start: 280,
  length: 1,
  convRule: rule22
}, {
  start: 281,
  length: 1,
  convRule: rule23
}, {
  start: 282,
  length: 1,
  convRule: rule22
}, {
  start: 283,
  length: 1,
  convRule: rule23
}, {
  start: 284,
  length: 1,
  convRule: rule22
}, {
  start: 285,
  length: 1,
  convRule: rule23
}, {
  start: 286,
  length: 1,
  convRule: rule22
}, {
  start: 287,
  length: 1,
  convRule: rule23
}, {
  start: 288,
  length: 1,
  convRule: rule22
}, {
  start: 289,
  length: 1,
  convRule: rule23
}, {
  start: 290,
  length: 1,
  convRule: rule22
}, {
  start: 291,
  length: 1,
  convRule: rule23
}, {
  start: 292,
  length: 1,
  convRule: rule22
}, {
  start: 293,
  length: 1,
  convRule: rule23
}, {
  start: 294,
  length: 1,
  convRule: rule22
}, {
  start: 295,
  length: 1,
  convRule: rule23
}, {
  start: 296,
  length: 1,
  convRule: rule22
}, {
  start: 297,
  length: 1,
  convRule: rule23
}, {
  start: 298,
  length: 1,
  convRule: rule22
}, {
  start: 299,
  length: 1,
  convRule: rule23
}, {
  start: 300,
  length: 1,
  convRule: rule22
}, {
  start: 301,
  length: 1,
  convRule: rule23
}, {
  start: 302,
  length: 1,
  convRule: rule22
}, {
  start: 303,
  length: 1,
  convRule: rule23
}, {
  start: 304,
  length: 1,
  convRule: rule24
}, {
  start: 305,
  length: 1,
  convRule: rule25
}, {
  start: 306,
  length: 1,
  convRule: rule22
}, {
  start: 307,
  length: 1,
  convRule: rule23
}, {
  start: 308,
  length: 1,
  convRule: rule22
}, {
  start: 309,
  length: 1,
  convRule: rule23
}, {
  start: 310,
  length: 1,
  convRule: rule22
}, {
  start: 311,
  length: 1,
  convRule: rule23
}, {
  start: 312,
  length: 1,
  convRule: rule20
}, {
  start: 313,
  length: 1,
  convRule: rule22
}, {
  start: 314,
  length: 1,
  convRule: rule23
}, {
  start: 315,
  length: 1,
  convRule: rule22
}, {
  start: 316,
  length: 1,
  convRule: rule23
}, {
  start: 317,
  length: 1,
  convRule: rule22
}, {
  start: 318,
  length: 1,
  convRule: rule23
}, {
  start: 319,
  length: 1,
  convRule: rule22
}, {
  start: 320,
  length: 1,
  convRule: rule23
}, {
  start: 321,
  length: 1,
  convRule: rule22
}, {
  start: 322,
  length: 1,
  convRule: rule23
}, {
  start: 323,
  length: 1,
  convRule: rule22
}, {
  start: 324,
  length: 1,
  convRule: rule23
}, {
  start: 325,
  length: 1,
  convRule: rule22
}, {
  start: 326,
  length: 1,
  convRule: rule23
}, {
  start: 327,
  length: 1,
  convRule: rule22
}, {
  start: 328,
  length: 1,
  convRule: rule23
}, {
  start: 329,
  length: 1,
  convRule: rule20
}, {
  start: 330,
  length: 1,
  convRule: rule22
}, {
  start: 331,
  length: 1,
  convRule: rule23
}, {
  start: 332,
  length: 1,
  convRule: rule22
}, {
  start: 333,
  length: 1,
  convRule: rule23
}, {
  start: 334,
  length: 1,
  convRule: rule22
}, {
  start: 335,
  length: 1,
  convRule: rule23
}, {
  start: 336,
  length: 1,
  convRule: rule22
}, {
  start: 337,
  length: 1,
  convRule: rule23
}, {
  start: 338,
  length: 1,
  convRule: rule22
}, {
  start: 339,
  length: 1,
  convRule: rule23
}, {
  start: 340,
  length: 1,
  convRule: rule22
}, {
  start: 341,
  length: 1,
  convRule: rule23
}, {
  start: 342,
  length: 1,
  convRule: rule22
}, {
  start: 343,
  length: 1,
  convRule: rule23
}, {
  start: 344,
  length: 1,
  convRule: rule22
}, {
  start: 345,
  length: 1,
  convRule: rule23
}, {
  start: 346,
  length: 1,
  convRule: rule22
}, {
  start: 347,
  length: 1,
  convRule: rule23
}, {
  start: 348,
  length: 1,
  convRule: rule22
}, {
  start: 349,
  length: 1,
  convRule: rule23
}, {
  start: 350,
  length: 1,
  convRule: rule22
}, {
  start: 351,
  length: 1,
  convRule: rule23
}, {
  start: 352,
  length: 1,
  convRule: rule22
}, {
  start: 353,
  length: 1,
  convRule: rule23
}, {
  start: 354,
  length: 1,
  convRule: rule22
}, {
  start: 355,
  length: 1,
  convRule: rule23
}, {
  start: 356,
  length: 1,
  convRule: rule22
}, {
  start: 357,
  length: 1,
  convRule: rule23
}, {
  start: 358,
  length: 1,
  convRule: rule22
}, {
  start: 359,
  length: 1,
  convRule: rule23
}, {
  start: 360,
  length: 1,
  convRule: rule22
}, {
  start: 361,
  length: 1,
  convRule: rule23
}, {
  start: 362,
  length: 1,
  convRule: rule22
}, {
  start: 363,
  length: 1,
  convRule: rule23
}, {
  start: 364,
  length: 1,
  convRule: rule22
}, {
  start: 365,
  length: 1,
  convRule: rule23
}, {
  start: 366,
  length: 1,
  convRule: rule22
}, {
  start: 367,
  length: 1,
  convRule: rule23
}, {
  start: 368,
  length: 1,
  convRule: rule22
}, {
  start: 369,
  length: 1,
  convRule: rule23
}, {
  start: 370,
  length: 1,
  convRule: rule22
}, {
  start: 371,
  length: 1,
  convRule: rule23
}, {
  start: 372,
  length: 1,
  convRule: rule22
}, {
  start: 373,
  length: 1,
  convRule: rule23
}, {
  start: 374,
  length: 1,
  convRule: rule22
}, {
  start: 375,
  length: 1,
  convRule: rule23
}, {
  start: 376,
  length: 1,
  convRule: rule26
}, {
  start: 377,
  length: 1,
  convRule: rule22
}, {
  start: 378,
  length: 1,
  convRule: rule23
}, {
  start: 379,
  length: 1,
  convRule: rule22
}, {
  start: 380,
  length: 1,
  convRule: rule23
}, {
  start: 381,
  length: 1,
  convRule: rule22
}, {
  start: 382,
  length: 1,
  convRule: rule23
}, {
  start: 383,
  length: 1,
  convRule: rule27
}, {
  start: 384,
  length: 1,
  convRule: rule28
}, {
  start: 385,
  length: 1,
  convRule: rule29
}, {
  start: 386,
  length: 1,
  convRule: rule22
}, {
  start: 387,
  length: 1,
  convRule: rule23
}, {
  start: 388,
  length: 1,
  convRule: rule22
}, {
  start: 389,
  length: 1,
  convRule: rule23
}, {
  start: 390,
  length: 1,
  convRule: rule30
}, {
  start: 391,
  length: 1,
  convRule: rule22
}, {
  start: 392,
  length: 1,
  convRule: rule23
}, {
  start: 393,
  length: 2,
  convRule: rule31
}, {
  start: 395,
  length: 1,
  convRule: rule22
}, {
  start: 396,
  length: 1,
  convRule: rule23
}, {
  start: 397,
  length: 1,
  convRule: rule20
}, {
  start: 398,
  length: 1,
  convRule: rule32
}, {
  start: 399,
  length: 1,
  convRule: rule33
}, {
  start: 400,
  length: 1,
  convRule: rule34
}, {
  start: 401,
  length: 1,
  convRule: rule22
}, {
  start: 402,
  length: 1,
  convRule: rule23
}, {
  start: 403,
  length: 1,
  convRule: rule31
}, {
  start: 404,
  length: 1,
  convRule: rule35
}, {
  start: 405,
  length: 1,
  convRule: rule36
}, {
  start: 406,
  length: 1,
  convRule: rule37
}, {
  start: 407,
  length: 1,
  convRule: rule38
}, {
  start: 408,
  length: 1,
  convRule: rule22
}, {
  start: 409,
  length: 1,
  convRule: rule23
}, {
  start: 410,
  length: 1,
  convRule: rule39
}, {
  start: 411,
  length: 1,
  convRule: rule20
}, {
  start: 412,
  length: 1,
  convRule: rule37
}, {
  start: 413,
  length: 1,
  convRule: rule40
}, {
  start: 414,
  length: 1,
  convRule: rule41
}, {
  start: 415,
  length: 1,
  convRule: rule42
}, {
  start: 416,
  length: 1,
  convRule: rule22
}, {
  start: 417,
  length: 1,
  convRule: rule23
}, {
  start: 418,
  length: 1,
  convRule: rule22
}, {
  start: 419,
  length: 1,
  convRule: rule23
}, {
  start: 420,
  length: 1,
  convRule: rule22
}, {
  start: 421,
  length: 1,
  convRule: rule23
}, {
  start: 422,
  length: 1,
  convRule: rule43
}, {
  start: 423,
  length: 1,
  convRule: rule22
}, {
  start: 424,
  length: 1,
  convRule: rule23
}, {
  start: 425,
  length: 1,
  convRule: rule43
}, {
  start: 426,
  length: 2,
  convRule: rule20
}, {
  start: 428,
  length: 1,
  convRule: rule22
}, {
  start: 429,
  length: 1,
  convRule: rule23
}, {
  start: 430,
  length: 1,
  convRule: rule43
}, {
  start: 431,
  length: 1,
  convRule: rule22
}, {
  start: 432,
  length: 1,
  convRule: rule23
}, {
  start: 433,
  length: 2,
  convRule: rule44
}, {
  start: 435,
  length: 1,
  convRule: rule22
}, {
  start: 436,
  length: 1,
  convRule: rule23
}, {
  start: 437,
  length: 1,
  convRule: rule22
}, {
  start: 438,
  length: 1,
  convRule: rule23
}, {
  start: 439,
  length: 1,
  convRule: rule45
}, {
  start: 440,
  length: 1,
  convRule: rule22
}, {
  start: 441,
  length: 1,
  convRule: rule23
}, {
  start: 442,
  length: 1,
  convRule: rule20
}, {
  start: 443,
  length: 1,
  convRule: rule14
}, {
  start: 444,
  length: 1,
  convRule: rule22
}, {
  start: 445,
  length: 1,
  convRule: rule23
}, {
  start: 446,
  length: 1,
  convRule: rule20
}, {
  start: 447,
  length: 1,
  convRule: rule46
}, {
  start: 448,
  length: 4,
  convRule: rule14
}, {
  start: 452,
  length: 1,
  convRule: rule47
}, {
  start: 453,
  length: 1,
  convRule: rule48
}, {
  start: 454,
  length: 1,
  convRule: rule49
}, {
  start: 455,
  length: 1,
  convRule: rule47
}, {
  start: 456,
  length: 1,
  convRule: rule48
}, {
  start: 457,
  length: 1,
  convRule: rule49
}, {
  start: 458,
  length: 1,
  convRule: rule47
}, {
  start: 459,
  length: 1,
  convRule: rule48
}, {
  start: 460,
  length: 1,
  convRule: rule49
}, {
  start: 461,
  length: 1,
  convRule: rule22
}, {
  start: 462,
  length: 1,
  convRule: rule23
}, {
  start: 463,
  length: 1,
  convRule: rule22
}, {
  start: 464,
  length: 1,
  convRule: rule23
}, {
  start: 465,
  length: 1,
  convRule: rule22
}, {
  start: 466,
  length: 1,
  convRule: rule23
}, {
  start: 467,
  length: 1,
  convRule: rule22
}, {
  start: 468,
  length: 1,
  convRule: rule23
}, {
  start: 469,
  length: 1,
  convRule: rule22
}, {
  start: 470,
  length: 1,
  convRule: rule23
}, {
  start: 471,
  length: 1,
  convRule: rule22
}, {
  start: 472,
  length: 1,
  convRule: rule23
}, {
  start: 473,
  length: 1,
  convRule: rule22
}, {
  start: 474,
  length: 1,
  convRule: rule23
}, {
  start: 475,
  length: 1,
  convRule: rule22
}, {
  start: 476,
  length: 1,
  convRule: rule23
}, {
  start: 477,
  length: 1,
  convRule: rule50
}, {
  start: 478,
  length: 1,
  convRule: rule22
}, {
  start: 479,
  length: 1,
  convRule: rule23
}, {
  start: 480,
  length: 1,
  convRule: rule22
}, {
  start: 481,
  length: 1,
  convRule: rule23
}, {
  start: 482,
  length: 1,
  convRule: rule22
}, {
  start: 483,
  length: 1,
  convRule: rule23
}, {
  start: 484,
  length: 1,
  convRule: rule22
}, {
  start: 485,
  length: 1,
  convRule: rule23
}, {
  start: 486,
  length: 1,
  convRule: rule22
}, {
  start: 487,
  length: 1,
  convRule: rule23
}, {
  start: 488,
  length: 1,
  convRule: rule22
}, {
  start: 489,
  length: 1,
  convRule: rule23
}, {
  start: 490,
  length: 1,
  convRule: rule22
}, {
  start: 491,
  length: 1,
  convRule: rule23
}, {
  start: 492,
  length: 1,
  convRule: rule22
}, {
  start: 493,
  length: 1,
  convRule: rule23
}, {
  start: 494,
  length: 1,
  convRule: rule22
}, {
  start: 495,
  length: 1,
  convRule: rule23
}, {
  start: 496,
  length: 1,
  convRule: rule20
}, {
  start: 497,
  length: 1,
  convRule: rule47
}, {
  start: 498,
  length: 1,
  convRule: rule48
}, {
  start: 499,
  length: 1,
  convRule: rule49
}, {
  start: 500,
  length: 1,
  convRule: rule22
}, {
  start: 501,
  length: 1,
  convRule: rule23
}, {
  start: 502,
  length: 1,
  convRule: rule51
}, {
  start: 503,
  length: 1,
  convRule: rule52
}, {
  start: 504,
  length: 1,
  convRule: rule22
}, {
  start: 505,
  length: 1,
  convRule: rule23
}, {
  start: 506,
  length: 1,
  convRule: rule22
}, {
  start: 507,
  length: 1,
  convRule: rule23
}, {
  start: 508,
  length: 1,
  convRule: rule22
}, {
  start: 509,
  length: 1,
  convRule: rule23
}, {
  start: 510,
  length: 1,
  convRule: rule22
}, {
  start: 511,
  length: 1,
  convRule: rule23
}, {
  start: 512,
  length: 1,
  convRule: rule22
}, {
  start: 513,
  length: 1,
  convRule: rule23
}, {
  start: 514,
  length: 1,
  convRule: rule22
}, {
  start: 515,
  length: 1,
  convRule: rule23
}, {
  start: 516,
  length: 1,
  convRule: rule22
}, {
  start: 517,
  length: 1,
  convRule: rule23
}, {
  start: 518,
  length: 1,
  convRule: rule22
}, {
  start: 519,
  length: 1,
  convRule: rule23
}, {
  start: 520,
  length: 1,
  convRule: rule22
}, {
  start: 521,
  length: 1,
  convRule: rule23
}, {
  start: 522,
  length: 1,
  convRule: rule22
}, {
  start: 523,
  length: 1,
  convRule: rule23
}, {
  start: 524,
  length: 1,
  convRule: rule22
}, {
  start: 525,
  length: 1,
  convRule: rule23
}, {
  start: 526,
  length: 1,
  convRule: rule22
}, {
  start: 527,
  length: 1,
  convRule: rule23
}, {
  start: 528,
  length: 1,
  convRule: rule22
}, {
  start: 529,
  length: 1,
  convRule: rule23
}, {
  start: 530,
  length: 1,
  convRule: rule22
}, {
  start: 531,
  length: 1,
  convRule: rule23
}, {
  start: 532,
  length: 1,
  convRule: rule22
}, {
  start: 533,
  length: 1,
  convRule: rule23
}, {
  start: 534,
  length: 1,
  convRule: rule22
}, {
  start: 535,
  length: 1,
  convRule: rule23
}, {
  start: 536,
  length: 1,
  convRule: rule22
}, {
  start: 537,
  length: 1,
  convRule: rule23
}, {
  start: 538,
  length: 1,
  convRule: rule22
}, {
  start: 539,
  length: 1,
  convRule: rule23
}, {
  start: 540,
  length: 1,
  convRule: rule22
}, {
  start: 541,
  length: 1,
  convRule: rule23
}, {
  start: 542,
  length: 1,
  convRule: rule22
}, {
  start: 543,
  length: 1,
  convRule: rule23
}, {
  start: 544,
  length: 1,
  convRule: rule53
}, {
  start: 545,
  length: 1,
  convRule: rule20
}, {
  start: 546,
  length: 1,
  convRule: rule22
}, {
  start: 547,
  length: 1,
  convRule: rule23
}, {
  start: 548,
  length: 1,
  convRule: rule22
}, {
  start: 549,
  length: 1,
  convRule: rule23
}, {
  start: 550,
  length: 1,
  convRule: rule22
}, {
  start: 551,
  length: 1,
  convRule: rule23
}, {
  start: 552,
  length: 1,
  convRule: rule22
}, {
  start: 553,
  length: 1,
  convRule: rule23
}, {
  start: 554,
  length: 1,
  convRule: rule22
}, {
  start: 555,
  length: 1,
  convRule: rule23
}, {
  start: 556,
  length: 1,
  convRule: rule22
}, {
  start: 557,
  length: 1,
  convRule: rule23
}, {
  start: 558,
  length: 1,
  convRule: rule22
}, {
  start: 559,
  length: 1,
  convRule: rule23
}, {
  start: 560,
  length: 1,
  convRule: rule22
}, {
  start: 561,
  length: 1,
  convRule: rule23
}, {
  start: 562,
  length: 1,
  convRule: rule22
}, {
  start: 563,
  length: 1,
  convRule: rule23
}, {
  start: 564,
  length: 6,
  convRule: rule20
}, {
  start: 570,
  length: 1,
  convRule: rule54
}, {
  start: 571,
  length: 1,
  convRule: rule22
}, {
  start: 572,
  length: 1,
  convRule: rule23
}, {
  start: 573,
  length: 1,
  convRule: rule55
}, {
  start: 574,
  length: 1,
  convRule: rule56
}, {
  start: 575,
  length: 2,
  convRule: rule57
}, {
  start: 577,
  length: 1,
  convRule: rule22
}, {
  start: 578,
  length: 1,
  convRule: rule23
}, {
  start: 579,
  length: 1,
  convRule: rule58
}, {
  start: 580,
  length: 1,
  convRule: rule59
}, {
  start: 581,
  length: 1,
  convRule: rule60
}, {
  start: 582,
  length: 1,
  convRule: rule22
}, {
  start: 583,
  length: 1,
  convRule: rule23
}, {
  start: 584,
  length: 1,
  convRule: rule22
}, {
  start: 585,
  length: 1,
  convRule: rule23
}, {
  start: 586,
  length: 1,
  convRule: rule22
}, {
  start: 587,
  length: 1,
  convRule: rule23
}, {
  start: 588,
  length: 1,
  convRule: rule22
}, {
  start: 589,
  length: 1,
  convRule: rule23
}, {
  start: 590,
  length: 1,
  convRule: rule22
}, {
  start: 591,
  length: 1,
  convRule: rule23
}, {
  start: 592,
  length: 1,
  convRule: rule61
}, {
  start: 593,
  length: 1,
  convRule: rule62
}, {
  start: 594,
  length: 1,
  convRule: rule63
}, {
  start: 595,
  length: 1,
  convRule: rule64
}, {
  start: 596,
  length: 1,
  convRule: rule65
}, {
  start: 597,
  length: 1,
  convRule: rule20
}, {
  start: 598,
  length: 2,
  convRule: rule66
}, {
  start: 600,
  length: 1,
  convRule: rule20
}, {
  start: 601,
  length: 1,
  convRule: rule67
}, {
  start: 602,
  length: 1,
  convRule: rule20
}, {
  start: 603,
  length: 1,
  convRule: rule68
}, {
  start: 604,
  length: 1,
  convRule: rule69
}, {
  start: 605,
  length: 3,
  convRule: rule20
}, {
  start: 608,
  length: 1,
  convRule: rule66
}, {
  start: 609,
  length: 1,
  convRule: rule70
}, {
  start: 610,
  length: 1,
  convRule: rule20
}, {
  start: 611,
  length: 1,
  convRule: rule71
}, {
  start: 612,
  length: 1,
  convRule: rule20
}, {
  start: 613,
  length: 1,
  convRule: rule72
}, {
  start: 614,
  length: 1,
  convRule: rule73
}, {
  start: 615,
  length: 1,
  convRule: rule20
}, {
  start: 616,
  length: 1,
  convRule: rule74
}, {
  start: 617,
  length: 1,
  convRule: rule75
}, {
  start: 618,
  length: 1,
  convRule: rule73
}, {
  start: 619,
  length: 1,
  convRule: rule76
}, {
  start: 620,
  length: 1,
  convRule: rule77
}, {
  start: 621,
  length: 2,
  convRule: rule20
}, {
  start: 623,
  length: 1,
  convRule: rule75
}, {
  start: 624,
  length: 1,
  convRule: rule20
}, {
  start: 625,
  length: 1,
  convRule: rule78
}, {
  start: 626,
  length: 1,
  convRule: rule79
}, {
  start: 627,
  length: 2,
  convRule: rule20
}, {
  start: 629,
  length: 1,
  convRule: rule80
}, {
  start: 630,
  length: 7,
  convRule: rule20
}, {
  start: 637,
  length: 1,
  convRule: rule81
}, {
  start: 638,
  length: 2,
  convRule: rule20
}, {
  start: 640,
  length: 1,
  convRule: rule82
}, {
  start: 641,
  length: 1,
  convRule: rule20
}, {
  start: 642,
  length: 1,
  convRule: rule83
}, {
  start: 643,
  length: 1,
  convRule: rule82
}, {
  start: 644,
  length: 3,
  convRule: rule20
}, {
  start: 647,
  length: 1,
  convRule: rule84
}, {
  start: 648,
  length: 1,
  convRule: rule82
}, {
  start: 649,
  length: 1,
  convRule: rule85
}, {
  start: 650,
  length: 2,
  convRule: rule86
}, {
  start: 652,
  length: 1,
  convRule: rule87
}, {
  start: 653,
  length: 5,
  convRule: rule20
}, {
  start: 658,
  length: 1,
  convRule: rule88
}, {
  start: 659,
  length: 1,
  convRule: rule20
}, {
  start: 660,
  length: 1,
  convRule: rule14
}, {
  start: 661,
  length: 8,
  convRule: rule20
}, {
  start: 669,
  length: 1,
  convRule: rule89
}, {
  start: 670,
  length: 1,
  convRule: rule90
}, {
  start: 671,
  length: 17,
  convRule: rule20
}, {
  start: 688,
  length: 18,
  convRule: rule91
}, {
  start: 706,
  length: 4,
  convRule: rule10
}, {
  start: 710,
  length: 12,
  convRule: rule91
}, {
  start: 722,
  length: 14,
  convRule: rule10
}, {
  start: 736,
  length: 5,
  convRule: rule91
}, {
  start: 741,
  length: 7,
  convRule: rule10
}, {
  start: 748,
  length: 1,
  convRule: rule91
}, {
  start: 749,
  length: 1,
  convRule: rule10
}, {
  start: 750,
  length: 1,
  convRule: rule91
}, {
  start: 751,
  length: 17,
  convRule: rule10
}, {
  start: 768,
  length: 69,
  convRule: rule92
}, {
  start: 837,
  length: 1,
  convRule: rule93
}, {
  start: 838,
  length: 42,
  convRule: rule92
}, {
  start: 880,
  length: 1,
  convRule: rule22
}, {
  start: 881,
  length: 1,
  convRule: rule23
}, {
  start: 882,
  length: 1,
  convRule: rule22
}, {
  start: 883,
  length: 1,
  convRule: rule23
}, {
  start: 884,
  length: 1,
  convRule: rule91
}, {
  start: 885,
  length: 1,
  convRule: rule10
}, {
  start: 886,
  length: 1,
  convRule: rule22
}, {
  start: 887,
  length: 1,
  convRule: rule23
}, {
  start: 890,
  length: 1,
  convRule: rule91
}, {
  start: 891,
  length: 3,
  convRule: rule41
}, {
  start: 894,
  length: 1,
  convRule: rule2
}, {
  start: 895,
  length: 1,
  convRule: rule94
}, {
  start: 900,
  length: 2,
  convRule: rule10
}, {
  start: 902,
  length: 1,
  convRule: rule95
}, {
  start: 903,
  length: 1,
  convRule: rule2
}, {
  start: 904,
  length: 3,
  convRule: rule96
}, {
  start: 908,
  length: 1,
  convRule: rule97
}, {
  start: 910,
  length: 2,
  convRule: rule98
}, {
  start: 912,
  length: 1,
  convRule: rule20
}, {
  start: 913,
  length: 17,
  convRule: rule9
}, {
  start: 931,
  length: 9,
  convRule: rule9
}, {
  start: 940,
  length: 1,
  convRule: rule99
}, {
  start: 941,
  length: 3,
  convRule: rule100
}, {
  start: 944,
  length: 1,
  convRule: rule20
}, {
  start: 945,
  length: 17,
  convRule: rule12
}, {
  start: 962,
  length: 1,
  convRule: rule101
}, {
  start: 963,
  length: 9,
  convRule: rule12
}, {
  start: 972,
  length: 1,
  convRule: rule102
}, {
  start: 973,
  length: 2,
  convRule: rule103
}, {
  start: 975,
  length: 1,
  convRule: rule104
}, {
  start: 976,
  length: 1,
  convRule: rule105
}, {
  start: 977,
  length: 1,
  convRule: rule106
}, {
  start: 978,
  length: 3,
  convRule: rule107
}, {
  start: 981,
  length: 1,
  convRule: rule108
}, {
  start: 982,
  length: 1,
  convRule: rule109
}, {
  start: 983,
  length: 1,
  convRule: rule110
}, {
  start: 984,
  length: 1,
  convRule: rule22
}, {
  start: 985,
  length: 1,
  convRule: rule23
}, {
  start: 986,
  length: 1,
  convRule: rule22
}, {
  start: 987,
  length: 1,
  convRule: rule23
}, {
  start: 988,
  length: 1,
  convRule: rule22
}, {
  start: 989,
  length: 1,
  convRule: rule23
}, {
  start: 990,
  length: 1,
  convRule: rule22
}, {
  start: 991,
  length: 1,
  convRule: rule23
}, {
  start: 992,
  length: 1,
  convRule: rule22
}, {
  start: 993,
  length: 1,
  convRule: rule23
}, {
  start: 994,
  length: 1,
  convRule: rule22
}, {
  start: 995,
  length: 1,
  convRule: rule23
}, {
  start: 996,
  length: 1,
  convRule: rule22
}, {
  start: 997,
  length: 1,
  convRule: rule23
}, {
  start: 998,
  length: 1,
  convRule: rule22
}, {
  start: 999,
  length: 1,
  convRule: rule23
}, {
  start: 1e3,
  length: 1,
  convRule: rule22
}, {
  start: 1001,
  length: 1,
  convRule: rule23
}, {
  start: 1002,
  length: 1,
  convRule: rule22
}, {
  start: 1003,
  length: 1,
  convRule: rule23
}, {
  start: 1004,
  length: 1,
  convRule: rule22
}, {
  start: 1005,
  length: 1,
  convRule: rule23
}, {
  start: 1006,
  length: 1,
  convRule: rule22
}, {
  start: 1007,
  length: 1,
  convRule: rule23
}, {
  start: 1008,
  length: 1,
  convRule: rule111
}, {
  start: 1009,
  length: 1,
  convRule: rule112
}, {
  start: 1010,
  length: 1,
  convRule: rule113
}, {
  start: 1011,
  length: 1,
  convRule: rule114
}, {
  start: 1012,
  length: 1,
  convRule: rule115
}, {
  start: 1013,
  length: 1,
  convRule: rule116
}, {
  start: 1014,
  length: 1,
  convRule: rule6
}, {
  start: 1015,
  length: 1,
  convRule: rule22
}, {
  start: 1016,
  length: 1,
  convRule: rule23
}, {
  start: 1017,
  length: 1,
  convRule: rule117
}, {
  start: 1018,
  length: 1,
  convRule: rule22
}, {
  start: 1019,
  length: 1,
  convRule: rule23
}, {
  start: 1020,
  length: 1,
  convRule: rule20
}, {
  start: 1021,
  length: 3,
  convRule: rule53
}, {
  start: 1024,
  length: 16,
  convRule: rule118
}, {
  start: 1040,
  length: 32,
  convRule: rule9
}, {
  start: 1072,
  length: 32,
  convRule: rule12
}, {
  start: 1104,
  length: 16,
  convRule: rule112
}, {
  start: 1120,
  length: 1,
  convRule: rule22
}, {
  start: 1121,
  length: 1,
  convRule: rule23
}, {
  start: 1122,
  length: 1,
  convRule: rule22
}, {
  start: 1123,
  length: 1,
  convRule: rule23
}, {
  start: 1124,
  length: 1,
  convRule: rule22
}, {
  start: 1125,
  length: 1,
  convRule: rule23
}, {
  start: 1126,
  length: 1,
  convRule: rule22
}, {
  start: 1127,
  length: 1,
  convRule: rule23
}, {
  start: 1128,
  length: 1,
  convRule: rule22
}, {
  start: 1129,
  length: 1,
  convRule: rule23
}, {
  start: 1130,
  length: 1,
  convRule: rule22
}, {
  start: 1131,
  length: 1,
  convRule: rule23
}, {
  start: 1132,
  length: 1,
  convRule: rule22
}, {
  start: 1133,
  length: 1,
  convRule: rule23
}, {
  start: 1134,
  length: 1,
  convRule: rule22
}, {
  start: 1135,
  length: 1,
  convRule: rule23
}, {
  start: 1136,
  length: 1,
  convRule: rule22
}, {
  start: 1137,
  length: 1,
  convRule: rule23
}, {
  start: 1138,
  length: 1,
  convRule: rule22
}, {
  start: 1139,
  length: 1,
  convRule: rule23
}, {
  start: 1140,
  length: 1,
  convRule: rule22
}, {
  start: 1141,
  length: 1,
  convRule: rule23
}, {
  start: 1142,
  length: 1,
  convRule: rule22
}, {
  start: 1143,
  length: 1,
  convRule: rule23
}, {
  start: 1144,
  length: 1,
  convRule: rule22
}, {
  start: 1145,
  length: 1,
  convRule: rule23
}, {
  start: 1146,
  length: 1,
  convRule: rule22
}, {
  start: 1147,
  length: 1,
  convRule: rule23
}, {
  start: 1148,
  length: 1,
  convRule: rule22
}, {
  start: 1149,
  length: 1,
  convRule: rule23
}, {
  start: 1150,
  length: 1,
  convRule: rule22
}, {
  start: 1151,
  length: 1,
  convRule: rule23
}, {
  start: 1152,
  length: 1,
  convRule: rule22
}, {
  start: 1153,
  length: 1,
  convRule: rule23
}, {
  start: 1154,
  length: 1,
  convRule: rule13
}, {
  start: 1155,
  length: 5,
  convRule: rule92
}, {
  start: 1160,
  length: 2,
  convRule: rule119
}, {
  start: 1162,
  length: 1,
  convRule: rule22
}, {
  start: 1163,
  length: 1,
  convRule: rule23
}, {
  start: 1164,
  length: 1,
  convRule: rule22
}, {
  start: 1165,
  length: 1,
  convRule: rule23
}, {
  start: 1166,
  length: 1,
  convRule: rule22
}, {
  start: 1167,
  length: 1,
  convRule: rule23
}, {
  start: 1168,
  length: 1,
  convRule: rule22
}, {
  start: 1169,
  length: 1,
  convRule: rule23
}, {
  start: 1170,
  length: 1,
  convRule: rule22
}, {
  start: 1171,
  length: 1,
  convRule: rule23
}, {
  start: 1172,
  length: 1,
  convRule: rule22
}, {
  start: 1173,
  length: 1,
  convRule: rule23
}, {
  start: 1174,
  length: 1,
  convRule: rule22
}, {
  start: 1175,
  length: 1,
  convRule: rule23
}, {
  start: 1176,
  length: 1,
  convRule: rule22
}, {
  start: 1177,
  length: 1,
  convRule: rule23
}, {
  start: 1178,
  length: 1,
  convRule: rule22
}, {
  start: 1179,
  length: 1,
  convRule: rule23
}, {
  start: 1180,
  length: 1,
  convRule: rule22
}, {
  start: 1181,
  length: 1,
  convRule: rule23
}, {
  start: 1182,
  length: 1,
  convRule: rule22
}, {
  start: 1183,
  length: 1,
  convRule: rule23
}, {
  start: 1184,
  length: 1,
  convRule: rule22
}, {
  start: 1185,
  length: 1,
  convRule: rule23
}, {
  start: 1186,
  length: 1,
  convRule: rule22
}, {
  start: 1187,
  length: 1,
  convRule: rule23
}, {
  start: 1188,
  length: 1,
  convRule: rule22
}, {
  start: 1189,
  length: 1,
  convRule: rule23
}, {
  start: 1190,
  length: 1,
  convRule: rule22
}, {
  start: 1191,
  length: 1,
  convRule: rule23
}, {
  start: 1192,
  length: 1,
  convRule: rule22
}, {
  start: 1193,
  length: 1,
  convRule: rule23
}, {
  start: 1194,
  length: 1,
  convRule: rule22
}, {
  start: 1195,
  length: 1,
  convRule: rule23
}, {
  start: 1196,
  length: 1,
  convRule: rule22
}, {
  start: 1197,
  length: 1,
  convRule: rule23
}, {
  start: 1198,
  length: 1,
  convRule: rule22
}, {
  start: 1199,
  length: 1,
  convRule: rule23
}, {
  start: 1200,
  length: 1,
  convRule: rule22
}, {
  start: 1201,
  length: 1,
  convRule: rule23
}, {
  start: 1202,
  length: 1,
  convRule: rule22
}, {
  start: 1203,
  length: 1,
  convRule: rule23
}, {
  start: 1204,
  length: 1,
  convRule: rule22
}, {
  start: 1205,
  length: 1,
  convRule: rule23
}, {
  start: 1206,
  length: 1,
  convRule: rule22
}, {
  start: 1207,
  length: 1,
  convRule: rule23
}, {
  start: 1208,
  length: 1,
  convRule: rule22
}, {
  start: 1209,
  length: 1,
  convRule: rule23
}, {
  start: 1210,
  length: 1,
  convRule: rule22
}, {
  start: 1211,
  length: 1,
  convRule: rule23
}, {
  start: 1212,
  length: 1,
  convRule: rule22
}, {
  start: 1213,
  length: 1,
  convRule: rule23
}, {
  start: 1214,
  length: 1,
  convRule: rule22
}, {
  start: 1215,
  length: 1,
  convRule: rule23
}, {
  start: 1216,
  length: 1,
  convRule: rule120
}, {
  start: 1217,
  length: 1,
  convRule: rule22
}, {
  start: 1218,
  length: 1,
  convRule: rule23
}, {
  start: 1219,
  length: 1,
  convRule: rule22
}, {
  start: 1220,
  length: 1,
  convRule: rule23
}, {
  start: 1221,
  length: 1,
  convRule: rule22
}, {
  start: 1222,
  length: 1,
  convRule: rule23
}, {
  start: 1223,
  length: 1,
  convRule: rule22
}, {
  start: 1224,
  length: 1,
  convRule: rule23
}, {
  start: 1225,
  length: 1,
  convRule: rule22
}, {
  start: 1226,
  length: 1,
  convRule: rule23
}, {
  start: 1227,
  length: 1,
  convRule: rule22
}, {
  start: 1228,
  length: 1,
  convRule: rule23
}, {
  start: 1229,
  length: 1,
  convRule: rule22
}, {
  start: 1230,
  length: 1,
  convRule: rule23
}, {
  start: 1231,
  length: 1,
  convRule: rule121
}, {
  start: 1232,
  length: 1,
  convRule: rule22
}, {
  start: 1233,
  length: 1,
  convRule: rule23
}, {
  start: 1234,
  length: 1,
  convRule: rule22
}, {
  start: 1235,
  length: 1,
  convRule: rule23
}, {
  start: 1236,
  length: 1,
  convRule: rule22
}, {
  start: 1237,
  length: 1,
  convRule: rule23
}, {
  start: 1238,
  length: 1,
  convRule: rule22
}, {
  start: 1239,
  length: 1,
  convRule: rule23
}, {
  start: 1240,
  length: 1,
  convRule: rule22
}, {
  start: 1241,
  length: 1,
  convRule: rule23
}, {
  start: 1242,
  length: 1,
  convRule: rule22
}, {
  start: 1243,
  length: 1,
  convRule: rule23
}, {
  start: 1244,
  length: 1,
  convRule: rule22
}, {
  start: 1245,
  length: 1,
  convRule: rule23
}, {
  start: 1246,
  length: 1,
  convRule: rule22
}, {
  start: 1247,
  length: 1,
  convRule: rule23
}, {
  start: 1248,
  length: 1,
  convRule: rule22
}, {
  start: 1249,
  length: 1,
  convRule: rule23
}, {
  start: 1250,
  length: 1,
  convRule: rule22
}, {
  start: 1251,
  length: 1,
  convRule: rule23
}, {
  start: 1252,
  length: 1,
  convRule: rule22
}, {
  start: 1253,
  length: 1,
  convRule: rule23
}, {
  start: 1254,
  length: 1,
  convRule: rule22
}, {
  start: 1255,
  length: 1,
  convRule: rule23
}, {
  start: 1256,
  length: 1,
  convRule: rule22
}, {
  start: 1257,
  length: 1,
  convRule: rule23
}, {
  start: 1258,
  length: 1,
  convRule: rule22
}, {
  start: 1259,
  length: 1,
  convRule: rule23
}, {
  start: 1260,
  length: 1,
  convRule: rule22
}, {
  start: 1261,
  length: 1,
  convRule: rule23
}, {
  start: 1262,
  length: 1,
  convRule: rule22
}, {
  start: 1263,
  length: 1,
  convRule: rule23
}, {
  start: 1264,
  length: 1,
  convRule: rule22
}, {
  start: 1265,
  length: 1,
  convRule: rule23
}, {
  start: 1266,
  length: 1,
  convRule: rule22
}, {
  start: 1267,
  length: 1,
  convRule: rule23
}, {
  start: 1268,
  length: 1,
  convRule: rule22
}, {
  start: 1269,
  length: 1,
  convRule: rule23
}, {
  start: 1270,
  length: 1,
  convRule: rule22
}, {
  start: 1271,
  length: 1,
  convRule: rule23
}, {
  start: 1272,
  length: 1,
  convRule: rule22
}, {
  start: 1273,
  length: 1,
  convRule: rule23
}, {
  start: 1274,
  length: 1,
  convRule: rule22
}, {
  start: 1275,
  length: 1,
  convRule: rule23
}, {
  start: 1276,
  length: 1,
  convRule: rule22
}, {
  start: 1277,
  length: 1,
  convRule: rule23
}, {
  start: 1278,
  length: 1,
  convRule: rule22
}, {
  start: 1279,
  length: 1,
  convRule: rule23
}, {
  start: 1280,
  length: 1,
  convRule: rule22
}, {
  start: 1281,
  length: 1,
  convRule: rule23
}, {
  start: 1282,
  length: 1,
  convRule: rule22
}, {
  start: 1283,
  length: 1,
  convRule: rule23
}, {
  start: 1284,
  length: 1,
  convRule: rule22
}, {
  start: 1285,
  length: 1,
  convRule: rule23
}, {
  start: 1286,
  length: 1,
  convRule: rule22
}, {
  start: 1287,
  length: 1,
  convRule: rule23
}, {
  start: 1288,
  length: 1,
  convRule: rule22
}, {
  start: 1289,
  length: 1,
  convRule: rule23
}, {
  start: 1290,
  length: 1,
  convRule: rule22
}, {
  start: 1291,
  length: 1,
  convRule: rule23
}, {
  start: 1292,
  length: 1,
  convRule: rule22
}, {
  start: 1293,
  length: 1,
  convRule: rule23
}, {
  start: 1294,
  length: 1,
  convRule: rule22
}, {
  start: 1295,
  length: 1,
  convRule: rule23
}, {
  start: 1296,
  length: 1,
  convRule: rule22
}, {
  start: 1297,
  length: 1,
  convRule: rule23
}, {
  start: 1298,
  length: 1,
  convRule: rule22
}, {
  start: 1299,
  length: 1,
  convRule: rule23
}, {
  start: 1300,
  length: 1,
  convRule: rule22
}, {
  start: 1301,
  length: 1,
  convRule: rule23
}, {
  start: 1302,
  length: 1,
  convRule: rule22
}, {
  start: 1303,
  length: 1,
  convRule: rule23
}, {
  start: 1304,
  length: 1,
  convRule: rule22
}, {
  start: 1305,
  length: 1,
  convRule: rule23
}, {
  start: 1306,
  length: 1,
  convRule: rule22
}, {
  start: 1307,
  length: 1,
  convRule: rule23
}, {
  start: 1308,
  length: 1,
  convRule: rule22
}, {
  start: 1309,
  length: 1,
  convRule: rule23
}, {
  start: 1310,
  length: 1,
  convRule: rule22
}, {
  start: 1311,
  length: 1,
  convRule: rule23
}, {
  start: 1312,
  length: 1,
  convRule: rule22
}, {
  start: 1313,
  length: 1,
  convRule: rule23
}, {
  start: 1314,
  length: 1,
  convRule: rule22
}, {
  start: 1315,
  length: 1,
  convRule: rule23
}, {
  start: 1316,
  length: 1,
  convRule: rule22
}, {
  start: 1317,
  length: 1,
  convRule: rule23
}, {
  start: 1318,
  length: 1,
  convRule: rule22
}, {
  start: 1319,
  length: 1,
  convRule: rule23
}, {
  start: 1320,
  length: 1,
  convRule: rule22
}, {
  start: 1321,
  length: 1,
  convRule: rule23
}, {
  start: 1322,
  length: 1,
  convRule: rule22
}, {
  start: 1323,
  length: 1,
  convRule: rule23
}, {
  start: 1324,
  length: 1,
  convRule: rule22
}, {
  start: 1325,
  length: 1,
  convRule: rule23
}, {
  start: 1326,
  length: 1,
  convRule: rule22
}, {
  start: 1327,
  length: 1,
  convRule: rule23
}, {
  start: 1329,
  length: 38,
  convRule: rule122
}, {
  start: 1369,
  length: 1,
  convRule: rule91
}, {
  start: 1370,
  length: 6,
  convRule: rule2
}, {
  start: 1376,
  length: 1,
  convRule: rule20
}, {
  start: 1377,
  length: 38,
  convRule: rule123
}, {
  start: 1415,
  length: 2,
  convRule: rule20
}, {
  start: 1417,
  length: 1,
  convRule: rule2
}, {
  start: 1418,
  length: 1,
  convRule: rule7
}, {
  start: 1421,
  length: 2,
  convRule: rule13
}, {
  start: 1423,
  length: 1,
  convRule: rule3
}, {
  start: 1425,
  length: 45,
  convRule: rule92
}, {
  start: 1470,
  length: 1,
  convRule: rule7
}, {
  start: 1471,
  length: 1,
  convRule: rule92
}, {
  start: 1472,
  length: 1,
  convRule: rule2
}, {
  start: 1473,
  length: 2,
  convRule: rule92
}, {
  start: 1475,
  length: 1,
  convRule: rule2
}, {
  start: 1476,
  length: 2,
  convRule: rule92
}, {
  start: 1478,
  length: 1,
  convRule: rule2
}, {
  start: 1479,
  length: 1,
  convRule: rule92
}, {
  start: 1488,
  length: 27,
  convRule: rule14
}, {
  start: 1519,
  length: 4,
  convRule: rule14
}, {
  start: 1523,
  length: 2,
  convRule: rule2
}, {
  start: 1536,
  length: 6,
  convRule: rule16
}, {
  start: 1542,
  length: 3,
  convRule: rule6
}, {
  start: 1545,
  length: 2,
  convRule: rule2
}, {
  start: 1547,
  length: 1,
  convRule: rule3
}, {
  start: 1548,
  length: 2,
  convRule: rule2
}, {
  start: 1550,
  length: 2,
  convRule: rule13
}, {
  start: 1552,
  length: 11,
  convRule: rule92
}, {
  start: 1563,
  length: 1,
  convRule: rule2
}, {
  start: 1564,
  length: 1,
  convRule: rule16
}, {
  start: 1566,
  length: 2,
  convRule: rule2
}, {
  start: 1568,
  length: 32,
  convRule: rule14
}, {
  start: 1600,
  length: 1,
  convRule: rule91
}, {
  start: 1601,
  length: 10,
  convRule: rule14
}, {
  start: 1611,
  length: 21,
  convRule: rule92
}, {
  start: 1632,
  length: 10,
  convRule: rule8
}, {
  start: 1642,
  length: 4,
  convRule: rule2
}, {
  start: 1646,
  length: 2,
  convRule: rule14
}, {
  start: 1648,
  length: 1,
  convRule: rule92
}, {
  start: 1649,
  length: 99,
  convRule: rule14
}, {
  start: 1748,
  length: 1,
  convRule: rule2
}, {
  start: 1749,
  length: 1,
  convRule: rule14
}, {
  start: 1750,
  length: 7,
  convRule: rule92
}, {
  start: 1757,
  length: 1,
  convRule: rule16
}, {
  start: 1758,
  length: 1,
  convRule: rule13
}, {
  start: 1759,
  length: 6,
  convRule: rule92
}, {
  start: 1765,
  length: 2,
  convRule: rule91
}, {
  start: 1767,
  length: 2,
  convRule: rule92
}, {
  start: 1769,
  length: 1,
  convRule: rule13
}, {
  start: 1770,
  length: 4,
  convRule: rule92
}, {
  start: 1774,
  length: 2,
  convRule: rule14
}, {
  start: 1776,
  length: 10,
  convRule: rule8
}, {
  start: 1786,
  length: 3,
  convRule: rule14
}, {
  start: 1789,
  length: 2,
  convRule: rule13
}, {
  start: 1791,
  length: 1,
  convRule: rule14
}, {
  start: 1792,
  length: 14,
  convRule: rule2
}, {
  start: 1807,
  length: 1,
  convRule: rule16
}, {
  start: 1808,
  length: 1,
  convRule: rule14
}, {
  start: 1809,
  length: 1,
  convRule: rule92
}, {
  start: 1810,
  length: 30,
  convRule: rule14
}, {
  start: 1840,
  length: 27,
  convRule: rule92
}, {
  start: 1869,
  length: 89,
  convRule: rule14
}, {
  start: 1958,
  length: 11,
  convRule: rule92
}, {
  start: 1969,
  length: 1,
  convRule: rule14
}, {
  start: 1984,
  length: 10,
  convRule: rule8
}, {
  start: 1994,
  length: 33,
  convRule: rule14
}, {
  start: 2027,
  length: 9,
  convRule: rule92
}, {
  start: 2036,
  length: 2,
  convRule: rule91
}, {
  start: 2038,
  length: 1,
  convRule: rule13
}, {
  start: 2039,
  length: 3,
  convRule: rule2
}, {
  start: 2042,
  length: 1,
  convRule: rule91
}, {
  start: 2045,
  length: 1,
  convRule: rule92
}, {
  start: 2046,
  length: 2,
  convRule: rule3
}, {
  start: 2048,
  length: 22,
  convRule: rule14
}, {
  start: 2070,
  length: 4,
  convRule: rule92
}, {
  start: 2074,
  length: 1,
  convRule: rule91
}, {
  start: 2075,
  length: 9,
  convRule: rule92
}, {
  start: 2084,
  length: 1,
  convRule: rule91
}, {
  start: 2085,
  length: 3,
  convRule: rule92
}, {
  start: 2088,
  length: 1,
  convRule: rule91
}, {
  start: 2089,
  length: 5,
  convRule: rule92
}, {
  start: 2096,
  length: 15,
  convRule: rule2
}, {
  start: 2112,
  length: 25,
  convRule: rule14
}, {
  start: 2137,
  length: 3,
  convRule: rule92
}, {
  start: 2142,
  length: 1,
  convRule: rule2
}, {
  start: 2144,
  length: 11,
  convRule: rule14
}, {
  start: 2208,
  length: 21,
  convRule: rule14
}, {
  start: 2230,
  length: 18,
  convRule: rule14
}, {
  start: 2259,
  length: 15,
  convRule: rule92
}, {
  start: 2274,
  length: 1,
  convRule: rule16
}, {
  start: 2275,
  length: 32,
  convRule: rule92
}, {
  start: 2307,
  length: 1,
  convRule: rule124
}, {
  start: 2308,
  length: 54,
  convRule: rule14
}, {
  start: 2362,
  length: 1,
  convRule: rule92
}, {
  start: 2363,
  length: 1,
  convRule: rule124
}, {
  start: 2364,
  length: 1,
  convRule: rule92
}, {
  start: 2365,
  length: 1,
  convRule: rule14
}, {
  start: 2366,
  length: 3,
  convRule: rule124
}, {
  start: 2369,
  length: 8,
  convRule: rule92
}, {
  start: 2377,
  length: 4,
  convRule: rule124
}, {
  start: 2381,
  length: 1,
  convRule: rule92
}, {
  start: 2382,
  length: 2,
  convRule: rule124
}, {
  start: 2384,
  length: 1,
  convRule: rule14
}, {
  start: 2385,
  length: 7,
  convRule: rule92
}, {
  start: 2392,
  length: 10,
  convRule: rule14
}, {
  start: 2402,
  length: 2,
  convRule: rule92
}, {
  start: 2404,
  length: 2,
  convRule: rule2
}, {
  start: 2406,
  length: 10,
  convRule: rule8
}, {
  start: 2416,
  length: 1,
  convRule: rule2
}, {
  start: 2417,
  length: 1,
  convRule: rule91
}, {
  start: 2418,
  length: 15,
  convRule: rule14
}, {
  start: 2433,
  length: 1,
  convRule: rule92
}, {
  start: 2434,
  length: 2,
  convRule: rule124
}, {
  start: 2437,
  length: 8,
  convRule: rule14
}, {
  start: 2447,
  length: 2,
  convRule: rule14
}, {
  start: 2451,
  length: 22,
  convRule: rule14
}, {
  start: 2474,
  length: 7,
  convRule: rule14
}, {
  start: 2482,
  length: 1,
  convRule: rule14
}, {
  start: 2486,
  length: 4,
  convRule: rule14
}, {
  start: 2492,
  length: 1,
  convRule: rule92
}, {
  start: 2493,
  length: 1,
  convRule: rule14
}, {
  start: 2494,
  length: 3,
  convRule: rule124
}, {
  start: 2497,
  length: 4,
  convRule: rule92
}, {
  start: 2503,
  length: 2,
  convRule: rule124
}, {
  start: 2507,
  length: 2,
  convRule: rule124
}, {
  start: 2509,
  length: 1,
  convRule: rule92
}, {
  start: 2510,
  length: 1,
  convRule: rule14
}, {
  start: 2519,
  length: 1,
  convRule: rule124
}, {
  start: 2524,
  length: 2,
  convRule: rule14
}, {
  start: 2527,
  length: 3,
  convRule: rule14
}, {
  start: 2530,
  length: 2,
  convRule: rule92
}, {
  start: 2534,
  length: 10,
  convRule: rule8
}, {
  start: 2544,
  length: 2,
  convRule: rule14
}, {
  start: 2546,
  length: 2,
  convRule: rule3
}, {
  start: 2548,
  length: 6,
  convRule: rule17
}, {
  start: 2554,
  length: 1,
  convRule: rule13
}, {
  start: 2555,
  length: 1,
  convRule: rule3
}, {
  start: 2556,
  length: 1,
  convRule: rule14
}, {
  start: 2557,
  length: 1,
  convRule: rule2
}, {
  start: 2558,
  length: 1,
  convRule: rule92
}, {
  start: 2561,
  length: 2,
  convRule: rule92
}, {
  start: 2563,
  length: 1,
  convRule: rule124
}, {
  start: 2565,
  length: 6,
  convRule: rule14
}, {
  start: 2575,
  length: 2,
  convRule: rule14
}, {
  start: 2579,
  length: 22,
  convRule: rule14
}, {
  start: 2602,
  length: 7,
  convRule: rule14
}, {
  start: 2610,
  length: 2,
  convRule: rule14
}, {
  start: 2613,
  length: 2,
  convRule: rule14
}, {
  start: 2616,
  length: 2,
  convRule: rule14
}, {
  start: 2620,
  length: 1,
  convRule: rule92
}, {
  start: 2622,
  length: 3,
  convRule: rule124
}, {
  start: 2625,
  length: 2,
  convRule: rule92
}, {
  start: 2631,
  length: 2,
  convRule: rule92
}, {
  start: 2635,
  length: 3,
  convRule: rule92
}, {
  start: 2641,
  length: 1,
  convRule: rule92
}, {
  start: 2649,
  length: 4,
  convRule: rule14
}, {
  start: 2654,
  length: 1,
  convRule: rule14
}, {
  start: 2662,
  length: 10,
  convRule: rule8
}, {
  start: 2672,
  length: 2,
  convRule: rule92
}, {
  start: 2674,
  length: 3,
  convRule: rule14
}, {
  start: 2677,
  length: 1,
  convRule: rule92
}, {
  start: 2678,
  length: 1,
  convRule: rule2
}, {
  start: 2689,
  length: 2,
  convRule: rule92
}, {
  start: 2691,
  length: 1,
  convRule: rule124
}, {
  start: 2693,
  length: 9,
  convRule: rule14
}, {
  start: 2703,
  length: 3,
  convRule: rule14
}, {
  start: 2707,
  length: 22,
  convRule: rule14
}, {
  start: 2730,
  length: 7,
  convRule: rule14
}, {
  start: 2738,
  length: 2,
  convRule: rule14
}, {
  start: 2741,
  length: 5,
  convRule: rule14
}, {
  start: 2748,
  length: 1,
  convRule: rule92
}, {
  start: 2749,
  length: 1,
  convRule: rule14
}, {
  start: 2750,
  length: 3,
  convRule: rule124
}, {
  start: 2753,
  length: 5,
  convRule: rule92
}, {
  start: 2759,
  length: 2,
  convRule: rule92
}, {
  start: 2761,
  length: 1,
  convRule: rule124
}, {
  start: 2763,
  length: 2,
  convRule: rule124
}, {
  start: 2765,
  length: 1,
  convRule: rule92
}, {
  start: 2768,
  length: 1,
  convRule: rule14
}, {
  start: 2784,
  length: 2,
  convRule: rule14
}, {
  start: 2786,
  length: 2,
  convRule: rule92
}, {
  start: 2790,
  length: 10,
  convRule: rule8
}, {
  start: 2800,
  length: 1,
  convRule: rule2
}, {
  start: 2801,
  length: 1,
  convRule: rule3
}, {
  start: 2809,
  length: 1,
  convRule: rule14
}, {
  start: 2810,
  length: 6,
  convRule: rule92
}, {
  start: 2817,
  length: 1,
  convRule: rule92
}, {
  start: 2818,
  length: 2,
  convRule: rule124
}, {
  start: 2821,
  length: 8,
  convRule: rule14
}, {
  start: 2831,
  length: 2,
  convRule: rule14
}, {
  start: 2835,
  length: 22,
  convRule: rule14
}, {
  start: 2858,
  length: 7,
  convRule: rule14
}, {
  start: 2866,
  length: 2,
  convRule: rule14
}, {
  start: 2869,
  length: 5,
  convRule: rule14
}, {
  start: 2876,
  length: 1,
  convRule: rule92
}, {
  start: 2877,
  length: 1,
  convRule: rule14
}, {
  start: 2878,
  length: 1,
  convRule: rule124
}, {
  start: 2879,
  length: 1,
  convRule: rule92
}, {
  start: 2880,
  length: 1,
  convRule: rule124
}, {
  start: 2881,
  length: 4,
  convRule: rule92
}, {
  start: 2887,
  length: 2,
  convRule: rule124
}, {
  start: 2891,
  length: 2,
  convRule: rule124
}, {
  start: 2893,
  length: 1,
  convRule: rule92
}, {
  start: 2901,
  length: 2,
  convRule: rule92
}, {
  start: 2903,
  length: 1,
  convRule: rule124
}, {
  start: 2908,
  length: 2,
  convRule: rule14
}, {
  start: 2911,
  length: 3,
  convRule: rule14
}, {
  start: 2914,
  length: 2,
  convRule: rule92
}, {
  start: 2918,
  length: 10,
  convRule: rule8
}, {
  start: 2928,
  length: 1,
  convRule: rule13
}, {
  start: 2929,
  length: 1,
  convRule: rule14
}, {
  start: 2930,
  length: 6,
  convRule: rule17
}, {
  start: 2946,
  length: 1,
  convRule: rule92
}, {
  start: 2947,
  length: 1,
  convRule: rule14
}, {
  start: 2949,
  length: 6,
  convRule: rule14
}, {
  start: 2958,
  length: 3,
  convRule: rule14
}, {
  start: 2962,
  length: 4,
  convRule: rule14
}, {
  start: 2969,
  length: 2,
  convRule: rule14
}, {
  start: 2972,
  length: 1,
  convRule: rule14
}, {
  start: 2974,
  length: 2,
  convRule: rule14
}, {
  start: 2979,
  length: 2,
  convRule: rule14
}, {
  start: 2984,
  length: 3,
  convRule: rule14
}, {
  start: 2990,
  length: 12,
  convRule: rule14
}, {
  start: 3006,
  length: 2,
  convRule: rule124
}, {
  start: 3008,
  length: 1,
  convRule: rule92
}, {
  start: 3009,
  length: 2,
  convRule: rule124
}, {
  start: 3014,
  length: 3,
  convRule: rule124
}, {
  start: 3018,
  length: 3,
  convRule: rule124
}, {
  start: 3021,
  length: 1,
  convRule: rule92
}, {
  start: 3024,
  length: 1,
  convRule: rule14
}, {
  start: 3031,
  length: 1,
  convRule: rule124
}, {
  start: 3046,
  length: 10,
  convRule: rule8
}, {
  start: 3056,
  length: 3,
  convRule: rule17
}, {
  start: 3059,
  length: 6,
  convRule: rule13
}, {
  start: 3065,
  length: 1,
  convRule: rule3
}, {
  start: 3066,
  length: 1,
  convRule: rule13
}, {
  start: 3072,
  length: 1,
  convRule: rule92
}, {
  start: 3073,
  length: 3,
  convRule: rule124
}, {
  start: 3076,
  length: 1,
  convRule: rule92
}, {
  start: 3077,
  length: 8,
  convRule: rule14
}, {
  start: 3086,
  length: 3,
  convRule: rule14
}, {
  start: 3090,
  length: 23,
  convRule: rule14
}, {
  start: 3114,
  length: 16,
  convRule: rule14
}, {
  start: 3133,
  length: 1,
  convRule: rule14
}, {
  start: 3134,
  length: 3,
  convRule: rule92
}, {
  start: 3137,
  length: 4,
  convRule: rule124
}, {
  start: 3142,
  length: 3,
  convRule: rule92
}, {
  start: 3146,
  length: 4,
  convRule: rule92
}, {
  start: 3157,
  length: 2,
  convRule: rule92
}, {
  start: 3160,
  length: 3,
  convRule: rule14
}, {
  start: 3168,
  length: 2,
  convRule: rule14
}, {
  start: 3170,
  length: 2,
  convRule: rule92
}, {
  start: 3174,
  length: 10,
  convRule: rule8
}, {
  start: 3191,
  length: 1,
  convRule: rule2
}, {
  start: 3192,
  length: 7,
  convRule: rule17
}, {
  start: 3199,
  length: 1,
  convRule: rule13
}, {
  start: 3200,
  length: 1,
  convRule: rule14
}, {
  start: 3201,
  length: 1,
  convRule: rule92
}, {
  start: 3202,
  length: 2,
  convRule: rule124
}, {
  start: 3204,
  length: 1,
  convRule: rule2
}, {
  start: 3205,
  length: 8,
  convRule: rule14
}, {
  start: 3214,
  length: 3,
  convRule: rule14
}, {
  start: 3218,
  length: 23,
  convRule: rule14
}, {
  start: 3242,
  length: 10,
  convRule: rule14
}, {
  start: 3253,
  length: 5,
  convRule: rule14
}, {
  start: 3260,
  length: 1,
  convRule: rule92
}, {
  start: 3261,
  length: 1,
  convRule: rule14
}, {
  start: 3262,
  length: 1,
  convRule: rule124
}, {
  start: 3263,
  length: 1,
  convRule: rule92
}, {
  start: 3264,
  length: 5,
  convRule: rule124
}, {
  start: 3270,
  length: 1,
  convRule: rule92
}, {
  start: 3271,
  length: 2,
  convRule: rule124
}, {
  start: 3274,
  length: 2,
  convRule: rule124
}, {
  start: 3276,
  length: 2,
  convRule: rule92
}, {
  start: 3285,
  length: 2,
  convRule: rule124
}, {
  start: 3294,
  length: 1,
  convRule: rule14
}, {
  start: 3296,
  length: 2,
  convRule: rule14
}, {
  start: 3298,
  length: 2,
  convRule: rule92
}, {
  start: 3302,
  length: 10,
  convRule: rule8
}, {
  start: 3313,
  length: 2,
  convRule: rule14
}, {
  start: 3328,
  length: 2,
  convRule: rule92
}, {
  start: 3330,
  length: 2,
  convRule: rule124
}, {
  start: 3332,
  length: 9,
  convRule: rule14
}, {
  start: 3342,
  length: 3,
  convRule: rule14
}, {
  start: 3346,
  length: 41,
  convRule: rule14
}, {
  start: 3387,
  length: 2,
  convRule: rule92
}, {
  start: 3389,
  length: 1,
  convRule: rule14
}, {
  start: 3390,
  length: 3,
  convRule: rule124
}, {
  start: 3393,
  length: 4,
  convRule: rule92
}, {
  start: 3398,
  length: 3,
  convRule: rule124
}, {
  start: 3402,
  length: 3,
  convRule: rule124
}, {
  start: 3405,
  length: 1,
  convRule: rule92
}, {
  start: 3406,
  length: 1,
  convRule: rule14
}, {
  start: 3407,
  length: 1,
  convRule: rule13
}, {
  start: 3412,
  length: 3,
  convRule: rule14
}, {
  start: 3415,
  length: 1,
  convRule: rule124
}, {
  start: 3416,
  length: 7,
  convRule: rule17
}, {
  start: 3423,
  length: 3,
  convRule: rule14
}, {
  start: 3426,
  length: 2,
  convRule: rule92
}, {
  start: 3430,
  length: 10,
  convRule: rule8
}, {
  start: 3440,
  length: 9,
  convRule: rule17
}, {
  start: 3449,
  length: 1,
  convRule: rule13
}, {
  start: 3450,
  length: 6,
  convRule: rule14
}, {
  start: 3457,
  length: 1,
  convRule: rule92
}, {
  start: 3458,
  length: 2,
  convRule: rule124
}, {
  start: 3461,
  length: 18,
  convRule: rule14
}, {
  start: 3482,
  length: 24,
  convRule: rule14
}, {
  start: 3507,
  length: 9,
  convRule: rule14
}, {
  start: 3517,
  length: 1,
  convRule: rule14
}, {
  start: 3520,
  length: 7,
  convRule: rule14
}, {
  start: 3530,
  length: 1,
  convRule: rule92
}, {
  start: 3535,
  length: 3,
  convRule: rule124
}, {
  start: 3538,
  length: 3,
  convRule: rule92
}, {
  start: 3542,
  length: 1,
  convRule: rule92
}, {
  start: 3544,
  length: 8,
  convRule: rule124
}, {
  start: 3558,
  length: 10,
  convRule: rule8
}, {
  start: 3570,
  length: 2,
  convRule: rule124
}, {
  start: 3572,
  length: 1,
  convRule: rule2
}, {
  start: 3585,
  length: 48,
  convRule: rule14
}, {
  start: 3633,
  length: 1,
  convRule: rule92
}, {
  start: 3634,
  length: 2,
  convRule: rule14
}, {
  start: 3636,
  length: 7,
  convRule: rule92
}, {
  start: 3647,
  length: 1,
  convRule: rule3
}, {
  start: 3648,
  length: 6,
  convRule: rule14
}, {
  start: 3654,
  length: 1,
  convRule: rule91
}, {
  start: 3655,
  length: 8,
  convRule: rule92
}, {
  start: 3663,
  length: 1,
  convRule: rule2
}, {
  start: 3664,
  length: 10,
  convRule: rule8
}, {
  start: 3674,
  length: 2,
  convRule: rule2
}, {
  start: 3713,
  length: 2,
  convRule: rule14
}, {
  start: 3716,
  length: 1,
  convRule: rule14
}, {
  start: 3718,
  length: 5,
  convRule: rule14
}, {
  start: 3724,
  length: 24,
  convRule: rule14
}, {
  start: 3749,
  length: 1,
  convRule: rule14
}, {
  start: 3751,
  length: 10,
  convRule: rule14
}, {
  start: 3761,
  length: 1,
  convRule: rule92
}, {
  start: 3762,
  length: 2,
  convRule: rule14
}, {
  start: 3764,
  length: 9,
  convRule: rule92
}, {
  start: 3773,
  length: 1,
  convRule: rule14
}, {
  start: 3776,
  length: 5,
  convRule: rule14
}, {
  start: 3782,
  length: 1,
  convRule: rule91
}, {
  start: 3784,
  length: 6,
  convRule: rule92
}, {
  start: 3792,
  length: 10,
  convRule: rule8
}, {
  start: 3804,
  length: 4,
  convRule: rule14
}, {
  start: 3840,
  length: 1,
  convRule: rule14
}, {
  start: 3841,
  length: 3,
  convRule: rule13
}, {
  start: 3844,
  length: 15,
  convRule: rule2
}, {
  start: 3859,
  length: 1,
  convRule: rule13
}, {
  start: 3860,
  length: 1,
  convRule: rule2
}, {
  start: 3861,
  length: 3,
  convRule: rule13
}, {
  start: 3864,
  length: 2,
  convRule: rule92
}, {
  start: 3866,
  length: 6,
  convRule: rule13
}, {
  start: 3872,
  length: 10,
  convRule: rule8
}, {
  start: 3882,
  length: 10,
  convRule: rule17
}, {
  start: 3892,
  length: 1,
  convRule: rule13
}, {
  start: 3893,
  length: 1,
  convRule: rule92
}, {
  start: 3894,
  length: 1,
  convRule: rule13
}, {
  start: 3895,
  length: 1,
  convRule: rule92
}, {
  start: 3896,
  length: 1,
  convRule: rule13
}, {
  start: 3897,
  length: 1,
  convRule: rule92
}, {
  start: 3898,
  length: 1,
  convRule: rule4
}, {
  start: 3899,
  length: 1,
  convRule: rule5
}, {
  start: 3900,
  length: 1,
  convRule: rule4
}, {
  start: 3901,
  length: 1,
  convRule: rule5
}, {
  start: 3902,
  length: 2,
  convRule: rule124
}, {
  start: 3904,
  length: 8,
  convRule: rule14
}, {
  start: 3913,
  length: 36,
  convRule: rule14
}, {
  start: 3953,
  length: 14,
  convRule: rule92
}, {
  start: 3967,
  length: 1,
  convRule: rule124
}, {
  start: 3968,
  length: 5,
  convRule: rule92
}, {
  start: 3973,
  length: 1,
  convRule: rule2
}, {
  start: 3974,
  length: 2,
  convRule: rule92
}, {
  start: 3976,
  length: 5,
  convRule: rule14
}, {
  start: 3981,
  length: 11,
  convRule: rule92
}, {
  start: 3993,
  length: 36,
  convRule: rule92
}, {
  start: 4030,
  length: 8,
  convRule: rule13
}, {
  start: 4038,
  length: 1,
  convRule: rule92
}, {
  start: 4039,
  length: 6,
  convRule: rule13
}, {
  start: 4046,
  length: 2,
  convRule: rule13
}, {
  start: 4048,
  length: 5,
  convRule: rule2
}, {
  start: 4053,
  length: 4,
  convRule: rule13
}, {
  start: 4057,
  length: 2,
  convRule: rule2
}, {
  start: 4096,
  length: 43,
  convRule: rule14
}, {
  start: 4139,
  length: 2,
  convRule: rule124
}, {
  start: 4141,
  length: 4,
  convRule: rule92
}, {
  start: 4145,
  length: 1,
  convRule: rule124
}, {
  start: 4146,
  length: 6,
  convRule: rule92
}, {
  start: 4152,
  length: 1,
  convRule: rule124
}, {
  start: 4153,
  length: 2,
  convRule: rule92
}, {
  start: 4155,
  length: 2,
  convRule: rule124
}, {
  start: 4157,
  length: 2,
  convRule: rule92
}, {
  start: 4159,
  length: 1,
  convRule: rule14
}, {
  start: 4160,
  length: 10,
  convRule: rule8
}, {
  start: 4170,
  length: 6,
  convRule: rule2
}, {
  start: 4176,
  length: 6,
  convRule: rule14
}, {
  start: 4182,
  length: 2,
  convRule: rule124
}, {
  start: 4184,
  length: 2,
  convRule: rule92
}, {
  start: 4186,
  length: 4,
  convRule: rule14
}, {
  start: 4190,
  length: 3,
  convRule: rule92
}, {
  start: 4193,
  length: 1,
  convRule: rule14
}, {
  start: 4194,
  length: 3,
  convRule: rule124
}, {
  start: 4197,
  length: 2,
  convRule: rule14
}, {
  start: 4199,
  length: 7,
  convRule: rule124
}, {
  start: 4206,
  length: 3,
  convRule: rule14
}, {
  start: 4209,
  length: 4,
  convRule: rule92
}, {
  start: 4213,
  length: 13,
  convRule: rule14
}, {
  start: 4226,
  length: 1,
  convRule: rule92
}, {
  start: 4227,
  length: 2,
  convRule: rule124
}, {
  start: 4229,
  length: 2,
  convRule: rule92
}, {
  start: 4231,
  length: 6,
  convRule: rule124
}, {
  start: 4237,
  length: 1,
  convRule: rule92
}, {
  start: 4238,
  length: 1,
  convRule: rule14
}, {
  start: 4239,
  length: 1,
  convRule: rule124
}, {
  start: 4240,
  length: 10,
  convRule: rule8
}, {
  start: 4250,
  length: 3,
  convRule: rule124
}, {
  start: 4253,
  length: 1,
  convRule: rule92
}, {
  start: 4254,
  length: 2,
  convRule: rule13
}, {
  start: 4256,
  length: 38,
  convRule: rule125
}, {
  start: 4295,
  length: 1,
  convRule: rule125
}, {
  start: 4301,
  length: 1,
  convRule: rule125
}, {
  start: 4304,
  length: 43,
  convRule: rule126
}, {
  start: 4347,
  length: 1,
  convRule: rule2
}, {
  start: 4348,
  length: 1,
  convRule: rule91
}, {
  start: 4349,
  length: 3,
  convRule: rule126
}, {
  start: 4352,
  length: 329,
  convRule: rule14
}, {
  start: 4682,
  length: 4,
  convRule: rule14
}, {
  start: 4688,
  length: 7,
  convRule: rule14
}, {
  start: 4696,
  length: 1,
  convRule: rule14
}, {
  start: 4698,
  length: 4,
  convRule: rule14
}, {
  start: 4704,
  length: 41,
  convRule: rule14
}, {
  start: 4746,
  length: 4,
  convRule: rule14
}, {
  start: 4752,
  length: 33,
  convRule: rule14
}, {
  start: 4786,
  length: 4,
  convRule: rule14
}, {
  start: 4792,
  length: 7,
  convRule: rule14
}, {
  start: 4800,
  length: 1,
  convRule: rule14
}, {
  start: 4802,
  length: 4,
  convRule: rule14
}, {
  start: 4808,
  length: 15,
  convRule: rule14
}, {
  start: 4824,
  length: 57,
  convRule: rule14
}, {
  start: 4882,
  length: 4,
  convRule: rule14
}, {
  start: 4888,
  length: 67,
  convRule: rule14
}, {
  start: 4957,
  length: 3,
  convRule: rule92
}, {
  start: 4960,
  length: 9,
  convRule: rule2
}, {
  start: 4969,
  length: 20,
  convRule: rule17
}, {
  start: 4992,
  length: 16,
  convRule: rule14
}, {
  start: 5008,
  length: 10,
  convRule: rule13
}, {
  start: 5024,
  length: 80,
  convRule: rule127
}, {
  start: 5104,
  length: 6,
  convRule: rule104
}, {
  start: 5112,
  length: 6,
  convRule: rule110
}, {
  start: 5120,
  length: 1,
  convRule: rule7
}, {
  start: 5121,
  length: 620,
  convRule: rule14
}, {
  start: 5741,
  length: 1,
  convRule: rule13
}, {
  start: 5742,
  length: 1,
  convRule: rule2
}, {
  start: 5743,
  length: 17,
  convRule: rule14
}, {
  start: 5760,
  length: 1,
  convRule: rule1
}, {
  start: 5761,
  length: 26,
  convRule: rule14
}, {
  start: 5787,
  length: 1,
  convRule: rule4
}, {
  start: 5788,
  length: 1,
  convRule: rule5
}, {
  start: 5792,
  length: 75,
  convRule: rule14
}, {
  start: 5867,
  length: 3,
  convRule: rule2
}, {
  start: 5870,
  length: 3,
  convRule: rule128
}, {
  start: 5873,
  length: 8,
  convRule: rule14
}, {
  start: 5888,
  length: 13,
  convRule: rule14
}, {
  start: 5902,
  length: 4,
  convRule: rule14
}, {
  start: 5906,
  length: 3,
  convRule: rule92
}, {
  start: 5920,
  length: 18,
  convRule: rule14
}, {
  start: 5938,
  length: 3,
  convRule: rule92
}, {
  start: 5941,
  length: 2,
  convRule: rule2
}, {
  start: 5952,
  length: 18,
  convRule: rule14
}, {
  start: 5970,
  length: 2,
  convRule: rule92
}, {
  start: 5984,
  length: 13,
  convRule: rule14
}, {
  start: 5998,
  length: 3,
  convRule: rule14
}, {
  start: 6002,
  length: 2,
  convRule: rule92
}, {
  start: 6016,
  length: 52,
  convRule: rule14
}, {
  start: 6068,
  length: 2,
  convRule: rule92
}, {
  start: 6070,
  length: 1,
  convRule: rule124
}, {
  start: 6071,
  length: 7,
  convRule: rule92
}, {
  start: 6078,
  length: 8,
  convRule: rule124
}, {
  start: 6086,
  length: 1,
  convRule: rule92
}, {
  start: 6087,
  length: 2,
  convRule: rule124
}, {
  start: 6089,
  length: 11,
  convRule: rule92
}, {
  start: 6100,
  length: 3,
  convRule: rule2
}, {
  start: 6103,
  length: 1,
  convRule: rule91
}, {
  start: 6104,
  length: 3,
  convRule: rule2
}, {
  start: 6107,
  length: 1,
  convRule: rule3
}, {
  start: 6108,
  length: 1,
  convRule: rule14
}, {
  start: 6109,
  length: 1,
  convRule: rule92
}, {
  start: 6112,
  length: 10,
  convRule: rule8
}, {
  start: 6128,
  length: 10,
  convRule: rule17
}, {
  start: 6144,
  length: 6,
  convRule: rule2
}, {
  start: 6150,
  length: 1,
  convRule: rule7
}, {
  start: 6151,
  length: 4,
  convRule: rule2
}, {
  start: 6155,
  length: 3,
  convRule: rule92
}, {
  start: 6158,
  length: 1,
  convRule: rule16
}, {
  start: 6160,
  length: 10,
  convRule: rule8
}, {
  start: 6176,
  length: 35,
  convRule: rule14
}, {
  start: 6211,
  length: 1,
  convRule: rule91
}, {
  start: 6212,
  length: 53,
  convRule: rule14
}, {
  start: 6272,
  length: 5,
  convRule: rule14
}, {
  start: 6277,
  length: 2,
  convRule: rule92
}, {
  start: 6279,
  length: 34,
  convRule: rule14
}, {
  start: 6313,
  length: 1,
  convRule: rule92
}, {
  start: 6314,
  length: 1,
  convRule: rule14
}, {
  start: 6320,
  length: 70,
  convRule: rule14
}, {
  start: 6400,
  length: 31,
  convRule: rule14
}, {
  start: 6432,
  length: 3,
  convRule: rule92
}, {
  start: 6435,
  length: 4,
  convRule: rule124
}, {
  start: 6439,
  length: 2,
  convRule: rule92
}, {
  start: 6441,
  length: 3,
  convRule: rule124
}, {
  start: 6448,
  length: 2,
  convRule: rule124
}, {
  start: 6450,
  length: 1,
  convRule: rule92
}, {
  start: 6451,
  length: 6,
  convRule: rule124
}, {
  start: 6457,
  length: 3,
  convRule: rule92
}, {
  start: 6464,
  length: 1,
  convRule: rule13
}, {
  start: 6468,
  length: 2,
  convRule: rule2
}, {
  start: 6470,
  length: 10,
  convRule: rule8
}, {
  start: 6480,
  length: 30,
  convRule: rule14
}, {
  start: 6512,
  length: 5,
  convRule: rule14
}, {
  start: 6528,
  length: 44,
  convRule: rule14
}, {
  start: 6576,
  length: 26,
  convRule: rule14
}, {
  start: 6608,
  length: 10,
  convRule: rule8
}, {
  start: 6618,
  length: 1,
  convRule: rule17
}, {
  start: 6622,
  length: 34,
  convRule: rule13
}, {
  start: 6656,
  length: 23,
  convRule: rule14
}, {
  start: 6679,
  length: 2,
  convRule: rule92
}, {
  start: 6681,
  length: 2,
  convRule: rule124
}, {
  start: 6683,
  length: 1,
  convRule: rule92
}, {
  start: 6686,
  length: 2,
  convRule: rule2
}, {
  start: 6688,
  length: 53,
  convRule: rule14
}, {
  start: 6741,
  length: 1,
  convRule: rule124
}, {
  start: 6742,
  length: 1,
  convRule: rule92
}, {
  start: 6743,
  length: 1,
  convRule: rule124
}, {
  start: 6744,
  length: 7,
  convRule: rule92
}, {
  start: 6752,
  length: 1,
  convRule: rule92
}, {
  start: 6753,
  length: 1,
  convRule: rule124
}, {
  start: 6754,
  length: 1,
  convRule: rule92
}, {
  start: 6755,
  length: 2,
  convRule: rule124
}, {
  start: 6757,
  length: 8,
  convRule: rule92
}, {
  start: 6765,
  length: 6,
  convRule: rule124
}, {
  start: 6771,
  length: 10,
  convRule: rule92
}, {
  start: 6783,
  length: 1,
  convRule: rule92
}, {
  start: 6784,
  length: 10,
  convRule: rule8
}, {
  start: 6800,
  length: 10,
  convRule: rule8
}, {
  start: 6816,
  length: 7,
  convRule: rule2
}, {
  start: 6823,
  length: 1,
  convRule: rule91
}, {
  start: 6824,
  length: 6,
  convRule: rule2
}, {
  start: 6832,
  length: 14,
  convRule: rule92
}, {
  start: 6846,
  length: 1,
  convRule: rule119
}, {
  start: 6847,
  length: 2,
  convRule: rule92
}, {
  start: 6912,
  length: 4,
  convRule: rule92
}, {
  start: 6916,
  length: 1,
  convRule: rule124
}, {
  start: 6917,
  length: 47,
  convRule: rule14
}, {
  start: 6964,
  length: 1,
  convRule: rule92
}, {
  start: 6965,
  length: 1,
  convRule: rule124
}, {
  start: 6966,
  length: 5,
  convRule: rule92
}, {
  start: 6971,
  length: 1,
  convRule: rule124
}, {
  start: 6972,
  length: 1,
  convRule: rule92
}, {
  start: 6973,
  length: 5,
  convRule: rule124
}, {
  start: 6978,
  length: 1,
  convRule: rule92
}, {
  start: 6979,
  length: 2,
  convRule: rule124
}, {
  start: 6981,
  length: 7,
  convRule: rule14
}, {
  start: 6992,
  length: 10,
  convRule: rule8
}, {
  start: 7002,
  length: 7,
  convRule: rule2
}, {
  start: 7009,
  length: 10,
  convRule: rule13
}, {
  start: 7019,
  length: 9,
  convRule: rule92
}, {
  start: 7028,
  length: 9,
  convRule: rule13
}, {
  start: 7040,
  length: 2,
  convRule: rule92
}, {
  start: 7042,
  length: 1,
  convRule: rule124
}, {
  start: 7043,
  length: 30,
  convRule: rule14
}, {
  start: 7073,
  length: 1,
  convRule: rule124
}, {
  start: 7074,
  length: 4,
  convRule: rule92
}, {
  start: 7078,
  length: 2,
  convRule: rule124
}, {
  start: 7080,
  length: 2,
  convRule: rule92
}, {
  start: 7082,
  length: 1,
  convRule: rule124
}, {
  start: 7083,
  length: 3,
  convRule: rule92
}, {
  start: 7086,
  length: 2,
  convRule: rule14
}, {
  start: 7088,
  length: 10,
  convRule: rule8
}, {
  start: 7098,
  length: 44,
  convRule: rule14
}, {
  start: 7142,
  length: 1,
  convRule: rule92
}, {
  start: 7143,
  length: 1,
  convRule: rule124
}, {
  start: 7144,
  length: 2,
  convRule: rule92
}, {
  start: 7146,
  length: 3,
  convRule: rule124
}, {
  start: 7149,
  length: 1,
  convRule: rule92
}, {
  start: 7150,
  length: 1,
  convRule: rule124
}, {
  start: 7151,
  length: 3,
  convRule: rule92
}, {
  start: 7154,
  length: 2,
  convRule: rule124
}, {
  start: 7164,
  length: 4,
  convRule: rule2
}, {
  start: 7168,
  length: 36,
  convRule: rule14
}, {
  start: 7204,
  length: 8,
  convRule: rule124
}, {
  start: 7212,
  length: 8,
  convRule: rule92
}, {
  start: 7220,
  length: 2,
  convRule: rule124
}, {
  start: 7222,
  length: 2,
  convRule: rule92
}, {
  start: 7227,
  length: 5,
  convRule: rule2
}, {
  start: 7232,
  length: 10,
  convRule: rule8
}, {
  start: 7245,
  length: 3,
  convRule: rule14
}, {
  start: 7248,
  length: 10,
  convRule: rule8
}, {
  start: 7258,
  length: 30,
  convRule: rule14
}, {
  start: 7288,
  length: 6,
  convRule: rule91
}, {
  start: 7294,
  length: 2,
  convRule: rule2
}, {
  start: 7296,
  length: 1,
  convRule: rule129
}, {
  start: 7297,
  length: 1,
  convRule: rule130
}, {
  start: 7298,
  length: 1,
  convRule: rule131
}, {
  start: 7299,
  length: 2,
  convRule: rule132
}, {
  start: 7301,
  length: 1,
  convRule: rule133
}, {
  start: 7302,
  length: 1,
  convRule: rule134
}, {
  start: 7303,
  length: 1,
  convRule: rule135
}, {
  start: 7304,
  length: 1,
  convRule: rule136
}, {
  start: 7312,
  length: 43,
  convRule: rule137
}, {
  start: 7357,
  length: 3,
  convRule: rule137
}, {
  start: 7360,
  length: 8,
  convRule: rule2
}, {
  start: 7376,
  length: 3,
  convRule: rule92
}, {
  start: 7379,
  length: 1,
  convRule: rule2
}, {
  start: 7380,
  length: 13,
  convRule: rule92
}, {
  start: 7393,
  length: 1,
  convRule: rule124
}, {
  start: 7394,
  length: 7,
  convRule: rule92
}, {
  start: 7401,
  length: 4,
  convRule: rule14
}, {
  start: 7405,
  length: 1,
  convRule: rule92
}, {
  start: 7406,
  length: 6,
  convRule: rule14
}, {
  start: 7412,
  length: 1,
  convRule: rule92
}, {
  start: 7413,
  length: 2,
  convRule: rule14
}, {
  start: 7415,
  length: 1,
  convRule: rule124
}, {
  start: 7416,
  length: 2,
  convRule: rule92
}, {
  start: 7418,
  length: 1,
  convRule: rule14
}, {
  start: 7424,
  length: 44,
  convRule: rule20
}, {
  start: 7468,
  length: 63,
  convRule: rule91
}, {
  start: 7531,
  length: 13,
  convRule: rule20
}, {
  start: 7544,
  length: 1,
  convRule: rule91
}, {
  start: 7545,
  length: 1,
  convRule: rule138
}, {
  start: 7546,
  length: 3,
  convRule: rule20
}, {
  start: 7549,
  length: 1,
  convRule: rule139
}, {
  start: 7550,
  length: 16,
  convRule: rule20
}, {
  start: 7566,
  length: 1,
  convRule: rule140
}, {
  start: 7567,
  length: 12,
  convRule: rule20
}, {
  start: 7579,
  length: 37,
  convRule: rule91
}, {
  start: 7616,
  length: 58,
  convRule: rule92
}, {
  start: 7675,
  length: 5,
  convRule: rule92
}, {
  start: 7680,
  length: 1,
  convRule: rule22
}, {
  start: 7681,
  length: 1,
  convRule: rule23
}, {
  start: 7682,
  length: 1,
  convRule: rule22
}, {
  start: 7683,
  length: 1,
  convRule: rule23
}, {
  start: 7684,
  length: 1,
  convRule: rule22
}, {
  start: 7685,
  length: 1,
  convRule: rule23
}, {
  start: 7686,
  length: 1,
  convRule: rule22
}, {
  start: 7687,
  length: 1,
  convRule: rule23
}, {
  start: 7688,
  length: 1,
  convRule: rule22
}, {
  start: 7689,
  length: 1,
  convRule: rule23
}, {
  start: 7690,
  length: 1,
  convRule: rule22
}, {
  start: 7691,
  length: 1,
  convRule: rule23
}, {
  start: 7692,
  length: 1,
  convRule: rule22
}, {
  start: 7693,
  length: 1,
  convRule: rule23
}, {
  start: 7694,
  length: 1,
  convRule: rule22
}, {
  start: 7695,
  length: 1,
  convRule: rule23
}, {
  start: 7696,
  length: 1,
  convRule: rule22
}, {
  start: 7697,
  length: 1,
  convRule: rule23
}, {
  start: 7698,
  length: 1,
  convRule: rule22
}, {
  start: 7699,
  length: 1,
  convRule: rule23
}, {
  start: 7700,
  length: 1,
  convRule: rule22
}, {
  start: 7701,
  length: 1,
  convRule: rule23
}, {
  start: 7702,
  length: 1,
  convRule: rule22
}, {
  start: 7703,
  length: 1,
  convRule: rule23
}, {
  start: 7704,
  length: 1,
  convRule: rule22
}, {
  start: 7705,
  length: 1,
  convRule: rule23
}, {
  start: 7706,
  length: 1,
  convRule: rule22
}, {
  start: 7707,
  length: 1,
  convRule: rule23
}, {
  start: 7708,
  length: 1,
  convRule: rule22
}, {
  start: 7709,
  length: 1,
  convRule: rule23
}, {
  start: 7710,
  length: 1,
  convRule: rule22
}, {
  start: 7711,
  length: 1,
  convRule: rule23
}, {
  start: 7712,
  length: 1,
  convRule: rule22
}, {
  start: 7713,
  length: 1,
  convRule: rule23
}, {
  start: 7714,
  length: 1,
  convRule: rule22
}, {
  start: 7715,
  length: 1,
  convRule: rule23
}, {
  start: 7716,
  length: 1,
  convRule: rule22
}, {
  start: 7717,
  length: 1,
  convRule: rule23
}, {
  start: 7718,
  length: 1,
  convRule: rule22
}, {
  start: 7719,
  length: 1,
  convRule: rule23
}, {
  start: 7720,
  length: 1,
  convRule: rule22
}, {
  start: 7721,
  length: 1,
  convRule: rule23
}, {
  start: 7722,
  length: 1,
  convRule: rule22
}, {
  start: 7723,
  length: 1,
  convRule: rule23
}, {
  start: 7724,
  length: 1,
  convRule: rule22
}, {
  start: 7725,
  length: 1,
  convRule: rule23
}, {
  start: 7726,
  length: 1,
  convRule: rule22
}, {
  start: 7727,
  length: 1,
  convRule: rule23
}, {
  start: 7728,
  length: 1,
  convRule: rule22
}, {
  start: 7729,
  length: 1,
  convRule: rule23
}, {
  start: 7730,
  length: 1,
  convRule: rule22
}, {
  start: 7731,
  length: 1,
  convRule: rule23
}, {
  start: 7732,
  length: 1,
  convRule: rule22
}, {
  start: 7733,
  length: 1,
  convRule: rule23
}, {
  start: 7734,
  length: 1,
  convRule: rule22
}, {
  start: 7735,
  length: 1,
  convRule: rule23
}, {
  start: 7736,
  length: 1,
  convRule: rule22
}, {
  start: 7737,
  length: 1,
  convRule: rule23
}, {
  start: 7738,
  length: 1,
  convRule: rule22
}, {
  start: 7739,
  length: 1,
  convRule: rule23
}, {
  start: 7740,
  length: 1,
  convRule: rule22
}, {
  start: 7741,
  length: 1,
  convRule: rule23
}, {
  start: 7742,
  length: 1,
  convRule: rule22
}, {
  start: 7743,
  length: 1,
  convRule: rule23
}, {
  start: 7744,
  length: 1,
  convRule: rule22
}, {
  start: 7745,
  length: 1,
  convRule: rule23
}, {
  start: 7746,
  length: 1,
  convRule: rule22
}, {
  start: 7747,
  length: 1,
  convRule: rule23
}, {
  start: 7748,
  length: 1,
  convRule: rule22
}, {
  start: 7749,
  length: 1,
  convRule: rule23
}, {
  start: 7750,
  length: 1,
  convRule: rule22
}, {
  start: 7751,
  length: 1,
  convRule: rule23
}, {
  start: 7752,
  length: 1,
  convRule: rule22
}, {
  start: 7753,
  length: 1,
  convRule: rule23
}, {
  start: 7754,
  length: 1,
  convRule: rule22
}, {
  start: 7755,
  length: 1,
  convRule: rule23
}, {
  start: 7756,
  length: 1,
  convRule: rule22
}, {
  start: 7757,
  length: 1,
  convRule: rule23
}, {
  start: 7758,
  length: 1,
  convRule: rule22
}, {
  start: 7759,
  length: 1,
  convRule: rule23
}, {
  start: 7760,
  length: 1,
  convRule: rule22
}, {
  start: 7761,
  length: 1,
  convRule: rule23
}, {
  start: 7762,
  length: 1,
  convRule: rule22
}, {
  start: 7763,
  length: 1,
  convRule: rule23
}, {
  start: 7764,
  length: 1,
  convRule: rule22
}, {
  start: 7765,
  length: 1,
  convRule: rule23
}, {
  start: 7766,
  length: 1,
  convRule: rule22
}, {
  start: 7767,
  length: 1,
  convRule: rule23
}, {
  start: 7768,
  length: 1,
  convRule: rule22
}, {
  start: 7769,
  length: 1,
  convRule: rule23
}, {
  start: 7770,
  length: 1,
  convRule: rule22
}, {
  start: 7771,
  length: 1,
  convRule: rule23
}, {
  start: 7772,
  length: 1,
  convRule: rule22
}, {
  start: 7773,
  length: 1,
  convRule: rule23
}, {
  start: 7774,
  length: 1,
  convRule: rule22
}, {
  start: 7775,
  length: 1,
  convRule: rule23
}, {
  start: 7776,
  length: 1,
  convRule: rule22
}, {
  start: 7777,
  length: 1,
  convRule: rule23
}, {
  start: 7778,
  length: 1,
  convRule: rule22
}, {
  start: 7779,
  length: 1,
  convRule: rule23
}, {
  start: 7780,
  length: 1,
  convRule: rule22
}, {
  start: 7781,
  length: 1,
  convRule: rule23
}, {
  start: 7782,
  length: 1,
  convRule: rule22
}, {
  start: 7783,
  length: 1,
  convRule: rule23
}, {
  start: 7784,
  length: 1,
  convRule: rule22
}, {
  start: 7785,
  length: 1,
  convRule: rule23
}, {
  start: 7786,
  length: 1,
  convRule: rule22
}, {
  start: 7787,
  length: 1,
  convRule: rule23
}, {
  start: 7788,
  length: 1,
  convRule: rule22
}, {
  start: 7789,
  length: 1,
  convRule: rule23
}, {
  start: 7790,
  length: 1,
  convRule: rule22
}, {
  start: 7791,
  length: 1,
  convRule: rule23
}, {
  start: 7792,
  length: 1,
  convRule: rule22
}, {
  start: 7793,
  length: 1,
  convRule: rule23
}, {
  start: 7794,
  length: 1,
  convRule: rule22
}, {
  start: 7795,
  length: 1,
  convRule: rule23
}, {
  start: 7796,
  length: 1,
  convRule: rule22
}, {
  start: 7797,
  length: 1,
  convRule: rule23
}, {
  start: 7798,
  length: 1,
  convRule: rule22
}, {
  start: 7799,
  length: 1,
  convRule: rule23
}, {
  start: 7800,
  length: 1,
  convRule: rule22
}, {
  start: 7801,
  length: 1,
  convRule: rule23
}, {
  start: 7802,
  length: 1,
  convRule: rule22
}, {
  start: 7803,
  length: 1,
  convRule: rule23
}, {
  start: 7804,
  length: 1,
  convRule: rule22
}, {
  start: 7805,
  length: 1,
  convRule: rule23
}, {
  start: 7806,
  length: 1,
  convRule: rule22
}, {
  start: 7807,
  length: 1,
  convRule: rule23
}, {
  start: 7808,
  length: 1,
  convRule: rule22
}, {
  start: 7809,
  length: 1,
  convRule: rule23
}, {
  start: 7810,
  length: 1,
  convRule: rule22
}, {
  start: 7811,
  length: 1,
  convRule: rule23
}, {
  start: 7812,
  length: 1,
  convRule: rule22
}, {
  start: 7813,
  length: 1,
  convRule: rule23
}, {
  start: 7814,
  length: 1,
  convRule: rule22
}, {
  start: 7815,
  length: 1,
  convRule: rule23
}, {
  start: 7816,
  length: 1,
  convRule: rule22
}, {
  start: 7817,
  length: 1,
  convRule: rule23
}, {
  start: 7818,
  length: 1,
  convRule: rule22
}, {
  start: 7819,
  length: 1,
  convRule: rule23
}, {
  start: 7820,
  length: 1,
  convRule: rule22
}, {
  start: 7821,
  length: 1,
  convRule: rule23
}, {
  start: 7822,
  length: 1,
  convRule: rule22
}, {
  start: 7823,
  length: 1,
  convRule: rule23
}, {
  start: 7824,
  length: 1,
  convRule: rule22
}, {
  start: 7825,
  length: 1,
  convRule: rule23
}, {
  start: 7826,
  length: 1,
  convRule: rule22
}, {
  start: 7827,
  length: 1,
  convRule: rule23
}, {
  start: 7828,
  length: 1,
  convRule: rule22
}, {
  start: 7829,
  length: 1,
  convRule: rule23
}, {
  start: 7830,
  length: 5,
  convRule: rule20
}, {
  start: 7835,
  length: 1,
  convRule: rule141
}, {
  start: 7836,
  length: 2,
  convRule: rule20
}, {
  start: 7838,
  length: 1,
  convRule: rule142
}, {
  start: 7839,
  length: 1,
  convRule: rule20
}, {
  start: 7840,
  length: 1,
  convRule: rule22
}, {
  start: 7841,
  length: 1,
  convRule: rule23
}, {
  start: 7842,
  length: 1,
  convRule: rule22
}, {
  start: 7843,
  length: 1,
  convRule: rule23
}, {
  start: 7844,
  length: 1,
  convRule: rule22
}, {
  start: 7845,
  length: 1,
  convRule: rule23
}, {
  start: 7846,
  length: 1,
  convRule: rule22
}, {
  start: 7847,
  length: 1,
  convRule: rule23
}, {
  start: 7848,
  length: 1,
  convRule: rule22
}, {
  start: 7849,
  length: 1,
  convRule: rule23
}, {
  start: 7850,
  length: 1,
  convRule: rule22
}, {
  start: 7851,
  length: 1,
  convRule: rule23
}, {
  start: 7852,
  length: 1,
  convRule: rule22
}, {
  start: 7853,
  length: 1,
  convRule: rule23
}, {
  start: 7854,
  length: 1,
  convRule: rule22
}, {
  start: 7855,
  length: 1,
  convRule: rule23
}, {
  start: 7856,
  length: 1,
  convRule: rule22
}, {
  start: 7857,
  length: 1,
  convRule: rule23
}, {
  start: 7858,
  length: 1,
  convRule: rule22
}, {
  start: 7859,
  length: 1,
  convRule: rule23
}, {
  start: 7860,
  length: 1,
  convRule: rule22
}, {
  start: 7861,
  length: 1,
  convRule: rule23
}, {
  start: 7862,
  length: 1,
  convRule: rule22
}, {
  start: 7863,
  length: 1,
  convRule: rule23
}, {
  start: 7864,
  length: 1,
  convRule: rule22
}, {
  start: 7865,
  length: 1,
  convRule: rule23
}, {
  start: 7866,
  length: 1,
  convRule: rule22
}, {
  start: 7867,
  length: 1,
  convRule: rule23
}, {
  start: 7868,
  length: 1,
  convRule: rule22
}, {
  start: 7869,
  length: 1,
  convRule: rule23
}, {
  start: 7870,
  length: 1,
  convRule: rule22
}, {
  start: 7871,
  length: 1,
  convRule: rule23
}, {
  start: 7872,
  length: 1,
  convRule: rule22
}, {
  start: 7873,
  length: 1,
  convRule: rule23
}, {
  start: 7874,
  length: 1,
  convRule: rule22
}, {
  start: 7875,
  length: 1,
  convRule: rule23
}, {
  start: 7876,
  length: 1,
  convRule: rule22
}, {
  start: 7877,
  length: 1,
  convRule: rule23
}, {
  start: 7878,
  length: 1,
  convRule: rule22
}, {
  start: 7879,
  length: 1,
  convRule: rule23
}, {
  start: 7880,
  length: 1,
  convRule: rule22
}, {
  start: 7881,
  length: 1,
  convRule: rule23
}, {
  start: 7882,
  length: 1,
  convRule: rule22
}, {
  start: 7883,
  length: 1,
  convRule: rule23
}, {
  start: 7884,
  length: 1,
  convRule: rule22
}, {
  start: 7885,
  length: 1,
  convRule: rule23
}, {
  start: 7886,
  length: 1,
  convRule: rule22
}, {
  start: 7887,
  length: 1,
  convRule: rule23
}, {
  start: 7888,
  length: 1,
  convRule: rule22
}, {
  start: 7889,
  length: 1,
  convRule: rule23
}, {
  start: 7890,
  length: 1,
  convRule: rule22
}, {
  start: 7891,
  length: 1,
  convRule: rule23
}, {
  start: 7892,
  length: 1,
  convRule: rule22
}, {
  start: 7893,
  length: 1,
  convRule: rule23
}, {
  start: 7894,
  length: 1,
  convRule: rule22
}, {
  start: 7895,
  length: 1,
  convRule: rule23
}, {
  start: 7896,
  length: 1,
  convRule: rule22
}, {
  start: 7897,
  length: 1,
  convRule: rule23
}, {
  start: 7898,
  length: 1,
  convRule: rule22
}, {
  start: 7899,
  length: 1,
  convRule: rule23
}, {
  start: 7900,
  length: 1,
  convRule: rule22
}, {
  start: 7901,
  length: 1,
  convRule: rule23
}, {
  start: 7902,
  length: 1,
  convRule: rule22
}, {
  start: 7903,
  length: 1,
  convRule: rule23
}, {
  start: 7904,
  length: 1,
  convRule: rule22
}, {
  start: 7905,
  length: 1,
  convRule: rule23
}, {
  start: 7906,
  length: 1,
  convRule: rule22
}, {
  start: 7907,
  length: 1,
  convRule: rule23
}, {
  start: 7908,
  length: 1,
  convRule: rule22
}, {
  start: 7909,
  length: 1,
  convRule: rule23
}, {
  start: 7910,
  length: 1,
  convRule: rule22
}, {
  start: 7911,
  length: 1,
  convRule: rule23
}, {
  start: 7912,
  length: 1,
  convRule: rule22
}, {
  start: 7913,
  length: 1,
  convRule: rule23
}, {
  start: 7914,
  length: 1,
  convRule: rule22
}, {
  start: 7915,
  length: 1,
  convRule: rule23
}, {
  start: 7916,
  length: 1,
  convRule: rule22
}, {
  start: 7917,
  length: 1,
  convRule: rule23
}, {
  start: 7918,
  length: 1,
  convRule: rule22
}, {
  start: 7919,
  length: 1,
  convRule: rule23
}, {
  start: 7920,
  length: 1,
  convRule: rule22
}, {
  start: 7921,
  length: 1,
  convRule: rule23
}, {
  start: 7922,
  length: 1,
  convRule: rule22
}, {
  start: 7923,
  length: 1,
  convRule: rule23
}, {
  start: 7924,
  length: 1,
  convRule: rule22
}, {
  start: 7925,
  length: 1,
  convRule: rule23
}, {
  start: 7926,
  length: 1,
  convRule: rule22
}, {
  start: 7927,
  length: 1,
  convRule: rule23
}, {
  start: 7928,
  length: 1,
  convRule: rule22
}, {
  start: 7929,
  length: 1,
  convRule: rule23
}, {
  start: 7930,
  length: 1,
  convRule: rule22
}, {
  start: 7931,
  length: 1,
  convRule: rule23
}, {
  start: 7932,
  length: 1,
  convRule: rule22
}, {
  start: 7933,
  length: 1,
  convRule: rule23
}, {
  start: 7934,
  length: 1,
  convRule: rule22
}, {
  start: 7935,
  length: 1,
  convRule: rule23
}, {
  start: 7936,
  length: 8,
  convRule: rule143
}, {
  start: 7944,
  length: 8,
  convRule: rule144
}, {
  start: 7952,
  length: 6,
  convRule: rule143
}, {
  start: 7960,
  length: 6,
  convRule: rule144
}, {
  start: 7968,
  length: 8,
  convRule: rule143
}, {
  start: 7976,
  length: 8,
  convRule: rule144
}, {
  start: 7984,
  length: 8,
  convRule: rule143
}, {
  start: 7992,
  length: 8,
  convRule: rule144
}, {
  start: 8e3,
  length: 6,
  convRule: rule143
}, {
  start: 8008,
  length: 6,
  convRule: rule144
}, {
  start: 8016,
  length: 1,
  convRule: rule20
}, {
  start: 8017,
  length: 1,
  convRule: rule143
}, {
  start: 8018,
  length: 1,
  convRule: rule20
}, {
  start: 8019,
  length: 1,
  convRule: rule143
}, {
  start: 8020,
  length: 1,
  convRule: rule20
}, {
  start: 8021,
  length: 1,
  convRule: rule143
}, {
  start: 8022,
  length: 1,
  convRule: rule20
}, {
  start: 8023,
  length: 1,
  convRule: rule143
}, {
  start: 8025,
  length: 1,
  convRule: rule144
}, {
  start: 8027,
  length: 1,
  convRule: rule144
}, {
  start: 8029,
  length: 1,
  convRule: rule144
}, {
  start: 8031,
  length: 1,
  convRule: rule144
}, {
  start: 8032,
  length: 8,
  convRule: rule143
}, {
  start: 8040,
  length: 8,
  convRule: rule144
}, {
  start: 8048,
  length: 2,
  convRule: rule145
}, {
  start: 8050,
  length: 4,
  convRule: rule146
}, {
  start: 8054,
  length: 2,
  convRule: rule147
}, {
  start: 8056,
  length: 2,
  convRule: rule148
}, {
  start: 8058,
  length: 2,
  convRule: rule149
}, {
  start: 8060,
  length: 2,
  convRule: rule150
}, {
  start: 8064,
  length: 8,
  convRule: rule143
}, {
  start: 8072,
  length: 8,
  convRule: rule151
}, {
  start: 8080,
  length: 8,
  convRule: rule143
}, {
  start: 8088,
  length: 8,
  convRule: rule151
}, {
  start: 8096,
  length: 8,
  convRule: rule143
}, {
  start: 8104,
  length: 8,
  convRule: rule151
}, {
  start: 8112,
  length: 2,
  convRule: rule143
}, {
  start: 8114,
  length: 1,
  convRule: rule20
}, {
  start: 8115,
  length: 1,
  convRule: rule152
}, {
  start: 8116,
  length: 1,
  convRule: rule20
}, {
  start: 8118,
  length: 2,
  convRule: rule20
}, {
  start: 8120,
  length: 2,
  convRule: rule144
}, {
  start: 8122,
  length: 2,
  convRule: rule153
}, {
  start: 8124,
  length: 1,
  convRule: rule154
}, {
  start: 8125,
  length: 1,
  convRule: rule10
}, {
  start: 8126,
  length: 1,
  convRule: rule155
}, {
  start: 8127,
  length: 3,
  convRule: rule10
}, {
  start: 8130,
  length: 1,
  convRule: rule20
}, {
  start: 8131,
  length: 1,
  convRule: rule152
}, {
  start: 8132,
  length: 1,
  convRule: rule20
}, {
  start: 8134,
  length: 2,
  convRule: rule20
}, {
  start: 8136,
  length: 4,
  convRule: rule156
}, {
  start: 8140,
  length: 1,
  convRule: rule154
}, {
  start: 8141,
  length: 3,
  convRule: rule10
}, {
  start: 8144,
  length: 2,
  convRule: rule143
}, {
  start: 8146,
  length: 2,
  convRule: rule20
}, {
  start: 8150,
  length: 2,
  convRule: rule20
}, {
  start: 8152,
  length: 2,
  convRule: rule144
}, {
  start: 8154,
  length: 2,
  convRule: rule157
}, {
  start: 8157,
  length: 3,
  convRule: rule10
}, {
  start: 8160,
  length: 2,
  convRule: rule143
}, {
  start: 8162,
  length: 3,
  convRule: rule20
}, {
  start: 8165,
  length: 1,
  convRule: rule113
}, {
  start: 8166,
  length: 2,
  convRule: rule20
}, {
  start: 8168,
  length: 2,
  convRule: rule144
}, {
  start: 8170,
  length: 2,
  convRule: rule158
}, {
  start: 8172,
  length: 1,
  convRule: rule117
}, {
  start: 8173,
  length: 3,
  convRule: rule10
}, {
  start: 8178,
  length: 1,
  convRule: rule20
}, {
  start: 8179,
  length: 1,
  convRule: rule152
}, {
  start: 8180,
  length: 1,
  convRule: rule20
}, {
  start: 8182,
  length: 2,
  convRule: rule20
}, {
  start: 8184,
  length: 2,
  convRule: rule159
}, {
  start: 8186,
  length: 2,
  convRule: rule160
}, {
  start: 8188,
  length: 1,
  convRule: rule154
}, {
  start: 8189,
  length: 2,
  convRule: rule10
}, {
  start: 8192,
  length: 11,
  convRule: rule1
}, {
  start: 8203,
  length: 5,
  convRule: rule16
}, {
  start: 8208,
  length: 6,
  convRule: rule7
}, {
  start: 8214,
  length: 2,
  convRule: rule2
}, {
  start: 8216,
  length: 1,
  convRule: rule15
}, {
  start: 8217,
  length: 1,
  convRule: rule19
}, {
  start: 8218,
  length: 1,
  convRule: rule4
}, {
  start: 8219,
  length: 2,
  convRule: rule15
}, {
  start: 8221,
  length: 1,
  convRule: rule19
}, {
  start: 8222,
  length: 1,
  convRule: rule4
}, {
  start: 8223,
  length: 1,
  convRule: rule15
}, {
  start: 8224,
  length: 8,
  convRule: rule2
}, {
  start: 8232,
  length: 1,
  convRule: rule161
}, {
  start: 8233,
  length: 1,
  convRule: rule162
}, {
  start: 8234,
  length: 5,
  convRule: rule16
}, {
  start: 8239,
  length: 1,
  convRule: rule1
}, {
  start: 8240,
  length: 9,
  convRule: rule2
}, {
  start: 8249,
  length: 1,
  convRule: rule15
}, {
  start: 8250,
  length: 1,
  convRule: rule19
}, {
  start: 8251,
  length: 4,
  convRule: rule2
}, {
  start: 8255,
  length: 2,
  convRule: rule11
}, {
  start: 8257,
  length: 3,
  convRule: rule2
}, {
  start: 8260,
  length: 1,
  convRule: rule6
}, {
  start: 8261,
  length: 1,
  convRule: rule4
}, {
  start: 8262,
  length: 1,
  convRule: rule5
}, {
  start: 8263,
  length: 11,
  convRule: rule2
}, {
  start: 8274,
  length: 1,
  convRule: rule6
}, {
  start: 8275,
  length: 1,
  convRule: rule2
}, {
  start: 8276,
  length: 1,
  convRule: rule11
}, {
  start: 8277,
  length: 10,
  convRule: rule2
}, {
  start: 8287,
  length: 1,
  convRule: rule1
}, {
  start: 8288,
  length: 5,
  convRule: rule16
}, {
  start: 8294,
  length: 10,
  convRule: rule16
}, {
  start: 8304,
  length: 1,
  convRule: rule17
}, {
  start: 8305,
  length: 1,
  convRule: rule91
}, {
  start: 8308,
  length: 6,
  convRule: rule17
}, {
  start: 8314,
  length: 3,
  convRule: rule6
}, {
  start: 8317,
  length: 1,
  convRule: rule4
}, {
  start: 8318,
  length: 1,
  convRule: rule5
}, {
  start: 8319,
  length: 1,
  convRule: rule91
}, {
  start: 8320,
  length: 10,
  convRule: rule17
}, {
  start: 8330,
  length: 3,
  convRule: rule6
}, {
  start: 8333,
  length: 1,
  convRule: rule4
}, {
  start: 8334,
  length: 1,
  convRule: rule5
}, {
  start: 8336,
  length: 13,
  convRule: rule91
}, {
  start: 8352,
  length: 32,
  convRule: rule3
}, {
  start: 8400,
  length: 13,
  convRule: rule92
}, {
  start: 8413,
  length: 4,
  convRule: rule119
}, {
  start: 8417,
  length: 1,
  convRule: rule92
}, {
  start: 8418,
  length: 3,
  convRule: rule119
}, {
  start: 8421,
  length: 12,
  convRule: rule92
}, {
  start: 8448,
  length: 2,
  convRule: rule13
}, {
  start: 8450,
  length: 1,
  convRule: rule107
}, {
  start: 8451,
  length: 4,
  convRule: rule13
}, {
  start: 8455,
  length: 1,
  convRule: rule107
}, {
  start: 8456,
  length: 2,
  convRule: rule13
}, {
  start: 8458,
  length: 1,
  convRule: rule20
}, {
  start: 8459,
  length: 3,
  convRule: rule107
}, {
  start: 8462,
  length: 2,
  convRule: rule20
}, {
  start: 8464,
  length: 3,
  convRule: rule107
}, {
  start: 8467,
  length: 1,
  convRule: rule20
}, {
  start: 8468,
  length: 1,
  convRule: rule13
}, {
  start: 8469,
  length: 1,
  convRule: rule107
}, {
  start: 8470,
  length: 2,
  convRule: rule13
}, {
  start: 8472,
  length: 1,
  convRule: rule6
}, {
  start: 8473,
  length: 5,
  convRule: rule107
}, {
  start: 8478,
  length: 6,
  convRule: rule13
}, {
  start: 8484,
  length: 1,
  convRule: rule107
}, {
  start: 8485,
  length: 1,
  convRule: rule13
}, {
  start: 8486,
  length: 1,
  convRule: rule163
}, {
  start: 8487,
  length: 1,
  convRule: rule13
}, {
  start: 8488,
  length: 1,
  convRule: rule107
}, {
  start: 8489,
  length: 1,
  convRule: rule13
}, {
  start: 8490,
  length: 1,
  convRule: rule164
}, {
  start: 8491,
  length: 1,
  convRule: rule165
}, {
  start: 8492,
  length: 2,
  convRule: rule107
}, {
  start: 8494,
  length: 1,
  convRule: rule13
}, {
  start: 8495,
  length: 1,
  convRule: rule20
}, {
  start: 8496,
  length: 2,
  convRule: rule107
}, {
  start: 8498,
  length: 1,
  convRule: rule166
}, {
  start: 8499,
  length: 1,
  convRule: rule107
}, {
  start: 8500,
  length: 1,
  convRule: rule20
}, {
  start: 8501,
  length: 4,
  convRule: rule14
}, {
  start: 8505,
  length: 1,
  convRule: rule20
}, {
  start: 8506,
  length: 2,
  convRule: rule13
}, {
  start: 8508,
  length: 2,
  convRule: rule20
}, {
  start: 8510,
  length: 2,
  convRule: rule107
}, {
  start: 8512,
  length: 5,
  convRule: rule6
}, {
  start: 8517,
  length: 1,
  convRule: rule107
}, {
  start: 8518,
  length: 4,
  convRule: rule20
}, {
  start: 8522,
  length: 1,
  convRule: rule13
}, {
  start: 8523,
  length: 1,
  convRule: rule6
}, {
  start: 8524,
  length: 2,
  convRule: rule13
}, {
  start: 8526,
  length: 1,
  convRule: rule167
}, {
  start: 8527,
  length: 1,
  convRule: rule13
}, {
  start: 8528,
  length: 16,
  convRule: rule17
}, {
  start: 8544,
  length: 16,
  convRule: rule168
}, {
  start: 8560,
  length: 16,
  convRule: rule169
}, {
  start: 8576,
  length: 3,
  convRule: rule128
}, {
  start: 8579,
  length: 1,
  convRule: rule22
}, {
  start: 8580,
  length: 1,
  convRule: rule23
}, {
  start: 8581,
  length: 4,
  convRule: rule128
}, {
  start: 8585,
  length: 1,
  convRule: rule17
}, {
  start: 8586,
  length: 2,
  convRule: rule13
}, {
  start: 8592,
  length: 5,
  convRule: rule6
}, {
  start: 8597,
  length: 5,
  convRule: rule13
}, {
  start: 8602,
  length: 2,
  convRule: rule6
}, {
  start: 8604,
  length: 4,
  convRule: rule13
}, {
  start: 8608,
  length: 1,
  convRule: rule6
}, {
  start: 8609,
  length: 2,
  convRule: rule13
}, {
  start: 8611,
  length: 1,
  convRule: rule6
}, {
  start: 8612,
  length: 2,
  convRule: rule13
}, {
  start: 8614,
  length: 1,
  convRule: rule6
}, {
  start: 8615,
  length: 7,
  convRule: rule13
}, {
  start: 8622,
  length: 1,
  convRule: rule6
}, {
  start: 8623,
  length: 31,
  convRule: rule13
}, {
  start: 8654,
  length: 2,
  convRule: rule6
}, {
  start: 8656,
  length: 2,
  convRule: rule13
}, {
  start: 8658,
  length: 1,
  convRule: rule6
}, {
  start: 8659,
  length: 1,
  convRule: rule13
}, {
  start: 8660,
  length: 1,
  convRule: rule6
}, {
  start: 8661,
  length: 31,
  convRule: rule13
}, {
  start: 8692,
  length: 268,
  convRule: rule6
}, {
  start: 8960,
  length: 8,
  convRule: rule13
}, {
  start: 8968,
  length: 1,
  convRule: rule4
}, {
  start: 8969,
  length: 1,
  convRule: rule5
}, {
  start: 8970,
  length: 1,
  convRule: rule4
}, {
  start: 8971,
  length: 1,
  convRule: rule5
}, {
  start: 8972,
  length: 20,
  convRule: rule13
}, {
  start: 8992,
  length: 2,
  convRule: rule6
}, {
  start: 8994,
  length: 7,
  convRule: rule13
}, {
  start: 9001,
  length: 1,
  convRule: rule4
}, {
  start: 9002,
  length: 1,
  convRule: rule5
}, {
  start: 9003,
  length: 81,
  convRule: rule13
}, {
  start: 9084,
  length: 1,
  convRule: rule6
}, {
  start: 9085,
  length: 30,
  convRule: rule13
}, {
  start: 9115,
  length: 25,
  convRule: rule6
}, {
  start: 9140,
  length: 40,
  convRule: rule13
}, {
  start: 9180,
  length: 6,
  convRule: rule6
}, {
  start: 9186,
  length: 69,
  convRule: rule13
}, {
  start: 9280,
  length: 11,
  convRule: rule13
}, {
  start: 9312,
  length: 60,
  convRule: rule17
}, {
  start: 9372,
  length: 26,
  convRule: rule13
}, {
  start: 9398,
  length: 26,
  convRule: rule170
}, {
  start: 9424,
  length: 26,
  convRule: rule171
}, {
  start: 9450,
  length: 22,
  convRule: rule17
}, {
  start: 9472,
  length: 183,
  convRule: rule13
}, {
  start: 9655,
  length: 1,
  convRule: rule6
}, {
  start: 9656,
  length: 9,
  convRule: rule13
}, {
  start: 9665,
  length: 1,
  convRule: rule6
}, {
  start: 9666,
  length: 54,
  convRule: rule13
}, {
  start: 9720,
  length: 8,
  convRule: rule6
}, {
  start: 9728,
  length: 111,
  convRule: rule13
}, {
  start: 9839,
  length: 1,
  convRule: rule6
}, {
  start: 9840,
  length: 248,
  convRule: rule13
}, {
  start: 10088,
  length: 1,
  convRule: rule4
}, {
  start: 10089,
  length: 1,
  convRule: rule5
}, {
  start: 10090,
  length: 1,
  convRule: rule4
}, {
  start: 10091,
  length: 1,
  convRule: rule5
}, {
  start: 10092,
  length: 1,
  convRule: rule4
}, {
  start: 10093,
  length: 1,
  convRule: rule5
}, {
  start: 10094,
  length: 1,
  convRule: rule4
}, {
  start: 10095,
  length: 1,
  convRule: rule5
}, {
  start: 10096,
  length: 1,
  convRule: rule4
}, {
  start: 10097,
  length: 1,
  convRule: rule5
}, {
  start: 10098,
  length: 1,
  convRule: rule4
}, {
  start: 10099,
  length: 1,
  convRule: rule5
}, {
  start: 10100,
  length: 1,
  convRule: rule4
}, {
  start: 10101,
  length: 1,
  convRule: rule5
}, {
  start: 10102,
  length: 30,
  convRule: rule17
}, {
  start: 10132,
  length: 44,
  convRule: rule13
}, {
  start: 10176,
  length: 5,
  convRule: rule6
}, {
  start: 10181,
  length: 1,
  convRule: rule4
}, {
  start: 10182,
  length: 1,
  convRule: rule5
}, {
  start: 10183,
  length: 31,
  convRule: rule6
}, {
  start: 10214,
  length: 1,
  convRule: rule4
}, {
  start: 10215,
  length: 1,
  convRule: rule5
}, {
  start: 10216,
  length: 1,
  convRule: rule4
}, {
  start: 10217,
  length: 1,
  convRule: rule5
}, {
  start: 10218,
  length: 1,
  convRule: rule4
}, {
  start: 10219,
  length: 1,
  convRule: rule5
}, {
  start: 10220,
  length: 1,
  convRule: rule4
}, {
  start: 10221,
  length: 1,
  convRule: rule5
}, {
  start: 10222,
  length: 1,
  convRule: rule4
}, {
  start: 10223,
  length: 1,
  convRule: rule5
}, {
  start: 10224,
  length: 16,
  convRule: rule6
}, {
  start: 10240,
  length: 256,
  convRule: rule13
}, {
  start: 10496,
  length: 131,
  convRule: rule6
}, {
  start: 10627,
  length: 1,
  convRule: rule4
}, {
  start: 10628,
  length: 1,
  convRule: rule5
}, {
  start: 10629,
  length: 1,
  convRule: rule4
}, {
  start: 10630,
  length: 1,
  convRule: rule5
}, {
  start: 10631,
  length: 1,
  convRule: rule4
}, {
  start: 10632,
  length: 1,
  convRule: rule5
}, {
  start: 10633,
  length: 1,
  convRule: rule4
}, {
  start: 10634,
  length: 1,
  convRule: rule5
}, {
  start: 10635,
  length: 1,
  convRule: rule4
}, {
  start: 10636,
  length: 1,
  convRule: rule5
}, {
  start: 10637,
  length: 1,
  convRule: rule4
}, {
  start: 10638,
  length: 1,
  convRule: rule5
}, {
  start: 10639,
  length: 1,
  convRule: rule4
}, {
  start: 10640,
  length: 1,
  convRule: rule5
}, {
  start: 10641,
  length: 1,
  convRule: rule4
}, {
  start: 10642,
  length: 1,
  convRule: rule5
}, {
  start: 10643,
  length: 1,
  convRule: rule4
}, {
  start: 10644,
  length: 1,
  convRule: rule5
}, {
  start: 10645,
  length: 1,
  convRule: rule4
}, {
  start: 10646,
  length: 1,
  convRule: rule5
}, {
  start: 10647,
  length: 1,
  convRule: rule4
}, {
  start: 10648,
  length: 1,
  convRule: rule5
}, {
  start: 10649,
  length: 63,
  convRule: rule6
}, {
  start: 10712,
  length: 1,
  convRule: rule4
}, {
  start: 10713,
  length: 1,
  convRule: rule5
}, {
  start: 10714,
  length: 1,
  convRule: rule4
}, {
  start: 10715,
  length: 1,
  convRule: rule5
}, {
  start: 10716,
  length: 32,
  convRule: rule6
}, {
  start: 10748,
  length: 1,
  convRule: rule4
}, {
  start: 10749,
  length: 1,
  convRule: rule5
}, {
  start: 10750,
  length: 258,
  convRule: rule6
}, {
  start: 11008,
  length: 48,
  convRule: rule13
}, {
  start: 11056,
  length: 21,
  convRule: rule6
}, {
  start: 11077,
  length: 2,
  convRule: rule13
}, {
  start: 11079,
  length: 6,
  convRule: rule6
}, {
  start: 11085,
  length: 39,
  convRule: rule13
}, {
  start: 11126,
  length: 32,
  convRule: rule13
}, {
  start: 11159,
  length: 105,
  convRule: rule13
}, {
  start: 11264,
  length: 47,
  convRule: rule122
}, {
  start: 11312,
  length: 47,
  convRule: rule123
}, {
  start: 11360,
  length: 1,
  convRule: rule22
}, {
  start: 11361,
  length: 1,
  convRule: rule23
}, {
  start: 11362,
  length: 1,
  convRule: rule172
}, {
  start: 11363,
  length: 1,
  convRule: rule173
}, {
  start: 11364,
  length: 1,
  convRule: rule174
}, {
  start: 11365,
  length: 1,
  convRule: rule175
}, {
  start: 11366,
  length: 1,
  convRule: rule176
}, {
  start: 11367,
  length: 1,
  convRule: rule22
}, {
  start: 11368,
  length: 1,
  convRule: rule23
}, {
  start: 11369,
  length: 1,
  convRule: rule22
}, {
  start: 11370,
  length: 1,
  convRule: rule23
}, {
  start: 11371,
  length: 1,
  convRule: rule22
}, {
  start: 11372,
  length: 1,
  convRule: rule23
}, {
  start: 11373,
  length: 1,
  convRule: rule177
}, {
  start: 11374,
  length: 1,
  convRule: rule178
}, {
  start: 11375,
  length: 1,
  convRule: rule179
}, {
  start: 11376,
  length: 1,
  convRule: rule180
}, {
  start: 11377,
  length: 1,
  convRule: rule20
}, {
  start: 11378,
  length: 1,
  convRule: rule22
}, {
  start: 11379,
  length: 1,
  convRule: rule23
}, {
  start: 11380,
  length: 1,
  convRule: rule20
}, {
  start: 11381,
  length: 1,
  convRule: rule22
}, {
  start: 11382,
  length: 1,
  convRule: rule23
}, {
  start: 11383,
  length: 5,
  convRule: rule20
}, {
  start: 11388,
  length: 2,
  convRule: rule91
}, {
  start: 11390,
  length: 2,
  convRule: rule181
}, {
  start: 11392,
  length: 1,
  convRule: rule22
}, {
  start: 11393,
  length: 1,
  convRule: rule23
}, {
  start: 11394,
  length: 1,
  convRule: rule22
}, {
  start: 11395,
  length: 1,
  convRule: rule23
}, {
  start: 11396,
  length: 1,
  convRule: rule22
}, {
  start: 11397,
  length: 1,
  convRule: rule23
}, {
  start: 11398,
  length: 1,
  convRule: rule22
}, {
  start: 11399,
  length: 1,
  convRule: rule23
}, {
  start: 11400,
  length: 1,
  convRule: rule22
}, {
  start: 11401,
  length: 1,
  convRule: rule23
}, {
  start: 11402,
  length: 1,
  convRule: rule22
}, {
  start: 11403,
  length: 1,
  convRule: rule23
}, {
  start: 11404,
  length: 1,
  convRule: rule22
}, {
  start: 11405,
  length: 1,
  convRule: rule23
}, {
  start: 11406,
  length: 1,
  convRule: rule22
}, {
  start: 11407,
  length: 1,
  convRule: rule23
}, {
  start: 11408,
  length: 1,
  convRule: rule22
}, {
  start: 11409,
  length: 1,
  convRule: rule23
}, {
  start: 11410,
  length: 1,
  convRule: rule22
}, {
  start: 11411,
  length: 1,
  convRule: rule23
}, {
  start: 11412,
  length: 1,
  convRule: rule22
}, {
  start: 11413,
  length: 1,
  convRule: rule23
}, {
  start: 11414,
  length: 1,
  convRule: rule22
}, {
  start: 11415,
  length: 1,
  convRule: rule23
}, {
  start: 11416,
  length: 1,
  convRule: rule22
}, {
  start: 11417,
  length: 1,
  convRule: rule23
}, {
  start: 11418,
  length: 1,
  convRule: rule22
}, {
  start: 11419,
  length: 1,
  convRule: rule23
}, {
  start: 11420,
  length: 1,
  convRule: rule22
}, {
  start: 11421,
  length: 1,
  convRule: rule23
}, {
  start: 11422,
  length: 1,
  convRule: rule22
}, {
  start: 11423,
  length: 1,
  convRule: rule23
}, {
  start: 11424,
  length: 1,
  convRule: rule22
}, {
  start: 11425,
  length: 1,
  convRule: rule23
}, {
  start: 11426,
  length: 1,
  convRule: rule22
}, {
  start: 11427,
  length: 1,
  convRule: rule23
}, {
  start: 11428,
  length: 1,
  convRule: rule22
}, {
  start: 11429,
  length: 1,
  convRule: rule23
}, {
  start: 11430,
  length: 1,
  convRule: rule22
}, {
  start: 11431,
  length: 1,
  convRule: rule23
}, {
  start: 11432,
  length: 1,
  convRule: rule22
}, {
  start: 11433,
  length: 1,
  convRule: rule23
}, {
  start: 11434,
  length: 1,
  convRule: rule22
}, {
  start: 11435,
  length: 1,
  convRule: rule23
}, {
  start: 11436,
  length: 1,
  convRule: rule22
}, {
  start: 11437,
  length: 1,
  convRule: rule23
}, {
  start: 11438,
  length: 1,
  convRule: rule22
}, {
  start: 11439,
  length: 1,
  convRule: rule23
}, {
  start: 11440,
  length: 1,
  convRule: rule22
}, {
  start: 11441,
  length: 1,
  convRule: rule23
}, {
  start: 11442,
  length: 1,
  convRule: rule22
}, {
  start: 11443,
  length: 1,
  convRule: rule23
}, {
  start: 11444,
  length: 1,
  convRule: rule22
}, {
  start: 11445,
  length: 1,
  convRule: rule23
}, {
  start: 11446,
  length: 1,
  convRule: rule22
}, {
  start: 11447,
  length: 1,
  convRule: rule23
}, {
  start: 11448,
  length: 1,
  convRule: rule22
}, {
  start: 11449,
  length: 1,
  convRule: rule23
}, {
  start: 11450,
  length: 1,
  convRule: rule22
}, {
  start: 11451,
  length: 1,
  convRule: rule23
}, {
  start: 11452,
  length: 1,
  convRule: rule22
}, {
  start: 11453,
  length: 1,
  convRule: rule23
}, {
  start: 11454,
  length: 1,
  convRule: rule22
}, {
  start: 11455,
  length: 1,
  convRule: rule23
}, {
  start: 11456,
  length: 1,
  convRule: rule22
}, {
  start: 11457,
  length: 1,
  convRule: rule23
}, {
  start: 11458,
  length: 1,
  convRule: rule22
}, {
  start: 11459,
  length: 1,
  convRule: rule23
}, {
  start: 11460,
  length: 1,
  convRule: rule22
}, {
  start: 11461,
  length: 1,
  convRule: rule23
}, {
  start: 11462,
  length: 1,
  convRule: rule22
}, {
  start: 11463,
  length: 1,
  convRule: rule23
}, {
  start: 11464,
  length: 1,
  convRule: rule22
}, {
  start: 11465,
  length: 1,
  convRule: rule23
}, {
  start: 11466,
  length: 1,
  convRule: rule22
}, {
  start: 11467,
  length: 1,
  convRule: rule23
}, {
  start: 11468,
  length: 1,
  convRule: rule22
}, {
  start: 11469,
  length: 1,
  convRule: rule23
}, {
  start: 11470,
  length: 1,
  convRule: rule22
}, {
  start: 11471,
  length: 1,
  convRule: rule23
}, {
  start: 11472,
  length: 1,
  convRule: rule22
}, {
  start: 11473,
  length: 1,
  convRule: rule23
}, {
  start: 11474,
  length: 1,
  convRule: rule22
}, {
  start: 11475,
  length: 1,
  convRule: rule23
}, {
  start: 11476,
  length: 1,
  convRule: rule22
}, {
  start: 11477,
  length: 1,
  convRule: rule23
}, {
  start: 11478,
  length: 1,
  convRule: rule22
}, {
  start: 11479,
  length: 1,
  convRule: rule23
}, {
  start: 11480,
  length: 1,
  convRule: rule22
}, {
  start: 11481,
  length: 1,
  convRule: rule23
}, {
  start: 11482,
  length: 1,
  convRule: rule22
}, {
  start: 11483,
  length: 1,
  convRule: rule23
}, {
  start: 11484,
  length: 1,
  convRule: rule22
}, {
  start: 11485,
  length: 1,
  convRule: rule23
}, {
  start: 11486,
  length: 1,
  convRule: rule22
}, {
  start: 11487,
  length: 1,
  convRule: rule23
}, {
  start: 11488,
  length: 1,
  convRule: rule22
}, {
  start: 11489,
  length: 1,
  convRule: rule23
}, {
  start: 11490,
  length: 1,
  convRule: rule22
}, {
  start: 11491,
  length: 1,
  convRule: rule23
}, {
  start: 11492,
  length: 1,
  convRule: rule20
}, {
  start: 11493,
  length: 6,
  convRule: rule13
}, {
  start: 11499,
  length: 1,
  convRule: rule22
}, {
  start: 11500,
  length: 1,
  convRule: rule23
}, {
  start: 11501,
  length: 1,
  convRule: rule22
}, {
  start: 11502,
  length: 1,
  convRule: rule23
}, {
  start: 11503,
  length: 3,
  convRule: rule92
}, {
  start: 11506,
  length: 1,
  convRule: rule22
}, {
  start: 11507,
  length: 1,
  convRule: rule23
}, {
  start: 11513,
  length: 4,
  convRule: rule2
}, {
  start: 11517,
  length: 1,
  convRule: rule17
}, {
  start: 11518,
  length: 2,
  convRule: rule2
}, {
  start: 11520,
  length: 38,
  convRule: rule182
}, {
  start: 11559,
  length: 1,
  convRule: rule182
}, {
  start: 11565,
  length: 1,
  convRule: rule182
}, {
  start: 11568,
  length: 56,
  convRule: rule14
}, {
  start: 11631,
  length: 1,
  convRule: rule91
}, {
  start: 11632,
  length: 1,
  convRule: rule2
}, {
  start: 11647,
  length: 1,
  convRule: rule92
}, {
  start: 11648,
  length: 23,
  convRule: rule14
}, {
  start: 11680,
  length: 7,
  convRule: rule14
}, {
  start: 11688,
  length: 7,
  convRule: rule14
}, {
  start: 11696,
  length: 7,
  convRule: rule14
}, {
  start: 11704,
  length: 7,
  convRule: rule14
}, {
  start: 11712,
  length: 7,
  convRule: rule14
}, {
  start: 11720,
  length: 7,
  convRule: rule14
}, {
  start: 11728,
  length: 7,
  convRule: rule14
}, {
  start: 11736,
  length: 7,
  convRule: rule14
}, {
  start: 11744,
  length: 32,
  convRule: rule92
}, {
  start: 11776,
  length: 2,
  convRule: rule2
}, {
  start: 11778,
  length: 1,
  convRule: rule15
}, {
  start: 11779,
  length: 1,
  convRule: rule19
}, {
  start: 11780,
  length: 1,
  convRule: rule15
}, {
  start: 11781,
  length: 1,
  convRule: rule19
}, {
  start: 11782,
  length: 3,
  convRule: rule2
}, {
  start: 11785,
  length: 1,
  convRule: rule15
}, {
  start: 11786,
  length: 1,
  convRule: rule19
}, {
  start: 11787,
  length: 1,
  convRule: rule2
}, {
  start: 11788,
  length: 1,
  convRule: rule15
}, {
  start: 11789,
  length: 1,
  convRule: rule19
}, {
  start: 11790,
  length: 9,
  convRule: rule2
}, {
  start: 11799,
  length: 1,
  convRule: rule7
}, {
  start: 11800,
  length: 2,
  convRule: rule2
}, {
  start: 11802,
  length: 1,
  convRule: rule7
}, {
  start: 11803,
  length: 1,
  convRule: rule2
}, {
  start: 11804,
  length: 1,
  convRule: rule15
}, {
  start: 11805,
  length: 1,
  convRule: rule19
}, {
  start: 11806,
  length: 2,
  convRule: rule2
}, {
  start: 11808,
  length: 1,
  convRule: rule15
}, {
  start: 11809,
  length: 1,
  convRule: rule19
}, {
  start: 11810,
  length: 1,
  convRule: rule4
}, {
  start: 11811,
  length: 1,
  convRule: rule5
}, {
  start: 11812,
  length: 1,
  convRule: rule4
}, {
  start: 11813,
  length: 1,
  convRule: rule5
}, {
  start: 11814,
  length: 1,
  convRule: rule4
}, {
  start: 11815,
  length: 1,
  convRule: rule5
}, {
  start: 11816,
  length: 1,
  convRule: rule4
}, {
  start: 11817,
  length: 1,
  convRule: rule5
}, {
  start: 11818,
  length: 5,
  convRule: rule2
}, {
  start: 11823,
  length: 1,
  convRule: rule91
}, {
  start: 11824,
  length: 10,
  convRule: rule2
}, {
  start: 11834,
  length: 2,
  convRule: rule7
}, {
  start: 11836,
  length: 4,
  convRule: rule2
}, {
  start: 11840,
  length: 1,
  convRule: rule7
}, {
  start: 11841,
  length: 1,
  convRule: rule2
}, {
  start: 11842,
  length: 1,
  convRule: rule4
}, {
  start: 11843,
  length: 13,
  convRule: rule2
}, {
  start: 11856,
  length: 2,
  convRule: rule13
}, {
  start: 11858,
  length: 1,
  convRule: rule2
}, {
  start: 11904,
  length: 26,
  convRule: rule13
}, {
  start: 11931,
  length: 89,
  convRule: rule13
}, {
  start: 12032,
  length: 214,
  convRule: rule13
}, {
  start: 12272,
  length: 12,
  convRule: rule13
}, {
  start: 12288,
  length: 1,
  convRule: rule1
}, {
  start: 12289,
  length: 3,
  convRule: rule2
}, {
  start: 12292,
  length: 1,
  convRule: rule13
}, {
  start: 12293,
  length: 1,
  convRule: rule91
}, {
  start: 12294,
  length: 1,
  convRule: rule14
}, {
  start: 12295,
  length: 1,
  convRule: rule128
}, {
  start: 12296,
  length: 1,
  convRule: rule4
}, {
  start: 12297,
  length: 1,
  convRule: rule5
}, {
  start: 12298,
  length: 1,
  convRule: rule4
}, {
  start: 12299,
  length: 1,
  convRule: rule5
}, {
  start: 12300,
  length: 1,
  convRule: rule4
}, {
  start: 12301,
  length: 1,
  convRule: rule5
}, {
  start: 12302,
  length: 1,
  convRule: rule4
}, {
  start: 12303,
  length: 1,
  convRule: rule5
}, {
  start: 12304,
  length: 1,
  convRule: rule4
}, {
  start: 12305,
  length: 1,
  convRule: rule5
}, {
  start: 12306,
  length: 2,
  convRule: rule13
}, {
  start: 12308,
  length: 1,
  convRule: rule4
}, {
  start: 12309,
  length: 1,
  convRule: rule5
}, {
  start: 12310,
  length: 1,
  convRule: rule4
}, {
  start: 12311,
  length: 1,
  convRule: rule5
}, {
  start: 12312,
  length: 1,
  convRule: rule4
}, {
  start: 12313,
  length: 1,
  convRule: rule5
}, {
  start: 12314,
  length: 1,
  convRule: rule4
}, {
  start: 12315,
  length: 1,
  convRule: rule5
}, {
  start: 12316,
  length: 1,
  convRule: rule7
}, {
  start: 12317,
  length: 1,
  convRule: rule4
}, {
  start: 12318,
  length: 2,
  convRule: rule5
}, {
  start: 12320,
  length: 1,
  convRule: rule13
}, {
  start: 12321,
  length: 9,
  convRule: rule128
}, {
  start: 12330,
  length: 4,
  convRule: rule92
}, {
  start: 12334,
  length: 2,
  convRule: rule124
}, {
  start: 12336,
  length: 1,
  convRule: rule7
}, {
  start: 12337,
  length: 5,
  convRule: rule91
}, {
  start: 12342,
  length: 2,
  convRule: rule13
}, {
  start: 12344,
  length: 3,
  convRule: rule128
}, {
  start: 12347,
  length: 1,
  convRule: rule91
}, {
  start: 12348,
  length: 1,
  convRule: rule14
}, {
  start: 12349,
  length: 1,
  convRule: rule2
}, {
  start: 12350,
  length: 2,
  convRule: rule13
}, {
  start: 12353,
  length: 86,
  convRule: rule14
}, {
  start: 12441,
  length: 2,
  convRule: rule92
}, {
  start: 12443,
  length: 2,
  convRule: rule10
}, {
  start: 12445,
  length: 2,
  convRule: rule91
}, {
  start: 12447,
  length: 1,
  convRule: rule14
}, {
  start: 12448,
  length: 1,
  convRule: rule7
}, {
  start: 12449,
  length: 90,
  convRule: rule14
}, {
  start: 12539,
  length: 1,
  convRule: rule2
}, {
  start: 12540,
  length: 3,
  convRule: rule91
}, {
  start: 12543,
  length: 1,
  convRule: rule14
}, {
  start: 12549,
  length: 43,
  convRule: rule14
}, {
  start: 12593,
  length: 94,
  convRule: rule14
}, {
  start: 12688,
  length: 2,
  convRule: rule13
}, {
  start: 12690,
  length: 4,
  convRule: rule17
}, {
  start: 12694,
  length: 10,
  convRule: rule13
}, {
  start: 12704,
  length: 32,
  convRule: rule14
}, {
  start: 12736,
  length: 36,
  convRule: rule13
}, {
  start: 12784,
  length: 16,
  convRule: rule14
}, {
  start: 12800,
  length: 31,
  convRule: rule13
}, {
  start: 12832,
  length: 10,
  convRule: rule17
}, {
  start: 12842,
  length: 30,
  convRule: rule13
}, {
  start: 12872,
  length: 8,
  convRule: rule17
}, {
  start: 12880,
  length: 1,
  convRule: rule13
}, {
  start: 12881,
  length: 15,
  convRule: rule17
}, {
  start: 12896,
  length: 32,
  convRule: rule13
}, {
  start: 12928,
  length: 10,
  convRule: rule17
}, {
  start: 12938,
  length: 39,
  convRule: rule13
}, {
  start: 12977,
  length: 15,
  convRule: rule17
}, {
  start: 12992,
  length: 320,
  convRule: rule13
}, {
  start: 13312,
  length: 6592,
  convRule: rule14
}, {
  start: 19904,
  length: 64,
  convRule: rule13
}, {
  start: 19968,
  length: 20989,
  convRule: rule14
}, {
  start: 40960,
  length: 21,
  convRule: rule14
}, {
  start: 40981,
  length: 1,
  convRule: rule91
}, {
  start: 40982,
  length: 1143,
  convRule: rule14
}, {
  start: 42128,
  length: 55,
  convRule: rule13
}, {
  start: 42192,
  length: 40,
  convRule: rule14
}, {
  start: 42232,
  length: 6,
  convRule: rule91
}, {
  start: 42238,
  length: 2,
  convRule: rule2
}, {
  start: 42240,
  length: 268,
  convRule: rule14
}, {
  start: 42508,
  length: 1,
  convRule: rule91
}, {
  start: 42509,
  length: 3,
  convRule: rule2
}, {
  start: 42512,
  length: 16,
  convRule: rule14
}, {
  start: 42528,
  length: 10,
  convRule: rule8
}, {
  start: 42538,
  length: 2,
  convRule: rule14
}, {
  start: 42560,
  length: 1,
  convRule: rule22
}, {
  start: 42561,
  length: 1,
  convRule: rule23
}, {
  start: 42562,
  length: 1,
  convRule: rule22
}, {
  start: 42563,
  length: 1,
  convRule: rule23
}, {
  start: 42564,
  length: 1,
  convRule: rule22
}, {
  start: 42565,
  length: 1,
  convRule: rule23
}, {
  start: 42566,
  length: 1,
  convRule: rule22
}, {
  start: 42567,
  length: 1,
  convRule: rule23
}, {
  start: 42568,
  length: 1,
  convRule: rule22
}, {
  start: 42569,
  length: 1,
  convRule: rule23
}, {
  start: 42570,
  length: 1,
  convRule: rule22
}, {
  start: 42571,
  length: 1,
  convRule: rule23
}, {
  start: 42572,
  length: 1,
  convRule: rule22
}, {
  start: 42573,
  length: 1,
  convRule: rule23
}, {
  start: 42574,
  length: 1,
  convRule: rule22
}, {
  start: 42575,
  length: 1,
  convRule: rule23
}, {
  start: 42576,
  length: 1,
  convRule: rule22
}, {
  start: 42577,
  length: 1,
  convRule: rule23
}, {
  start: 42578,
  length: 1,
  convRule: rule22
}, {
  start: 42579,
  length: 1,
  convRule: rule23
}, {
  start: 42580,
  length: 1,
  convRule: rule22
}, {
  start: 42581,
  length: 1,
  convRule: rule23
}, {
  start: 42582,
  length: 1,
  convRule: rule22
}, {
  start: 42583,
  length: 1,
  convRule: rule23
}, {
  start: 42584,
  length: 1,
  convRule: rule22
}, {
  start: 42585,
  length: 1,
  convRule: rule23
}, {
  start: 42586,
  length: 1,
  convRule: rule22
}, {
  start: 42587,
  length: 1,
  convRule: rule23
}, {
  start: 42588,
  length: 1,
  convRule: rule22
}, {
  start: 42589,
  length: 1,
  convRule: rule23
}, {
  start: 42590,
  length: 1,
  convRule: rule22
}, {
  start: 42591,
  length: 1,
  convRule: rule23
}, {
  start: 42592,
  length: 1,
  convRule: rule22
}, {
  start: 42593,
  length: 1,
  convRule: rule23
}, {
  start: 42594,
  length: 1,
  convRule: rule22
}, {
  start: 42595,
  length: 1,
  convRule: rule23
}, {
  start: 42596,
  length: 1,
  convRule: rule22
}, {
  start: 42597,
  length: 1,
  convRule: rule23
}, {
  start: 42598,
  length: 1,
  convRule: rule22
}, {
  start: 42599,
  length: 1,
  convRule: rule23
}, {
  start: 42600,
  length: 1,
  convRule: rule22
}, {
  start: 42601,
  length: 1,
  convRule: rule23
}, {
  start: 42602,
  length: 1,
  convRule: rule22
}, {
  start: 42603,
  length: 1,
  convRule: rule23
}, {
  start: 42604,
  length: 1,
  convRule: rule22
}, {
  start: 42605,
  length: 1,
  convRule: rule23
}, {
  start: 42606,
  length: 1,
  convRule: rule14
}, {
  start: 42607,
  length: 1,
  convRule: rule92
}, {
  start: 42608,
  length: 3,
  convRule: rule119
}, {
  start: 42611,
  length: 1,
  convRule: rule2
}, {
  start: 42612,
  length: 10,
  convRule: rule92
}, {
  start: 42622,
  length: 1,
  convRule: rule2
}, {
  start: 42623,
  length: 1,
  convRule: rule91
}, {
  start: 42624,
  length: 1,
  convRule: rule22
}, {
  start: 42625,
  length: 1,
  convRule: rule23
}, {
  start: 42626,
  length: 1,
  convRule: rule22
}, {
  start: 42627,
  length: 1,
  convRule: rule23
}, {
  start: 42628,
  length: 1,
  convRule: rule22
}, {
  start: 42629,
  length: 1,
  convRule: rule23
}, {
  start: 42630,
  length: 1,
  convRule: rule22
}, {
  start: 42631,
  length: 1,
  convRule: rule23
}, {
  start: 42632,
  length: 1,
  convRule: rule22
}, {
  start: 42633,
  length: 1,
  convRule: rule23
}, {
  start: 42634,
  length: 1,
  convRule: rule22
}, {
  start: 42635,
  length: 1,
  convRule: rule23
}, {
  start: 42636,
  length: 1,
  convRule: rule22
}, {
  start: 42637,
  length: 1,
  convRule: rule23
}, {
  start: 42638,
  length: 1,
  convRule: rule22
}, {
  start: 42639,
  length: 1,
  convRule: rule23
}, {
  start: 42640,
  length: 1,
  convRule: rule22
}, {
  start: 42641,
  length: 1,
  convRule: rule23
}, {
  start: 42642,
  length: 1,
  convRule: rule22
}, {
  start: 42643,
  length: 1,
  convRule: rule23
}, {
  start: 42644,
  length: 1,
  convRule: rule22
}, {
  start: 42645,
  length: 1,
  convRule: rule23
}, {
  start: 42646,
  length: 1,
  convRule: rule22
}, {
  start: 42647,
  length: 1,
  convRule: rule23
}, {
  start: 42648,
  length: 1,
  convRule: rule22
}, {
  start: 42649,
  length: 1,
  convRule: rule23
}, {
  start: 42650,
  length: 1,
  convRule: rule22
}, {
  start: 42651,
  length: 1,
  convRule: rule23
}, {
  start: 42652,
  length: 2,
  convRule: rule91
}, {
  start: 42654,
  length: 2,
  convRule: rule92
}, {
  start: 42656,
  length: 70,
  convRule: rule14
}, {
  start: 42726,
  length: 10,
  convRule: rule128
}, {
  start: 42736,
  length: 2,
  convRule: rule92
}, {
  start: 42738,
  length: 6,
  convRule: rule2
}, {
  start: 42752,
  length: 23,
  convRule: rule10
}, {
  start: 42775,
  length: 9,
  convRule: rule91
}, {
  start: 42784,
  length: 2,
  convRule: rule10
}, {
  start: 42786,
  length: 1,
  convRule: rule22
}, {
  start: 42787,
  length: 1,
  convRule: rule23
}, {
  start: 42788,
  length: 1,
  convRule: rule22
}, {
  start: 42789,
  length: 1,
  convRule: rule23
}, {
  start: 42790,
  length: 1,
  convRule: rule22
}, {
  start: 42791,
  length: 1,
  convRule: rule23
}, {
  start: 42792,
  length: 1,
  convRule: rule22
}, {
  start: 42793,
  length: 1,
  convRule: rule23
}, {
  start: 42794,
  length: 1,
  convRule: rule22
}, {
  start: 42795,
  length: 1,
  convRule: rule23
}, {
  start: 42796,
  length: 1,
  convRule: rule22
}, {
  start: 42797,
  length: 1,
  convRule: rule23
}, {
  start: 42798,
  length: 1,
  convRule: rule22
}, {
  start: 42799,
  length: 1,
  convRule: rule23
}, {
  start: 42800,
  length: 2,
  convRule: rule20
}, {
  start: 42802,
  length: 1,
  convRule: rule22
}, {
  start: 42803,
  length: 1,
  convRule: rule23
}, {
  start: 42804,
  length: 1,
  convRule: rule22
}, {
  start: 42805,
  length: 1,
  convRule: rule23
}, {
  start: 42806,
  length: 1,
  convRule: rule22
}, {
  start: 42807,
  length: 1,
  convRule: rule23
}, {
  start: 42808,
  length: 1,
  convRule: rule22
}, {
  start: 42809,
  length: 1,
  convRule: rule23
}, {
  start: 42810,
  length: 1,
  convRule: rule22
}, {
  start: 42811,
  length: 1,
  convRule: rule23
}, {
  start: 42812,
  length: 1,
  convRule: rule22
}, {
  start: 42813,
  length: 1,
  convRule: rule23
}, {
  start: 42814,
  length: 1,
  convRule: rule22
}, {
  start: 42815,
  length: 1,
  convRule: rule23
}, {
  start: 42816,
  length: 1,
  convRule: rule22
}, {
  start: 42817,
  length: 1,
  convRule: rule23
}, {
  start: 42818,
  length: 1,
  convRule: rule22
}, {
  start: 42819,
  length: 1,
  convRule: rule23
}, {
  start: 42820,
  length: 1,
  convRule: rule22
}, {
  start: 42821,
  length: 1,
  convRule: rule23
}, {
  start: 42822,
  length: 1,
  convRule: rule22
}, {
  start: 42823,
  length: 1,
  convRule: rule23
}, {
  start: 42824,
  length: 1,
  convRule: rule22
}, {
  start: 42825,
  length: 1,
  convRule: rule23
}, {
  start: 42826,
  length: 1,
  convRule: rule22
}, {
  start: 42827,
  length: 1,
  convRule: rule23
}, {
  start: 42828,
  length: 1,
  convRule: rule22
}, {
  start: 42829,
  length: 1,
  convRule: rule23
}, {
  start: 42830,
  length: 1,
  convRule: rule22
}, {
  start: 42831,
  length: 1,
  convRule: rule23
}, {
  start: 42832,
  length: 1,
  convRule: rule22
}, {
  start: 42833,
  length: 1,
  convRule: rule23
}, {
  start: 42834,
  length: 1,
  convRule: rule22
}, {
  start: 42835,
  length: 1,
  convRule: rule23
}, {
  start: 42836,
  length: 1,
  convRule: rule22
}, {
  start: 42837,
  length: 1,
  convRule: rule23
}, {
  start: 42838,
  length: 1,
  convRule: rule22
}, {
  start: 42839,
  length: 1,
  convRule: rule23
}, {
  start: 42840,
  length: 1,
  convRule: rule22
}, {
  start: 42841,
  length: 1,
  convRule: rule23
}, {
  start: 42842,
  length: 1,
  convRule: rule22
}, {
  start: 42843,
  length: 1,
  convRule: rule23
}, {
  start: 42844,
  length: 1,
  convRule: rule22
}, {
  start: 42845,
  length: 1,
  convRule: rule23
}, {
  start: 42846,
  length: 1,
  convRule: rule22
}, {
  start: 42847,
  length: 1,
  convRule: rule23
}, {
  start: 42848,
  length: 1,
  convRule: rule22
}, {
  start: 42849,
  length: 1,
  convRule: rule23
}, {
  start: 42850,
  length: 1,
  convRule: rule22
}, {
  start: 42851,
  length: 1,
  convRule: rule23
}, {
  start: 42852,
  length: 1,
  convRule: rule22
}, {
  start: 42853,
  length: 1,
  convRule: rule23
}, {
  start: 42854,
  length: 1,
  convRule: rule22
}, {
  start: 42855,
  length: 1,
  convRule: rule23
}, {
  start: 42856,
  length: 1,
  convRule: rule22
}, {
  start: 42857,
  length: 1,
  convRule: rule23
}, {
  start: 42858,
  length: 1,
  convRule: rule22
}, {
  start: 42859,
  length: 1,
  convRule: rule23
}, {
  start: 42860,
  length: 1,
  convRule: rule22
}, {
  start: 42861,
  length: 1,
  convRule: rule23
}, {
  start: 42862,
  length: 1,
  convRule: rule22
}, {
  start: 42863,
  length: 1,
  convRule: rule23
}, {
  start: 42864,
  length: 1,
  convRule: rule91
}, {
  start: 42865,
  length: 8,
  convRule: rule20
}, {
  start: 42873,
  length: 1,
  convRule: rule22
}, {
  start: 42874,
  length: 1,
  convRule: rule23
}, {
  start: 42875,
  length: 1,
  convRule: rule22
}, {
  start: 42876,
  length: 1,
  convRule: rule23
}, {
  start: 42877,
  length: 1,
  convRule: rule183
}, {
  start: 42878,
  length: 1,
  convRule: rule22
}, {
  start: 42879,
  length: 1,
  convRule: rule23
}, {
  start: 42880,
  length: 1,
  convRule: rule22
}, {
  start: 42881,
  length: 1,
  convRule: rule23
}, {
  start: 42882,
  length: 1,
  convRule: rule22
}, {
  start: 42883,
  length: 1,
  convRule: rule23
}, {
  start: 42884,
  length: 1,
  convRule: rule22
}, {
  start: 42885,
  length: 1,
  convRule: rule23
}, {
  start: 42886,
  length: 1,
  convRule: rule22
}, {
  start: 42887,
  length: 1,
  convRule: rule23
}, {
  start: 42888,
  length: 1,
  convRule: rule91
}, {
  start: 42889,
  length: 2,
  convRule: rule10
}, {
  start: 42891,
  length: 1,
  convRule: rule22
}, {
  start: 42892,
  length: 1,
  convRule: rule23
}, {
  start: 42893,
  length: 1,
  convRule: rule184
}, {
  start: 42894,
  length: 1,
  convRule: rule20
}, {
  start: 42895,
  length: 1,
  convRule: rule14
}, {
  start: 42896,
  length: 1,
  convRule: rule22
}, {
  start: 42897,
  length: 1,
  convRule: rule23
}, {
  start: 42898,
  length: 1,
  convRule: rule22
}, {
  start: 42899,
  length: 1,
  convRule: rule23
}, {
  start: 42900,
  length: 1,
  convRule: rule185
}, {
  start: 42901,
  length: 1,
  convRule: rule20
}, {
  start: 42902,
  length: 1,
  convRule: rule22
}, {
  start: 42903,
  length: 1,
  convRule: rule23
}, {
  start: 42904,
  length: 1,
  convRule: rule22
}, {
  start: 42905,
  length: 1,
  convRule: rule23
}, {
  start: 42906,
  length: 1,
  convRule: rule22
}, {
  start: 42907,
  length: 1,
  convRule: rule23
}, {
  start: 42908,
  length: 1,
  convRule: rule22
}, {
  start: 42909,
  length: 1,
  convRule: rule23
}, {
  start: 42910,
  length: 1,
  convRule: rule22
}, {
  start: 42911,
  length: 1,
  convRule: rule23
}, {
  start: 42912,
  length: 1,
  convRule: rule22
}, {
  start: 42913,
  length: 1,
  convRule: rule23
}, {
  start: 42914,
  length: 1,
  convRule: rule22
}, {
  start: 42915,
  length: 1,
  convRule: rule23
}, {
  start: 42916,
  length: 1,
  convRule: rule22
}, {
  start: 42917,
  length: 1,
  convRule: rule23
}, {
  start: 42918,
  length: 1,
  convRule: rule22
}, {
  start: 42919,
  length: 1,
  convRule: rule23
}, {
  start: 42920,
  length: 1,
  convRule: rule22
}, {
  start: 42921,
  length: 1,
  convRule: rule23
}, {
  start: 42922,
  length: 1,
  convRule: rule186
}, {
  start: 42923,
  length: 1,
  convRule: rule187
}, {
  start: 42924,
  length: 1,
  convRule: rule188
}, {
  start: 42925,
  length: 1,
  convRule: rule189
}, {
  start: 42926,
  length: 1,
  convRule: rule186
}, {
  start: 42927,
  length: 1,
  convRule: rule20
}, {
  start: 42928,
  length: 1,
  convRule: rule190
}, {
  start: 42929,
  length: 1,
  convRule: rule191
}, {
  start: 42930,
  length: 1,
  convRule: rule192
}, {
  start: 42931,
  length: 1,
  convRule: rule193
}, {
  start: 42932,
  length: 1,
  convRule: rule22
}, {
  start: 42933,
  length: 1,
  convRule: rule23
}, {
  start: 42934,
  length: 1,
  convRule: rule22
}, {
  start: 42935,
  length: 1,
  convRule: rule23
}, {
  start: 42936,
  length: 1,
  convRule: rule22
}, {
  start: 42937,
  length: 1,
  convRule: rule23
}, {
  start: 42938,
  length: 1,
  convRule: rule22
}, {
  start: 42939,
  length: 1,
  convRule: rule23
}, {
  start: 42940,
  length: 1,
  convRule: rule22
}, {
  start: 42941,
  length: 1,
  convRule: rule23
}, {
  start: 42942,
  length: 1,
  convRule: rule22
}, {
  start: 42943,
  length: 1,
  convRule: rule23
}, {
  start: 42946,
  length: 1,
  convRule: rule22
}, {
  start: 42947,
  length: 1,
  convRule: rule23
}, {
  start: 42948,
  length: 1,
  convRule: rule194
}, {
  start: 42949,
  length: 1,
  convRule: rule195
}, {
  start: 42950,
  length: 1,
  convRule: rule196
}, {
  start: 42951,
  length: 1,
  convRule: rule22
}, {
  start: 42952,
  length: 1,
  convRule: rule23
}, {
  start: 42953,
  length: 1,
  convRule: rule22
}, {
  start: 42954,
  length: 1,
  convRule: rule23
}, {
  start: 42997,
  length: 1,
  convRule: rule22
}, {
  start: 42998,
  length: 1,
  convRule: rule23
}, {
  start: 42999,
  length: 1,
  convRule: rule14
}, {
  start: 43e3,
  length: 2,
  convRule: rule91
}, {
  start: 43002,
  length: 1,
  convRule: rule20
}, {
  start: 43003,
  length: 7,
  convRule: rule14
}, {
  start: 43010,
  length: 1,
  convRule: rule92
}, {
  start: 43011,
  length: 3,
  convRule: rule14
}, {
  start: 43014,
  length: 1,
  convRule: rule92
}, {
  start: 43015,
  length: 4,
  convRule: rule14
}, {
  start: 43019,
  length: 1,
  convRule: rule92
}, {
  start: 43020,
  length: 23,
  convRule: rule14
}, {
  start: 43043,
  length: 2,
  convRule: rule124
}, {
  start: 43045,
  length: 2,
  convRule: rule92
}, {
  start: 43047,
  length: 1,
  convRule: rule124
}, {
  start: 43048,
  length: 4,
  convRule: rule13
}, {
  start: 43052,
  length: 1,
  convRule: rule92
}, {
  start: 43056,
  length: 6,
  convRule: rule17
}, {
  start: 43062,
  length: 2,
  convRule: rule13
}, {
  start: 43064,
  length: 1,
  convRule: rule3
}, {
  start: 43065,
  length: 1,
  convRule: rule13
}, {
  start: 43072,
  length: 52,
  convRule: rule14
}, {
  start: 43124,
  length: 4,
  convRule: rule2
}, {
  start: 43136,
  length: 2,
  convRule: rule124
}, {
  start: 43138,
  length: 50,
  convRule: rule14
}, {
  start: 43188,
  length: 16,
  convRule: rule124
}, {
  start: 43204,
  length: 2,
  convRule: rule92
}, {
  start: 43214,
  length: 2,
  convRule: rule2
}, {
  start: 43216,
  length: 10,
  convRule: rule8
}, {
  start: 43232,
  length: 18,
  convRule: rule92
}, {
  start: 43250,
  length: 6,
  convRule: rule14
}, {
  start: 43256,
  length: 3,
  convRule: rule2
}, {
  start: 43259,
  length: 1,
  convRule: rule14
}, {
  start: 43260,
  length: 1,
  convRule: rule2
}, {
  start: 43261,
  length: 2,
  convRule: rule14
}, {
  start: 43263,
  length: 1,
  convRule: rule92
}, {
  start: 43264,
  length: 10,
  convRule: rule8
}, {
  start: 43274,
  length: 28,
  convRule: rule14
}, {
  start: 43302,
  length: 8,
  convRule: rule92
}, {
  start: 43310,
  length: 2,
  convRule: rule2
}, {
  start: 43312,
  length: 23,
  convRule: rule14
}, {
  start: 43335,
  length: 11,
  convRule: rule92
}, {
  start: 43346,
  length: 2,
  convRule: rule124
}, {
  start: 43359,
  length: 1,
  convRule: rule2
}, {
  start: 43360,
  length: 29,
  convRule: rule14
}, {
  start: 43392,
  length: 3,
  convRule: rule92
}, {
  start: 43395,
  length: 1,
  convRule: rule124
}, {
  start: 43396,
  length: 47,
  convRule: rule14
}, {
  start: 43443,
  length: 1,
  convRule: rule92
}, {
  start: 43444,
  length: 2,
  convRule: rule124
}, {
  start: 43446,
  length: 4,
  convRule: rule92
}, {
  start: 43450,
  length: 2,
  convRule: rule124
}, {
  start: 43452,
  length: 2,
  convRule: rule92
}, {
  start: 43454,
  length: 3,
  convRule: rule124
}, {
  start: 43457,
  length: 13,
  convRule: rule2
}, {
  start: 43471,
  length: 1,
  convRule: rule91
}, {
  start: 43472,
  length: 10,
  convRule: rule8
}, {
  start: 43486,
  length: 2,
  convRule: rule2
}, {
  start: 43488,
  length: 5,
  convRule: rule14
}, {
  start: 43493,
  length: 1,
  convRule: rule92
}, {
  start: 43494,
  length: 1,
  convRule: rule91
}, {
  start: 43495,
  length: 9,
  convRule: rule14
}, {
  start: 43504,
  length: 10,
  convRule: rule8
}, {
  start: 43514,
  length: 5,
  convRule: rule14
}, {
  start: 43520,
  length: 41,
  convRule: rule14
}, {
  start: 43561,
  length: 6,
  convRule: rule92
}, {
  start: 43567,
  length: 2,
  convRule: rule124
}, {
  start: 43569,
  length: 2,
  convRule: rule92
}, {
  start: 43571,
  length: 2,
  convRule: rule124
}, {
  start: 43573,
  length: 2,
  convRule: rule92
}, {
  start: 43584,
  length: 3,
  convRule: rule14
}, {
  start: 43587,
  length: 1,
  convRule: rule92
}, {
  start: 43588,
  length: 8,
  convRule: rule14
}, {
  start: 43596,
  length: 1,
  convRule: rule92
}, {
  start: 43597,
  length: 1,
  convRule: rule124
}, {
  start: 43600,
  length: 10,
  convRule: rule8
}, {
  start: 43612,
  length: 4,
  convRule: rule2
}, {
  start: 43616,
  length: 16,
  convRule: rule14
}, {
  start: 43632,
  length: 1,
  convRule: rule91
}, {
  start: 43633,
  length: 6,
  convRule: rule14
}, {
  start: 43639,
  length: 3,
  convRule: rule13
}, {
  start: 43642,
  length: 1,
  convRule: rule14
}, {
  start: 43643,
  length: 1,
  convRule: rule124
}, {
  start: 43644,
  length: 1,
  convRule: rule92
}, {
  start: 43645,
  length: 1,
  convRule: rule124
}, {
  start: 43646,
  length: 50,
  convRule: rule14
}, {
  start: 43696,
  length: 1,
  convRule: rule92
}, {
  start: 43697,
  length: 1,
  convRule: rule14
}, {
  start: 43698,
  length: 3,
  convRule: rule92
}, {
  start: 43701,
  length: 2,
  convRule: rule14
}, {
  start: 43703,
  length: 2,
  convRule: rule92
}, {
  start: 43705,
  length: 5,
  convRule: rule14
}, {
  start: 43710,
  length: 2,
  convRule: rule92
}, {
  start: 43712,
  length: 1,
  convRule: rule14
}, {
  start: 43713,
  length: 1,
  convRule: rule92
}, {
  start: 43714,
  length: 1,
  convRule: rule14
}, {
  start: 43739,
  length: 2,
  convRule: rule14
}, {
  start: 43741,
  length: 1,
  convRule: rule91
}, {
  start: 43742,
  length: 2,
  convRule: rule2
}, {
  start: 43744,
  length: 11,
  convRule: rule14
}, {
  start: 43755,
  length: 1,
  convRule: rule124
}, {
  start: 43756,
  length: 2,
  convRule: rule92
}, {
  start: 43758,
  length: 2,
  convRule: rule124
}, {
  start: 43760,
  length: 2,
  convRule: rule2
}, {
  start: 43762,
  length: 1,
  convRule: rule14
}, {
  start: 43763,
  length: 2,
  convRule: rule91
}, {
  start: 43765,
  length: 1,
  convRule: rule124
}, {
  start: 43766,
  length: 1,
  convRule: rule92
}, {
  start: 43777,
  length: 6,
  convRule: rule14
}, {
  start: 43785,
  length: 6,
  convRule: rule14
}, {
  start: 43793,
  length: 6,
  convRule: rule14
}, {
  start: 43808,
  length: 7,
  convRule: rule14
}, {
  start: 43816,
  length: 7,
  convRule: rule14
}, {
  start: 43824,
  length: 35,
  convRule: rule20
}, {
  start: 43859,
  length: 1,
  convRule: rule197
}, {
  start: 43860,
  length: 7,
  convRule: rule20
}, {
  start: 43867,
  length: 1,
  convRule: rule10
}, {
  start: 43868,
  length: 4,
  convRule: rule91
}, {
  start: 43872,
  length: 9,
  convRule: rule20
}, {
  start: 43881,
  length: 1,
  convRule: rule91
}, {
  start: 43882,
  length: 2,
  convRule: rule10
}, {
  start: 43888,
  length: 80,
  convRule: rule198
}, {
  start: 43968,
  length: 35,
  convRule: rule14
}, {
  start: 44003,
  length: 2,
  convRule: rule124
}, {
  start: 44005,
  length: 1,
  convRule: rule92
}, {
  start: 44006,
  length: 2,
  convRule: rule124
}, {
  start: 44008,
  length: 1,
  convRule: rule92
}, {
  start: 44009,
  length: 2,
  convRule: rule124
}, {
  start: 44011,
  length: 1,
  convRule: rule2
}, {
  start: 44012,
  length: 1,
  convRule: rule124
}, {
  start: 44013,
  length: 1,
  convRule: rule92
}, {
  start: 44016,
  length: 10,
  convRule: rule8
}, {
  start: 44032,
  length: 11172,
  convRule: rule14
}, {
  start: 55216,
  length: 23,
  convRule: rule14
}, {
  start: 55243,
  length: 49,
  convRule: rule14
}, {
  start: 55296,
  length: 896,
  convRule: rule199
}, {
  start: 56192,
  length: 128,
  convRule: rule199
}, {
  start: 56320,
  length: 1024,
  convRule: rule199
}, {
  start: 57344,
  length: 6400,
  convRule: rule200
}, {
  start: 63744,
  length: 366,
  convRule: rule14
}, {
  start: 64112,
  length: 106,
  convRule: rule14
}, {
  start: 64256,
  length: 7,
  convRule: rule20
}, {
  start: 64275,
  length: 5,
  convRule: rule20
}, {
  start: 64285,
  length: 1,
  convRule: rule14
}, {
  start: 64286,
  length: 1,
  convRule: rule92
}, {
  start: 64287,
  length: 10,
  convRule: rule14
}, {
  start: 64297,
  length: 1,
  convRule: rule6
}, {
  start: 64298,
  length: 13,
  convRule: rule14
}, {
  start: 64312,
  length: 5,
  convRule: rule14
}, {
  start: 64318,
  length: 1,
  convRule: rule14
}, {
  start: 64320,
  length: 2,
  convRule: rule14
}, {
  start: 64323,
  length: 2,
  convRule: rule14
}, {
  start: 64326,
  length: 108,
  convRule: rule14
}, {
  start: 64434,
  length: 16,
  convRule: rule10
}, {
  start: 64467,
  length: 363,
  convRule: rule14
}, {
  start: 64830,
  length: 1,
  convRule: rule5
}, {
  start: 64831,
  length: 1,
  convRule: rule4
}, {
  start: 64848,
  length: 64,
  convRule: rule14
}, {
  start: 64914,
  length: 54,
  convRule: rule14
}, {
  start: 65008,
  length: 12,
  convRule: rule14
}, {
  start: 65020,
  length: 1,
  convRule: rule3
}, {
  start: 65021,
  length: 1,
  convRule: rule13
}, {
  start: 65024,
  length: 16,
  convRule: rule92
}, {
  start: 65040,
  length: 7,
  convRule: rule2
}, {
  start: 65047,
  length: 1,
  convRule: rule4
}, {
  start: 65048,
  length: 1,
  convRule: rule5
}, {
  start: 65049,
  length: 1,
  convRule: rule2
}, {
  start: 65056,
  length: 16,
  convRule: rule92
}, {
  start: 65072,
  length: 1,
  convRule: rule2
}, {
  start: 65073,
  length: 2,
  convRule: rule7
}, {
  start: 65075,
  length: 2,
  convRule: rule11
}, {
  start: 65077,
  length: 1,
  convRule: rule4
}, {
  start: 65078,
  length: 1,
  convRule: rule5
}, {
  start: 65079,
  length: 1,
  convRule: rule4
}, {
  start: 65080,
  length: 1,
  convRule: rule5
}, {
  start: 65081,
  length: 1,
  convRule: rule4
}, {
  start: 65082,
  length: 1,
  convRule: rule5
}, {
  start: 65083,
  length: 1,
  convRule: rule4
}, {
  start: 65084,
  length: 1,
  convRule: rule5
}, {
  start: 65085,
  length: 1,
  convRule: rule4
}, {
  start: 65086,
  length: 1,
  convRule: rule5
}, {
  start: 65087,
  length: 1,
  convRule: rule4
}, {
  start: 65088,
  length: 1,
  convRule: rule5
}, {
  start: 65089,
  length: 1,
  convRule: rule4
}, {
  start: 65090,
  length: 1,
  convRule: rule5
}, {
  start: 65091,
  length: 1,
  convRule: rule4
}, {
  start: 65092,
  length: 1,
  convRule: rule5
}, {
  start: 65093,
  length: 2,
  convRule: rule2
}, {
  start: 65095,
  length: 1,
  convRule: rule4
}, {
  start: 65096,
  length: 1,
  convRule: rule5
}, {
  start: 65097,
  length: 4,
  convRule: rule2
}, {
  start: 65101,
  length: 3,
  convRule: rule11
}, {
  start: 65104,
  length: 3,
  convRule: rule2
}, {
  start: 65108,
  length: 4,
  convRule: rule2
}, {
  start: 65112,
  length: 1,
  convRule: rule7
}, {
  start: 65113,
  length: 1,
  convRule: rule4
}, {
  start: 65114,
  length: 1,
  convRule: rule5
}, {
  start: 65115,
  length: 1,
  convRule: rule4
}, {
  start: 65116,
  length: 1,
  convRule: rule5
}, {
  start: 65117,
  length: 1,
  convRule: rule4
}, {
  start: 65118,
  length: 1,
  convRule: rule5
}, {
  start: 65119,
  length: 3,
  convRule: rule2
}, {
  start: 65122,
  length: 1,
  convRule: rule6
}, {
  start: 65123,
  length: 1,
  convRule: rule7
}, {
  start: 65124,
  length: 3,
  convRule: rule6
}, {
  start: 65128,
  length: 1,
  convRule: rule2
}, {
  start: 65129,
  length: 1,
  convRule: rule3
}, {
  start: 65130,
  length: 2,
  convRule: rule2
}, {
  start: 65136,
  length: 5,
  convRule: rule14
}, {
  start: 65142,
  length: 135,
  convRule: rule14
}, {
  start: 65279,
  length: 1,
  convRule: rule16
}, {
  start: 65281,
  length: 3,
  convRule: rule2
}, {
  start: 65284,
  length: 1,
  convRule: rule3
}, {
  start: 65285,
  length: 3,
  convRule: rule2
}, {
  start: 65288,
  length: 1,
  convRule: rule4
}, {
  start: 65289,
  length: 1,
  convRule: rule5
}, {
  start: 65290,
  length: 1,
  convRule: rule2
}, {
  start: 65291,
  length: 1,
  convRule: rule6
}, {
  start: 65292,
  length: 1,
  convRule: rule2
}, {
  start: 65293,
  length: 1,
  convRule: rule7
}, {
  start: 65294,
  length: 2,
  convRule: rule2
}, {
  start: 65296,
  length: 10,
  convRule: rule8
}, {
  start: 65306,
  length: 2,
  convRule: rule2
}, {
  start: 65308,
  length: 3,
  convRule: rule6
}, {
  start: 65311,
  length: 2,
  convRule: rule2
}, {
  start: 65313,
  length: 26,
  convRule: rule9
}, {
  start: 65339,
  length: 1,
  convRule: rule4
}, {
  start: 65340,
  length: 1,
  convRule: rule2
}, {
  start: 65341,
  length: 1,
  convRule: rule5
}, {
  start: 65342,
  length: 1,
  convRule: rule10
}, {
  start: 65343,
  length: 1,
  convRule: rule11
}, {
  start: 65344,
  length: 1,
  convRule: rule10
}, {
  start: 65345,
  length: 26,
  convRule: rule12
}, {
  start: 65371,
  length: 1,
  convRule: rule4
}, {
  start: 65372,
  length: 1,
  convRule: rule6
}, {
  start: 65373,
  length: 1,
  convRule: rule5
}, {
  start: 65374,
  length: 1,
  convRule: rule6
}, {
  start: 65375,
  length: 1,
  convRule: rule4
}, {
  start: 65376,
  length: 1,
  convRule: rule5
}, {
  start: 65377,
  length: 1,
  convRule: rule2
}, {
  start: 65378,
  length: 1,
  convRule: rule4
}, {
  start: 65379,
  length: 1,
  convRule: rule5
}, {
  start: 65380,
  length: 2,
  convRule: rule2
}, {
  start: 65382,
  length: 10,
  convRule: rule14
}, {
  start: 65392,
  length: 1,
  convRule: rule91
}, {
  start: 65393,
  length: 45,
  convRule: rule14
}, {
  start: 65438,
  length: 2,
  convRule: rule91
}, {
  start: 65440,
  length: 31,
  convRule: rule14
}, {
  start: 65474,
  length: 6,
  convRule: rule14
}, {
  start: 65482,
  length: 6,
  convRule: rule14
}, {
  start: 65490,
  length: 6,
  convRule: rule14
}, {
  start: 65498,
  length: 3,
  convRule: rule14
}, {
  start: 65504,
  length: 2,
  convRule: rule3
}, {
  start: 65506,
  length: 1,
  convRule: rule6
}, {
  start: 65507,
  length: 1,
  convRule: rule10
}, {
  start: 65508,
  length: 1,
  convRule: rule13
}, {
  start: 65509,
  length: 2,
  convRule: rule3
}, {
  start: 65512,
  length: 1,
  convRule: rule13
}, {
  start: 65513,
  length: 4,
  convRule: rule6
}, {
  start: 65517,
  length: 2,
  convRule: rule13
}, {
  start: 65529,
  length: 3,
  convRule: rule16
}, {
  start: 65532,
  length: 2,
  convRule: rule13
}, {
  start: 65536,
  length: 12,
  convRule: rule14
}, {
  start: 65549,
  length: 26,
  convRule: rule14
}, {
  start: 65576,
  length: 19,
  convRule: rule14
}, {
  start: 65596,
  length: 2,
  convRule: rule14
}, {
  start: 65599,
  length: 15,
  convRule: rule14
}, {
  start: 65616,
  length: 14,
  convRule: rule14
}, {
  start: 65664,
  length: 123,
  convRule: rule14
}, {
  start: 65792,
  length: 3,
  convRule: rule2
}, {
  start: 65799,
  length: 45,
  convRule: rule17
}, {
  start: 65847,
  length: 9,
  convRule: rule13
}, {
  start: 65856,
  length: 53,
  convRule: rule128
}, {
  start: 65909,
  length: 4,
  convRule: rule17
}, {
  start: 65913,
  length: 17,
  convRule: rule13
}, {
  start: 65930,
  length: 2,
  convRule: rule17
}, {
  start: 65932,
  length: 3,
  convRule: rule13
}, {
  start: 65936,
  length: 13,
  convRule: rule13
}, {
  start: 65952,
  length: 1,
  convRule: rule13
}, {
  start: 66e3,
  length: 45,
  convRule: rule13
}, {
  start: 66045,
  length: 1,
  convRule: rule92
}, {
  start: 66176,
  length: 29,
  convRule: rule14
}, {
  start: 66208,
  length: 49,
  convRule: rule14
}, {
  start: 66272,
  length: 1,
  convRule: rule92
}, {
  start: 66273,
  length: 27,
  convRule: rule17
}, {
  start: 66304,
  length: 32,
  convRule: rule14
}, {
  start: 66336,
  length: 4,
  convRule: rule17
}, {
  start: 66349,
  length: 20,
  convRule: rule14
}, {
  start: 66369,
  length: 1,
  convRule: rule128
}, {
  start: 66370,
  length: 8,
  convRule: rule14
}, {
  start: 66378,
  length: 1,
  convRule: rule128
}, {
  start: 66384,
  length: 38,
  convRule: rule14
}, {
  start: 66422,
  length: 5,
  convRule: rule92
}, {
  start: 66432,
  length: 30,
  convRule: rule14
}, {
  start: 66463,
  length: 1,
  convRule: rule2
}, {
  start: 66464,
  length: 36,
  convRule: rule14
}, {
  start: 66504,
  length: 8,
  convRule: rule14
}, {
  start: 66512,
  length: 1,
  convRule: rule2
}, {
  start: 66513,
  length: 5,
  convRule: rule128
}, {
  start: 66560,
  length: 40,
  convRule: rule201
}, {
  start: 66600,
  length: 40,
  convRule: rule202
}, {
  start: 66640,
  length: 78,
  convRule: rule14
}, {
  start: 66720,
  length: 10,
  convRule: rule8
}, {
  start: 66736,
  length: 36,
  convRule: rule201
}, {
  start: 66776,
  length: 36,
  convRule: rule202
}, {
  start: 66816,
  length: 40,
  convRule: rule14
}, {
  start: 66864,
  length: 52,
  convRule: rule14
}, {
  start: 66927,
  length: 1,
  convRule: rule2
}, {
  start: 67072,
  length: 311,
  convRule: rule14
}, {
  start: 67392,
  length: 22,
  convRule: rule14
}, {
  start: 67424,
  length: 8,
  convRule: rule14
}, {
  start: 67584,
  length: 6,
  convRule: rule14
}, {
  start: 67592,
  length: 1,
  convRule: rule14
}, {
  start: 67594,
  length: 44,
  convRule: rule14
}, {
  start: 67639,
  length: 2,
  convRule: rule14
}, {
  start: 67644,
  length: 1,
  convRule: rule14
}, {
  start: 67647,
  length: 23,
  convRule: rule14
}, {
  start: 67671,
  length: 1,
  convRule: rule2
}, {
  start: 67672,
  length: 8,
  convRule: rule17
}, {
  start: 67680,
  length: 23,
  convRule: rule14
}, {
  start: 67703,
  length: 2,
  convRule: rule13
}, {
  start: 67705,
  length: 7,
  convRule: rule17
}, {
  start: 67712,
  length: 31,
  convRule: rule14
}, {
  start: 67751,
  length: 9,
  convRule: rule17
}, {
  start: 67808,
  length: 19,
  convRule: rule14
}, {
  start: 67828,
  length: 2,
  convRule: rule14
}, {
  start: 67835,
  length: 5,
  convRule: rule17
}, {
  start: 67840,
  length: 22,
  convRule: rule14
}, {
  start: 67862,
  length: 6,
  convRule: rule17
}, {
  start: 67871,
  length: 1,
  convRule: rule2
}, {
  start: 67872,
  length: 26,
  convRule: rule14
}, {
  start: 67903,
  length: 1,
  convRule: rule2
}, {
  start: 67968,
  length: 56,
  convRule: rule14
}, {
  start: 68028,
  length: 2,
  convRule: rule17
}, {
  start: 68030,
  length: 2,
  convRule: rule14
}, {
  start: 68032,
  length: 16,
  convRule: rule17
}, {
  start: 68050,
  length: 46,
  convRule: rule17
}, {
  start: 68096,
  length: 1,
  convRule: rule14
}, {
  start: 68097,
  length: 3,
  convRule: rule92
}, {
  start: 68101,
  length: 2,
  convRule: rule92
}, {
  start: 68108,
  length: 4,
  convRule: rule92
}, {
  start: 68112,
  length: 4,
  convRule: rule14
}, {
  start: 68117,
  length: 3,
  convRule: rule14
}, {
  start: 68121,
  length: 29,
  convRule: rule14
}, {
  start: 68152,
  length: 3,
  convRule: rule92
}, {
  start: 68159,
  length: 1,
  convRule: rule92
}, {
  start: 68160,
  length: 9,
  convRule: rule17
}, {
  start: 68176,
  length: 9,
  convRule: rule2
}, {
  start: 68192,
  length: 29,
  convRule: rule14
}, {
  start: 68221,
  length: 2,
  convRule: rule17
}, {
  start: 68223,
  length: 1,
  convRule: rule2
}, {
  start: 68224,
  length: 29,
  convRule: rule14
}, {
  start: 68253,
  length: 3,
  convRule: rule17
}, {
  start: 68288,
  length: 8,
  convRule: rule14
}, {
  start: 68296,
  length: 1,
  convRule: rule13
}, {
  start: 68297,
  length: 28,
  convRule: rule14
}, {
  start: 68325,
  length: 2,
  convRule: rule92
}, {
  start: 68331,
  length: 5,
  convRule: rule17
}, {
  start: 68336,
  length: 7,
  convRule: rule2
}, {
  start: 68352,
  length: 54,
  convRule: rule14
}, {
  start: 68409,
  length: 7,
  convRule: rule2
}, {
  start: 68416,
  length: 22,
  convRule: rule14
}, {
  start: 68440,
  length: 8,
  convRule: rule17
}, {
  start: 68448,
  length: 19,
  convRule: rule14
}, {
  start: 68472,
  length: 8,
  convRule: rule17
}, {
  start: 68480,
  length: 18,
  convRule: rule14
}, {
  start: 68505,
  length: 4,
  convRule: rule2
}, {
  start: 68521,
  length: 7,
  convRule: rule17
}, {
  start: 68608,
  length: 73,
  convRule: rule14
}, {
  start: 68736,
  length: 51,
  convRule: rule97
}, {
  start: 68800,
  length: 51,
  convRule: rule102
}, {
  start: 68858,
  length: 6,
  convRule: rule17
}, {
  start: 68864,
  length: 36,
  convRule: rule14
}, {
  start: 68900,
  length: 4,
  convRule: rule92
}, {
  start: 68912,
  length: 10,
  convRule: rule8
}, {
  start: 69216,
  length: 31,
  convRule: rule17
}, {
  start: 69248,
  length: 42,
  convRule: rule14
}, {
  start: 69291,
  length: 2,
  convRule: rule92
}, {
  start: 69293,
  length: 1,
  convRule: rule7
}, {
  start: 69296,
  length: 2,
  convRule: rule14
}, {
  start: 69376,
  length: 29,
  convRule: rule14
}, {
  start: 69405,
  length: 10,
  convRule: rule17
}, {
  start: 69415,
  length: 1,
  convRule: rule14
}, {
  start: 69424,
  length: 22,
  convRule: rule14
}, {
  start: 69446,
  length: 11,
  convRule: rule92
}, {
  start: 69457,
  length: 4,
  convRule: rule17
}, {
  start: 69461,
  length: 5,
  convRule: rule2
}, {
  start: 69552,
  length: 21,
  convRule: rule14
}, {
  start: 69573,
  length: 7,
  convRule: rule17
}, {
  start: 69600,
  length: 23,
  convRule: rule14
}, {
  start: 69632,
  length: 1,
  convRule: rule124
}, {
  start: 69633,
  length: 1,
  convRule: rule92
}, {
  start: 69634,
  length: 1,
  convRule: rule124
}, {
  start: 69635,
  length: 53,
  convRule: rule14
}, {
  start: 69688,
  length: 15,
  convRule: rule92
}, {
  start: 69703,
  length: 7,
  convRule: rule2
}, {
  start: 69714,
  length: 20,
  convRule: rule17
}, {
  start: 69734,
  length: 10,
  convRule: rule8
}, {
  start: 69759,
  length: 3,
  convRule: rule92
}, {
  start: 69762,
  length: 1,
  convRule: rule124
}, {
  start: 69763,
  length: 45,
  convRule: rule14
}, {
  start: 69808,
  length: 3,
  convRule: rule124
}, {
  start: 69811,
  length: 4,
  convRule: rule92
}, {
  start: 69815,
  length: 2,
  convRule: rule124
}, {
  start: 69817,
  length: 2,
  convRule: rule92
}, {
  start: 69819,
  length: 2,
  convRule: rule2
}, {
  start: 69821,
  length: 1,
  convRule: rule16
}, {
  start: 69822,
  length: 4,
  convRule: rule2
}, {
  start: 69837,
  length: 1,
  convRule: rule16
}, {
  start: 69840,
  length: 25,
  convRule: rule14
}, {
  start: 69872,
  length: 10,
  convRule: rule8
}, {
  start: 69888,
  length: 3,
  convRule: rule92
}, {
  start: 69891,
  length: 36,
  convRule: rule14
}, {
  start: 69927,
  length: 5,
  convRule: rule92
}, {
  start: 69932,
  length: 1,
  convRule: rule124
}, {
  start: 69933,
  length: 8,
  convRule: rule92
}, {
  start: 69942,
  length: 10,
  convRule: rule8
}, {
  start: 69952,
  length: 4,
  convRule: rule2
}, {
  start: 69956,
  length: 1,
  convRule: rule14
}, {
  start: 69957,
  length: 2,
  convRule: rule124
}, {
  start: 69959,
  length: 1,
  convRule: rule14
}, {
  start: 69968,
  length: 35,
  convRule: rule14
}, {
  start: 70003,
  length: 1,
  convRule: rule92
}, {
  start: 70004,
  length: 2,
  convRule: rule2
}, {
  start: 70006,
  length: 1,
  convRule: rule14
}, {
  start: 70016,
  length: 2,
  convRule: rule92
}, {
  start: 70018,
  length: 1,
  convRule: rule124
}, {
  start: 70019,
  length: 48,
  convRule: rule14
}, {
  start: 70067,
  length: 3,
  convRule: rule124
}, {
  start: 70070,
  length: 9,
  convRule: rule92
}, {
  start: 70079,
  length: 2,
  convRule: rule124
}, {
  start: 70081,
  length: 4,
  convRule: rule14
}, {
  start: 70085,
  length: 4,
  convRule: rule2
}, {
  start: 70089,
  length: 4,
  convRule: rule92
}, {
  start: 70093,
  length: 1,
  convRule: rule2
}, {
  start: 70094,
  length: 1,
  convRule: rule124
}, {
  start: 70095,
  length: 1,
  convRule: rule92
}, {
  start: 70096,
  length: 10,
  convRule: rule8
}, {
  start: 70106,
  length: 1,
  convRule: rule14
}, {
  start: 70107,
  length: 1,
  convRule: rule2
}, {
  start: 70108,
  length: 1,
  convRule: rule14
}, {
  start: 70109,
  length: 3,
  convRule: rule2
}, {
  start: 70113,
  length: 20,
  convRule: rule17
}, {
  start: 70144,
  length: 18,
  convRule: rule14
}, {
  start: 70163,
  length: 25,
  convRule: rule14
}, {
  start: 70188,
  length: 3,
  convRule: rule124
}, {
  start: 70191,
  length: 3,
  convRule: rule92
}, {
  start: 70194,
  length: 2,
  convRule: rule124
}, {
  start: 70196,
  length: 1,
  convRule: rule92
}, {
  start: 70197,
  length: 1,
  convRule: rule124
}, {
  start: 70198,
  length: 2,
  convRule: rule92
}, {
  start: 70200,
  length: 6,
  convRule: rule2
}, {
  start: 70206,
  length: 1,
  convRule: rule92
}, {
  start: 70272,
  length: 7,
  convRule: rule14
}, {
  start: 70280,
  length: 1,
  convRule: rule14
}, {
  start: 70282,
  length: 4,
  convRule: rule14
}, {
  start: 70287,
  length: 15,
  convRule: rule14
}, {
  start: 70303,
  length: 10,
  convRule: rule14
}, {
  start: 70313,
  length: 1,
  convRule: rule2
}, {
  start: 70320,
  length: 47,
  convRule: rule14
}, {
  start: 70367,
  length: 1,
  convRule: rule92
}, {
  start: 70368,
  length: 3,
  convRule: rule124
}, {
  start: 70371,
  length: 8,
  convRule: rule92
}, {
  start: 70384,
  length: 10,
  convRule: rule8
}, {
  start: 70400,
  length: 2,
  convRule: rule92
}, {
  start: 70402,
  length: 2,
  convRule: rule124
}, {
  start: 70405,
  length: 8,
  convRule: rule14
}, {
  start: 70415,
  length: 2,
  convRule: rule14
}, {
  start: 70419,
  length: 22,
  convRule: rule14
}, {
  start: 70442,
  length: 7,
  convRule: rule14
}, {
  start: 70450,
  length: 2,
  convRule: rule14
}, {
  start: 70453,
  length: 5,
  convRule: rule14
}, {
  start: 70459,
  length: 2,
  convRule: rule92
}, {
  start: 70461,
  length: 1,
  convRule: rule14
}, {
  start: 70462,
  length: 2,
  convRule: rule124
}, {
  start: 70464,
  length: 1,
  convRule: rule92
}, {
  start: 70465,
  length: 4,
  convRule: rule124
}, {
  start: 70471,
  length: 2,
  convRule: rule124
}, {
  start: 70475,
  length: 3,
  convRule: rule124
}, {
  start: 70480,
  length: 1,
  convRule: rule14
}, {
  start: 70487,
  length: 1,
  convRule: rule124
}, {
  start: 70493,
  length: 5,
  convRule: rule14
}, {
  start: 70498,
  length: 2,
  convRule: rule124
}, {
  start: 70502,
  length: 7,
  convRule: rule92
}, {
  start: 70512,
  length: 5,
  convRule: rule92
}, {
  start: 70656,
  length: 53,
  convRule: rule14
}, {
  start: 70709,
  length: 3,
  convRule: rule124
}, {
  start: 70712,
  length: 8,
  convRule: rule92
}, {
  start: 70720,
  length: 2,
  convRule: rule124
}, {
  start: 70722,
  length: 3,
  convRule: rule92
}, {
  start: 70725,
  length: 1,
  convRule: rule124
}, {
  start: 70726,
  length: 1,
  convRule: rule92
}, {
  start: 70727,
  length: 4,
  convRule: rule14
}, {
  start: 70731,
  length: 5,
  convRule: rule2
}, {
  start: 70736,
  length: 10,
  convRule: rule8
}, {
  start: 70746,
  length: 2,
  convRule: rule2
}, {
  start: 70749,
  length: 1,
  convRule: rule2
}, {
  start: 70750,
  length: 1,
  convRule: rule92
}, {
  start: 70751,
  length: 3,
  convRule: rule14
}, {
  start: 70784,
  length: 48,
  convRule: rule14
}, {
  start: 70832,
  length: 3,
  convRule: rule124
}, {
  start: 70835,
  length: 6,
  convRule: rule92
}, {
  start: 70841,
  length: 1,
  convRule: rule124
}, {
  start: 70842,
  length: 1,
  convRule: rule92
}, {
  start: 70843,
  length: 4,
  convRule: rule124
}, {
  start: 70847,
  length: 2,
  convRule: rule92
}, {
  start: 70849,
  length: 1,
  convRule: rule124
}, {
  start: 70850,
  length: 2,
  convRule: rule92
}, {
  start: 70852,
  length: 2,
  convRule: rule14
}, {
  start: 70854,
  length: 1,
  convRule: rule2
}, {
  start: 70855,
  length: 1,
  convRule: rule14
}, {
  start: 70864,
  length: 10,
  convRule: rule8
}, {
  start: 71040,
  length: 47,
  convRule: rule14
}, {
  start: 71087,
  length: 3,
  convRule: rule124
}, {
  start: 71090,
  length: 4,
  convRule: rule92
}, {
  start: 71096,
  length: 4,
  convRule: rule124
}, {
  start: 71100,
  length: 2,
  convRule: rule92
}, {
  start: 71102,
  length: 1,
  convRule: rule124
}, {
  start: 71103,
  length: 2,
  convRule: rule92
}, {
  start: 71105,
  length: 23,
  convRule: rule2
}, {
  start: 71128,
  length: 4,
  convRule: rule14
}, {
  start: 71132,
  length: 2,
  convRule: rule92
}, {
  start: 71168,
  length: 48,
  convRule: rule14
}, {
  start: 71216,
  length: 3,
  convRule: rule124
}, {
  start: 71219,
  length: 8,
  convRule: rule92
}, {
  start: 71227,
  length: 2,
  convRule: rule124
}, {
  start: 71229,
  length: 1,
  convRule: rule92
}, {
  start: 71230,
  length: 1,
  convRule: rule124
}, {
  start: 71231,
  length: 2,
  convRule: rule92
}, {
  start: 71233,
  length: 3,
  convRule: rule2
}, {
  start: 71236,
  length: 1,
  convRule: rule14
}, {
  start: 71248,
  length: 10,
  convRule: rule8
}, {
  start: 71264,
  length: 13,
  convRule: rule2
}, {
  start: 71296,
  length: 43,
  convRule: rule14
}, {
  start: 71339,
  length: 1,
  convRule: rule92
}, {
  start: 71340,
  length: 1,
  convRule: rule124
}, {
  start: 71341,
  length: 1,
  convRule: rule92
}, {
  start: 71342,
  length: 2,
  convRule: rule124
}, {
  start: 71344,
  length: 6,
  convRule: rule92
}, {
  start: 71350,
  length: 1,
  convRule: rule124
}, {
  start: 71351,
  length: 1,
  convRule: rule92
}, {
  start: 71352,
  length: 1,
  convRule: rule14
}, {
  start: 71360,
  length: 10,
  convRule: rule8
}, {
  start: 71424,
  length: 27,
  convRule: rule14
}, {
  start: 71453,
  length: 3,
  convRule: rule92
}, {
  start: 71456,
  length: 2,
  convRule: rule124
}, {
  start: 71458,
  length: 4,
  convRule: rule92
}, {
  start: 71462,
  length: 1,
  convRule: rule124
}, {
  start: 71463,
  length: 5,
  convRule: rule92
}, {
  start: 71472,
  length: 10,
  convRule: rule8
}, {
  start: 71482,
  length: 2,
  convRule: rule17
}, {
  start: 71484,
  length: 3,
  convRule: rule2
}, {
  start: 71487,
  length: 1,
  convRule: rule13
}, {
  start: 71680,
  length: 44,
  convRule: rule14
}, {
  start: 71724,
  length: 3,
  convRule: rule124
}, {
  start: 71727,
  length: 9,
  convRule: rule92
}, {
  start: 71736,
  length: 1,
  convRule: rule124
}, {
  start: 71737,
  length: 2,
  convRule: rule92
}, {
  start: 71739,
  length: 1,
  convRule: rule2
}, {
  start: 71840,
  length: 32,
  convRule: rule9
}, {
  start: 71872,
  length: 32,
  convRule: rule12
}, {
  start: 71904,
  length: 10,
  convRule: rule8
}, {
  start: 71914,
  length: 9,
  convRule: rule17
}, {
  start: 71935,
  length: 8,
  convRule: rule14
}, {
  start: 71945,
  length: 1,
  convRule: rule14
}, {
  start: 71948,
  length: 8,
  convRule: rule14
}, {
  start: 71957,
  length: 2,
  convRule: rule14
}, {
  start: 71960,
  length: 24,
  convRule: rule14
}, {
  start: 71984,
  length: 6,
  convRule: rule124
}, {
  start: 71991,
  length: 2,
  convRule: rule124
}, {
  start: 71995,
  length: 2,
  convRule: rule92
}, {
  start: 71997,
  length: 1,
  convRule: rule124
}, {
  start: 71998,
  length: 1,
  convRule: rule92
}, {
  start: 71999,
  length: 1,
  convRule: rule14
}, {
  start: 72e3,
  length: 1,
  convRule: rule124
}, {
  start: 72001,
  length: 1,
  convRule: rule14
}, {
  start: 72002,
  length: 1,
  convRule: rule124
}, {
  start: 72003,
  length: 1,
  convRule: rule92
}, {
  start: 72004,
  length: 3,
  convRule: rule2
}, {
  start: 72016,
  length: 10,
  convRule: rule8
}, {
  start: 72096,
  length: 8,
  convRule: rule14
}, {
  start: 72106,
  length: 39,
  convRule: rule14
}, {
  start: 72145,
  length: 3,
  convRule: rule124
}, {
  start: 72148,
  length: 4,
  convRule: rule92
}, {
  start: 72154,
  length: 2,
  convRule: rule92
}, {
  start: 72156,
  length: 4,
  convRule: rule124
}, {
  start: 72160,
  length: 1,
  convRule: rule92
}, {
  start: 72161,
  length: 1,
  convRule: rule14
}, {
  start: 72162,
  length: 1,
  convRule: rule2
}, {
  start: 72163,
  length: 1,
  convRule: rule14
}, {
  start: 72164,
  length: 1,
  convRule: rule124
}, {
  start: 72192,
  length: 1,
  convRule: rule14
}, {
  start: 72193,
  length: 10,
  convRule: rule92
}, {
  start: 72203,
  length: 40,
  convRule: rule14
}, {
  start: 72243,
  length: 6,
  convRule: rule92
}, {
  start: 72249,
  length: 1,
  convRule: rule124
}, {
  start: 72250,
  length: 1,
  convRule: rule14
}, {
  start: 72251,
  length: 4,
  convRule: rule92
}, {
  start: 72255,
  length: 8,
  convRule: rule2
}, {
  start: 72263,
  length: 1,
  convRule: rule92
}, {
  start: 72272,
  length: 1,
  convRule: rule14
}, {
  start: 72273,
  length: 6,
  convRule: rule92
}, {
  start: 72279,
  length: 2,
  convRule: rule124
}, {
  start: 72281,
  length: 3,
  convRule: rule92
}, {
  start: 72284,
  length: 46,
  convRule: rule14
}, {
  start: 72330,
  length: 13,
  convRule: rule92
}, {
  start: 72343,
  length: 1,
  convRule: rule124
}, {
  start: 72344,
  length: 2,
  convRule: rule92
}, {
  start: 72346,
  length: 3,
  convRule: rule2
}, {
  start: 72349,
  length: 1,
  convRule: rule14
}, {
  start: 72350,
  length: 5,
  convRule: rule2
}, {
  start: 72384,
  length: 57,
  convRule: rule14
}, {
  start: 72704,
  length: 9,
  convRule: rule14
}, {
  start: 72714,
  length: 37,
  convRule: rule14
}, {
  start: 72751,
  length: 1,
  convRule: rule124
}, {
  start: 72752,
  length: 7,
  convRule: rule92
}, {
  start: 72760,
  length: 6,
  convRule: rule92
}, {
  start: 72766,
  length: 1,
  convRule: rule124
}, {
  start: 72767,
  length: 1,
  convRule: rule92
}, {
  start: 72768,
  length: 1,
  convRule: rule14
}, {
  start: 72769,
  length: 5,
  convRule: rule2
}, {
  start: 72784,
  length: 10,
  convRule: rule8
}, {
  start: 72794,
  length: 19,
  convRule: rule17
}, {
  start: 72816,
  length: 2,
  convRule: rule2
}, {
  start: 72818,
  length: 30,
  convRule: rule14
}, {
  start: 72850,
  length: 22,
  convRule: rule92
}, {
  start: 72873,
  length: 1,
  convRule: rule124
}, {
  start: 72874,
  length: 7,
  convRule: rule92
}, {
  start: 72881,
  length: 1,
  convRule: rule124
}, {
  start: 72882,
  length: 2,
  convRule: rule92
}, {
  start: 72884,
  length: 1,
  convRule: rule124
}, {
  start: 72885,
  length: 2,
  convRule: rule92
}, {
  start: 72960,
  length: 7,
  convRule: rule14
}, {
  start: 72968,
  length: 2,
  convRule: rule14
}, {
  start: 72971,
  length: 38,
  convRule: rule14
}, {
  start: 73009,
  length: 6,
  convRule: rule92
}, {
  start: 73018,
  length: 1,
  convRule: rule92
}, {
  start: 73020,
  length: 2,
  convRule: rule92
}, {
  start: 73023,
  length: 7,
  convRule: rule92
}, {
  start: 73030,
  length: 1,
  convRule: rule14
}, {
  start: 73031,
  length: 1,
  convRule: rule92
}, {
  start: 73040,
  length: 10,
  convRule: rule8
}, {
  start: 73056,
  length: 6,
  convRule: rule14
}, {
  start: 73063,
  length: 2,
  convRule: rule14
}, {
  start: 73066,
  length: 32,
  convRule: rule14
}, {
  start: 73098,
  length: 5,
  convRule: rule124
}, {
  start: 73104,
  length: 2,
  convRule: rule92
}, {
  start: 73107,
  length: 2,
  convRule: rule124
}, {
  start: 73109,
  length: 1,
  convRule: rule92
}, {
  start: 73110,
  length: 1,
  convRule: rule124
}, {
  start: 73111,
  length: 1,
  convRule: rule92
}, {
  start: 73112,
  length: 1,
  convRule: rule14
}, {
  start: 73120,
  length: 10,
  convRule: rule8
}, {
  start: 73440,
  length: 19,
  convRule: rule14
}, {
  start: 73459,
  length: 2,
  convRule: rule92
}, {
  start: 73461,
  length: 2,
  convRule: rule124
}, {
  start: 73463,
  length: 2,
  convRule: rule2
}, {
  start: 73648,
  length: 1,
  convRule: rule14
}, {
  start: 73664,
  length: 21,
  convRule: rule17
}, {
  start: 73685,
  length: 8,
  convRule: rule13
}, {
  start: 73693,
  length: 4,
  convRule: rule3
}, {
  start: 73697,
  length: 17,
  convRule: rule13
}, {
  start: 73727,
  length: 1,
  convRule: rule2
}, {
  start: 73728,
  length: 922,
  convRule: rule14
}, {
  start: 74752,
  length: 111,
  convRule: rule128
}, {
  start: 74864,
  length: 5,
  convRule: rule2
}, {
  start: 74880,
  length: 196,
  convRule: rule14
}, {
  start: 77824,
  length: 1071,
  convRule: rule14
}, {
  start: 78896,
  length: 9,
  convRule: rule16
}, {
  start: 82944,
  length: 583,
  convRule: rule14
}, {
  start: 92160,
  length: 569,
  convRule: rule14
}, {
  start: 92736,
  length: 31,
  convRule: rule14
}, {
  start: 92768,
  length: 10,
  convRule: rule8
}, {
  start: 92782,
  length: 2,
  convRule: rule2
}, {
  start: 92880,
  length: 30,
  convRule: rule14
}, {
  start: 92912,
  length: 5,
  convRule: rule92
}, {
  start: 92917,
  length: 1,
  convRule: rule2
}, {
  start: 92928,
  length: 48,
  convRule: rule14
}, {
  start: 92976,
  length: 7,
  convRule: rule92
}, {
  start: 92983,
  length: 5,
  convRule: rule2
}, {
  start: 92988,
  length: 4,
  convRule: rule13
}, {
  start: 92992,
  length: 4,
  convRule: rule91
}, {
  start: 92996,
  length: 1,
  convRule: rule2
}, {
  start: 92997,
  length: 1,
  convRule: rule13
}, {
  start: 93008,
  length: 10,
  convRule: rule8
}, {
  start: 93019,
  length: 7,
  convRule: rule17
}, {
  start: 93027,
  length: 21,
  convRule: rule14
}, {
  start: 93053,
  length: 19,
  convRule: rule14
}, {
  start: 93760,
  length: 32,
  convRule: rule9
}, {
  start: 93792,
  length: 32,
  convRule: rule12
}, {
  start: 93824,
  length: 23,
  convRule: rule17
}, {
  start: 93847,
  length: 4,
  convRule: rule2
}, {
  start: 93952,
  length: 75,
  convRule: rule14
}, {
  start: 94031,
  length: 1,
  convRule: rule92
}, {
  start: 94032,
  length: 1,
  convRule: rule14
}, {
  start: 94033,
  length: 55,
  convRule: rule124
}, {
  start: 94095,
  length: 4,
  convRule: rule92
}, {
  start: 94099,
  length: 13,
  convRule: rule91
}, {
  start: 94176,
  length: 2,
  convRule: rule91
}, {
  start: 94178,
  length: 1,
  convRule: rule2
}, {
  start: 94179,
  length: 1,
  convRule: rule91
}, {
  start: 94180,
  length: 1,
  convRule: rule92
}, {
  start: 94192,
  length: 2,
  convRule: rule124
}, {
  start: 94208,
  length: 6136,
  convRule: rule14
}, {
  start: 100352,
  length: 1238,
  convRule: rule14
}, {
  start: 101632,
  length: 9,
  convRule: rule14
}, {
  start: 110592,
  length: 287,
  convRule: rule14
}, {
  start: 110928,
  length: 3,
  convRule: rule14
}, {
  start: 110948,
  length: 4,
  convRule: rule14
}, {
  start: 110960,
  length: 396,
  convRule: rule14
}, {
  start: 113664,
  length: 107,
  convRule: rule14
}, {
  start: 113776,
  length: 13,
  convRule: rule14
}, {
  start: 113792,
  length: 9,
  convRule: rule14
}, {
  start: 113808,
  length: 10,
  convRule: rule14
}, {
  start: 113820,
  length: 1,
  convRule: rule13
}, {
  start: 113821,
  length: 2,
  convRule: rule92
}, {
  start: 113823,
  length: 1,
  convRule: rule2
}, {
  start: 113824,
  length: 4,
  convRule: rule16
}, {
  start: 118784,
  length: 246,
  convRule: rule13
}, {
  start: 119040,
  length: 39,
  convRule: rule13
}, {
  start: 119081,
  length: 60,
  convRule: rule13
}, {
  start: 119141,
  length: 2,
  convRule: rule124
}, {
  start: 119143,
  length: 3,
  convRule: rule92
}, {
  start: 119146,
  length: 3,
  convRule: rule13
}, {
  start: 119149,
  length: 6,
  convRule: rule124
}, {
  start: 119155,
  length: 8,
  convRule: rule16
}, {
  start: 119163,
  length: 8,
  convRule: rule92
}, {
  start: 119171,
  length: 2,
  convRule: rule13
}, {
  start: 119173,
  length: 7,
  convRule: rule92
}, {
  start: 119180,
  length: 30,
  convRule: rule13
}, {
  start: 119210,
  length: 4,
  convRule: rule92
}, {
  start: 119214,
  length: 59,
  convRule: rule13
}, {
  start: 119296,
  length: 66,
  convRule: rule13
}, {
  start: 119362,
  length: 3,
  convRule: rule92
}, {
  start: 119365,
  length: 1,
  convRule: rule13
}, {
  start: 119520,
  length: 20,
  convRule: rule17
}, {
  start: 119552,
  length: 87,
  convRule: rule13
}, {
  start: 119648,
  length: 25,
  convRule: rule17
}, {
  start: 119808,
  length: 26,
  convRule: rule107
}, {
  start: 119834,
  length: 26,
  convRule: rule20
}, {
  start: 119860,
  length: 26,
  convRule: rule107
}, {
  start: 119886,
  length: 7,
  convRule: rule20
}, {
  start: 119894,
  length: 18,
  convRule: rule20
}, {
  start: 119912,
  length: 26,
  convRule: rule107
}, {
  start: 119938,
  length: 26,
  convRule: rule20
}, {
  start: 119964,
  length: 1,
  convRule: rule107
}, {
  start: 119966,
  length: 2,
  convRule: rule107
}, {
  start: 119970,
  length: 1,
  convRule: rule107
}, {
  start: 119973,
  length: 2,
  convRule: rule107
}, {
  start: 119977,
  length: 4,
  convRule: rule107
}, {
  start: 119982,
  length: 8,
  convRule: rule107
}, {
  start: 119990,
  length: 4,
  convRule: rule20
}, {
  start: 119995,
  length: 1,
  convRule: rule20
}, {
  start: 119997,
  length: 7,
  convRule: rule20
}, {
  start: 120005,
  length: 11,
  convRule: rule20
}, {
  start: 120016,
  length: 26,
  convRule: rule107
}, {
  start: 120042,
  length: 26,
  convRule: rule20
}, {
  start: 120068,
  length: 2,
  convRule: rule107
}, {
  start: 120071,
  length: 4,
  convRule: rule107
}, {
  start: 120077,
  length: 8,
  convRule: rule107
}, {
  start: 120086,
  length: 7,
  convRule: rule107
}, {
  start: 120094,
  length: 26,
  convRule: rule20
}, {
  start: 120120,
  length: 2,
  convRule: rule107
}, {
  start: 120123,
  length: 4,
  convRule: rule107
}, {
  start: 120128,
  length: 5,
  convRule: rule107
}, {
  start: 120134,
  length: 1,
  convRule: rule107
}, {
  start: 120138,
  length: 7,
  convRule: rule107
}, {
  start: 120146,
  length: 26,
  convRule: rule20
}, {
  start: 120172,
  length: 26,
  convRule: rule107
}, {
  start: 120198,
  length: 26,
  convRule: rule20
}, {
  start: 120224,
  length: 26,
  convRule: rule107
}, {
  start: 120250,
  length: 26,
  convRule: rule20
}, {
  start: 120276,
  length: 26,
  convRule: rule107
}, {
  start: 120302,
  length: 26,
  convRule: rule20
}, {
  start: 120328,
  length: 26,
  convRule: rule107
}, {
  start: 120354,
  length: 26,
  convRule: rule20
}, {
  start: 120380,
  length: 26,
  convRule: rule107
}, {
  start: 120406,
  length: 26,
  convRule: rule20
}, {
  start: 120432,
  length: 26,
  convRule: rule107
}, {
  start: 120458,
  length: 28,
  convRule: rule20
}, {
  start: 120488,
  length: 25,
  convRule: rule107
}, {
  start: 120513,
  length: 1,
  convRule: rule6
}, {
  start: 120514,
  length: 25,
  convRule: rule20
}, {
  start: 120539,
  length: 1,
  convRule: rule6
}, {
  start: 120540,
  length: 6,
  convRule: rule20
}, {
  start: 120546,
  length: 25,
  convRule: rule107
}, {
  start: 120571,
  length: 1,
  convRule: rule6
}, {
  start: 120572,
  length: 25,
  convRule: rule20
}, {
  start: 120597,
  length: 1,
  convRule: rule6
}, {
  start: 120598,
  length: 6,
  convRule: rule20
}, {
  start: 120604,
  length: 25,
  convRule: rule107
}, {
  start: 120629,
  length: 1,
  convRule: rule6
}, {
  start: 120630,
  length: 25,
  convRule: rule20
}, {
  start: 120655,
  length: 1,
  convRule: rule6
}, {
  start: 120656,
  length: 6,
  convRule: rule20
}, {
  start: 120662,
  length: 25,
  convRule: rule107
}, {
  start: 120687,
  length: 1,
  convRule: rule6
}, {
  start: 120688,
  length: 25,
  convRule: rule20
}, {
  start: 120713,
  length: 1,
  convRule: rule6
}, {
  start: 120714,
  length: 6,
  convRule: rule20
}, {
  start: 120720,
  length: 25,
  convRule: rule107
}, {
  start: 120745,
  length: 1,
  convRule: rule6
}, {
  start: 120746,
  length: 25,
  convRule: rule20
}, {
  start: 120771,
  length: 1,
  convRule: rule6
}, {
  start: 120772,
  length: 6,
  convRule: rule20
}, {
  start: 120778,
  length: 1,
  convRule: rule107
}, {
  start: 120779,
  length: 1,
  convRule: rule20
}, {
  start: 120782,
  length: 50,
  convRule: rule8
}, {
  start: 120832,
  length: 512,
  convRule: rule13
}, {
  start: 121344,
  length: 55,
  convRule: rule92
}, {
  start: 121399,
  length: 4,
  convRule: rule13
}, {
  start: 121403,
  length: 50,
  convRule: rule92
}, {
  start: 121453,
  length: 8,
  convRule: rule13
}, {
  start: 121461,
  length: 1,
  convRule: rule92
}, {
  start: 121462,
  length: 14,
  convRule: rule13
}, {
  start: 121476,
  length: 1,
  convRule: rule92
}, {
  start: 121477,
  length: 2,
  convRule: rule13
}, {
  start: 121479,
  length: 5,
  convRule: rule2
}, {
  start: 121499,
  length: 5,
  convRule: rule92
}, {
  start: 121505,
  length: 15,
  convRule: rule92
}, {
  start: 122880,
  length: 7,
  convRule: rule92
}, {
  start: 122888,
  length: 17,
  convRule: rule92
}, {
  start: 122907,
  length: 7,
  convRule: rule92
}, {
  start: 122915,
  length: 2,
  convRule: rule92
}, {
  start: 122918,
  length: 5,
  convRule: rule92
}, {
  start: 123136,
  length: 45,
  convRule: rule14
}, {
  start: 123184,
  length: 7,
  convRule: rule92
}, {
  start: 123191,
  length: 7,
  convRule: rule91
}, {
  start: 123200,
  length: 10,
  convRule: rule8
}, {
  start: 123214,
  length: 1,
  convRule: rule14
}, {
  start: 123215,
  length: 1,
  convRule: rule13
}, {
  start: 123584,
  length: 44,
  convRule: rule14
}, {
  start: 123628,
  length: 4,
  convRule: rule92
}, {
  start: 123632,
  length: 10,
  convRule: rule8
}, {
  start: 123647,
  length: 1,
  convRule: rule3
}, {
  start: 124928,
  length: 197,
  convRule: rule14
}, {
  start: 125127,
  length: 9,
  convRule: rule17
}, {
  start: 125136,
  length: 7,
  convRule: rule92
}, {
  start: 125184,
  length: 34,
  convRule: rule203
}, {
  start: 125218,
  length: 34,
  convRule: rule204
}, {
  start: 125252,
  length: 7,
  convRule: rule92
}, {
  start: 125259,
  length: 1,
  convRule: rule91
}, {
  start: 125264,
  length: 10,
  convRule: rule8
}, {
  start: 125278,
  length: 2,
  convRule: rule2
}, {
  start: 126065,
  length: 59,
  convRule: rule17
}, {
  start: 126124,
  length: 1,
  convRule: rule13
}, {
  start: 126125,
  length: 3,
  convRule: rule17
}, {
  start: 126128,
  length: 1,
  convRule: rule3
}, {
  start: 126129,
  length: 4,
  convRule: rule17
}, {
  start: 126209,
  length: 45,
  convRule: rule17
}, {
  start: 126254,
  length: 1,
  convRule: rule13
}, {
  start: 126255,
  length: 15,
  convRule: rule17
}, {
  start: 126464,
  length: 4,
  convRule: rule14
}, {
  start: 126469,
  length: 27,
  convRule: rule14
}, {
  start: 126497,
  length: 2,
  convRule: rule14
}, {
  start: 126500,
  length: 1,
  convRule: rule14
}, {
  start: 126503,
  length: 1,
  convRule: rule14
}, {
  start: 126505,
  length: 10,
  convRule: rule14
}, {
  start: 126516,
  length: 4,
  convRule: rule14
}, {
  start: 126521,
  length: 1,
  convRule: rule14
}, {
  start: 126523,
  length: 1,
  convRule: rule14
}, {
  start: 126530,
  length: 1,
  convRule: rule14
}, {
  start: 126535,
  length: 1,
  convRule: rule14
}, {
  start: 126537,
  length: 1,
  convRule: rule14
}, {
  start: 126539,
  length: 1,
  convRule: rule14
}, {
  start: 126541,
  length: 3,
  convRule: rule14
}, {
  start: 126545,
  length: 2,
  convRule: rule14
}, {
  start: 126548,
  length: 1,
  convRule: rule14
}, {
  start: 126551,
  length: 1,
  convRule: rule14
}, {
  start: 126553,
  length: 1,
  convRule: rule14
}, {
  start: 126555,
  length: 1,
  convRule: rule14
}, {
  start: 126557,
  length: 1,
  convRule: rule14
}, {
  start: 126559,
  length: 1,
  convRule: rule14
}, {
  start: 126561,
  length: 2,
  convRule: rule14
}, {
  start: 126564,
  length: 1,
  convRule: rule14
}, {
  start: 126567,
  length: 4,
  convRule: rule14
}, {
  start: 126572,
  length: 7,
  convRule: rule14
}, {
  start: 126580,
  length: 4,
  convRule: rule14
}, {
  start: 126585,
  length: 4,
  convRule: rule14
}, {
  start: 126590,
  length: 1,
  convRule: rule14
}, {
  start: 126592,
  length: 10,
  convRule: rule14
}, {
  start: 126603,
  length: 17,
  convRule: rule14
}, {
  start: 126625,
  length: 3,
  convRule: rule14
}, {
  start: 126629,
  length: 5,
  convRule: rule14
}, {
  start: 126635,
  length: 17,
  convRule: rule14
}, {
  start: 126704,
  length: 2,
  convRule: rule6
}, {
  start: 126976,
  length: 44,
  convRule: rule13
}, {
  start: 127024,
  length: 100,
  convRule: rule13
}, {
  start: 127136,
  length: 15,
  convRule: rule13
}, {
  start: 127153,
  length: 15,
  convRule: rule13
}, {
  start: 127169,
  length: 15,
  convRule: rule13
}, {
  start: 127185,
  length: 37,
  convRule: rule13
}, {
  start: 127232,
  length: 13,
  convRule: rule17
}, {
  start: 127245,
  length: 161,
  convRule: rule13
}, {
  start: 127462,
  length: 29,
  convRule: rule13
}, {
  start: 127504,
  length: 44,
  convRule: rule13
}, {
  start: 127552,
  length: 9,
  convRule: rule13
}, {
  start: 127568,
  length: 2,
  convRule: rule13
}, {
  start: 127584,
  length: 6,
  convRule: rule13
}, {
  start: 127744,
  length: 251,
  convRule: rule13
}, {
  start: 127995,
  length: 5,
  convRule: rule10
}, {
  start: 128e3,
  length: 728,
  convRule: rule13
}, {
  start: 128736,
  length: 13,
  convRule: rule13
}, {
  start: 128752,
  length: 13,
  convRule: rule13
}, {
  start: 128768,
  length: 116,
  convRule: rule13
}, {
  start: 128896,
  length: 89,
  convRule: rule13
}, {
  start: 128992,
  length: 12,
  convRule: rule13
}, {
  start: 129024,
  length: 12,
  convRule: rule13
}, {
  start: 129040,
  length: 56,
  convRule: rule13
}, {
  start: 129104,
  length: 10,
  convRule: rule13
}, {
  start: 129120,
  length: 40,
  convRule: rule13
}, {
  start: 129168,
  length: 30,
  convRule: rule13
}, {
  start: 129200,
  length: 2,
  convRule: rule13
}, {
  start: 129280,
  length: 121,
  convRule: rule13
}, {
  start: 129402,
  length: 82,
  convRule: rule13
}, {
  start: 129485,
  length: 135,
  convRule: rule13
}, {
  start: 129632,
  length: 14,
  convRule: rule13
}, {
  start: 129648,
  length: 5,
  convRule: rule13
}, {
  start: 129656,
  length: 3,
  convRule: rule13
}, {
  start: 129664,
  length: 7,
  convRule: rule13
}, {
  start: 129680,
  length: 25,
  convRule: rule13
}, {
  start: 129712,
  length: 7,
  convRule: rule13
}, {
  start: 129728,
  length: 3,
  convRule: rule13
}, {
  start: 129744,
  length: 7,
  convRule: rule13
}, {
  start: 129792,
  length: 147,
  convRule: rule13
}, {
  start: 129940,
  length: 55,
  convRule: rule13
}, {
  start: 130032,
  length: 10,
  convRule: rule8
}, {
  start: 131072,
  length: 42718,
  convRule: rule14
}, {
  start: 173824,
  length: 4149,
  convRule: rule14
}, {
  start: 177984,
  length: 222,
  convRule: rule14
}, {
  start: 178208,
  length: 5762,
  convRule: rule14
}, {
  start: 183984,
  length: 7473,
  convRule: rule14
}, {
  start: 194560,
  length: 542,
  convRule: rule14
}, {
  start: 196608,
  length: 4939,
  convRule: rule14
}, {
  start: 917505,
  length: 1,
  convRule: rule16
}, {
  start: 917536,
  length: 96,
  convRule: rule16
}, {
  start: 917760,
  length: 240,
  convRule: rule92
}, {
  start: 983040,
  length: 65534,
  convRule: rule200
}, {
  start: 1048576,
  length: 65534,
  convRule: rule200
}];
var checkAttr = function(categories) {
  return function($$char2) {
    var numOfBlocks = function() {
      var $43 = $$char2 < 256;
      if ($43) {
        return numLat1Blocks;
      }
      ;
      return numBlocks;
    }();
    var maybeConversionRule = getRule(allchars)($$char2)(numOfBlocks);
    if (maybeConversionRule instanceof Nothing) {
      return false;
    }
    ;
    if (maybeConversionRule instanceof Just) {
      return isJust(elemIndex2(maybeConversionRule.value0.category)(categories));
    }
    ;
    throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5645, column 5 - line 5647, column 86): " + [maybeConversionRule.constructor.name]);
  };
};
var uIswalpha = /* @__PURE__ */ checkAttr([gencatLL, gencatLU, gencatLT, gencatLM, gencatLO]);
var uIswlower = /* @__PURE__ */ checkAttr([gencatLL]);
var uGencat = function($$char2) {
  var conversionRule = getRule(allchars)($$char2)(numBlocks);
  return map15(function(v) {
    return v.unicodeCat;
  })(conversionRule);
};

// output/Data.CodePoint.Unicode.Internal.Casing/index.js
var compare71 = /* @__PURE__ */ compare(ordInt);
var zeroRec = function(code) {
  return {
    code,
    lower: [],
    title: [],
    upper: [],
    fold: 0,
    foldFull: []
  };
};
var rules = [{
  code: 65,
  lower: [],
  title: [],
  upper: [],
  fold: 97,
  foldFull: [97]
}, {
  code: 66,
  lower: [],
  title: [],
  upper: [],
  fold: 98,
  foldFull: [98]
}, {
  code: 67,
  lower: [],
  title: [],
  upper: [],
  fold: 99,
  foldFull: [99]
}, {
  code: 68,
  lower: [],
  title: [],
  upper: [],
  fold: 100,
  foldFull: [100]
}, {
  code: 69,
  lower: [],
  title: [],
  upper: [],
  fold: 101,
  foldFull: [101]
}, {
  code: 70,
  lower: [],
  title: [],
  upper: [],
  fold: 102,
  foldFull: [102]
}, {
  code: 71,
  lower: [],
  title: [],
  upper: [],
  fold: 103,
  foldFull: [103]
}, {
  code: 72,
  lower: [],
  title: [],
  upper: [],
  fold: 104,
  foldFull: [104]
}, {
  code: 73,
  lower: [],
  title: [],
  upper: [],
  fold: 105,
  foldFull: [105]
}, {
  code: 74,
  lower: [],
  title: [],
  upper: [],
  fold: 106,
  foldFull: [106]
}, {
  code: 75,
  lower: [],
  title: [],
  upper: [],
  fold: 107,
  foldFull: [107]
}, {
  code: 76,
  lower: [],
  title: [],
  upper: [],
  fold: 108,
  foldFull: [108]
}, {
  code: 77,
  lower: [],
  title: [],
  upper: [],
  fold: 109,
  foldFull: [109]
}, {
  code: 78,
  lower: [],
  title: [],
  upper: [],
  fold: 110,
  foldFull: [110]
}, {
  code: 79,
  lower: [],
  title: [],
  upper: [],
  fold: 111,
  foldFull: [111]
}, {
  code: 80,
  lower: [],
  title: [],
  upper: [],
  fold: 112,
  foldFull: [112]
}, {
  code: 81,
  lower: [],
  title: [],
  upper: [],
  fold: 113,
  foldFull: [113]
}, {
  code: 82,
  lower: [],
  title: [],
  upper: [],
  fold: 114,
  foldFull: [114]
}, {
  code: 83,
  lower: [],
  title: [],
  upper: [],
  fold: 115,
  foldFull: [115]
}, {
  code: 84,
  lower: [],
  title: [],
  upper: [],
  fold: 116,
  foldFull: [116]
}, {
  code: 85,
  lower: [],
  title: [],
  upper: [],
  fold: 117,
  foldFull: [117]
}, {
  code: 86,
  lower: [],
  title: [],
  upper: [],
  fold: 118,
  foldFull: [118]
}, {
  code: 87,
  lower: [],
  title: [],
  upper: [],
  fold: 119,
  foldFull: [119]
}, {
  code: 88,
  lower: [],
  title: [],
  upper: [],
  fold: 120,
  foldFull: [120]
}, {
  code: 89,
  lower: [],
  title: [],
  upper: [],
  fold: 121,
  foldFull: [121]
}, {
  code: 90,
  lower: [],
  title: [],
  upper: [],
  fold: 122,
  foldFull: [122]
}, {
  code: 181,
  lower: [],
  title: [],
  upper: [],
  fold: 956,
  foldFull: [956]
}, {
  code: 192,
  lower: [],
  title: [],
  upper: [],
  fold: 224,
  foldFull: [224]
}, {
  code: 193,
  lower: [],
  title: [],
  upper: [],
  fold: 225,
  foldFull: [225]
}, {
  code: 194,
  lower: [],
  title: [],
  upper: [],
  fold: 226,
  foldFull: [226]
}, {
  code: 195,
  lower: [],
  title: [],
  upper: [],
  fold: 227,
  foldFull: [227]
}, {
  code: 196,
  lower: [],
  title: [],
  upper: [],
  fold: 228,
  foldFull: [228]
}, {
  code: 197,
  lower: [],
  title: [],
  upper: [],
  fold: 229,
  foldFull: [229]
}, {
  code: 198,
  lower: [],
  title: [],
  upper: [],
  fold: 230,
  foldFull: [230]
}, {
  code: 199,
  lower: [],
  title: [],
  upper: [],
  fold: 231,
  foldFull: [231]
}, {
  code: 200,
  lower: [],
  title: [],
  upper: [],
  fold: 232,
  foldFull: [232]
}, {
  code: 201,
  lower: [],
  title: [],
  upper: [],
  fold: 233,
  foldFull: [233]
}, {
  code: 202,
  lower: [],
  title: [],
  upper: [],
  fold: 234,
  foldFull: [234]
}, {
  code: 203,
  lower: [],
  title: [],
  upper: [],
  fold: 235,
  foldFull: [235]
}, {
  code: 204,
  lower: [],
  title: [],
  upper: [],
  fold: 236,
  foldFull: [236]
}, {
  code: 205,
  lower: [],
  title: [],
  upper: [],
  fold: 237,
  foldFull: [237]
}, {
  code: 206,
  lower: [],
  title: [],
  upper: [],
  fold: 238,
  foldFull: [238]
}, {
  code: 207,
  lower: [],
  title: [],
  upper: [],
  fold: 239,
  foldFull: [239]
}, {
  code: 208,
  lower: [],
  title: [],
  upper: [],
  fold: 240,
  foldFull: [240]
}, {
  code: 209,
  lower: [],
  title: [],
  upper: [],
  fold: 241,
  foldFull: [241]
}, {
  code: 210,
  lower: [],
  title: [],
  upper: [],
  fold: 242,
  foldFull: [242]
}, {
  code: 211,
  lower: [],
  title: [],
  upper: [],
  fold: 243,
  foldFull: [243]
}, {
  code: 212,
  lower: [],
  title: [],
  upper: [],
  fold: 244,
  foldFull: [244]
}, {
  code: 213,
  lower: [],
  title: [],
  upper: [],
  fold: 245,
  foldFull: [245]
}, {
  code: 214,
  lower: [],
  title: [],
  upper: [],
  fold: 246,
  foldFull: [246]
}, {
  code: 216,
  lower: [],
  title: [],
  upper: [],
  fold: 248,
  foldFull: [248]
}, {
  code: 217,
  lower: [],
  title: [],
  upper: [],
  fold: 249,
  foldFull: [249]
}, {
  code: 218,
  lower: [],
  title: [],
  upper: [],
  fold: 250,
  foldFull: [250]
}, {
  code: 219,
  lower: [],
  title: [],
  upper: [],
  fold: 251,
  foldFull: [251]
}, {
  code: 220,
  lower: [],
  title: [],
  upper: [],
  fold: 252,
  foldFull: [252]
}, {
  code: 221,
  lower: [],
  title: [],
  upper: [],
  fold: 253,
  foldFull: [253]
}, {
  code: 222,
  lower: [],
  title: [],
  upper: [],
  fold: 254,
  foldFull: [254]
}, {
  code: 223,
  lower: [223],
  title: [83, 115],
  upper: [83, 83],
  fold: 0,
  foldFull: [115, 115]
}, {
  code: 223,
  lower: [223],
  title: [83, 115],
  upper: [83, 83],
  fold: 0,
  foldFull: [115, 115]
}, {
  code: 256,
  lower: [],
  title: [],
  upper: [],
  fold: 257,
  foldFull: [257]
}, {
  code: 258,
  lower: [],
  title: [],
  upper: [],
  fold: 259,
  foldFull: [259]
}, {
  code: 260,
  lower: [],
  title: [],
  upper: [],
  fold: 261,
  foldFull: [261]
}, {
  code: 262,
  lower: [],
  title: [],
  upper: [],
  fold: 263,
  foldFull: [263]
}, {
  code: 264,
  lower: [],
  title: [],
  upper: [],
  fold: 265,
  foldFull: [265]
}, {
  code: 266,
  lower: [],
  title: [],
  upper: [],
  fold: 267,
  foldFull: [267]
}, {
  code: 268,
  lower: [],
  title: [],
  upper: [],
  fold: 269,
  foldFull: [269]
}, {
  code: 270,
  lower: [],
  title: [],
  upper: [],
  fold: 271,
  foldFull: [271]
}, {
  code: 272,
  lower: [],
  title: [],
  upper: [],
  fold: 273,
  foldFull: [273]
}, {
  code: 274,
  lower: [],
  title: [],
  upper: [],
  fold: 275,
  foldFull: [275]
}, {
  code: 276,
  lower: [],
  title: [],
  upper: [],
  fold: 277,
  foldFull: [277]
}, {
  code: 278,
  lower: [],
  title: [],
  upper: [],
  fold: 279,
  foldFull: [279]
}, {
  code: 280,
  lower: [],
  title: [],
  upper: [],
  fold: 281,
  foldFull: [281]
}, {
  code: 282,
  lower: [],
  title: [],
  upper: [],
  fold: 283,
  foldFull: [283]
}, {
  code: 284,
  lower: [],
  title: [],
  upper: [],
  fold: 285,
  foldFull: [285]
}, {
  code: 286,
  lower: [],
  title: [],
  upper: [],
  fold: 287,
  foldFull: [287]
}, {
  code: 288,
  lower: [],
  title: [],
  upper: [],
  fold: 289,
  foldFull: [289]
}, {
  code: 290,
  lower: [],
  title: [],
  upper: [],
  fold: 291,
  foldFull: [291]
}, {
  code: 292,
  lower: [],
  title: [],
  upper: [],
  fold: 293,
  foldFull: [293]
}, {
  code: 294,
  lower: [],
  title: [],
  upper: [],
  fold: 295,
  foldFull: [295]
}, {
  code: 296,
  lower: [],
  title: [],
  upper: [],
  fold: 297,
  foldFull: [297]
}, {
  code: 298,
  lower: [],
  title: [],
  upper: [],
  fold: 299,
  foldFull: [299]
}, {
  code: 300,
  lower: [],
  title: [],
  upper: [],
  fold: 301,
  foldFull: [301]
}, {
  code: 302,
  lower: [],
  title: [],
  upper: [],
  fold: 303,
  foldFull: [303]
}, {
  code: 304,
  lower: [105, 775],
  title: [304],
  upper: [304],
  fold: 0,
  foldFull: [105, 775]
}, {
  code: 304,
  lower: [105, 775],
  title: [304],
  upper: [304],
  fold: 0,
  foldFull: [105, 775]
}, {
  code: 306,
  lower: [],
  title: [],
  upper: [],
  fold: 307,
  foldFull: [307]
}, {
  code: 308,
  lower: [],
  title: [],
  upper: [],
  fold: 309,
  foldFull: [309]
}, {
  code: 310,
  lower: [],
  title: [],
  upper: [],
  fold: 311,
  foldFull: [311]
}, {
  code: 313,
  lower: [],
  title: [],
  upper: [],
  fold: 314,
  foldFull: [314]
}, {
  code: 315,
  lower: [],
  title: [],
  upper: [],
  fold: 316,
  foldFull: [316]
}, {
  code: 317,
  lower: [],
  title: [],
  upper: [],
  fold: 318,
  foldFull: [318]
}, {
  code: 319,
  lower: [],
  title: [],
  upper: [],
  fold: 320,
  foldFull: [320]
}, {
  code: 321,
  lower: [],
  title: [],
  upper: [],
  fold: 322,
  foldFull: [322]
}, {
  code: 323,
  lower: [],
  title: [],
  upper: [],
  fold: 324,
  foldFull: [324]
}, {
  code: 325,
  lower: [],
  title: [],
  upper: [],
  fold: 326,
  foldFull: [326]
}, {
  code: 327,
  lower: [],
  title: [],
  upper: [],
  fold: 328,
  foldFull: [328]
}, {
  code: 329,
  lower: [329],
  title: [700, 78],
  upper: [700, 78],
  fold: 0,
  foldFull: [700, 110]
}, {
  code: 329,
  lower: [329],
  title: [700, 78],
  upper: [700, 78],
  fold: 0,
  foldFull: [700, 110]
}, {
  code: 330,
  lower: [],
  title: [],
  upper: [],
  fold: 331,
  foldFull: [331]
}, {
  code: 332,
  lower: [],
  title: [],
  upper: [],
  fold: 333,
  foldFull: [333]
}, {
  code: 334,
  lower: [],
  title: [],
  upper: [],
  fold: 335,
  foldFull: [335]
}, {
  code: 336,
  lower: [],
  title: [],
  upper: [],
  fold: 337,
  foldFull: [337]
}, {
  code: 338,
  lower: [],
  title: [],
  upper: [],
  fold: 339,
  foldFull: [339]
}, {
  code: 340,
  lower: [],
  title: [],
  upper: [],
  fold: 341,
  foldFull: [341]
}, {
  code: 342,
  lower: [],
  title: [],
  upper: [],
  fold: 343,
  foldFull: [343]
}, {
  code: 344,
  lower: [],
  title: [],
  upper: [],
  fold: 345,
  foldFull: [345]
}, {
  code: 346,
  lower: [],
  title: [],
  upper: [],
  fold: 347,
  foldFull: [347]
}, {
  code: 348,
  lower: [],
  title: [],
  upper: [],
  fold: 349,
  foldFull: [349]
}, {
  code: 350,
  lower: [],
  title: [],
  upper: [],
  fold: 351,
  foldFull: [351]
}, {
  code: 352,
  lower: [],
  title: [],
  upper: [],
  fold: 353,
  foldFull: [353]
}, {
  code: 354,
  lower: [],
  title: [],
  upper: [],
  fold: 355,
  foldFull: [355]
}, {
  code: 356,
  lower: [],
  title: [],
  upper: [],
  fold: 357,
  foldFull: [357]
}, {
  code: 358,
  lower: [],
  title: [],
  upper: [],
  fold: 359,
  foldFull: [359]
}, {
  code: 360,
  lower: [],
  title: [],
  upper: [],
  fold: 361,
  foldFull: [361]
}, {
  code: 362,
  lower: [],
  title: [],
  upper: [],
  fold: 363,
  foldFull: [363]
}, {
  code: 364,
  lower: [],
  title: [],
  upper: [],
  fold: 365,
  foldFull: [365]
}, {
  code: 366,
  lower: [],
  title: [],
  upper: [],
  fold: 367,
  foldFull: [367]
}, {
  code: 368,
  lower: [],
  title: [],
  upper: [],
  fold: 369,
  foldFull: [369]
}, {
  code: 370,
  lower: [],
  title: [],
  upper: [],
  fold: 371,
  foldFull: [371]
}, {
  code: 372,
  lower: [],
  title: [],
  upper: [],
  fold: 373,
  foldFull: [373]
}, {
  code: 374,
  lower: [],
  title: [],
  upper: [],
  fold: 375,
  foldFull: [375]
}, {
  code: 376,
  lower: [],
  title: [],
  upper: [],
  fold: 255,
  foldFull: [255]
}, {
  code: 377,
  lower: [],
  title: [],
  upper: [],
  fold: 378,
  foldFull: [378]
}, {
  code: 379,
  lower: [],
  title: [],
  upper: [],
  fold: 380,
  foldFull: [380]
}, {
  code: 381,
  lower: [],
  title: [],
  upper: [],
  fold: 382,
  foldFull: [382]
}, {
  code: 383,
  lower: [],
  title: [],
  upper: [],
  fold: 115,
  foldFull: [115]
}, {
  code: 385,
  lower: [],
  title: [],
  upper: [],
  fold: 595,
  foldFull: [595]
}, {
  code: 386,
  lower: [],
  title: [],
  upper: [],
  fold: 387,
  foldFull: [387]
}, {
  code: 388,
  lower: [],
  title: [],
  upper: [],
  fold: 389,
  foldFull: [389]
}, {
  code: 390,
  lower: [],
  title: [],
  upper: [],
  fold: 596,
  foldFull: [596]
}, {
  code: 391,
  lower: [],
  title: [],
  upper: [],
  fold: 392,
  foldFull: [392]
}, {
  code: 393,
  lower: [],
  title: [],
  upper: [],
  fold: 598,
  foldFull: [598]
}, {
  code: 394,
  lower: [],
  title: [],
  upper: [],
  fold: 599,
  foldFull: [599]
}, {
  code: 395,
  lower: [],
  title: [],
  upper: [],
  fold: 396,
  foldFull: [396]
}, {
  code: 398,
  lower: [],
  title: [],
  upper: [],
  fold: 477,
  foldFull: [477]
}, {
  code: 399,
  lower: [],
  title: [],
  upper: [],
  fold: 601,
  foldFull: [601]
}, {
  code: 400,
  lower: [],
  title: [],
  upper: [],
  fold: 603,
  foldFull: [603]
}, {
  code: 401,
  lower: [],
  title: [],
  upper: [],
  fold: 402,
  foldFull: [402]
}, {
  code: 403,
  lower: [],
  title: [],
  upper: [],
  fold: 608,
  foldFull: [608]
}, {
  code: 404,
  lower: [],
  title: [],
  upper: [],
  fold: 611,
  foldFull: [611]
}, {
  code: 406,
  lower: [],
  title: [],
  upper: [],
  fold: 617,
  foldFull: [617]
}, {
  code: 407,
  lower: [],
  title: [],
  upper: [],
  fold: 616,
  foldFull: [616]
}, {
  code: 408,
  lower: [],
  title: [],
  upper: [],
  fold: 409,
  foldFull: [409]
}, {
  code: 412,
  lower: [],
  title: [],
  upper: [],
  fold: 623,
  foldFull: [623]
}, {
  code: 413,
  lower: [],
  title: [],
  upper: [],
  fold: 626,
  foldFull: [626]
}, {
  code: 415,
  lower: [],
  title: [],
  upper: [],
  fold: 629,
  foldFull: [629]
}, {
  code: 416,
  lower: [],
  title: [],
  upper: [],
  fold: 417,
  foldFull: [417]
}, {
  code: 418,
  lower: [],
  title: [],
  upper: [],
  fold: 419,
  foldFull: [419]
}, {
  code: 420,
  lower: [],
  title: [],
  upper: [],
  fold: 421,
  foldFull: [421]
}, {
  code: 422,
  lower: [],
  title: [],
  upper: [],
  fold: 640,
  foldFull: [640]
}, {
  code: 423,
  lower: [],
  title: [],
  upper: [],
  fold: 424,
  foldFull: [424]
}, {
  code: 425,
  lower: [],
  title: [],
  upper: [],
  fold: 643,
  foldFull: [643]
}, {
  code: 428,
  lower: [],
  title: [],
  upper: [],
  fold: 429,
  foldFull: [429]
}, {
  code: 430,
  lower: [],
  title: [],
  upper: [],
  fold: 648,
  foldFull: [648]
}, {
  code: 431,
  lower: [],
  title: [],
  upper: [],
  fold: 432,
  foldFull: [432]
}, {
  code: 433,
  lower: [],
  title: [],
  upper: [],
  fold: 650,
  foldFull: [650]
}, {
  code: 434,
  lower: [],
  title: [],
  upper: [],
  fold: 651,
  foldFull: [651]
}, {
  code: 435,
  lower: [],
  title: [],
  upper: [],
  fold: 436,
  foldFull: [436]
}, {
  code: 437,
  lower: [],
  title: [],
  upper: [],
  fold: 438,
  foldFull: [438]
}, {
  code: 439,
  lower: [],
  title: [],
  upper: [],
  fold: 658,
  foldFull: [658]
}, {
  code: 440,
  lower: [],
  title: [],
  upper: [],
  fold: 441,
  foldFull: [441]
}, {
  code: 444,
  lower: [],
  title: [],
  upper: [],
  fold: 445,
  foldFull: [445]
}, {
  code: 452,
  lower: [],
  title: [],
  upper: [],
  fold: 454,
  foldFull: [454]
}, {
  code: 453,
  lower: [],
  title: [],
  upper: [],
  fold: 454,
  foldFull: [454]
}, {
  code: 455,
  lower: [],
  title: [],
  upper: [],
  fold: 457,
  foldFull: [457]
}, {
  code: 456,
  lower: [],
  title: [],
  upper: [],
  fold: 457,
  foldFull: [457]
}, {
  code: 458,
  lower: [],
  title: [],
  upper: [],
  fold: 460,
  foldFull: [460]
}, {
  code: 459,
  lower: [],
  title: [],
  upper: [],
  fold: 460,
  foldFull: [460]
}, {
  code: 461,
  lower: [],
  title: [],
  upper: [],
  fold: 462,
  foldFull: [462]
}, {
  code: 463,
  lower: [],
  title: [],
  upper: [],
  fold: 464,
  foldFull: [464]
}, {
  code: 465,
  lower: [],
  title: [],
  upper: [],
  fold: 466,
  foldFull: [466]
}, {
  code: 467,
  lower: [],
  title: [],
  upper: [],
  fold: 468,
  foldFull: [468]
}, {
  code: 469,
  lower: [],
  title: [],
  upper: [],
  fold: 470,
  foldFull: [470]
}, {
  code: 471,
  lower: [],
  title: [],
  upper: [],
  fold: 472,
  foldFull: [472]
}, {
  code: 473,
  lower: [],
  title: [],
  upper: [],
  fold: 474,
  foldFull: [474]
}, {
  code: 475,
  lower: [],
  title: [],
  upper: [],
  fold: 476,
  foldFull: [476]
}, {
  code: 478,
  lower: [],
  title: [],
  upper: [],
  fold: 479,
  foldFull: [479]
}, {
  code: 480,
  lower: [],
  title: [],
  upper: [],
  fold: 481,
  foldFull: [481]
}, {
  code: 482,
  lower: [],
  title: [],
  upper: [],
  fold: 483,
  foldFull: [483]
}, {
  code: 484,
  lower: [],
  title: [],
  upper: [],
  fold: 485,
  foldFull: [485]
}, {
  code: 486,
  lower: [],
  title: [],
  upper: [],
  fold: 487,
  foldFull: [487]
}, {
  code: 488,
  lower: [],
  title: [],
  upper: [],
  fold: 489,
  foldFull: [489]
}, {
  code: 490,
  lower: [],
  title: [],
  upper: [],
  fold: 491,
  foldFull: [491]
}, {
  code: 492,
  lower: [],
  title: [],
  upper: [],
  fold: 493,
  foldFull: [493]
}, {
  code: 494,
  lower: [],
  title: [],
  upper: [],
  fold: 495,
  foldFull: [495]
}, {
  code: 496,
  lower: [496],
  title: [74, 780],
  upper: [74, 780],
  fold: 0,
  foldFull: [106, 780]
}, {
  code: 496,
  lower: [496],
  title: [74, 780],
  upper: [74, 780],
  fold: 0,
  foldFull: [106, 780]
}, {
  code: 497,
  lower: [],
  title: [],
  upper: [],
  fold: 499,
  foldFull: [499]
}, {
  code: 498,
  lower: [],
  title: [],
  upper: [],
  fold: 499,
  foldFull: [499]
}, {
  code: 500,
  lower: [],
  title: [],
  upper: [],
  fold: 501,
  foldFull: [501]
}, {
  code: 502,
  lower: [],
  title: [],
  upper: [],
  fold: 405,
  foldFull: [405]
}, {
  code: 503,
  lower: [],
  title: [],
  upper: [],
  fold: 447,
  foldFull: [447]
}, {
  code: 504,
  lower: [],
  title: [],
  upper: [],
  fold: 505,
  foldFull: [505]
}, {
  code: 506,
  lower: [],
  title: [],
  upper: [],
  fold: 507,
  foldFull: [507]
}, {
  code: 508,
  lower: [],
  title: [],
  upper: [],
  fold: 509,
  foldFull: [509]
}, {
  code: 510,
  lower: [],
  title: [],
  upper: [],
  fold: 511,
  foldFull: [511]
}, {
  code: 512,
  lower: [],
  title: [],
  upper: [],
  fold: 513,
  foldFull: [513]
}, {
  code: 514,
  lower: [],
  title: [],
  upper: [],
  fold: 515,
  foldFull: [515]
}, {
  code: 516,
  lower: [],
  title: [],
  upper: [],
  fold: 517,
  foldFull: [517]
}, {
  code: 518,
  lower: [],
  title: [],
  upper: [],
  fold: 519,
  foldFull: [519]
}, {
  code: 520,
  lower: [],
  title: [],
  upper: [],
  fold: 521,
  foldFull: [521]
}, {
  code: 522,
  lower: [],
  title: [],
  upper: [],
  fold: 523,
  foldFull: [523]
}, {
  code: 524,
  lower: [],
  title: [],
  upper: [],
  fold: 525,
  foldFull: [525]
}, {
  code: 526,
  lower: [],
  title: [],
  upper: [],
  fold: 527,
  foldFull: [527]
}, {
  code: 528,
  lower: [],
  title: [],
  upper: [],
  fold: 529,
  foldFull: [529]
}, {
  code: 530,
  lower: [],
  title: [],
  upper: [],
  fold: 531,
  foldFull: [531]
}, {
  code: 532,
  lower: [],
  title: [],
  upper: [],
  fold: 533,
  foldFull: [533]
}, {
  code: 534,
  lower: [],
  title: [],
  upper: [],
  fold: 535,
  foldFull: [535]
}, {
  code: 536,
  lower: [],
  title: [],
  upper: [],
  fold: 537,
  foldFull: [537]
}, {
  code: 538,
  lower: [],
  title: [],
  upper: [],
  fold: 539,
  foldFull: [539]
}, {
  code: 540,
  lower: [],
  title: [],
  upper: [],
  fold: 541,
  foldFull: [541]
}, {
  code: 542,
  lower: [],
  title: [],
  upper: [],
  fold: 543,
  foldFull: [543]
}, {
  code: 544,
  lower: [],
  title: [],
  upper: [],
  fold: 414,
  foldFull: [414]
}, {
  code: 546,
  lower: [],
  title: [],
  upper: [],
  fold: 547,
  foldFull: [547]
}, {
  code: 548,
  lower: [],
  title: [],
  upper: [],
  fold: 549,
  foldFull: [549]
}, {
  code: 550,
  lower: [],
  title: [],
  upper: [],
  fold: 551,
  foldFull: [551]
}, {
  code: 552,
  lower: [],
  title: [],
  upper: [],
  fold: 553,
  foldFull: [553]
}, {
  code: 554,
  lower: [],
  title: [],
  upper: [],
  fold: 555,
  foldFull: [555]
}, {
  code: 556,
  lower: [],
  title: [],
  upper: [],
  fold: 557,
  foldFull: [557]
}, {
  code: 558,
  lower: [],
  title: [],
  upper: [],
  fold: 559,
  foldFull: [559]
}, {
  code: 560,
  lower: [],
  title: [],
  upper: [],
  fold: 561,
  foldFull: [561]
}, {
  code: 562,
  lower: [],
  title: [],
  upper: [],
  fold: 563,
  foldFull: [563]
}, {
  code: 570,
  lower: [],
  title: [],
  upper: [],
  fold: 11365,
  foldFull: [11365]
}, {
  code: 571,
  lower: [],
  title: [],
  upper: [],
  fold: 572,
  foldFull: [572]
}, {
  code: 573,
  lower: [],
  title: [],
  upper: [],
  fold: 410,
  foldFull: [410]
}, {
  code: 574,
  lower: [],
  title: [],
  upper: [],
  fold: 11366,
  foldFull: [11366]
}, {
  code: 577,
  lower: [],
  title: [],
  upper: [],
  fold: 578,
  foldFull: [578]
}, {
  code: 579,
  lower: [],
  title: [],
  upper: [],
  fold: 384,
  foldFull: [384]
}, {
  code: 580,
  lower: [],
  title: [],
  upper: [],
  fold: 649,
  foldFull: [649]
}, {
  code: 581,
  lower: [],
  title: [],
  upper: [],
  fold: 652,
  foldFull: [652]
}, {
  code: 582,
  lower: [],
  title: [],
  upper: [],
  fold: 583,
  foldFull: [583]
}, {
  code: 584,
  lower: [],
  title: [],
  upper: [],
  fold: 585,
  foldFull: [585]
}, {
  code: 586,
  lower: [],
  title: [],
  upper: [],
  fold: 587,
  foldFull: [587]
}, {
  code: 588,
  lower: [],
  title: [],
  upper: [],
  fold: 589,
  foldFull: [589]
}, {
  code: 590,
  lower: [],
  title: [],
  upper: [],
  fold: 591,
  foldFull: [591]
}, {
  code: 837,
  lower: [],
  title: [],
  upper: [],
  fold: 953,
  foldFull: [953]
}, {
  code: 880,
  lower: [],
  title: [],
  upper: [],
  fold: 881,
  foldFull: [881]
}, {
  code: 882,
  lower: [],
  title: [],
  upper: [],
  fold: 883,
  foldFull: [883]
}, {
  code: 886,
  lower: [],
  title: [],
  upper: [],
  fold: 887,
  foldFull: [887]
}, {
  code: 895,
  lower: [],
  title: [],
  upper: [],
  fold: 1011,
  foldFull: [1011]
}, {
  code: 902,
  lower: [],
  title: [],
  upper: [],
  fold: 940,
  foldFull: [940]
}, {
  code: 904,
  lower: [],
  title: [],
  upper: [],
  fold: 941,
  foldFull: [941]
}, {
  code: 905,
  lower: [],
  title: [],
  upper: [],
  fold: 942,
  foldFull: [942]
}, {
  code: 906,
  lower: [],
  title: [],
  upper: [],
  fold: 943,
  foldFull: [943]
}, {
  code: 908,
  lower: [],
  title: [],
  upper: [],
  fold: 972,
  foldFull: [972]
}, {
  code: 910,
  lower: [],
  title: [],
  upper: [],
  fold: 973,
  foldFull: [973]
}, {
  code: 911,
  lower: [],
  title: [],
  upper: [],
  fold: 974,
  foldFull: [974]
}, {
  code: 912,
  lower: [912],
  title: [921, 776, 769],
  upper: [921, 776, 769],
  fold: 0,
  foldFull: [953, 776, 769]
}, {
  code: 912,
  lower: [912],
  title: [921, 776, 769],
  upper: [921, 776, 769],
  fold: 0,
  foldFull: [953, 776, 769]
}, {
  code: 913,
  lower: [],
  title: [],
  upper: [],
  fold: 945,
  foldFull: [945]
}, {
  code: 914,
  lower: [],
  title: [],
  upper: [],
  fold: 946,
  foldFull: [946]
}, {
  code: 915,
  lower: [],
  title: [],
  upper: [],
  fold: 947,
  foldFull: [947]
}, {
  code: 916,
  lower: [],
  title: [],
  upper: [],
  fold: 948,
  foldFull: [948]
}, {
  code: 917,
  lower: [],
  title: [],
  upper: [],
  fold: 949,
  foldFull: [949]
}, {
  code: 918,
  lower: [],
  title: [],
  upper: [],
  fold: 950,
  foldFull: [950]
}, {
  code: 919,
  lower: [],
  title: [],
  upper: [],
  fold: 951,
  foldFull: [951]
}, {
  code: 920,
  lower: [],
  title: [],
  upper: [],
  fold: 952,
  foldFull: [952]
}, {
  code: 921,
  lower: [],
  title: [],
  upper: [],
  fold: 953,
  foldFull: [953]
}, {
  code: 922,
  lower: [],
  title: [],
  upper: [],
  fold: 954,
  foldFull: [954]
}, {
  code: 923,
  lower: [],
  title: [],
  upper: [],
  fold: 955,
  foldFull: [955]
}, {
  code: 924,
  lower: [],
  title: [],
  upper: [],
  fold: 956,
  foldFull: [956]
}, {
  code: 925,
  lower: [],
  title: [],
  upper: [],
  fold: 957,
  foldFull: [957]
}, {
  code: 926,
  lower: [],
  title: [],
  upper: [],
  fold: 958,
  foldFull: [958]
}, {
  code: 927,
  lower: [],
  title: [],
  upper: [],
  fold: 959,
  foldFull: [959]
}, {
  code: 928,
  lower: [],
  title: [],
  upper: [],
  fold: 960,
  foldFull: [960]
}, {
  code: 929,
  lower: [],
  title: [],
  upper: [],
  fold: 961,
  foldFull: [961]
}, {
  code: 931,
  lower: [],
  title: [],
  upper: [],
  fold: 963,
  foldFull: [963]
}, {
  code: 932,
  lower: [],
  title: [],
  upper: [],
  fold: 964,
  foldFull: [964]
}, {
  code: 933,
  lower: [],
  title: [],
  upper: [],
  fold: 965,
  foldFull: [965]
}, {
  code: 934,
  lower: [],
  title: [],
  upper: [],
  fold: 966,
  foldFull: [966]
}, {
  code: 935,
  lower: [],
  title: [],
  upper: [],
  fold: 967,
  foldFull: [967]
}, {
  code: 936,
  lower: [],
  title: [],
  upper: [],
  fold: 968,
  foldFull: [968]
}, {
  code: 937,
  lower: [],
  title: [],
  upper: [],
  fold: 969,
  foldFull: [969]
}, {
  code: 938,
  lower: [],
  title: [],
  upper: [],
  fold: 970,
  foldFull: [970]
}, {
  code: 939,
  lower: [],
  title: [],
  upper: [],
  fold: 971,
  foldFull: [971]
}, {
  code: 944,
  lower: [944],
  title: [933, 776, 769],
  upper: [933, 776, 769],
  fold: 0,
  foldFull: [965, 776, 769]
}, {
  code: 944,
  lower: [944],
  title: [933, 776, 769],
  upper: [933, 776, 769],
  fold: 0,
  foldFull: [965, 776, 769]
}, {
  code: 962,
  lower: [],
  title: [],
  upper: [],
  fold: 963,
  foldFull: [963]
}, {
  code: 975,
  lower: [],
  title: [],
  upper: [],
  fold: 983,
  foldFull: [983]
}, {
  code: 976,
  lower: [],
  title: [],
  upper: [],
  fold: 946,
  foldFull: [946]
}, {
  code: 977,
  lower: [],
  title: [],
  upper: [],
  fold: 952,
  foldFull: [952]
}, {
  code: 981,
  lower: [],
  title: [],
  upper: [],
  fold: 966,
  foldFull: [966]
}, {
  code: 982,
  lower: [],
  title: [],
  upper: [],
  fold: 960,
  foldFull: [960]
}, {
  code: 984,
  lower: [],
  title: [],
  upper: [],
  fold: 985,
  foldFull: [985]
}, {
  code: 986,
  lower: [],
  title: [],
  upper: [],
  fold: 987,
  foldFull: [987]
}, {
  code: 988,
  lower: [],
  title: [],
  upper: [],
  fold: 989,
  foldFull: [989]
}, {
  code: 990,
  lower: [],
  title: [],
  upper: [],
  fold: 991,
  foldFull: [991]
}, {
  code: 992,
  lower: [],
  title: [],
  upper: [],
  fold: 993,
  foldFull: [993]
}, {
  code: 994,
  lower: [],
  title: [],
  upper: [],
  fold: 995,
  foldFull: [995]
}, {
  code: 996,
  lower: [],
  title: [],
  upper: [],
  fold: 997,
  foldFull: [997]
}, {
  code: 998,
  lower: [],
  title: [],
  upper: [],
  fold: 999,
  foldFull: [999]
}, {
  code: 1e3,
  lower: [],
  title: [],
  upper: [],
  fold: 1001,
  foldFull: [1001]
}, {
  code: 1002,
  lower: [],
  title: [],
  upper: [],
  fold: 1003,
  foldFull: [1003]
}, {
  code: 1004,
  lower: [],
  title: [],
  upper: [],
  fold: 1005,
  foldFull: [1005]
}, {
  code: 1006,
  lower: [],
  title: [],
  upper: [],
  fold: 1007,
  foldFull: [1007]
}, {
  code: 1008,
  lower: [],
  title: [],
  upper: [],
  fold: 954,
  foldFull: [954]
}, {
  code: 1009,
  lower: [],
  title: [],
  upper: [],
  fold: 961,
  foldFull: [961]
}, {
  code: 1012,
  lower: [],
  title: [],
  upper: [],
  fold: 952,
  foldFull: [952]
}, {
  code: 1013,
  lower: [],
  title: [],
  upper: [],
  fold: 949,
  foldFull: [949]
}, {
  code: 1015,
  lower: [],
  title: [],
  upper: [],
  fold: 1016,
  foldFull: [1016]
}, {
  code: 1017,
  lower: [],
  title: [],
  upper: [],
  fold: 1010,
  foldFull: [1010]
}, {
  code: 1018,
  lower: [],
  title: [],
  upper: [],
  fold: 1019,
  foldFull: [1019]
}, {
  code: 1021,
  lower: [],
  title: [],
  upper: [],
  fold: 891,
  foldFull: [891]
}, {
  code: 1022,
  lower: [],
  title: [],
  upper: [],
  fold: 892,
  foldFull: [892]
}, {
  code: 1023,
  lower: [],
  title: [],
  upper: [],
  fold: 893,
  foldFull: [893]
}, {
  code: 1024,
  lower: [],
  title: [],
  upper: [],
  fold: 1104,
  foldFull: [1104]
}, {
  code: 1025,
  lower: [],
  title: [],
  upper: [],
  fold: 1105,
  foldFull: [1105]
}, {
  code: 1026,
  lower: [],
  title: [],
  upper: [],
  fold: 1106,
  foldFull: [1106]
}, {
  code: 1027,
  lower: [],
  title: [],
  upper: [],
  fold: 1107,
  foldFull: [1107]
}, {
  code: 1028,
  lower: [],
  title: [],
  upper: [],
  fold: 1108,
  foldFull: [1108]
}, {
  code: 1029,
  lower: [],
  title: [],
  upper: [],
  fold: 1109,
  foldFull: [1109]
}, {
  code: 1030,
  lower: [],
  title: [],
  upper: [],
  fold: 1110,
  foldFull: [1110]
}, {
  code: 1031,
  lower: [],
  title: [],
  upper: [],
  fold: 1111,
  foldFull: [1111]
}, {
  code: 1032,
  lower: [],
  title: [],
  upper: [],
  fold: 1112,
  foldFull: [1112]
}, {
  code: 1033,
  lower: [],
  title: [],
  upper: [],
  fold: 1113,
  foldFull: [1113]
}, {
  code: 1034,
  lower: [],
  title: [],
  upper: [],
  fold: 1114,
  foldFull: [1114]
}, {
  code: 1035,
  lower: [],
  title: [],
  upper: [],
  fold: 1115,
  foldFull: [1115]
}, {
  code: 1036,
  lower: [],
  title: [],
  upper: [],
  fold: 1116,
  foldFull: [1116]
}, {
  code: 1037,
  lower: [],
  title: [],
  upper: [],
  fold: 1117,
  foldFull: [1117]
}, {
  code: 1038,
  lower: [],
  title: [],
  upper: [],
  fold: 1118,
  foldFull: [1118]
}, {
  code: 1039,
  lower: [],
  title: [],
  upper: [],
  fold: 1119,
  foldFull: [1119]
}, {
  code: 1040,
  lower: [],
  title: [],
  upper: [],
  fold: 1072,
  foldFull: [1072]
}, {
  code: 1041,
  lower: [],
  title: [],
  upper: [],
  fold: 1073,
  foldFull: [1073]
}, {
  code: 1042,
  lower: [],
  title: [],
  upper: [],
  fold: 1074,
  foldFull: [1074]
}, {
  code: 1043,
  lower: [],
  title: [],
  upper: [],
  fold: 1075,
  foldFull: [1075]
}, {
  code: 1044,
  lower: [],
  title: [],
  upper: [],
  fold: 1076,
  foldFull: [1076]
}, {
  code: 1045,
  lower: [],
  title: [],
  upper: [],
  fold: 1077,
  foldFull: [1077]
}, {
  code: 1046,
  lower: [],
  title: [],
  upper: [],
  fold: 1078,
  foldFull: [1078]
}, {
  code: 1047,
  lower: [],
  title: [],
  upper: [],
  fold: 1079,
  foldFull: [1079]
}, {
  code: 1048,
  lower: [],
  title: [],
  upper: [],
  fold: 1080,
  foldFull: [1080]
}, {
  code: 1049,
  lower: [],
  title: [],
  upper: [],
  fold: 1081,
  foldFull: [1081]
}, {
  code: 1050,
  lower: [],
  title: [],
  upper: [],
  fold: 1082,
  foldFull: [1082]
}, {
  code: 1051,
  lower: [],
  title: [],
  upper: [],
  fold: 1083,
  foldFull: [1083]
}, {
  code: 1052,
  lower: [],
  title: [],
  upper: [],
  fold: 1084,
  foldFull: [1084]
}, {
  code: 1053,
  lower: [],
  title: [],
  upper: [],
  fold: 1085,
  foldFull: [1085]
}, {
  code: 1054,
  lower: [],
  title: [],
  upper: [],
  fold: 1086,
  foldFull: [1086]
}, {
  code: 1055,
  lower: [],
  title: [],
  upper: [],
  fold: 1087,
  foldFull: [1087]
}, {
  code: 1056,
  lower: [],
  title: [],
  upper: [],
  fold: 1088,
  foldFull: [1088]
}, {
  code: 1057,
  lower: [],
  title: [],
  upper: [],
  fold: 1089,
  foldFull: [1089]
}, {
  code: 1058,
  lower: [],
  title: [],
  upper: [],
  fold: 1090,
  foldFull: [1090]
}, {
  code: 1059,
  lower: [],
  title: [],
  upper: [],
  fold: 1091,
  foldFull: [1091]
}, {
  code: 1060,
  lower: [],
  title: [],
  upper: [],
  fold: 1092,
  foldFull: [1092]
}, {
  code: 1061,
  lower: [],
  title: [],
  upper: [],
  fold: 1093,
  foldFull: [1093]
}, {
  code: 1062,
  lower: [],
  title: [],
  upper: [],
  fold: 1094,
  foldFull: [1094]
}, {
  code: 1063,
  lower: [],
  title: [],
  upper: [],
  fold: 1095,
  foldFull: [1095]
}, {
  code: 1064,
  lower: [],
  title: [],
  upper: [],
  fold: 1096,
  foldFull: [1096]
}, {
  code: 1065,
  lower: [],
  title: [],
  upper: [],
  fold: 1097,
  foldFull: [1097]
}, {
  code: 1066,
  lower: [],
  title: [],
  upper: [],
  fold: 1098,
  foldFull: [1098]
}, {
  code: 1067,
  lower: [],
  title: [],
  upper: [],
  fold: 1099,
  foldFull: [1099]
}, {
  code: 1068,
  lower: [],
  title: [],
  upper: [],
  fold: 1100,
  foldFull: [1100]
}, {
  code: 1069,
  lower: [],
  title: [],
  upper: [],
  fold: 1101,
  foldFull: [1101]
}, {
  code: 1070,
  lower: [],
  title: [],
  upper: [],
  fold: 1102,
  foldFull: [1102]
}, {
  code: 1071,
  lower: [],
  title: [],
  upper: [],
  fold: 1103,
  foldFull: [1103]
}, {
  code: 1120,
  lower: [],
  title: [],
  upper: [],
  fold: 1121,
  foldFull: [1121]
}, {
  code: 1122,
  lower: [],
  title: [],
  upper: [],
  fold: 1123,
  foldFull: [1123]
}, {
  code: 1124,
  lower: [],
  title: [],
  upper: [],
  fold: 1125,
  foldFull: [1125]
}, {
  code: 1126,
  lower: [],
  title: [],
  upper: [],
  fold: 1127,
  foldFull: [1127]
}, {
  code: 1128,
  lower: [],
  title: [],
  upper: [],
  fold: 1129,
  foldFull: [1129]
}, {
  code: 1130,
  lower: [],
  title: [],
  upper: [],
  fold: 1131,
  foldFull: [1131]
}, {
  code: 1132,
  lower: [],
  title: [],
  upper: [],
  fold: 1133,
  foldFull: [1133]
}, {
  code: 1134,
  lower: [],
  title: [],
  upper: [],
  fold: 1135,
  foldFull: [1135]
}, {
  code: 1136,
  lower: [],
  title: [],
  upper: [],
  fold: 1137,
  foldFull: [1137]
}, {
  code: 1138,
  lower: [],
  title: [],
  upper: [],
  fold: 1139,
  foldFull: [1139]
}, {
  code: 1140,
  lower: [],
  title: [],
  upper: [],
  fold: 1141,
  foldFull: [1141]
}, {
  code: 1142,
  lower: [],
  title: [],
  upper: [],
  fold: 1143,
  foldFull: [1143]
}, {
  code: 1144,
  lower: [],
  title: [],
  upper: [],
  fold: 1145,
  foldFull: [1145]
}, {
  code: 1146,
  lower: [],
  title: [],
  upper: [],
  fold: 1147,
  foldFull: [1147]
}, {
  code: 1148,
  lower: [],
  title: [],
  upper: [],
  fold: 1149,
  foldFull: [1149]
}, {
  code: 1150,
  lower: [],
  title: [],
  upper: [],
  fold: 1151,
  foldFull: [1151]
}, {
  code: 1152,
  lower: [],
  title: [],
  upper: [],
  fold: 1153,
  foldFull: [1153]
}, {
  code: 1162,
  lower: [],
  title: [],
  upper: [],
  fold: 1163,
  foldFull: [1163]
}, {
  code: 1164,
  lower: [],
  title: [],
  upper: [],
  fold: 1165,
  foldFull: [1165]
}, {
  code: 1166,
  lower: [],
  title: [],
  upper: [],
  fold: 1167,
  foldFull: [1167]
}, {
  code: 1168,
  lower: [],
  title: [],
  upper: [],
  fold: 1169,
  foldFull: [1169]
}, {
  code: 1170,
  lower: [],
  title: [],
  upper: [],
  fold: 1171,
  foldFull: [1171]
}, {
  code: 1172,
  lower: [],
  title: [],
  upper: [],
  fold: 1173,
  foldFull: [1173]
}, {
  code: 1174,
  lower: [],
  title: [],
  upper: [],
  fold: 1175,
  foldFull: [1175]
}, {
  code: 1176,
  lower: [],
  title: [],
  upper: [],
  fold: 1177,
  foldFull: [1177]
}, {
  code: 1178,
  lower: [],
  title: [],
  upper: [],
  fold: 1179,
  foldFull: [1179]
}, {
  code: 1180,
  lower: [],
  title: [],
  upper: [],
  fold: 1181,
  foldFull: [1181]
}, {
  code: 1182,
  lower: [],
  title: [],
  upper: [],
  fold: 1183,
  foldFull: [1183]
}, {
  code: 1184,
  lower: [],
  title: [],
  upper: [],
  fold: 1185,
  foldFull: [1185]
}, {
  code: 1186,
  lower: [],
  title: [],
  upper: [],
  fold: 1187,
  foldFull: [1187]
}, {
  code: 1188,
  lower: [],
  title: [],
  upper: [],
  fold: 1189,
  foldFull: [1189]
}, {
  code: 1190,
  lower: [],
  title: [],
  upper: [],
  fold: 1191,
  foldFull: [1191]
}, {
  code: 1192,
  lower: [],
  title: [],
  upper: [],
  fold: 1193,
  foldFull: [1193]
}, {
  code: 1194,
  lower: [],
  title: [],
  upper: [],
  fold: 1195,
  foldFull: [1195]
}, {
  code: 1196,
  lower: [],
  title: [],
  upper: [],
  fold: 1197,
  foldFull: [1197]
}, {
  code: 1198,
  lower: [],
  title: [],
  upper: [],
  fold: 1199,
  foldFull: [1199]
}, {
  code: 1200,
  lower: [],
  title: [],
  upper: [],
  fold: 1201,
  foldFull: [1201]
}, {
  code: 1202,
  lower: [],
  title: [],
  upper: [],
  fold: 1203,
  foldFull: [1203]
}, {
  code: 1204,
  lower: [],
  title: [],
  upper: [],
  fold: 1205,
  foldFull: [1205]
}, {
  code: 1206,
  lower: [],
  title: [],
  upper: [],
  fold: 1207,
  foldFull: [1207]
}, {
  code: 1208,
  lower: [],
  title: [],
  upper: [],
  fold: 1209,
  foldFull: [1209]
}, {
  code: 1210,
  lower: [],
  title: [],
  upper: [],
  fold: 1211,
  foldFull: [1211]
}, {
  code: 1212,
  lower: [],
  title: [],
  upper: [],
  fold: 1213,
  foldFull: [1213]
}, {
  code: 1214,
  lower: [],
  title: [],
  upper: [],
  fold: 1215,
  foldFull: [1215]
}, {
  code: 1216,
  lower: [],
  title: [],
  upper: [],
  fold: 1231,
  foldFull: [1231]
}, {
  code: 1217,
  lower: [],
  title: [],
  upper: [],
  fold: 1218,
  foldFull: [1218]
}, {
  code: 1219,
  lower: [],
  title: [],
  upper: [],
  fold: 1220,
  foldFull: [1220]
}, {
  code: 1221,
  lower: [],
  title: [],
  upper: [],
  fold: 1222,
  foldFull: [1222]
}, {
  code: 1223,
  lower: [],
  title: [],
  upper: [],
  fold: 1224,
  foldFull: [1224]
}, {
  code: 1225,
  lower: [],
  title: [],
  upper: [],
  fold: 1226,
  foldFull: [1226]
}, {
  code: 1227,
  lower: [],
  title: [],
  upper: [],
  fold: 1228,
  foldFull: [1228]
}, {
  code: 1229,
  lower: [],
  title: [],
  upper: [],
  fold: 1230,
  foldFull: [1230]
}, {
  code: 1232,
  lower: [],
  title: [],
  upper: [],
  fold: 1233,
  foldFull: [1233]
}, {
  code: 1234,
  lower: [],
  title: [],
  upper: [],
  fold: 1235,
  foldFull: [1235]
}, {
  code: 1236,
  lower: [],
  title: [],
  upper: [],
  fold: 1237,
  foldFull: [1237]
}, {
  code: 1238,
  lower: [],
  title: [],
  upper: [],
  fold: 1239,
  foldFull: [1239]
}, {
  code: 1240,
  lower: [],
  title: [],
  upper: [],
  fold: 1241,
  foldFull: [1241]
}, {
  code: 1242,
  lower: [],
  title: [],
  upper: [],
  fold: 1243,
  foldFull: [1243]
}, {
  code: 1244,
  lower: [],
  title: [],
  upper: [],
  fold: 1245,
  foldFull: [1245]
}, {
  code: 1246,
  lower: [],
  title: [],
  upper: [],
  fold: 1247,
  foldFull: [1247]
}, {
  code: 1248,
  lower: [],
  title: [],
  upper: [],
  fold: 1249,
  foldFull: [1249]
}, {
  code: 1250,
  lower: [],
  title: [],
  upper: [],
  fold: 1251,
  foldFull: [1251]
}, {
  code: 1252,
  lower: [],
  title: [],
  upper: [],
  fold: 1253,
  foldFull: [1253]
}, {
  code: 1254,
  lower: [],
  title: [],
  upper: [],
  fold: 1255,
  foldFull: [1255]
}, {
  code: 1256,
  lower: [],
  title: [],
  upper: [],
  fold: 1257,
  foldFull: [1257]
}, {
  code: 1258,
  lower: [],
  title: [],
  upper: [],
  fold: 1259,
  foldFull: [1259]
}, {
  code: 1260,
  lower: [],
  title: [],
  upper: [],
  fold: 1261,
  foldFull: [1261]
}, {
  code: 1262,
  lower: [],
  title: [],
  upper: [],
  fold: 1263,
  foldFull: [1263]
}, {
  code: 1264,
  lower: [],
  title: [],
  upper: [],
  fold: 1265,
  foldFull: [1265]
}, {
  code: 1266,
  lower: [],
  title: [],
  upper: [],
  fold: 1267,
  foldFull: [1267]
}, {
  code: 1268,
  lower: [],
  title: [],
  upper: [],
  fold: 1269,
  foldFull: [1269]
}, {
  code: 1270,
  lower: [],
  title: [],
  upper: [],
  fold: 1271,
  foldFull: [1271]
}, {
  code: 1272,
  lower: [],
  title: [],
  upper: [],
  fold: 1273,
  foldFull: [1273]
}, {
  code: 1274,
  lower: [],
  title: [],
  upper: [],
  fold: 1275,
  foldFull: [1275]
}, {
  code: 1276,
  lower: [],
  title: [],
  upper: [],
  fold: 1277,
  foldFull: [1277]
}, {
  code: 1278,
  lower: [],
  title: [],
  upper: [],
  fold: 1279,
  foldFull: [1279]
}, {
  code: 1280,
  lower: [],
  title: [],
  upper: [],
  fold: 1281,
  foldFull: [1281]
}, {
  code: 1282,
  lower: [],
  title: [],
  upper: [],
  fold: 1283,
  foldFull: [1283]
}, {
  code: 1284,
  lower: [],
  title: [],
  upper: [],
  fold: 1285,
  foldFull: [1285]
}, {
  code: 1286,
  lower: [],
  title: [],
  upper: [],
  fold: 1287,
  foldFull: [1287]
}, {
  code: 1288,
  lower: [],
  title: [],
  upper: [],
  fold: 1289,
  foldFull: [1289]
}, {
  code: 1290,
  lower: [],
  title: [],
  upper: [],
  fold: 1291,
  foldFull: [1291]
}, {
  code: 1292,
  lower: [],
  title: [],
  upper: [],
  fold: 1293,
  foldFull: [1293]
}, {
  code: 1294,
  lower: [],
  title: [],
  upper: [],
  fold: 1295,
  foldFull: [1295]
}, {
  code: 1296,
  lower: [],
  title: [],
  upper: [],
  fold: 1297,
  foldFull: [1297]
}, {
  code: 1298,
  lower: [],
  title: [],
  upper: [],
  fold: 1299,
  foldFull: [1299]
}, {
  code: 1300,
  lower: [],
  title: [],
  upper: [],
  fold: 1301,
  foldFull: [1301]
}, {
  code: 1302,
  lower: [],
  title: [],
  upper: [],
  fold: 1303,
  foldFull: [1303]
}, {
  code: 1304,
  lower: [],
  title: [],
  upper: [],
  fold: 1305,
  foldFull: [1305]
}, {
  code: 1306,
  lower: [],
  title: [],
  upper: [],
  fold: 1307,
  foldFull: [1307]
}, {
  code: 1308,
  lower: [],
  title: [],
  upper: [],
  fold: 1309,
  foldFull: [1309]
}, {
  code: 1310,
  lower: [],
  title: [],
  upper: [],
  fold: 1311,
  foldFull: [1311]
}, {
  code: 1312,
  lower: [],
  title: [],
  upper: [],
  fold: 1313,
  foldFull: [1313]
}, {
  code: 1314,
  lower: [],
  title: [],
  upper: [],
  fold: 1315,
  foldFull: [1315]
}, {
  code: 1316,
  lower: [],
  title: [],
  upper: [],
  fold: 1317,
  foldFull: [1317]
}, {
  code: 1318,
  lower: [],
  title: [],
  upper: [],
  fold: 1319,
  foldFull: [1319]
}, {
  code: 1320,
  lower: [],
  title: [],
  upper: [],
  fold: 1321,
  foldFull: [1321]
}, {
  code: 1322,
  lower: [],
  title: [],
  upper: [],
  fold: 1323,
  foldFull: [1323]
}, {
  code: 1324,
  lower: [],
  title: [],
  upper: [],
  fold: 1325,
  foldFull: [1325]
}, {
  code: 1326,
  lower: [],
  title: [],
  upper: [],
  fold: 1327,
  foldFull: [1327]
}, {
  code: 1329,
  lower: [],
  title: [],
  upper: [],
  fold: 1377,
  foldFull: [1377]
}, {
  code: 1330,
  lower: [],
  title: [],
  upper: [],
  fold: 1378,
  foldFull: [1378]
}, {
  code: 1331,
  lower: [],
  title: [],
  upper: [],
  fold: 1379,
  foldFull: [1379]
}, {
  code: 1332,
  lower: [],
  title: [],
  upper: [],
  fold: 1380,
  foldFull: [1380]
}, {
  code: 1333,
  lower: [],
  title: [],
  upper: [],
  fold: 1381,
  foldFull: [1381]
}, {
  code: 1334,
  lower: [],
  title: [],
  upper: [],
  fold: 1382,
  foldFull: [1382]
}, {
  code: 1335,
  lower: [],
  title: [],
  upper: [],
  fold: 1383,
  foldFull: [1383]
}, {
  code: 1336,
  lower: [],
  title: [],
  upper: [],
  fold: 1384,
  foldFull: [1384]
}, {
  code: 1337,
  lower: [],
  title: [],
  upper: [],
  fold: 1385,
  foldFull: [1385]
}, {
  code: 1338,
  lower: [],
  title: [],
  upper: [],
  fold: 1386,
  foldFull: [1386]
}, {
  code: 1339,
  lower: [],
  title: [],
  upper: [],
  fold: 1387,
  foldFull: [1387]
}, {
  code: 1340,
  lower: [],
  title: [],
  upper: [],
  fold: 1388,
  foldFull: [1388]
}, {
  code: 1341,
  lower: [],
  title: [],
  upper: [],
  fold: 1389,
  foldFull: [1389]
}, {
  code: 1342,
  lower: [],
  title: [],
  upper: [],
  fold: 1390,
  foldFull: [1390]
}, {
  code: 1343,
  lower: [],
  title: [],
  upper: [],
  fold: 1391,
  foldFull: [1391]
}, {
  code: 1344,
  lower: [],
  title: [],
  upper: [],
  fold: 1392,
  foldFull: [1392]
}, {
  code: 1345,
  lower: [],
  title: [],
  upper: [],
  fold: 1393,
  foldFull: [1393]
}, {
  code: 1346,
  lower: [],
  title: [],
  upper: [],
  fold: 1394,
  foldFull: [1394]
}, {
  code: 1347,
  lower: [],
  title: [],
  upper: [],
  fold: 1395,
  foldFull: [1395]
}, {
  code: 1348,
  lower: [],
  title: [],
  upper: [],
  fold: 1396,
  foldFull: [1396]
}, {
  code: 1349,
  lower: [],
  title: [],
  upper: [],
  fold: 1397,
  foldFull: [1397]
}, {
  code: 1350,
  lower: [],
  title: [],
  upper: [],
  fold: 1398,
  foldFull: [1398]
}, {
  code: 1351,
  lower: [],
  title: [],
  upper: [],
  fold: 1399,
  foldFull: [1399]
}, {
  code: 1352,
  lower: [],
  title: [],
  upper: [],
  fold: 1400,
  foldFull: [1400]
}, {
  code: 1353,
  lower: [],
  title: [],
  upper: [],
  fold: 1401,
  foldFull: [1401]
}, {
  code: 1354,
  lower: [],
  title: [],
  upper: [],
  fold: 1402,
  foldFull: [1402]
}, {
  code: 1355,
  lower: [],
  title: [],
  upper: [],
  fold: 1403,
  foldFull: [1403]
}, {
  code: 1356,
  lower: [],
  title: [],
  upper: [],
  fold: 1404,
  foldFull: [1404]
}, {
  code: 1357,
  lower: [],
  title: [],
  upper: [],
  fold: 1405,
  foldFull: [1405]
}, {
  code: 1358,
  lower: [],
  title: [],
  upper: [],
  fold: 1406,
  foldFull: [1406]
}, {
  code: 1359,
  lower: [],
  title: [],
  upper: [],
  fold: 1407,
  foldFull: [1407]
}, {
  code: 1360,
  lower: [],
  title: [],
  upper: [],
  fold: 1408,
  foldFull: [1408]
}, {
  code: 1361,
  lower: [],
  title: [],
  upper: [],
  fold: 1409,
  foldFull: [1409]
}, {
  code: 1362,
  lower: [],
  title: [],
  upper: [],
  fold: 1410,
  foldFull: [1410]
}, {
  code: 1363,
  lower: [],
  title: [],
  upper: [],
  fold: 1411,
  foldFull: [1411]
}, {
  code: 1364,
  lower: [],
  title: [],
  upper: [],
  fold: 1412,
  foldFull: [1412]
}, {
  code: 1365,
  lower: [],
  title: [],
  upper: [],
  fold: 1413,
  foldFull: [1413]
}, {
  code: 1366,
  lower: [],
  title: [],
  upper: [],
  fold: 1414,
  foldFull: [1414]
}, {
  code: 1415,
  lower: [1415],
  title: [1333, 1410],
  upper: [1333, 1362],
  fold: 0,
  foldFull: [1381, 1410]
}, {
  code: 1415,
  lower: [1415],
  title: [1333, 1410],
  upper: [1333, 1362],
  fold: 0,
  foldFull: [1381, 1410]
}, {
  code: 4256,
  lower: [],
  title: [],
  upper: [],
  fold: 11520,
  foldFull: [11520]
}, {
  code: 4257,
  lower: [],
  title: [],
  upper: [],
  fold: 11521,
  foldFull: [11521]
}, {
  code: 4258,
  lower: [],
  title: [],
  upper: [],
  fold: 11522,
  foldFull: [11522]
}, {
  code: 4259,
  lower: [],
  title: [],
  upper: [],
  fold: 11523,
  foldFull: [11523]
}, {
  code: 4260,
  lower: [],
  title: [],
  upper: [],
  fold: 11524,
  foldFull: [11524]
}, {
  code: 4261,
  lower: [],
  title: [],
  upper: [],
  fold: 11525,
  foldFull: [11525]
}, {
  code: 4262,
  lower: [],
  title: [],
  upper: [],
  fold: 11526,
  foldFull: [11526]
}, {
  code: 4263,
  lower: [],
  title: [],
  upper: [],
  fold: 11527,
  foldFull: [11527]
}, {
  code: 4264,
  lower: [],
  title: [],
  upper: [],
  fold: 11528,
  foldFull: [11528]
}, {
  code: 4265,
  lower: [],
  title: [],
  upper: [],
  fold: 11529,
  foldFull: [11529]
}, {
  code: 4266,
  lower: [],
  title: [],
  upper: [],
  fold: 11530,
  foldFull: [11530]
}, {
  code: 4267,
  lower: [],
  title: [],
  upper: [],
  fold: 11531,
  foldFull: [11531]
}, {
  code: 4268,
  lower: [],
  title: [],
  upper: [],
  fold: 11532,
  foldFull: [11532]
}, {
  code: 4269,
  lower: [],
  title: [],
  upper: [],
  fold: 11533,
  foldFull: [11533]
}, {
  code: 4270,
  lower: [],
  title: [],
  upper: [],
  fold: 11534,
  foldFull: [11534]
}, {
  code: 4271,
  lower: [],
  title: [],
  upper: [],
  fold: 11535,
  foldFull: [11535]
}, {
  code: 4272,
  lower: [],
  title: [],
  upper: [],
  fold: 11536,
  foldFull: [11536]
}, {
  code: 4273,
  lower: [],
  title: [],
  upper: [],
  fold: 11537,
  foldFull: [11537]
}, {
  code: 4274,
  lower: [],
  title: [],
  upper: [],
  fold: 11538,
  foldFull: [11538]
}, {
  code: 4275,
  lower: [],
  title: [],
  upper: [],
  fold: 11539,
  foldFull: [11539]
}, {
  code: 4276,
  lower: [],
  title: [],
  upper: [],
  fold: 11540,
  foldFull: [11540]
}, {
  code: 4277,
  lower: [],
  title: [],
  upper: [],
  fold: 11541,
  foldFull: [11541]
}, {
  code: 4278,
  lower: [],
  title: [],
  upper: [],
  fold: 11542,
  foldFull: [11542]
}, {
  code: 4279,
  lower: [],
  title: [],
  upper: [],
  fold: 11543,
  foldFull: [11543]
}, {
  code: 4280,
  lower: [],
  title: [],
  upper: [],
  fold: 11544,
  foldFull: [11544]
}, {
  code: 4281,
  lower: [],
  title: [],
  upper: [],
  fold: 11545,
  foldFull: [11545]
}, {
  code: 4282,
  lower: [],
  title: [],
  upper: [],
  fold: 11546,
  foldFull: [11546]
}, {
  code: 4283,
  lower: [],
  title: [],
  upper: [],
  fold: 11547,
  foldFull: [11547]
}, {
  code: 4284,
  lower: [],
  title: [],
  upper: [],
  fold: 11548,
  foldFull: [11548]
}, {
  code: 4285,
  lower: [],
  title: [],
  upper: [],
  fold: 11549,
  foldFull: [11549]
}, {
  code: 4286,
  lower: [],
  title: [],
  upper: [],
  fold: 11550,
  foldFull: [11550]
}, {
  code: 4287,
  lower: [],
  title: [],
  upper: [],
  fold: 11551,
  foldFull: [11551]
}, {
  code: 4288,
  lower: [],
  title: [],
  upper: [],
  fold: 11552,
  foldFull: [11552]
}, {
  code: 4289,
  lower: [],
  title: [],
  upper: [],
  fold: 11553,
  foldFull: [11553]
}, {
  code: 4290,
  lower: [],
  title: [],
  upper: [],
  fold: 11554,
  foldFull: [11554]
}, {
  code: 4291,
  lower: [],
  title: [],
  upper: [],
  fold: 11555,
  foldFull: [11555]
}, {
  code: 4292,
  lower: [],
  title: [],
  upper: [],
  fold: 11556,
  foldFull: [11556]
}, {
  code: 4293,
  lower: [],
  title: [],
  upper: [],
  fold: 11557,
  foldFull: [11557]
}, {
  code: 4295,
  lower: [],
  title: [],
  upper: [],
  fold: 11559,
  foldFull: [11559]
}, {
  code: 4301,
  lower: [],
  title: [],
  upper: [],
  fold: 11565,
  foldFull: [11565]
}, {
  code: 5112,
  lower: [],
  title: [],
  upper: [],
  fold: 5104,
  foldFull: [5104]
}, {
  code: 5113,
  lower: [],
  title: [],
  upper: [],
  fold: 5105,
  foldFull: [5105]
}, {
  code: 5114,
  lower: [],
  title: [],
  upper: [],
  fold: 5106,
  foldFull: [5106]
}, {
  code: 5115,
  lower: [],
  title: [],
  upper: [],
  fold: 5107,
  foldFull: [5107]
}, {
  code: 5116,
  lower: [],
  title: [],
  upper: [],
  fold: 5108,
  foldFull: [5108]
}, {
  code: 5117,
  lower: [],
  title: [],
  upper: [],
  fold: 5109,
  foldFull: [5109]
}, {
  code: 7296,
  lower: [],
  title: [],
  upper: [],
  fold: 1074,
  foldFull: [1074]
}, {
  code: 7297,
  lower: [],
  title: [],
  upper: [],
  fold: 1076,
  foldFull: [1076]
}, {
  code: 7298,
  lower: [],
  title: [],
  upper: [],
  fold: 1086,
  foldFull: [1086]
}, {
  code: 7299,
  lower: [],
  title: [],
  upper: [],
  fold: 1089,
  foldFull: [1089]
}, {
  code: 7300,
  lower: [],
  title: [],
  upper: [],
  fold: 1090,
  foldFull: [1090]
}, {
  code: 7301,
  lower: [],
  title: [],
  upper: [],
  fold: 1090,
  foldFull: [1090]
}, {
  code: 7302,
  lower: [],
  title: [],
  upper: [],
  fold: 1098,
  foldFull: [1098]
}, {
  code: 7303,
  lower: [],
  title: [],
  upper: [],
  fold: 1123,
  foldFull: [1123]
}, {
  code: 7304,
  lower: [],
  title: [],
  upper: [],
  fold: 42571,
  foldFull: [42571]
}, {
  code: 7312,
  lower: [],
  title: [],
  upper: [],
  fold: 4304,
  foldFull: [4304]
}, {
  code: 7313,
  lower: [],
  title: [],
  upper: [],
  fold: 4305,
  foldFull: [4305]
}, {
  code: 7314,
  lower: [],
  title: [],
  upper: [],
  fold: 4306,
  foldFull: [4306]
}, {
  code: 7315,
  lower: [],
  title: [],
  upper: [],
  fold: 4307,
  foldFull: [4307]
}, {
  code: 7316,
  lower: [],
  title: [],
  upper: [],
  fold: 4308,
  foldFull: [4308]
}, {
  code: 7317,
  lower: [],
  title: [],
  upper: [],
  fold: 4309,
  foldFull: [4309]
}, {
  code: 7318,
  lower: [],
  title: [],
  upper: [],
  fold: 4310,
  foldFull: [4310]
}, {
  code: 7319,
  lower: [],
  title: [],
  upper: [],
  fold: 4311,
  foldFull: [4311]
}, {
  code: 7320,
  lower: [],
  title: [],
  upper: [],
  fold: 4312,
  foldFull: [4312]
}, {
  code: 7321,
  lower: [],
  title: [],
  upper: [],
  fold: 4313,
  foldFull: [4313]
}, {
  code: 7322,
  lower: [],
  title: [],
  upper: [],
  fold: 4314,
  foldFull: [4314]
}, {
  code: 7323,
  lower: [],
  title: [],
  upper: [],
  fold: 4315,
  foldFull: [4315]
}, {
  code: 7324,
  lower: [],
  title: [],
  upper: [],
  fold: 4316,
  foldFull: [4316]
}, {
  code: 7325,
  lower: [],
  title: [],
  upper: [],
  fold: 4317,
  foldFull: [4317]
}, {
  code: 7326,
  lower: [],
  title: [],
  upper: [],
  fold: 4318,
  foldFull: [4318]
}, {
  code: 7327,
  lower: [],
  title: [],
  upper: [],
  fold: 4319,
  foldFull: [4319]
}, {
  code: 7328,
  lower: [],
  title: [],
  upper: [],
  fold: 4320,
  foldFull: [4320]
}, {
  code: 7329,
  lower: [],
  title: [],
  upper: [],
  fold: 4321,
  foldFull: [4321]
}, {
  code: 7330,
  lower: [],
  title: [],
  upper: [],
  fold: 4322,
  foldFull: [4322]
}, {
  code: 7331,
  lower: [],
  title: [],
  upper: [],
  fold: 4323,
  foldFull: [4323]
}, {
  code: 7332,
  lower: [],
  title: [],
  upper: [],
  fold: 4324,
  foldFull: [4324]
}, {
  code: 7333,
  lower: [],
  title: [],
  upper: [],
  fold: 4325,
  foldFull: [4325]
}, {
  code: 7334,
  lower: [],
  title: [],
  upper: [],
  fold: 4326,
  foldFull: [4326]
}, {
  code: 7335,
  lower: [],
  title: [],
  upper: [],
  fold: 4327,
  foldFull: [4327]
}, {
  code: 7336,
  lower: [],
  title: [],
  upper: [],
  fold: 4328,
  foldFull: [4328]
}, {
  code: 7337,
  lower: [],
  title: [],
  upper: [],
  fold: 4329,
  foldFull: [4329]
}, {
  code: 7338,
  lower: [],
  title: [],
  upper: [],
  fold: 4330,
  foldFull: [4330]
}, {
  code: 7339,
  lower: [],
  title: [],
  upper: [],
  fold: 4331,
  foldFull: [4331]
}, {
  code: 7340,
  lower: [],
  title: [],
  upper: [],
  fold: 4332,
  foldFull: [4332]
}, {
  code: 7341,
  lower: [],
  title: [],
  upper: [],
  fold: 4333,
  foldFull: [4333]
}, {
  code: 7342,
  lower: [],
  title: [],
  upper: [],
  fold: 4334,
  foldFull: [4334]
}, {
  code: 7343,
  lower: [],
  title: [],
  upper: [],
  fold: 4335,
  foldFull: [4335]
}, {
  code: 7344,
  lower: [],
  title: [],
  upper: [],
  fold: 4336,
  foldFull: [4336]
}, {
  code: 7345,
  lower: [],
  title: [],
  upper: [],
  fold: 4337,
  foldFull: [4337]
}, {
  code: 7346,
  lower: [],
  title: [],
  upper: [],
  fold: 4338,
  foldFull: [4338]
}, {
  code: 7347,
  lower: [],
  title: [],
  upper: [],
  fold: 4339,
  foldFull: [4339]
}, {
  code: 7348,
  lower: [],
  title: [],
  upper: [],
  fold: 4340,
  foldFull: [4340]
}, {
  code: 7349,
  lower: [],
  title: [],
  upper: [],
  fold: 4341,
  foldFull: [4341]
}, {
  code: 7350,
  lower: [],
  title: [],
  upper: [],
  fold: 4342,
  foldFull: [4342]
}, {
  code: 7351,
  lower: [],
  title: [],
  upper: [],
  fold: 4343,
  foldFull: [4343]
}, {
  code: 7352,
  lower: [],
  title: [],
  upper: [],
  fold: 4344,
  foldFull: [4344]
}, {
  code: 7353,
  lower: [],
  title: [],
  upper: [],
  fold: 4345,
  foldFull: [4345]
}, {
  code: 7354,
  lower: [],
  title: [],
  upper: [],
  fold: 4346,
  foldFull: [4346]
}, {
  code: 7357,
  lower: [],
  title: [],
  upper: [],
  fold: 4349,
  foldFull: [4349]
}, {
  code: 7358,
  lower: [],
  title: [],
  upper: [],
  fold: 4350,
  foldFull: [4350]
}, {
  code: 7359,
  lower: [],
  title: [],
  upper: [],
  fold: 4351,
  foldFull: [4351]
}, {
  code: 7680,
  lower: [],
  title: [],
  upper: [],
  fold: 7681,
  foldFull: [7681]
}, {
  code: 7682,
  lower: [],
  title: [],
  upper: [],
  fold: 7683,
  foldFull: [7683]
}, {
  code: 7684,
  lower: [],
  title: [],
  upper: [],
  fold: 7685,
  foldFull: [7685]
}, {
  code: 7686,
  lower: [],
  title: [],
  upper: [],
  fold: 7687,
  foldFull: [7687]
}, {
  code: 7688,
  lower: [],
  title: [],
  upper: [],
  fold: 7689,
  foldFull: [7689]
}, {
  code: 7690,
  lower: [],
  title: [],
  upper: [],
  fold: 7691,
  foldFull: [7691]
}, {
  code: 7692,
  lower: [],
  title: [],
  upper: [],
  fold: 7693,
  foldFull: [7693]
}, {
  code: 7694,
  lower: [],
  title: [],
  upper: [],
  fold: 7695,
  foldFull: [7695]
}, {
  code: 7696,
  lower: [],
  title: [],
  upper: [],
  fold: 7697,
  foldFull: [7697]
}, {
  code: 7698,
  lower: [],
  title: [],
  upper: [],
  fold: 7699,
  foldFull: [7699]
}, {
  code: 7700,
  lower: [],
  title: [],
  upper: [],
  fold: 7701,
  foldFull: [7701]
}, {
  code: 7702,
  lower: [],
  title: [],
  upper: [],
  fold: 7703,
  foldFull: [7703]
}, {
  code: 7704,
  lower: [],
  title: [],
  upper: [],
  fold: 7705,
  foldFull: [7705]
}, {
  code: 7706,
  lower: [],
  title: [],
  upper: [],
  fold: 7707,
  foldFull: [7707]
}, {
  code: 7708,
  lower: [],
  title: [],
  upper: [],
  fold: 7709,
  foldFull: [7709]
}, {
  code: 7710,
  lower: [],
  title: [],
  upper: [],
  fold: 7711,
  foldFull: [7711]
}, {
  code: 7712,
  lower: [],
  title: [],
  upper: [],
  fold: 7713,
  foldFull: [7713]
}, {
  code: 7714,
  lower: [],
  title: [],
  upper: [],
  fold: 7715,
  foldFull: [7715]
}, {
  code: 7716,
  lower: [],
  title: [],
  upper: [],
  fold: 7717,
  foldFull: [7717]
}, {
  code: 7718,
  lower: [],
  title: [],
  upper: [],
  fold: 7719,
  foldFull: [7719]
}, {
  code: 7720,
  lower: [],
  title: [],
  upper: [],
  fold: 7721,
  foldFull: [7721]
}, {
  code: 7722,
  lower: [],
  title: [],
  upper: [],
  fold: 7723,
  foldFull: [7723]
}, {
  code: 7724,
  lower: [],
  title: [],
  upper: [],
  fold: 7725,
  foldFull: [7725]
}, {
  code: 7726,
  lower: [],
  title: [],
  upper: [],
  fold: 7727,
  foldFull: [7727]
}, {
  code: 7728,
  lower: [],
  title: [],
  upper: [],
  fold: 7729,
  foldFull: [7729]
}, {
  code: 7730,
  lower: [],
  title: [],
  upper: [],
  fold: 7731,
  foldFull: [7731]
}, {
  code: 7732,
  lower: [],
  title: [],
  upper: [],
  fold: 7733,
  foldFull: [7733]
}, {
  code: 7734,
  lower: [],
  title: [],
  upper: [],
  fold: 7735,
  foldFull: [7735]
}, {
  code: 7736,
  lower: [],
  title: [],
  upper: [],
  fold: 7737,
  foldFull: [7737]
}, {
  code: 7738,
  lower: [],
  title: [],
  upper: [],
  fold: 7739,
  foldFull: [7739]
}, {
  code: 7740,
  lower: [],
  title: [],
  upper: [],
  fold: 7741,
  foldFull: [7741]
}, {
  code: 7742,
  lower: [],
  title: [],
  upper: [],
  fold: 7743,
  foldFull: [7743]
}, {
  code: 7744,
  lower: [],
  title: [],
  upper: [],
  fold: 7745,
  foldFull: [7745]
}, {
  code: 7746,
  lower: [],
  title: [],
  upper: [],
  fold: 7747,
  foldFull: [7747]
}, {
  code: 7748,
  lower: [],
  title: [],
  upper: [],
  fold: 7749,
  foldFull: [7749]
}, {
  code: 7750,
  lower: [],
  title: [],
  upper: [],
  fold: 7751,
  foldFull: [7751]
}, {
  code: 7752,
  lower: [],
  title: [],
  upper: [],
  fold: 7753,
  foldFull: [7753]
}, {
  code: 7754,
  lower: [],
  title: [],
  upper: [],
  fold: 7755,
  foldFull: [7755]
}, {
  code: 7756,
  lower: [],
  title: [],
  upper: [],
  fold: 7757,
  foldFull: [7757]
}, {
  code: 7758,
  lower: [],
  title: [],
  upper: [],
  fold: 7759,
  foldFull: [7759]
}, {
  code: 7760,
  lower: [],
  title: [],
  upper: [],
  fold: 7761,
  foldFull: [7761]
}, {
  code: 7762,
  lower: [],
  title: [],
  upper: [],
  fold: 7763,
  foldFull: [7763]
}, {
  code: 7764,
  lower: [],
  title: [],
  upper: [],
  fold: 7765,
  foldFull: [7765]
}, {
  code: 7766,
  lower: [],
  title: [],
  upper: [],
  fold: 7767,
  foldFull: [7767]
}, {
  code: 7768,
  lower: [],
  title: [],
  upper: [],
  fold: 7769,
  foldFull: [7769]
}, {
  code: 7770,
  lower: [],
  title: [],
  upper: [],
  fold: 7771,
  foldFull: [7771]
}, {
  code: 7772,
  lower: [],
  title: [],
  upper: [],
  fold: 7773,
  foldFull: [7773]
}, {
  code: 7774,
  lower: [],
  title: [],
  upper: [],
  fold: 7775,
  foldFull: [7775]
}, {
  code: 7776,
  lower: [],
  title: [],
  upper: [],
  fold: 7777,
  foldFull: [7777]
}, {
  code: 7778,
  lower: [],
  title: [],
  upper: [],
  fold: 7779,
  foldFull: [7779]
}, {
  code: 7780,
  lower: [],
  title: [],
  upper: [],
  fold: 7781,
  foldFull: [7781]
}, {
  code: 7782,
  lower: [],
  title: [],
  upper: [],
  fold: 7783,
  foldFull: [7783]
}, {
  code: 7784,
  lower: [],
  title: [],
  upper: [],
  fold: 7785,
  foldFull: [7785]
}, {
  code: 7786,
  lower: [],
  title: [],
  upper: [],
  fold: 7787,
  foldFull: [7787]
}, {
  code: 7788,
  lower: [],
  title: [],
  upper: [],
  fold: 7789,
  foldFull: [7789]
}, {
  code: 7790,
  lower: [],
  title: [],
  upper: [],
  fold: 7791,
  foldFull: [7791]
}, {
  code: 7792,
  lower: [],
  title: [],
  upper: [],
  fold: 7793,
  foldFull: [7793]
}, {
  code: 7794,
  lower: [],
  title: [],
  upper: [],
  fold: 7795,
  foldFull: [7795]
}, {
  code: 7796,
  lower: [],
  title: [],
  upper: [],
  fold: 7797,
  foldFull: [7797]
}, {
  code: 7798,
  lower: [],
  title: [],
  upper: [],
  fold: 7799,
  foldFull: [7799]
}, {
  code: 7800,
  lower: [],
  title: [],
  upper: [],
  fold: 7801,
  foldFull: [7801]
}, {
  code: 7802,
  lower: [],
  title: [],
  upper: [],
  fold: 7803,
  foldFull: [7803]
}, {
  code: 7804,
  lower: [],
  title: [],
  upper: [],
  fold: 7805,
  foldFull: [7805]
}, {
  code: 7806,
  lower: [],
  title: [],
  upper: [],
  fold: 7807,
  foldFull: [7807]
}, {
  code: 7808,
  lower: [],
  title: [],
  upper: [],
  fold: 7809,
  foldFull: [7809]
}, {
  code: 7810,
  lower: [],
  title: [],
  upper: [],
  fold: 7811,
  foldFull: [7811]
}, {
  code: 7812,
  lower: [],
  title: [],
  upper: [],
  fold: 7813,
  foldFull: [7813]
}, {
  code: 7814,
  lower: [],
  title: [],
  upper: [],
  fold: 7815,
  foldFull: [7815]
}, {
  code: 7816,
  lower: [],
  title: [],
  upper: [],
  fold: 7817,
  foldFull: [7817]
}, {
  code: 7818,
  lower: [],
  title: [],
  upper: [],
  fold: 7819,
  foldFull: [7819]
}, {
  code: 7820,
  lower: [],
  title: [],
  upper: [],
  fold: 7821,
  foldFull: [7821]
}, {
  code: 7822,
  lower: [],
  title: [],
  upper: [],
  fold: 7823,
  foldFull: [7823]
}, {
  code: 7824,
  lower: [],
  title: [],
  upper: [],
  fold: 7825,
  foldFull: [7825]
}, {
  code: 7826,
  lower: [],
  title: [],
  upper: [],
  fold: 7827,
  foldFull: [7827]
}, {
  code: 7828,
  lower: [],
  title: [],
  upper: [],
  fold: 7829,
  foldFull: [7829]
}, {
  code: 7830,
  lower: [7830],
  title: [72, 817],
  upper: [72, 817],
  fold: 0,
  foldFull: [104, 817]
}, {
  code: 7830,
  lower: [7830],
  title: [72, 817],
  upper: [72, 817],
  fold: 0,
  foldFull: [104, 817]
}, {
  code: 7831,
  lower: [7831],
  title: [84, 776],
  upper: [84, 776],
  fold: 0,
  foldFull: [116, 776]
}, {
  code: 7831,
  lower: [7831],
  title: [84, 776],
  upper: [84, 776],
  fold: 0,
  foldFull: [116, 776]
}, {
  code: 7832,
  lower: [7832],
  title: [87, 778],
  upper: [87, 778],
  fold: 0,
  foldFull: [119, 778]
}, {
  code: 7832,
  lower: [7832],
  title: [87, 778],
  upper: [87, 778],
  fold: 0,
  foldFull: [119, 778]
}, {
  code: 7833,
  lower: [7833],
  title: [89, 778],
  upper: [89, 778],
  fold: 0,
  foldFull: [121, 778]
}, {
  code: 7833,
  lower: [7833],
  title: [89, 778],
  upper: [89, 778],
  fold: 0,
  foldFull: [121, 778]
}, {
  code: 7834,
  lower: [7834],
  title: [65, 702],
  upper: [65, 702],
  fold: 0,
  foldFull: [97, 702]
}, {
  code: 7834,
  lower: [7834],
  title: [65, 702],
  upper: [65, 702],
  fold: 0,
  foldFull: [97, 702]
}, {
  code: 7835,
  lower: [],
  title: [],
  upper: [],
  fold: 7777,
  foldFull: [7777]
}, {
  code: 7838,
  lower: [],
  title: [],
  upper: [],
  fold: 223,
  foldFull: [115, 115]
}, {
  code: 7840,
  lower: [],
  title: [],
  upper: [],
  fold: 7841,
  foldFull: [7841]
}, {
  code: 7842,
  lower: [],
  title: [],
  upper: [],
  fold: 7843,
  foldFull: [7843]
}, {
  code: 7844,
  lower: [],
  title: [],
  upper: [],
  fold: 7845,
  foldFull: [7845]
}, {
  code: 7846,
  lower: [],
  title: [],
  upper: [],
  fold: 7847,
  foldFull: [7847]
}, {
  code: 7848,
  lower: [],
  title: [],
  upper: [],
  fold: 7849,
  foldFull: [7849]
}, {
  code: 7850,
  lower: [],
  title: [],
  upper: [],
  fold: 7851,
  foldFull: [7851]
}, {
  code: 7852,
  lower: [],
  title: [],
  upper: [],
  fold: 7853,
  foldFull: [7853]
}, {
  code: 7854,
  lower: [],
  title: [],
  upper: [],
  fold: 7855,
  foldFull: [7855]
}, {
  code: 7856,
  lower: [],
  title: [],
  upper: [],
  fold: 7857,
  foldFull: [7857]
}, {
  code: 7858,
  lower: [],
  title: [],
  upper: [],
  fold: 7859,
  foldFull: [7859]
}, {
  code: 7860,
  lower: [],
  title: [],
  upper: [],
  fold: 7861,
  foldFull: [7861]
}, {
  code: 7862,
  lower: [],
  title: [],
  upper: [],
  fold: 7863,
  foldFull: [7863]
}, {
  code: 7864,
  lower: [],
  title: [],
  upper: [],
  fold: 7865,
  foldFull: [7865]
}, {
  code: 7866,
  lower: [],
  title: [],
  upper: [],
  fold: 7867,
  foldFull: [7867]
}, {
  code: 7868,
  lower: [],
  title: [],
  upper: [],
  fold: 7869,
  foldFull: [7869]
}, {
  code: 7870,
  lower: [],
  title: [],
  upper: [],
  fold: 7871,
  foldFull: [7871]
}, {
  code: 7872,
  lower: [],
  title: [],
  upper: [],
  fold: 7873,
  foldFull: [7873]
}, {
  code: 7874,
  lower: [],
  title: [],
  upper: [],
  fold: 7875,
  foldFull: [7875]
}, {
  code: 7876,
  lower: [],
  title: [],
  upper: [],
  fold: 7877,
  foldFull: [7877]
}, {
  code: 7878,
  lower: [],
  title: [],
  upper: [],
  fold: 7879,
  foldFull: [7879]
}, {
  code: 7880,
  lower: [],
  title: [],
  upper: [],
  fold: 7881,
  foldFull: [7881]
}, {
  code: 7882,
  lower: [],
  title: [],
  upper: [],
  fold: 7883,
  foldFull: [7883]
}, {
  code: 7884,
  lower: [],
  title: [],
  upper: [],
  fold: 7885,
  foldFull: [7885]
}, {
  code: 7886,
  lower: [],
  title: [],
  upper: [],
  fold: 7887,
  foldFull: [7887]
}, {
  code: 7888,
  lower: [],
  title: [],
  upper: [],
  fold: 7889,
  foldFull: [7889]
}, {
  code: 7890,
  lower: [],
  title: [],
  upper: [],
  fold: 7891,
  foldFull: [7891]
}, {
  code: 7892,
  lower: [],
  title: [],
  upper: [],
  fold: 7893,
  foldFull: [7893]
}, {
  code: 7894,
  lower: [],
  title: [],
  upper: [],
  fold: 7895,
  foldFull: [7895]
}, {
  code: 7896,
  lower: [],
  title: [],
  upper: [],
  fold: 7897,
  foldFull: [7897]
}, {
  code: 7898,
  lower: [],
  title: [],
  upper: [],
  fold: 7899,
  foldFull: [7899]
}, {
  code: 7900,
  lower: [],
  title: [],
  upper: [],
  fold: 7901,
  foldFull: [7901]
}, {
  code: 7902,
  lower: [],
  title: [],
  upper: [],
  fold: 7903,
  foldFull: [7903]
}, {
  code: 7904,
  lower: [],
  title: [],
  upper: [],
  fold: 7905,
  foldFull: [7905]
}, {
  code: 7906,
  lower: [],
  title: [],
  upper: [],
  fold: 7907,
  foldFull: [7907]
}, {
  code: 7908,
  lower: [],
  title: [],
  upper: [],
  fold: 7909,
  foldFull: [7909]
}, {
  code: 7910,
  lower: [],
  title: [],
  upper: [],
  fold: 7911,
  foldFull: [7911]
}, {
  code: 7912,
  lower: [],
  title: [],
  upper: [],
  fold: 7913,
  foldFull: [7913]
}, {
  code: 7914,
  lower: [],
  title: [],
  upper: [],
  fold: 7915,
  foldFull: [7915]
}, {
  code: 7916,
  lower: [],
  title: [],
  upper: [],
  fold: 7917,
  foldFull: [7917]
}, {
  code: 7918,
  lower: [],
  title: [],
  upper: [],
  fold: 7919,
  foldFull: [7919]
}, {
  code: 7920,
  lower: [],
  title: [],
  upper: [],
  fold: 7921,
  foldFull: [7921]
}, {
  code: 7922,
  lower: [],
  title: [],
  upper: [],
  fold: 7923,
  foldFull: [7923]
}, {
  code: 7924,
  lower: [],
  title: [],
  upper: [],
  fold: 7925,
  foldFull: [7925]
}, {
  code: 7926,
  lower: [],
  title: [],
  upper: [],
  fold: 7927,
  foldFull: [7927]
}, {
  code: 7928,
  lower: [],
  title: [],
  upper: [],
  fold: 7929,
  foldFull: [7929]
}, {
  code: 7930,
  lower: [],
  title: [],
  upper: [],
  fold: 7931,
  foldFull: [7931]
}, {
  code: 7932,
  lower: [],
  title: [],
  upper: [],
  fold: 7933,
  foldFull: [7933]
}, {
  code: 7934,
  lower: [],
  title: [],
  upper: [],
  fold: 7935,
  foldFull: [7935]
}, {
  code: 7944,
  lower: [],
  title: [],
  upper: [],
  fold: 7936,
  foldFull: [7936]
}, {
  code: 7945,
  lower: [],
  title: [],
  upper: [],
  fold: 7937,
  foldFull: [7937]
}, {
  code: 7946,
  lower: [],
  title: [],
  upper: [],
  fold: 7938,
  foldFull: [7938]
}, {
  code: 7947,
  lower: [],
  title: [],
  upper: [],
  fold: 7939,
  foldFull: [7939]
}, {
  code: 7948,
  lower: [],
  title: [],
  upper: [],
  fold: 7940,
  foldFull: [7940]
}, {
  code: 7949,
  lower: [],
  title: [],
  upper: [],
  fold: 7941,
  foldFull: [7941]
}, {
  code: 7950,
  lower: [],
  title: [],
  upper: [],
  fold: 7942,
  foldFull: [7942]
}, {
  code: 7951,
  lower: [],
  title: [],
  upper: [],
  fold: 7943,
  foldFull: [7943]
}, {
  code: 7960,
  lower: [],
  title: [],
  upper: [],
  fold: 7952,
  foldFull: [7952]
}, {
  code: 7961,
  lower: [],
  title: [],
  upper: [],
  fold: 7953,
  foldFull: [7953]
}, {
  code: 7962,
  lower: [],
  title: [],
  upper: [],
  fold: 7954,
  foldFull: [7954]
}, {
  code: 7963,
  lower: [],
  title: [],
  upper: [],
  fold: 7955,
  foldFull: [7955]
}, {
  code: 7964,
  lower: [],
  title: [],
  upper: [],
  fold: 7956,
  foldFull: [7956]
}, {
  code: 7965,
  lower: [],
  title: [],
  upper: [],
  fold: 7957,
  foldFull: [7957]
}, {
  code: 7976,
  lower: [],
  title: [],
  upper: [],
  fold: 7968,
  foldFull: [7968]
}, {
  code: 7977,
  lower: [],
  title: [],
  upper: [],
  fold: 7969,
  foldFull: [7969]
}, {
  code: 7978,
  lower: [],
  title: [],
  upper: [],
  fold: 7970,
  foldFull: [7970]
}, {
  code: 7979,
  lower: [],
  title: [],
  upper: [],
  fold: 7971,
  foldFull: [7971]
}, {
  code: 7980,
  lower: [],
  title: [],
  upper: [],
  fold: 7972,
  foldFull: [7972]
}, {
  code: 7981,
  lower: [],
  title: [],
  upper: [],
  fold: 7973,
  foldFull: [7973]
}, {
  code: 7982,
  lower: [],
  title: [],
  upper: [],
  fold: 7974,
  foldFull: [7974]
}, {
  code: 7983,
  lower: [],
  title: [],
  upper: [],
  fold: 7975,
  foldFull: [7975]
}, {
  code: 7992,
  lower: [],
  title: [],
  upper: [],
  fold: 7984,
  foldFull: [7984]
}, {
  code: 7993,
  lower: [],
  title: [],
  upper: [],
  fold: 7985,
  foldFull: [7985]
}, {
  code: 7994,
  lower: [],
  title: [],
  upper: [],
  fold: 7986,
  foldFull: [7986]
}, {
  code: 7995,
  lower: [],
  title: [],
  upper: [],
  fold: 7987,
  foldFull: [7987]
}, {
  code: 7996,
  lower: [],
  title: [],
  upper: [],
  fold: 7988,
  foldFull: [7988]
}, {
  code: 7997,
  lower: [],
  title: [],
  upper: [],
  fold: 7989,
  foldFull: [7989]
}, {
  code: 7998,
  lower: [],
  title: [],
  upper: [],
  fold: 7990,
  foldFull: [7990]
}, {
  code: 7999,
  lower: [],
  title: [],
  upper: [],
  fold: 7991,
  foldFull: [7991]
}, {
  code: 8008,
  lower: [],
  title: [],
  upper: [],
  fold: 8e3,
  foldFull: [8e3]
}, {
  code: 8009,
  lower: [],
  title: [],
  upper: [],
  fold: 8001,
  foldFull: [8001]
}, {
  code: 8010,
  lower: [],
  title: [],
  upper: [],
  fold: 8002,
  foldFull: [8002]
}, {
  code: 8011,
  lower: [],
  title: [],
  upper: [],
  fold: 8003,
  foldFull: [8003]
}, {
  code: 8012,
  lower: [],
  title: [],
  upper: [],
  fold: 8004,
  foldFull: [8004]
}, {
  code: 8013,
  lower: [],
  title: [],
  upper: [],
  fold: 8005,
  foldFull: [8005]
}, {
  code: 8016,
  lower: [8016],
  title: [933, 787],
  upper: [933, 787],
  fold: 0,
  foldFull: [965, 787]
}, {
  code: 8016,
  lower: [8016],
  title: [933, 787],
  upper: [933, 787],
  fold: 0,
  foldFull: [965, 787]
}, {
  code: 8018,
  lower: [8018],
  title: [933, 787, 768],
  upper: [933, 787, 768],
  fold: 0,
  foldFull: [965, 787, 768]
}, {
  code: 8018,
  lower: [8018],
  title: [933, 787, 768],
  upper: [933, 787, 768],
  fold: 0,
  foldFull: [965, 787, 768]
}, {
  code: 8020,
  lower: [8020],
  title: [933, 787, 769],
  upper: [933, 787, 769],
  fold: 0,
  foldFull: [965, 787, 769]
}, {
  code: 8020,
  lower: [8020],
  title: [933, 787, 769],
  upper: [933, 787, 769],
  fold: 0,
  foldFull: [965, 787, 769]
}, {
  code: 8022,
  lower: [8022],
  title: [933, 787, 834],
  upper: [933, 787, 834],
  fold: 0,
  foldFull: [965, 787, 834]
}, {
  code: 8022,
  lower: [8022],
  title: [933, 787, 834],
  upper: [933, 787, 834],
  fold: 0,
  foldFull: [965, 787, 834]
}, {
  code: 8025,
  lower: [],
  title: [],
  upper: [],
  fold: 8017,
  foldFull: [8017]
}, {
  code: 8027,
  lower: [],
  title: [],
  upper: [],
  fold: 8019,
  foldFull: [8019]
}, {
  code: 8029,
  lower: [],
  title: [],
  upper: [],
  fold: 8021,
  foldFull: [8021]
}, {
  code: 8031,
  lower: [],
  title: [],
  upper: [],
  fold: 8023,
  foldFull: [8023]
}, {
  code: 8040,
  lower: [],
  title: [],
  upper: [],
  fold: 8032,
  foldFull: [8032]
}, {
  code: 8041,
  lower: [],
  title: [],
  upper: [],
  fold: 8033,
  foldFull: [8033]
}, {
  code: 8042,
  lower: [],
  title: [],
  upper: [],
  fold: 8034,
  foldFull: [8034]
}, {
  code: 8043,
  lower: [],
  title: [],
  upper: [],
  fold: 8035,
  foldFull: [8035]
}, {
  code: 8044,
  lower: [],
  title: [],
  upper: [],
  fold: 8036,
  foldFull: [8036]
}, {
  code: 8045,
  lower: [],
  title: [],
  upper: [],
  fold: 8037,
  foldFull: [8037]
}, {
  code: 8046,
  lower: [],
  title: [],
  upper: [],
  fold: 8038,
  foldFull: [8038]
}, {
  code: 8047,
  lower: [],
  title: [],
  upper: [],
  fold: 8039,
  foldFull: [8039]
}, {
  code: 8064,
  lower: [8064],
  title: [8072],
  upper: [7944, 921],
  fold: 0,
  foldFull: [7936, 953]
}, {
  code: 8064,
  lower: [8064],
  title: [8072],
  upper: [7944, 921],
  fold: 0,
  foldFull: [7936, 953]
}, {
  code: 8065,
  lower: [8065],
  title: [8073],
  upper: [7945, 921],
  fold: 0,
  foldFull: [7937, 953]
}, {
  code: 8065,
  lower: [8065],
  title: [8073],
  upper: [7945, 921],
  fold: 0,
  foldFull: [7937, 953]
}, {
  code: 8066,
  lower: [8066],
  title: [8074],
  upper: [7946, 921],
  fold: 0,
  foldFull: [7938, 953]
}, {
  code: 8066,
  lower: [8066],
  title: [8074],
  upper: [7946, 921],
  fold: 0,
  foldFull: [7938, 953]
}, {
  code: 8067,
  lower: [8067],
  title: [8075],
  upper: [7947, 921],
  fold: 0,
  foldFull: [7939, 953]
}, {
  code: 8067,
  lower: [8067],
  title: [8075],
  upper: [7947, 921],
  fold: 0,
  foldFull: [7939, 953]
}, {
  code: 8068,
  lower: [8068],
  title: [8076],
  upper: [7948, 921],
  fold: 0,
  foldFull: [7940, 953]
}, {
  code: 8068,
  lower: [8068],
  title: [8076],
  upper: [7948, 921],
  fold: 0,
  foldFull: [7940, 953]
}, {
  code: 8069,
  lower: [8069],
  title: [8077],
  upper: [7949, 921],
  fold: 0,
  foldFull: [7941, 953]
}, {
  code: 8069,
  lower: [8069],
  title: [8077],
  upper: [7949, 921],
  fold: 0,
  foldFull: [7941, 953]
}, {
  code: 8070,
  lower: [8070],
  title: [8078],
  upper: [7950, 921],
  fold: 0,
  foldFull: [7942, 953]
}, {
  code: 8070,
  lower: [8070],
  title: [8078],
  upper: [7950, 921],
  fold: 0,
  foldFull: [7942, 953]
}, {
  code: 8071,
  lower: [8071],
  title: [8079],
  upper: [7951, 921],
  fold: 0,
  foldFull: [7943, 953]
}, {
  code: 8071,
  lower: [8071],
  title: [8079],
  upper: [7951, 921],
  fold: 0,
  foldFull: [7943, 953]
}, {
  code: 8072,
  lower: [8064],
  title: [8072],
  upper: [7944, 921],
  fold: 8064,
  foldFull: [7936, 953]
}, {
  code: 8072,
  lower: [8064],
  title: [8072],
  upper: [7944, 921],
  fold: 8064,
  foldFull: [7936, 953]
}, {
  code: 8073,
  lower: [8065],
  title: [8073],
  upper: [7945, 921],
  fold: 8065,
  foldFull: [7937, 953]
}, {
  code: 8073,
  lower: [8065],
  title: [8073],
  upper: [7945, 921],
  fold: 8065,
  foldFull: [7937, 953]
}, {
  code: 8074,
  lower: [8066],
  title: [8074],
  upper: [7946, 921],
  fold: 8066,
  foldFull: [7938, 953]
}, {
  code: 8074,
  lower: [8066],
  title: [8074],
  upper: [7946, 921],
  fold: 8066,
  foldFull: [7938, 953]
}, {
  code: 8075,
  lower: [8067],
  title: [8075],
  upper: [7947, 921],
  fold: 8067,
  foldFull: [7939, 953]
}, {
  code: 8075,
  lower: [8067],
  title: [8075],
  upper: [7947, 921],
  fold: 8067,
  foldFull: [7939, 953]
}, {
  code: 8076,
  lower: [8068],
  title: [8076],
  upper: [7948, 921],
  fold: 8068,
  foldFull: [7940, 953]
}, {
  code: 8076,
  lower: [8068],
  title: [8076],
  upper: [7948, 921],
  fold: 8068,
  foldFull: [7940, 953]
}, {
  code: 8077,
  lower: [8069],
  title: [8077],
  upper: [7949, 921],
  fold: 8069,
  foldFull: [7941, 953]
}, {
  code: 8077,
  lower: [8069],
  title: [8077],
  upper: [7949, 921],
  fold: 8069,
  foldFull: [7941, 953]
}, {
  code: 8078,
  lower: [8070],
  title: [8078],
  upper: [7950, 921],
  fold: 8070,
  foldFull: [7942, 953]
}, {
  code: 8078,
  lower: [8070],
  title: [8078],
  upper: [7950, 921],
  fold: 8070,
  foldFull: [7942, 953]
}, {
  code: 8079,
  lower: [8071],
  title: [8079],
  upper: [7951, 921],
  fold: 8071,
  foldFull: [7943, 953]
}, {
  code: 8079,
  lower: [8071],
  title: [8079],
  upper: [7951, 921],
  fold: 8071,
  foldFull: [7943, 953]
}, {
  code: 8080,
  lower: [8080],
  title: [8088],
  upper: [7976, 921],
  fold: 0,
  foldFull: [7968, 953]
}, {
  code: 8080,
  lower: [8080],
  title: [8088],
  upper: [7976, 921],
  fold: 0,
  foldFull: [7968, 953]
}, {
  code: 8081,
  lower: [8081],
  title: [8089],
  upper: [7977, 921],
  fold: 0,
  foldFull: [7969, 953]
}, {
  code: 8081,
  lower: [8081],
  title: [8089],
  upper: [7977, 921],
  fold: 0,
  foldFull: [7969, 953]
}, {
  code: 8082,
  lower: [8082],
  title: [8090],
  upper: [7978, 921],
  fold: 0,
  foldFull: [7970, 953]
}, {
  code: 8082,
  lower: [8082],
  title: [8090],
  upper: [7978, 921],
  fold: 0,
  foldFull: [7970, 953]
}, {
  code: 8083,
  lower: [8083],
  title: [8091],
  upper: [7979, 921],
  fold: 0,
  foldFull: [7971, 953]
}, {
  code: 8083,
  lower: [8083],
  title: [8091],
  upper: [7979, 921],
  fold: 0,
  foldFull: [7971, 953]
}, {
  code: 8084,
  lower: [8084],
  title: [8092],
  upper: [7980, 921],
  fold: 0,
  foldFull: [7972, 953]
}, {
  code: 8084,
  lower: [8084],
  title: [8092],
  upper: [7980, 921],
  fold: 0,
  foldFull: [7972, 953]
}, {
  code: 8085,
  lower: [8085],
  title: [8093],
  upper: [7981, 921],
  fold: 0,
  foldFull: [7973, 953]
}, {
  code: 8085,
  lower: [8085],
  title: [8093],
  upper: [7981, 921],
  fold: 0,
  foldFull: [7973, 953]
}, {
  code: 8086,
  lower: [8086],
  title: [8094],
  upper: [7982, 921],
  fold: 0,
  foldFull: [7974, 953]
}, {
  code: 8086,
  lower: [8086],
  title: [8094],
  upper: [7982, 921],
  fold: 0,
  foldFull: [7974, 953]
}, {
  code: 8087,
  lower: [8087],
  title: [8095],
  upper: [7983, 921],
  fold: 0,
  foldFull: [7975, 953]
}, {
  code: 8087,
  lower: [8087],
  title: [8095],
  upper: [7983, 921],
  fold: 0,
  foldFull: [7975, 953]
}, {
  code: 8088,
  lower: [8080],
  title: [8088],
  upper: [7976, 921],
  fold: 8080,
  foldFull: [7968, 953]
}, {
  code: 8088,
  lower: [8080],
  title: [8088],
  upper: [7976, 921],
  fold: 8080,
  foldFull: [7968, 953]
}, {
  code: 8089,
  lower: [8081],
  title: [8089],
  upper: [7977, 921],
  fold: 8081,
  foldFull: [7969, 953]
}, {
  code: 8089,
  lower: [8081],
  title: [8089],
  upper: [7977, 921],
  fold: 8081,
  foldFull: [7969, 953]
}, {
  code: 8090,
  lower: [8082],
  title: [8090],
  upper: [7978, 921],
  fold: 8082,
  foldFull: [7970, 953]
}, {
  code: 8090,
  lower: [8082],
  title: [8090],
  upper: [7978, 921],
  fold: 8082,
  foldFull: [7970, 953]
}, {
  code: 8091,
  lower: [8083],
  title: [8091],
  upper: [7979, 921],
  fold: 8083,
  foldFull: [7971, 953]
}, {
  code: 8091,
  lower: [8083],
  title: [8091],
  upper: [7979, 921],
  fold: 8083,
  foldFull: [7971, 953]
}, {
  code: 8092,
  lower: [8084],
  title: [8092],
  upper: [7980, 921],
  fold: 8084,
  foldFull: [7972, 953]
}, {
  code: 8092,
  lower: [8084],
  title: [8092],
  upper: [7980, 921],
  fold: 8084,
  foldFull: [7972, 953]
}, {
  code: 8093,
  lower: [8085],
  title: [8093],
  upper: [7981, 921],
  fold: 8085,
  foldFull: [7973, 953]
}, {
  code: 8093,
  lower: [8085],
  title: [8093],
  upper: [7981, 921],
  fold: 8085,
  foldFull: [7973, 953]
}, {
  code: 8094,
  lower: [8086],
  title: [8094],
  upper: [7982, 921],
  fold: 8086,
  foldFull: [7974, 953]
}, {
  code: 8094,
  lower: [8086],
  title: [8094],
  upper: [7982, 921],
  fold: 8086,
  foldFull: [7974, 953]
}, {
  code: 8095,
  lower: [8087],
  title: [8095],
  upper: [7983, 921],
  fold: 8087,
  foldFull: [7975, 953]
}, {
  code: 8095,
  lower: [8087],
  title: [8095],
  upper: [7983, 921],
  fold: 8087,
  foldFull: [7975, 953]
}, {
  code: 8096,
  lower: [8096],
  title: [8104],
  upper: [8040, 921],
  fold: 0,
  foldFull: [8032, 953]
}, {
  code: 8096,
  lower: [8096],
  title: [8104],
  upper: [8040, 921],
  fold: 0,
  foldFull: [8032, 953]
}, {
  code: 8097,
  lower: [8097],
  title: [8105],
  upper: [8041, 921],
  fold: 0,
  foldFull: [8033, 953]
}, {
  code: 8097,
  lower: [8097],
  title: [8105],
  upper: [8041, 921],
  fold: 0,
  foldFull: [8033, 953]
}, {
  code: 8098,
  lower: [8098],
  title: [8106],
  upper: [8042, 921],
  fold: 0,
  foldFull: [8034, 953]
}, {
  code: 8098,
  lower: [8098],
  title: [8106],
  upper: [8042, 921],
  fold: 0,
  foldFull: [8034, 953]
}, {
  code: 8099,
  lower: [8099],
  title: [8107],
  upper: [8043, 921],
  fold: 0,
  foldFull: [8035, 953]
}, {
  code: 8099,
  lower: [8099],
  title: [8107],
  upper: [8043, 921],
  fold: 0,
  foldFull: [8035, 953]
}, {
  code: 8100,
  lower: [8100],
  title: [8108],
  upper: [8044, 921],
  fold: 0,
  foldFull: [8036, 953]
}, {
  code: 8100,
  lower: [8100],
  title: [8108],
  upper: [8044, 921],
  fold: 0,
  foldFull: [8036, 953]
}, {
  code: 8101,
  lower: [8101],
  title: [8109],
  upper: [8045, 921],
  fold: 0,
  foldFull: [8037, 953]
}, {
  code: 8101,
  lower: [8101],
  title: [8109],
  upper: [8045, 921],
  fold: 0,
  foldFull: [8037, 953]
}, {
  code: 8102,
  lower: [8102],
  title: [8110],
  upper: [8046, 921],
  fold: 0,
  foldFull: [8038, 953]
}, {
  code: 8102,
  lower: [8102],
  title: [8110],
  upper: [8046, 921],
  fold: 0,
  foldFull: [8038, 953]
}, {
  code: 8103,
  lower: [8103],
  title: [8111],
  upper: [8047, 921],
  fold: 0,
  foldFull: [8039, 953]
}, {
  code: 8103,
  lower: [8103],
  title: [8111],
  upper: [8047, 921],
  fold: 0,
  foldFull: [8039, 953]
}, {
  code: 8104,
  lower: [8096],
  title: [8104],
  upper: [8040, 921],
  fold: 8096,
  foldFull: [8032, 953]
}, {
  code: 8104,
  lower: [8096],
  title: [8104],
  upper: [8040, 921],
  fold: 8096,
  foldFull: [8032, 953]
}, {
  code: 8105,
  lower: [8097],
  title: [8105],
  upper: [8041, 921],
  fold: 8097,
  foldFull: [8033, 953]
}, {
  code: 8105,
  lower: [8097],
  title: [8105],
  upper: [8041, 921],
  fold: 8097,
  foldFull: [8033, 953]
}, {
  code: 8106,
  lower: [8098],
  title: [8106],
  upper: [8042, 921],
  fold: 8098,
  foldFull: [8034, 953]
}, {
  code: 8106,
  lower: [8098],
  title: [8106],
  upper: [8042, 921],
  fold: 8098,
  foldFull: [8034, 953]
}, {
  code: 8107,
  lower: [8099],
  title: [8107],
  upper: [8043, 921],
  fold: 8099,
  foldFull: [8035, 953]
}, {
  code: 8107,
  lower: [8099],
  title: [8107],
  upper: [8043, 921],
  fold: 8099,
  foldFull: [8035, 953]
}, {
  code: 8108,
  lower: [8100],
  title: [8108],
  upper: [8044, 921],
  fold: 8100,
  foldFull: [8036, 953]
}, {
  code: 8108,
  lower: [8100],
  title: [8108],
  upper: [8044, 921],
  fold: 8100,
  foldFull: [8036, 953]
}, {
  code: 8109,
  lower: [8101],
  title: [8109],
  upper: [8045, 921],
  fold: 8101,
  foldFull: [8037, 953]
}, {
  code: 8109,
  lower: [8101],
  title: [8109],
  upper: [8045, 921],
  fold: 8101,
  foldFull: [8037, 953]
}, {
  code: 8110,
  lower: [8102],
  title: [8110],
  upper: [8046, 921],
  fold: 8102,
  foldFull: [8038, 953]
}, {
  code: 8110,
  lower: [8102],
  title: [8110],
  upper: [8046, 921],
  fold: 8102,
  foldFull: [8038, 953]
}, {
  code: 8111,
  lower: [8103],
  title: [8111],
  upper: [8047, 921],
  fold: 8103,
  foldFull: [8039, 953]
}, {
  code: 8111,
  lower: [8103],
  title: [8111],
  upper: [8047, 921],
  fold: 8103,
  foldFull: [8039, 953]
}, {
  code: 8114,
  lower: [8114],
  title: [8122, 837],
  upper: [8122, 921],
  fold: 0,
  foldFull: [8048, 953]
}, {
  code: 8114,
  lower: [8114],
  title: [8122, 837],
  upper: [8122, 921],
  fold: 0,
  foldFull: [8048, 953]
}, {
  code: 8115,
  lower: [8115],
  title: [8124],
  upper: [913, 921],
  fold: 0,
  foldFull: [945, 953]
}, {
  code: 8115,
  lower: [8115],
  title: [8124],
  upper: [913, 921],
  fold: 0,
  foldFull: [945, 953]
}, {
  code: 8116,
  lower: [8116],
  title: [902, 837],
  upper: [902, 921],
  fold: 0,
  foldFull: [940, 953]
}, {
  code: 8116,
  lower: [8116],
  title: [902, 837],
  upper: [902, 921],
  fold: 0,
  foldFull: [940, 953]
}, {
  code: 8118,
  lower: [8118],
  title: [913, 834],
  upper: [913, 834],
  fold: 0,
  foldFull: [945, 834]
}, {
  code: 8118,
  lower: [8118],
  title: [913, 834],
  upper: [913, 834],
  fold: 0,
  foldFull: [945, 834]
}, {
  code: 8119,
  lower: [8119],
  title: [913, 834, 837],
  upper: [913, 834, 921],
  fold: 0,
  foldFull: [945, 834, 953]
}, {
  code: 8119,
  lower: [8119],
  title: [913, 834, 837],
  upper: [913, 834, 921],
  fold: 0,
  foldFull: [945, 834, 953]
}, {
  code: 8120,
  lower: [],
  title: [],
  upper: [],
  fold: 8112,
  foldFull: [8112]
}, {
  code: 8121,
  lower: [],
  title: [],
  upper: [],
  fold: 8113,
  foldFull: [8113]
}, {
  code: 8122,
  lower: [],
  title: [],
  upper: [],
  fold: 8048,
  foldFull: [8048]
}, {
  code: 8123,
  lower: [],
  title: [],
  upper: [],
  fold: 8049,
  foldFull: [8049]
}, {
  code: 8124,
  lower: [8115],
  title: [8124],
  upper: [913, 921],
  fold: 8115,
  foldFull: [945, 953]
}, {
  code: 8124,
  lower: [8115],
  title: [8124],
  upper: [913, 921],
  fold: 8115,
  foldFull: [945, 953]
}, {
  code: 8126,
  lower: [],
  title: [],
  upper: [],
  fold: 953,
  foldFull: [953]
}, {
  code: 8130,
  lower: [8130],
  title: [8138, 837],
  upper: [8138, 921],
  fold: 0,
  foldFull: [8052, 953]
}, {
  code: 8130,
  lower: [8130],
  title: [8138, 837],
  upper: [8138, 921],
  fold: 0,
  foldFull: [8052, 953]
}, {
  code: 8131,
  lower: [8131],
  title: [8140],
  upper: [919, 921],
  fold: 0,
  foldFull: [951, 953]
}, {
  code: 8131,
  lower: [8131],
  title: [8140],
  upper: [919, 921],
  fold: 0,
  foldFull: [951, 953]
}, {
  code: 8132,
  lower: [8132],
  title: [905, 837],
  upper: [905, 921],
  fold: 0,
  foldFull: [942, 953]
}, {
  code: 8132,
  lower: [8132],
  title: [905, 837],
  upper: [905, 921],
  fold: 0,
  foldFull: [942, 953]
}, {
  code: 8134,
  lower: [8134],
  title: [919, 834],
  upper: [919, 834],
  fold: 0,
  foldFull: [951, 834]
}, {
  code: 8134,
  lower: [8134],
  title: [919, 834],
  upper: [919, 834],
  fold: 0,
  foldFull: [951, 834]
}, {
  code: 8135,
  lower: [8135],
  title: [919, 834, 837],
  upper: [919, 834, 921],
  fold: 0,
  foldFull: [951, 834, 953]
}, {
  code: 8135,
  lower: [8135],
  title: [919, 834, 837],
  upper: [919, 834, 921],
  fold: 0,
  foldFull: [951, 834, 953]
}, {
  code: 8136,
  lower: [],
  title: [],
  upper: [],
  fold: 8050,
  foldFull: [8050]
}, {
  code: 8137,
  lower: [],
  title: [],
  upper: [],
  fold: 8051,
  foldFull: [8051]
}, {
  code: 8138,
  lower: [],
  title: [],
  upper: [],
  fold: 8052,
  foldFull: [8052]
}, {
  code: 8139,
  lower: [],
  title: [],
  upper: [],
  fold: 8053,
  foldFull: [8053]
}, {
  code: 8140,
  lower: [8131],
  title: [8140],
  upper: [919, 921],
  fold: 8131,
  foldFull: [951, 953]
}, {
  code: 8140,
  lower: [8131],
  title: [8140],
  upper: [919, 921],
  fold: 8131,
  foldFull: [951, 953]
}, {
  code: 8146,
  lower: [8146],
  title: [921, 776, 768],
  upper: [921, 776, 768],
  fold: 0,
  foldFull: [953, 776, 768]
}, {
  code: 8146,
  lower: [8146],
  title: [921, 776, 768],
  upper: [921, 776, 768],
  fold: 0,
  foldFull: [953, 776, 768]
}, {
  code: 8147,
  lower: [8147],
  title: [921, 776, 769],
  upper: [921, 776, 769],
  fold: 0,
  foldFull: [953, 776, 769]
}, {
  code: 8147,
  lower: [8147],
  title: [921, 776, 769],
  upper: [921, 776, 769],
  fold: 0,
  foldFull: [953, 776, 769]
}, {
  code: 8150,
  lower: [8150],
  title: [921, 834],
  upper: [921, 834],
  fold: 0,
  foldFull: [953, 834]
}, {
  code: 8150,
  lower: [8150],
  title: [921, 834],
  upper: [921, 834],
  fold: 0,
  foldFull: [953, 834]
}, {
  code: 8151,
  lower: [8151],
  title: [921, 776, 834],
  upper: [921, 776, 834],
  fold: 0,
  foldFull: [953, 776, 834]
}, {
  code: 8151,
  lower: [8151],
  title: [921, 776, 834],
  upper: [921, 776, 834],
  fold: 0,
  foldFull: [953, 776, 834]
}, {
  code: 8152,
  lower: [],
  title: [],
  upper: [],
  fold: 8144,
  foldFull: [8144]
}, {
  code: 8153,
  lower: [],
  title: [],
  upper: [],
  fold: 8145,
  foldFull: [8145]
}, {
  code: 8154,
  lower: [],
  title: [],
  upper: [],
  fold: 8054,
  foldFull: [8054]
}, {
  code: 8155,
  lower: [],
  title: [],
  upper: [],
  fold: 8055,
  foldFull: [8055]
}, {
  code: 8162,
  lower: [8162],
  title: [933, 776, 768],
  upper: [933, 776, 768],
  fold: 0,
  foldFull: [965, 776, 768]
}, {
  code: 8162,
  lower: [8162],
  title: [933, 776, 768],
  upper: [933, 776, 768],
  fold: 0,
  foldFull: [965, 776, 768]
}, {
  code: 8163,
  lower: [8163],
  title: [933, 776, 769],
  upper: [933, 776, 769],
  fold: 0,
  foldFull: [965, 776, 769]
}, {
  code: 8163,
  lower: [8163],
  title: [933, 776, 769],
  upper: [933, 776, 769],
  fold: 0,
  foldFull: [965, 776, 769]
}, {
  code: 8164,
  lower: [8164],
  title: [929, 787],
  upper: [929, 787],
  fold: 0,
  foldFull: [961, 787]
}, {
  code: 8164,
  lower: [8164],
  title: [929, 787],
  upper: [929, 787],
  fold: 0,
  foldFull: [961, 787]
}, {
  code: 8166,
  lower: [8166],
  title: [933, 834],
  upper: [933, 834],
  fold: 0,
  foldFull: [965, 834]
}, {
  code: 8166,
  lower: [8166],
  title: [933, 834],
  upper: [933, 834],
  fold: 0,
  foldFull: [965, 834]
}, {
  code: 8167,
  lower: [8167],
  title: [933, 776, 834],
  upper: [933, 776, 834],
  fold: 0,
  foldFull: [965, 776, 834]
}, {
  code: 8167,
  lower: [8167],
  title: [933, 776, 834],
  upper: [933, 776, 834],
  fold: 0,
  foldFull: [965, 776, 834]
}, {
  code: 8168,
  lower: [],
  title: [],
  upper: [],
  fold: 8160,
  foldFull: [8160]
}, {
  code: 8169,
  lower: [],
  title: [],
  upper: [],
  fold: 8161,
  foldFull: [8161]
}, {
  code: 8170,
  lower: [],
  title: [],
  upper: [],
  fold: 8058,
  foldFull: [8058]
}, {
  code: 8171,
  lower: [],
  title: [],
  upper: [],
  fold: 8059,
  foldFull: [8059]
}, {
  code: 8172,
  lower: [],
  title: [],
  upper: [],
  fold: 8165,
  foldFull: [8165]
}, {
  code: 8178,
  lower: [8178],
  title: [8186, 837],
  upper: [8186, 921],
  fold: 0,
  foldFull: [8060, 953]
}, {
  code: 8178,
  lower: [8178],
  title: [8186, 837],
  upper: [8186, 921],
  fold: 0,
  foldFull: [8060, 953]
}, {
  code: 8179,
  lower: [8179],
  title: [8188],
  upper: [937, 921],
  fold: 0,
  foldFull: [969, 953]
}, {
  code: 8179,
  lower: [8179],
  title: [8188],
  upper: [937, 921],
  fold: 0,
  foldFull: [969, 953]
}, {
  code: 8180,
  lower: [8180],
  title: [911, 837],
  upper: [911, 921],
  fold: 0,
  foldFull: [974, 953]
}, {
  code: 8180,
  lower: [8180],
  title: [911, 837],
  upper: [911, 921],
  fold: 0,
  foldFull: [974, 953]
}, {
  code: 8182,
  lower: [8182],
  title: [937, 834],
  upper: [937, 834],
  fold: 0,
  foldFull: [969, 834]
}, {
  code: 8182,
  lower: [8182],
  title: [937, 834],
  upper: [937, 834],
  fold: 0,
  foldFull: [969, 834]
}, {
  code: 8183,
  lower: [8183],
  title: [937, 834, 837],
  upper: [937, 834, 921],
  fold: 0,
  foldFull: [969, 834, 953]
}, {
  code: 8183,
  lower: [8183],
  title: [937, 834, 837],
  upper: [937, 834, 921],
  fold: 0,
  foldFull: [969, 834, 953]
}, {
  code: 8184,
  lower: [],
  title: [],
  upper: [],
  fold: 8056,
  foldFull: [8056]
}, {
  code: 8185,
  lower: [],
  title: [],
  upper: [],
  fold: 8057,
  foldFull: [8057]
}, {
  code: 8186,
  lower: [],
  title: [],
  upper: [],
  fold: 8060,
  foldFull: [8060]
}, {
  code: 8187,
  lower: [],
  title: [],
  upper: [],
  fold: 8061,
  foldFull: [8061]
}, {
  code: 8188,
  lower: [8179],
  title: [8188],
  upper: [937, 921],
  fold: 8179,
  foldFull: [969, 953]
}, {
  code: 8188,
  lower: [8179],
  title: [8188],
  upper: [937, 921],
  fold: 8179,
  foldFull: [969, 953]
}, {
  code: 8486,
  lower: [],
  title: [],
  upper: [],
  fold: 969,
  foldFull: [969]
}, {
  code: 8490,
  lower: [],
  title: [],
  upper: [],
  fold: 107,
  foldFull: [107]
}, {
  code: 8491,
  lower: [],
  title: [],
  upper: [],
  fold: 229,
  foldFull: [229]
}, {
  code: 8498,
  lower: [],
  title: [],
  upper: [],
  fold: 8526,
  foldFull: [8526]
}, {
  code: 8544,
  lower: [],
  title: [],
  upper: [],
  fold: 8560,
  foldFull: [8560]
}, {
  code: 8545,
  lower: [],
  title: [],
  upper: [],
  fold: 8561,
  foldFull: [8561]
}, {
  code: 8546,
  lower: [],
  title: [],
  upper: [],
  fold: 8562,
  foldFull: [8562]
}, {
  code: 8547,
  lower: [],
  title: [],
  upper: [],
  fold: 8563,
  foldFull: [8563]
}, {
  code: 8548,
  lower: [],
  title: [],
  upper: [],
  fold: 8564,
  foldFull: [8564]
}, {
  code: 8549,
  lower: [],
  title: [],
  upper: [],
  fold: 8565,
  foldFull: [8565]
}, {
  code: 8550,
  lower: [],
  title: [],
  upper: [],
  fold: 8566,
  foldFull: [8566]
}, {
  code: 8551,
  lower: [],
  title: [],
  upper: [],
  fold: 8567,
  foldFull: [8567]
}, {
  code: 8552,
  lower: [],
  title: [],
  upper: [],
  fold: 8568,
  foldFull: [8568]
}, {
  code: 8553,
  lower: [],
  title: [],
  upper: [],
  fold: 8569,
  foldFull: [8569]
}, {
  code: 8554,
  lower: [],
  title: [],
  upper: [],
  fold: 8570,
  foldFull: [8570]
}, {
  code: 8555,
  lower: [],
  title: [],
  upper: [],
  fold: 8571,
  foldFull: [8571]
}, {
  code: 8556,
  lower: [],
  title: [],
  upper: [],
  fold: 8572,
  foldFull: [8572]
}, {
  code: 8557,
  lower: [],
  title: [],
  upper: [],
  fold: 8573,
  foldFull: [8573]
}, {
  code: 8558,
  lower: [],
  title: [],
  upper: [],
  fold: 8574,
  foldFull: [8574]
}, {
  code: 8559,
  lower: [],
  title: [],
  upper: [],
  fold: 8575,
  foldFull: [8575]
}, {
  code: 8579,
  lower: [],
  title: [],
  upper: [],
  fold: 8580,
  foldFull: [8580]
}, {
  code: 9398,
  lower: [],
  title: [],
  upper: [],
  fold: 9424,
  foldFull: [9424]
}, {
  code: 9399,
  lower: [],
  title: [],
  upper: [],
  fold: 9425,
  foldFull: [9425]
}, {
  code: 9400,
  lower: [],
  title: [],
  upper: [],
  fold: 9426,
  foldFull: [9426]
}, {
  code: 9401,
  lower: [],
  title: [],
  upper: [],
  fold: 9427,
  foldFull: [9427]
}, {
  code: 9402,
  lower: [],
  title: [],
  upper: [],
  fold: 9428,
  foldFull: [9428]
}, {
  code: 9403,
  lower: [],
  title: [],
  upper: [],
  fold: 9429,
  foldFull: [9429]
}, {
  code: 9404,
  lower: [],
  title: [],
  upper: [],
  fold: 9430,
  foldFull: [9430]
}, {
  code: 9405,
  lower: [],
  title: [],
  upper: [],
  fold: 9431,
  foldFull: [9431]
}, {
  code: 9406,
  lower: [],
  title: [],
  upper: [],
  fold: 9432,
  foldFull: [9432]
}, {
  code: 9407,
  lower: [],
  title: [],
  upper: [],
  fold: 9433,
  foldFull: [9433]
}, {
  code: 9408,
  lower: [],
  title: [],
  upper: [],
  fold: 9434,
  foldFull: [9434]
}, {
  code: 9409,
  lower: [],
  title: [],
  upper: [],
  fold: 9435,
  foldFull: [9435]
}, {
  code: 9410,
  lower: [],
  title: [],
  upper: [],
  fold: 9436,
  foldFull: [9436]
}, {
  code: 9411,
  lower: [],
  title: [],
  upper: [],
  fold: 9437,
  foldFull: [9437]
}, {
  code: 9412,
  lower: [],
  title: [],
  upper: [],
  fold: 9438,
  foldFull: [9438]
}, {
  code: 9413,
  lower: [],
  title: [],
  upper: [],
  fold: 9439,
  foldFull: [9439]
}, {
  code: 9414,
  lower: [],
  title: [],
  upper: [],
  fold: 9440,
  foldFull: [9440]
}, {
  code: 9415,
  lower: [],
  title: [],
  upper: [],
  fold: 9441,
  foldFull: [9441]
}, {
  code: 9416,
  lower: [],
  title: [],
  upper: [],
  fold: 9442,
  foldFull: [9442]
}, {
  code: 9417,
  lower: [],
  title: [],
  upper: [],
  fold: 9443,
  foldFull: [9443]
}, {
  code: 9418,
  lower: [],
  title: [],
  upper: [],
  fold: 9444,
  foldFull: [9444]
}, {
  code: 9419,
  lower: [],
  title: [],
  upper: [],
  fold: 9445,
  foldFull: [9445]
}, {
  code: 9420,
  lower: [],
  title: [],
  upper: [],
  fold: 9446,
  foldFull: [9446]
}, {
  code: 9421,
  lower: [],
  title: [],
  upper: [],
  fold: 9447,
  foldFull: [9447]
}, {
  code: 9422,
  lower: [],
  title: [],
  upper: [],
  fold: 9448,
  foldFull: [9448]
}, {
  code: 9423,
  lower: [],
  title: [],
  upper: [],
  fold: 9449,
  foldFull: [9449]
}, {
  code: 11264,
  lower: [],
  title: [],
  upper: [],
  fold: 11312,
  foldFull: [11312]
}, {
  code: 11265,
  lower: [],
  title: [],
  upper: [],
  fold: 11313,
  foldFull: [11313]
}, {
  code: 11266,
  lower: [],
  title: [],
  upper: [],
  fold: 11314,
  foldFull: [11314]
}, {
  code: 11267,
  lower: [],
  title: [],
  upper: [],
  fold: 11315,
  foldFull: [11315]
}, {
  code: 11268,
  lower: [],
  title: [],
  upper: [],
  fold: 11316,
  foldFull: [11316]
}, {
  code: 11269,
  lower: [],
  title: [],
  upper: [],
  fold: 11317,
  foldFull: [11317]
}, {
  code: 11270,
  lower: [],
  title: [],
  upper: [],
  fold: 11318,
  foldFull: [11318]
}, {
  code: 11271,
  lower: [],
  title: [],
  upper: [],
  fold: 11319,
  foldFull: [11319]
}, {
  code: 11272,
  lower: [],
  title: [],
  upper: [],
  fold: 11320,
  foldFull: [11320]
}, {
  code: 11273,
  lower: [],
  title: [],
  upper: [],
  fold: 11321,
  foldFull: [11321]
}, {
  code: 11274,
  lower: [],
  title: [],
  upper: [],
  fold: 11322,
  foldFull: [11322]
}, {
  code: 11275,
  lower: [],
  title: [],
  upper: [],
  fold: 11323,
  foldFull: [11323]
}, {
  code: 11276,
  lower: [],
  title: [],
  upper: [],
  fold: 11324,
  foldFull: [11324]
}, {
  code: 11277,
  lower: [],
  title: [],
  upper: [],
  fold: 11325,
  foldFull: [11325]
}, {
  code: 11278,
  lower: [],
  title: [],
  upper: [],
  fold: 11326,
  foldFull: [11326]
}, {
  code: 11279,
  lower: [],
  title: [],
  upper: [],
  fold: 11327,
  foldFull: [11327]
}, {
  code: 11280,
  lower: [],
  title: [],
  upper: [],
  fold: 11328,
  foldFull: [11328]
}, {
  code: 11281,
  lower: [],
  title: [],
  upper: [],
  fold: 11329,
  foldFull: [11329]
}, {
  code: 11282,
  lower: [],
  title: [],
  upper: [],
  fold: 11330,
  foldFull: [11330]
}, {
  code: 11283,
  lower: [],
  title: [],
  upper: [],
  fold: 11331,
  foldFull: [11331]
}, {
  code: 11284,
  lower: [],
  title: [],
  upper: [],
  fold: 11332,
  foldFull: [11332]
}, {
  code: 11285,
  lower: [],
  title: [],
  upper: [],
  fold: 11333,
  foldFull: [11333]
}, {
  code: 11286,
  lower: [],
  title: [],
  upper: [],
  fold: 11334,
  foldFull: [11334]
}, {
  code: 11287,
  lower: [],
  title: [],
  upper: [],
  fold: 11335,
  foldFull: [11335]
}, {
  code: 11288,
  lower: [],
  title: [],
  upper: [],
  fold: 11336,
  foldFull: [11336]
}, {
  code: 11289,
  lower: [],
  title: [],
  upper: [],
  fold: 11337,
  foldFull: [11337]
}, {
  code: 11290,
  lower: [],
  title: [],
  upper: [],
  fold: 11338,
  foldFull: [11338]
}, {
  code: 11291,
  lower: [],
  title: [],
  upper: [],
  fold: 11339,
  foldFull: [11339]
}, {
  code: 11292,
  lower: [],
  title: [],
  upper: [],
  fold: 11340,
  foldFull: [11340]
}, {
  code: 11293,
  lower: [],
  title: [],
  upper: [],
  fold: 11341,
  foldFull: [11341]
}, {
  code: 11294,
  lower: [],
  title: [],
  upper: [],
  fold: 11342,
  foldFull: [11342]
}, {
  code: 11295,
  lower: [],
  title: [],
  upper: [],
  fold: 11343,
  foldFull: [11343]
}, {
  code: 11296,
  lower: [],
  title: [],
  upper: [],
  fold: 11344,
  foldFull: [11344]
}, {
  code: 11297,
  lower: [],
  title: [],
  upper: [],
  fold: 11345,
  foldFull: [11345]
}, {
  code: 11298,
  lower: [],
  title: [],
  upper: [],
  fold: 11346,
  foldFull: [11346]
}, {
  code: 11299,
  lower: [],
  title: [],
  upper: [],
  fold: 11347,
  foldFull: [11347]
}, {
  code: 11300,
  lower: [],
  title: [],
  upper: [],
  fold: 11348,
  foldFull: [11348]
}, {
  code: 11301,
  lower: [],
  title: [],
  upper: [],
  fold: 11349,
  foldFull: [11349]
}, {
  code: 11302,
  lower: [],
  title: [],
  upper: [],
  fold: 11350,
  foldFull: [11350]
}, {
  code: 11303,
  lower: [],
  title: [],
  upper: [],
  fold: 11351,
  foldFull: [11351]
}, {
  code: 11304,
  lower: [],
  title: [],
  upper: [],
  fold: 11352,
  foldFull: [11352]
}, {
  code: 11305,
  lower: [],
  title: [],
  upper: [],
  fold: 11353,
  foldFull: [11353]
}, {
  code: 11306,
  lower: [],
  title: [],
  upper: [],
  fold: 11354,
  foldFull: [11354]
}, {
  code: 11307,
  lower: [],
  title: [],
  upper: [],
  fold: 11355,
  foldFull: [11355]
}, {
  code: 11308,
  lower: [],
  title: [],
  upper: [],
  fold: 11356,
  foldFull: [11356]
}, {
  code: 11309,
  lower: [],
  title: [],
  upper: [],
  fold: 11357,
  foldFull: [11357]
}, {
  code: 11310,
  lower: [],
  title: [],
  upper: [],
  fold: 11358,
  foldFull: [11358]
}, {
  code: 11360,
  lower: [],
  title: [],
  upper: [],
  fold: 11361,
  foldFull: [11361]
}, {
  code: 11362,
  lower: [],
  title: [],
  upper: [],
  fold: 619,
  foldFull: [619]
}, {
  code: 11363,
  lower: [],
  title: [],
  upper: [],
  fold: 7549,
  foldFull: [7549]
}, {
  code: 11364,
  lower: [],
  title: [],
  upper: [],
  fold: 637,
  foldFull: [637]
}, {
  code: 11367,
  lower: [],
  title: [],
  upper: [],
  fold: 11368,
  foldFull: [11368]
}, {
  code: 11369,
  lower: [],
  title: [],
  upper: [],
  fold: 11370,
  foldFull: [11370]
}, {
  code: 11371,
  lower: [],
  title: [],
  upper: [],
  fold: 11372,
  foldFull: [11372]
}, {
  code: 11373,
  lower: [],
  title: [],
  upper: [],
  fold: 593,
  foldFull: [593]
}, {
  code: 11374,
  lower: [],
  title: [],
  upper: [],
  fold: 625,
  foldFull: [625]
}, {
  code: 11375,
  lower: [],
  title: [],
  upper: [],
  fold: 592,
  foldFull: [592]
}, {
  code: 11376,
  lower: [],
  title: [],
  upper: [],
  fold: 594,
  foldFull: [594]
}, {
  code: 11378,
  lower: [],
  title: [],
  upper: [],
  fold: 11379,
  foldFull: [11379]
}, {
  code: 11381,
  lower: [],
  title: [],
  upper: [],
  fold: 11382,
  foldFull: [11382]
}, {
  code: 11390,
  lower: [],
  title: [],
  upper: [],
  fold: 575,
  foldFull: [575]
}, {
  code: 11391,
  lower: [],
  title: [],
  upper: [],
  fold: 576,
  foldFull: [576]
}, {
  code: 11392,
  lower: [],
  title: [],
  upper: [],
  fold: 11393,
  foldFull: [11393]
}, {
  code: 11394,
  lower: [],
  title: [],
  upper: [],
  fold: 11395,
  foldFull: [11395]
}, {
  code: 11396,
  lower: [],
  title: [],
  upper: [],
  fold: 11397,
  foldFull: [11397]
}, {
  code: 11398,
  lower: [],
  title: [],
  upper: [],
  fold: 11399,
  foldFull: [11399]
}, {
  code: 11400,
  lower: [],
  title: [],
  upper: [],
  fold: 11401,
  foldFull: [11401]
}, {
  code: 11402,
  lower: [],
  title: [],
  upper: [],
  fold: 11403,
  foldFull: [11403]
}, {
  code: 11404,
  lower: [],
  title: [],
  upper: [],
  fold: 11405,
  foldFull: [11405]
}, {
  code: 11406,
  lower: [],
  title: [],
  upper: [],
  fold: 11407,
  foldFull: [11407]
}, {
  code: 11408,
  lower: [],
  title: [],
  upper: [],
  fold: 11409,
  foldFull: [11409]
}, {
  code: 11410,
  lower: [],
  title: [],
  upper: [],
  fold: 11411,
  foldFull: [11411]
}, {
  code: 11412,
  lower: [],
  title: [],
  upper: [],
  fold: 11413,
  foldFull: [11413]
}, {
  code: 11414,
  lower: [],
  title: [],
  upper: [],
  fold: 11415,
  foldFull: [11415]
}, {
  code: 11416,
  lower: [],
  title: [],
  upper: [],
  fold: 11417,
  foldFull: [11417]
}, {
  code: 11418,
  lower: [],
  title: [],
  upper: [],
  fold: 11419,
  foldFull: [11419]
}, {
  code: 11420,
  lower: [],
  title: [],
  upper: [],
  fold: 11421,
  foldFull: [11421]
}, {
  code: 11422,
  lower: [],
  title: [],
  upper: [],
  fold: 11423,
  foldFull: [11423]
}, {
  code: 11424,
  lower: [],
  title: [],
  upper: [],
  fold: 11425,
  foldFull: [11425]
}, {
  code: 11426,
  lower: [],
  title: [],
  upper: [],
  fold: 11427,
  foldFull: [11427]
}, {
  code: 11428,
  lower: [],
  title: [],
  upper: [],
  fold: 11429,
  foldFull: [11429]
}, {
  code: 11430,
  lower: [],
  title: [],
  upper: [],
  fold: 11431,
  foldFull: [11431]
}, {
  code: 11432,
  lower: [],
  title: [],
  upper: [],
  fold: 11433,
  foldFull: [11433]
}, {
  code: 11434,
  lower: [],
  title: [],
  upper: [],
  fold: 11435,
  foldFull: [11435]
}, {
  code: 11436,
  lower: [],
  title: [],
  upper: [],
  fold: 11437,
  foldFull: [11437]
}, {
  code: 11438,
  lower: [],
  title: [],
  upper: [],
  fold: 11439,
  foldFull: [11439]
}, {
  code: 11440,
  lower: [],
  title: [],
  upper: [],
  fold: 11441,
  foldFull: [11441]
}, {
  code: 11442,
  lower: [],
  title: [],
  upper: [],
  fold: 11443,
  foldFull: [11443]
}, {
  code: 11444,
  lower: [],
  title: [],
  upper: [],
  fold: 11445,
  foldFull: [11445]
}, {
  code: 11446,
  lower: [],
  title: [],
  upper: [],
  fold: 11447,
  foldFull: [11447]
}, {
  code: 11448,
  lower: [],
  title: [],
  upper: [],
  fold: 11449,
  foldFull: [11449]
}, {
  code: 11450,
  lower: [],
  title: [],
  upper: [],
  fold: 11451,
  foldFull: [11451]
}, {
  code: 11452,
  lower: [],
  title: [],
  upper: [],
  fold: 11453,
  foldFull: [11453]
}, {
  code: 11454,
  lower: [],
  title: [],
  upper: [],
  fold: 11455,
  foldFull: [11455]
}, {
  code: 11456,
  lower: [],
  title: [],
  upper: [],
  fold: 11457,
  foldFull: [11457]
}, {
  code: 11458,
  lower: [],
  title: [],
  upper: [],
  fold: 11459,
  foldFull: [11459]
}, {
  code: 11460,
  lower: [],
  title: [],
  upper: [],
  fold: 11461,
  foldFull: [11461]
}, {
  code: 11462,
  lower: [],
  title: [],
  upper: [],
  fold: 11463,
  foldFull: [11463]
}, {
  code: 11464,
  lower: [],
  title: [],
  upper: [],
  fold: 11465,
  foldFull: [11465]
}, {
  code: 11466,
  lower: [],
  title: [],
  upper: [],
  fold: 11467,
  foldFull: [11467]
}, {
  code: 11468,
  lower: [],
  title: [],
  upper: [],
  fold: 11469,
  foldFull: [11469]
}, {
  code: 11470,
  lower: [],
  title: [],
  upper: [],
  fold: 11471,
  foldFull: [11471]
}, {
  code: 11472,
  lower: [],
  title: [],
  upper: [],
  fold: 11473,
  foldFull: [11473]
}, {
  code: 11474,
  lower: [],
  title: [],
  upper: [],
  fold: 11475,
  foldFull: [11475]
}, {
  code: 11476,
  lower: [],
  title: [],
  upper: [],
  fold: 11477,
  foldFull: [11477]
}, {
  code: 11478,
  lower: [],
  title: [],
  upper: [],
  fold: 11479,
  foldFull: [11479]
}, {
  code: 11480,
  lower: [],
  title: [],
  upper: [],
  fold: 11481,
  foldFull: [11481]
}, {
  code: 11482,
  lower: [],
  title: [],
  upper: [],
  fold: 11483,
  foldFull: [11483]
}, {
  code: 11484,
  lower: [],
  title: [],
  upper: [],
  fold: 11485,
  foldFull: [11485]
}, {
  code: 11486,
  lower: [],
  title: [],
  upper: [],
  fold: 11487,
  foldFull: [11487]
}, {
  code: 11488,
  lower: [],
  title: [],
  upper: [],
  fold: 11489,
  foldFull: [11489]
}, {
  code: 11490,
  lower: [],
  title: [],
  upper: [],
  fold: 11491,
  foldFull: [11491]
}, {
  code: 11499,
  lower: [],
  title: [],
  upper: [],
  fold: 11500,
  foldFull: [11500]
}, {
  code: 11501,
  lower: [],
  title: [],
  upper: [],
  fold: 11502,
  foldFull: [11502]
}, {
  code: 11506,
  lower: [],
  title: [],
  upper: [],
  fold: 11507,
  foldFull: [11507]
}, {
  code: 42560,
  lower: [],
  title: [],
  upper: [],
  fold: 42561,
  foldFull: [42561]
}, {
  code: 42562,
  lower: [],
  title: [],
  upper: [],
  fold: 42563,
  foldFull: [42563]
}, {
  code: 42564,
  lower: [],
  title: [],
  upper: [],
  fold: 42565,
  foldFull: [42565]
}, {
  code: 42566,
  lower: [],
  title: [],
  upper: [],
  fold: 42567,
  foldFull: [42567]
}, {
  code: 42568,
  lower: [],
  title: [],
  upper: [],
  fold: 42569,
  foldFull: [42569]
}, {
  code: 42570,
  lower: [],
  title: [],
  upper: [],
  fold: 42571,
  foldFull: [42571]
}, {
  code: 42572,
  lower: [],
  title: [],
  upper: [],
  fold: 42573,
  foldFull: [42573]
}, {
  code: 42574,
  lower: [],
  title: [],
  upper: [],
  fold: 42575,
  foldFull: [42575]
}, {
  code: 42576,
  lower: [],
  title: [],
  upper: [],
  fold: 42577,
  foldFull: [42577]
}, {
  code: 42578,
  lower: [],
  title: [],
  upper: [],
  fold: 42579,
  foldFull: [42579]
}, {
  code: 42580,
  lower: [],
  title: [],
  upper: [],
  fold: 42581,
  foldFull: [42581]
}, {
  code: 42582,
  lower: [],
  title: [],
  upper: [],
  fold: 42583,
  foldFull: [42583]
}, {
  code: 42584,
  lower: [],
  title: [],
  upper: [],
  fold: 42585,
  foldFull: [42585]
}, {
  code: 42586,
  lower: [],
  title: [],
  upper: [],
  fold: 42587,
  foldFull: [42587]
}, {
  code: 42588,
  lower: [],
  title: [],
  upper: [],
  fold: 42589,
  foldFull: [42589]
}, {
  code: 42590,
  lower: [],
  title: [],
  upper: [],
  fold: 42591,
  foldFull: [42591]
}, {
  code: 42592,
  lower: [],
  title: [],
  upper: [],
  fold: 42593,
  foldFull: [42593]
}, {
  code: 42594,
  lower: [],
  title: [],
  upper: [],
  fold: 42595,
  foldFull: [42595]
}, {
  code: 42596,
  lower: [],
  title: [],
  upper: [],
  fold: 42597,
  foldFull: [42597]
}, {
  code: 42598,
  lower: [],
  title: [],
  upper: [],
  fold: 42599,
  foldFull: [42599]
}, {
  code: 42600,
  lower: [],
  title: [],
  upper: [],
  fold: 42601,
  foldFull: [42601]
}, {
  code: 42602,
  lower: [],
  title: [],
  upper: [],
  fold: 42603,
  foldFull: [42603]
}, {
  code: 42604,
  lower: [],
  title: [],
  upper: [],
  fold: 42605,
  foldFull: [42605]
}, {
  code: 42624,
  lower: [],
  title: [],
  upper: [],
  fold: 42625,
  foldFull: [42625]
}, {
  code: 42626,
  lower: [],
  title: [],
  upper: [],
  fold: 42627,
  foldFull: [42627]
}, {
  code: 42628,
  lower: [],
  title: [],
  upper: [],
  fold: 42629,
  foldFull: [42629]
}, {
  code: 42630,
  lower: [],
  title: [],
  upper: [],
  fold: 42631,
  foldFull: [42631]
}, {
  code: 42632,
  lower: [],
  title: [],
  upper: [],
  fold: 42633,
  foldFull: [42633]
}, {
  code: 42634,
  lower: [],
  title: [],
  upper: [],
  fold: 42635,
  foldFull: [42635]
}, {
  code: 42636,
  lower: [],
  title: [],
  upper: [],
  fold: 42637,
  foldFull: [42637]
}, {
  code: 42638,
  lower: [],
  title: [],
  upper: [],
  fold: 42639,
  foldFull: [42639]
}, {
  code: 42640,
  lower: [],
  title: [],
  upper: [],
  fold: 42641,
  foldFull: [42641]
}, {
  code: 42642,
  lower: [],
  title: [],
  upper: [],
  fold: 42643,
  foldFull: [42643]
}, {
  code: 42644,
  lower: [],
  title: [],
  upper: [],
  fold: 42645,
  foldFull: [42645]
}, {
  code: 42646,
  lower: [],
  title: [],
  upper: [],
  fold: 42647,
  foldFull: [42647]
}, {
  code: 42648,
  lower: [],
  title: [],
  upper: [],
  fold: 42649,
  foldFull: [42649]
}, {
  code: 42650,
  lower: [],
  title: [],
  upper: [],
  fold: 42651,
  foldFull: [42651]
}, {
  code: 42786,
  lower: [],
  title: [],
  upper: [],
  fold: 42787,
  foldFull: [42787]
}, {
  code: 42788,
  lower: [],
  title: [],
  upper: [],
  fold: 42789,
  foldFull: [42789]
}, {
  code: 42790,
  lower: [],
  title: [],
  upper: [],
  fold: 42791,
  foldFull: [42791]
}, {
  code: 42792,
  lower: [],
  title: [],
  upper: [],
  fold: 42793,
  foldFull: [42793]
}, {
  code: 42794,
  lower: [],
  title: [],
  upper: [],
  fold: 42795,
  foldFull: [42795]
}, {
  code: 42796,
  lower: [],
  title: [],
  upper: [],
  fold: 42797,
  foldFull: [42797]
}, {
  code: 42798,
  lower: [],
  title: [],
  upper: [],
  fold: 42799,
  foldFull: [42799]
}, {
  code: 42802,
  lower: [],
  title: [],
  upper: [],
  fold: 42803,
  foldFull: [42803]
}, {
  code: 42804,
  lower: [],
  title: [],
  upper: [],
  fold: 42805,
  foldFull: [42805]
}, {
  code: 42806,
  lower: [],
  title: [],
  upper: [],
  fold: 42807,
  foldFull: [42807]
}, {
  code: 42808,
  lower: [],
  title: [],
  upper: [],
  fold: 42809,
  foldFull: [42809]
}, {
  code: 42810,
  lower: [],
  title: [],
  upper: [],
  fold: 42811,
  foldFull: [42811]
}, {
  code: 42812,
  lower: [],
  title: [],
  upper: [],
  fold: 42813,
  foldFull: [42813]
}, {
  code: 42814,
  lower: [],
  title: [],
  upper: [],
  fold: 42815,
  foldFull: [42815]
}, {
  code: 42816,
  lower: [],
  title: [],
  upper: [],
  fold: 42817,
  foldFull: [42817]
}, {
  code: 42818,
  lower: [],
  title: [],
  upper: [],
  fold: 42819,
  foldFull: [42819]
}, {
  code: 42820,
  lower: [],
  title: [],
  upper: [],
  fold: 42821,
  foldFull: [42821]
}, {
  code: 42822,
  lower: [],
  title: [],
  upper: [],
  fold: 42823,
  foldFull: [42823]
}, {
  code: 42824,
  lower: [],
  title: [],
  upper: [],
  fold: 42825,
  foldFull: [42825]
}, {
  code: 42826,
  lower: [],
  title: [],
  upper: [],
  fold: 42827,
  foldFull: [42827]
}, {
  code: 42828,
  lower: [],
  title: [],
  upper: [],
  fold: 42829,
  foldFull: [42829]
}, {
  code: 42830,
  lower: [],
  title: [],
  upper: [],
  fold: 42831,
  foldFull: [42831]
}, {
  code: 42832,
  lower: [],
  title: [],
  upper: [],
  fold: 42833,
  foldFull: [42833]
}, {
  code: 42834,
  lower: [],
  title: [],
  upper: [],
  fold: 42835,
  foldFull: [42835]
}, {
  code: 42836,
  lower: [],
  title: [],
  upper: [],
  fold: 42837,
  foldFull: [42837]
}, {
  code: 42838,
  lower: [],
  title: [],
  upper: [],
  fold: 42839,
  foldFull: [42839]
}, {
  code: 42840,
  lower: [],
  title: [],
  upper: [],
  fold: 42841,
  foldFull: [42841]
}, {
  code: 42842,
  lower: [],
  title: [],
  upper: [],
  fold: 42843,
  foldFull: [42843]
}, {
  code: 42844,
  lower: [],
  title: [],
  upper: [],
  fold: 42845,
  foldFull: [42845]
}, {
  code: 42846,
  lower: [],
  title: [],
  upper: [],
  fold: 42847,
  foldFull: [42847]
}, {
  code: 42848,
  lower: [],
  title: [],
  upper: [],
  fold: 42849,
  foldFull: [42849]
}, {
  code: 42850,
  lower: [],
  title: [],
  upper: [],
  fold: 42851,
  foldFull: [42851]
}, {
  code: 42852,
  lower: [],
  title: [],
  upper: [],
  fold: 42853,
  foldFull: [42853]
}, {
  code: 42854,
  lower: [],
  title: [],
  upper: [],
  fold: 42855,
  foldFull: [42855]
}, {
  code: 42856,
  lower: [],
  title: [],
  upper: [],
  fold: 42857,
  foldFull: [42857]
}, {
  code: 42858,
  lower: [],
  title: [],
  upper: [],
  fold: 42859,
  foldFull: [42859]
}, {
  code: 42860,
  lower: [],
  title: [],
  upper: [],
  fold: 42861,
  foldFull: [42861]
}, {
  code: 42862,
  lower: [],
  title: [],
  upper: [],
  fold: 42863,
  foldFull: [42863]
}, {
  code: 42873,
  lower: [],
  title: [],
  upper: [],
  fold: 42874,
  foldFull: [42874]
}, {
  code: 42875,
  lower: [],
  title: [],
  upper: [],
  fold: 42876,
  foldFull: [42876]
}, {
  code: 42877,
  lower: [],
  title: [],
  upper: [],
  fold: 7545,
  foldFull: [7545]
}, {
  code: 42878,
  lower: [],
  title: [],
  upper: [],
  fold: 42879,
  foldFull: [42879]
}, {
  code: 42880,
  lower: [],
  title: [],
  upper: [],
  fold: 42881,
  foldFull: [42881]
}, {
  code: 42882,
  lower: [],
  title: [],
  upper: [],
  fold: 42883,
  foldFull: [42883]
}, {
  code: 42884,
  lower: [],
  title: [],
  upper: [],
  fold: 42885,
  foldFull: [42885]
}, {
  code: 42886,
  lower: [],
  title: [],
  upper: [],
  fold: 42887,
  foldFull: [42887]
}, {
  code: 42891,
  lower: [],
  title: [],
  upper: [],
  fold: 42892,
  foldFull: [42892]
}, {
  code: 42893,
  lower: [],
  title: [],
  upper: [],
  fold: 613,
  foldFull: [613]
}, {
  code: 42896,
  lower: [],
  title: [],
  upper: [],
  fold: 42897,
  foldFull: [42897]
}, {
  code: 42898,
  lower: [],
  title: [],
  upper: [],
  fold: 42899,
  foldFull: [42899]
}, {
  code: 42902,
  lower: [],
  title: [],
  upper: [],
  fold: 42903,
  foldFull: [42903]
}, {
  code: 42904,
  lower: [],
  title: [],
  upper: [],
  fold: 42905,
  foldFull: [42905]
}, {
  code: 42906,
  lower: [],
  title: [],
  upper: [],
  fold: 42907,
  foldFull: [42907]
}, {
  code: 42908,
  lower: [],
  title: [],
  upper: [],
  fold: 42909,
  foldFull: [42909]
}, {
  code: 42910,
  lower: [],
  title: [],
  upper: [],
  fold: 42911,
  foldFull: [42911]
}, {
  code: 42912,
  lower: [],
  title: [],
  upper: [],
  fold: 42913,
  foldFull: [42913]
}, {
  code: 42914,
  lower: [],
  title: [],
  upper: [],
  fold: 42915,
  foldFull: [42915]
}, {
  code: 42916,
  lower: [],
  title: [],
  upper: [],
  fold: 42917,
  foldFull: [42917]
}, {
  code: 42918,
  lower: [],
  title: [],
  upper: [],
  fold: 42919,
  foldFull: [42919]
}, {
  code: 42920,
  lower: [],
  title: [],
  upper: [],
  fold: 42921,
  foldFull: [42921]
}, {
  code: 42922,
  lower: [],
  title: [],
  upper: [],
  fold: 614,
  foldFull: [614]
}, {
  code: 42923,
  lower: [],
  title: [],
  upper: [],
  fold: 604,
  foldFull: [604]
}, {
  code: 42924,
  lower: [],
  title: [],
  upper: [],
  fold: 609,
  foldFull: [609]
}, {
  code: 42925,
  lower: [],
  title: [],
  upper: [],
  fold: 620,
  foldFull: [620]
}, {
  code: 42926,
  lower: [],
  title: [],
  upper: [],
  fold: 618,
  foldFull: [618]
}, {
  code: 42928,
  lower: [],
  title: [],
  upper: [],
  fold: 670,
  foldFull: [670]
}, {
  code: 42929,
  lower: [],
  title: [],
  upper: [],
  fold: 647,
  foldFull: [647]
}, {
  code: 42930,
  lower: [],
  title: [],
  upper: [],
  fold: 669,
  foldFull: [669]
}, {
  code: 42931,
  lower: [],
  title: [],
  upper: [],
  fold: 43859,
  foldFull: [43859]
}, {
  code: 42932,
  lower: [],
  title: [],
  upper: [],
  fold: 42933,
  foldFull: [42933]
}, {
  code: 42934,
  lower: [],
  title: [],
  upper: [],
  fold: 42935,
  foldFull: [42935]
}, {
  code: 42936,
  lower: [],
  title: [],
  upper: [],
  fold: 42937,
  foldFull: [42937]
}, {
  code: 42938,
  lower: [],
  title: [],
  upper: [],
  fold: 42939,
  foldFull: [42939]
}, {
  code: 42940,
  lower: [],
  title: [],
  upper: [],
  fold: 42941,
  foldFull: [42941]
}, {
  code: 42942,
  lower: [],
  title: [],
  upper: [],
  fold: 42943,
  foldFull: [42943]
}, {
  code: 42946,
  lower: [],
  title: [],
  upper: [],
  fold: 42947,
  foldFull: [42947]
}, {
  code: 42948,
  lower: [],
  title: [],
  upper: [],
  fold: 42900,
  foldFull: [42900]
}, {
  code: 42949,
  lower: [],
  title: [],
  upper: [],
  fold: 642,
  foldFull: [642]
}, {
  code: 42950,
  lower: [],
  title: [],
  upper: [],
  fold: 7566,
  foldFull: [7566]
}, {
  code: 42951,
  lower: [],
  title: [],
  upper: [],
  fold: 42952,
  foldFull: [42952]
}, {
  code: 42953,
  lower: [],
  title: [],
  upper: [],
  fold: 42954,
  foldFull: [42954]
}, {
  code: 42997,
  lower: [],
  title: [],
  upper: [],
  fold: 42998,
  foldFull: [42998]
}, {
  code: 43888,
  lower: [],
  title: [],
  upper: [],
  fold: 5024,
  foldFull: [5024]
}, {
  code: 43889,
  lower: [],
  title: [],
  upper: [],
  fold: 5025,
  foldFull: [5025]
}, {
  code: 43890,
  lower: [],
  title: [],
  upper: [],
  fold: 5026,
  foldFull: [5026]
}, {
  code: 43891,
  lower: [],
  title: [],
  upper: [],
  fold: 5027,
  foldFull: [5027]
}, {
  code: 43892,
  lower: [],
  title: [],
  upper: [],
  fold: 5028,
  foldFull: [5028]
}, {
  code: 43893,
  lower: [],
  title: [],
  upper: [],
  fold: 5029,
  foldFull: [5029]
}, {
  code: 43894,
  lower: [],
  title: [],
  upper: [],
  fold: 5030,
  foldFull: [5030]
}, {
  code: 43895,
  lower: [],
  title: [],
  upper: [],
  fold: 5031,
  foldFull: [5031]
}, {
  code: 43896,
  lower: [],
  title: [],
  upper: [],
  fold: 5032,
  foldFull: [5032]
}, {
  code: 43897,
  lower: [],
  title: [],
  upper: [],
  fold: 5033,
  foldFull: [5033]
}, {
  code: 43898,
  lower: [],
  title: [],
  upper: [],
  fold: 5034,
  foldFull: [5034]
}, {
  code: 43899,
  lower: [],
  title: [],
  upper: [],
  fold: 5035,
  foldFull: [5035]
}, {
  code: 43900,
  lower: [],
  title: [],
  upper: [],
  fold: 5036,
  foldFull: [5036]
}, {
  code: 43901,
  lower: [],
  title: [],
  upper: [],
  fold: 5037,
  foldFull: [5037]
}, {
  code: 43902,
  lower: [],
  title: [],
  upper: [],
  fold: 5038,
  foldFull: [5038]
}, {
  code: 43903,
  lower: [],
  title: [],
  upper: [],
  fold: 5039,
  foldFull: [5039]
}, {
  code: 43904,
  lower: [],
  title: [],
  upper: [],
  fold: 5040,
  foldFull: [5040]
}, {
  code: 43905,
  lower: [],
  title: [],
  upper: [],
  fold: 5041,
  foldFull: [5041]
}, {
  code: 43906,
  lower: [],
  title: [],
  upper: [],
  fold: 5042,
  foldFull: [5042]
}, {
  code: 43907,
  lower: [],
  title: [],
  upper: [],
  fold: 5043,
  foldFull: [5043]
}, {
  code: 43908,
  lower: [],
  title: [],
  upper: [],
  fold: 5044,
  foldFull: [5044]
}, {
  code: 43909,
  lower: [],
  title: [],
  upper: [],
  fold: 5045,
  foldFull: [5045]
}, {
  code: 43910,
  lower: [],
  title: [],
  upper: [],
  fold: 5046,
  foldFull: [5046]
}, {
  code: 43911,
  lower: [],
  title: [],
  upper: [],
  fold: 5047,
  foldFull: [5047]
}, {
  code: 43912,
  lower: [],
  title: [],
  upper: [],
  fold: 5048,
  foldFull: [5048]
}, {
  code: 43913,
  lower: [],
  title: [],
  upper: [],
  fold: 5049,
  foldFull: [5049]
}, {
  code: 43914,
  lower: [],
  title: [],
  upper: [],
  fold: 5050,
  foldFull: [5050]
}, {
  code: 43915,
  lower: [],
  title: [],
  upper: [],
  fold: 5051,
  foldFull: [5051]
}, {
  code: 43916,
  lower: [],
  title: [],
  upper: [],
  fold: 5052,
  foldFull: [5052]
}, {
  code: 43917,
  lower: [],
  title: [],
  upper: [],
  fold: 5053,
  foldFull: [5053]
}, {
  code: 43918,
  lower: [],
  title: [],
  upper: [],
  fold: 5054,
  foldFull: [5054]
}, {
  code: 43919,
  lower: [],
  title: [],
  upper: [],
  fold: 5055,
  foldFull: [5055]
}, {
  code: 43920,
  lower: [],
  title: [],
  upper: [],
  fold: 5056,
  foldFull: [5056]
}, {
  code: 43921,
  lower: [],
  title: [],
  upper: [],
  fold: 5057,
  foldFull: [5057]
}, {
  code: 43922,
  lower: [],
  title: [],
  upper: [],
  fold: 5058,
  foldFull: [5058]
}, {
  code: 43923,
  lower: [],
  title: [],
  upper: [],
  fold: 5059,
  foldFull: [5059]
}, {
  code: 43924,
  lower: [],
  title: [],
  upper: [],
  fold: 5060,
  foldFull: [5060]
}, {
  code: 43925,
  lower: [],
  title: [],
  upper: [],
  fold: 5061,
  foldFull: [5061]
}, {
  code: 43926,
  lower: [],
  title: [],
  upper: [],
  fold: 5062,
  foldFull: [5062]
}, {
  code: 43927,
  lower: [],
  title: [],
  upper: [],
  fold: 5063,
  foldFull: [5063]
}, {
  code: 43928,
  lower: [],
  title: [],
  upper: [],
  fold: 5064,
  foldFull: [5064]
}, {
  code: 43929,
  lower: [],
  title: [],
  upper: [],
  fold: 5065,
  foldFull: [5065]
}, {
  code: 43930,
  lower: [],
  title: [],
  upper: [],
  fold: 5066,
  foldFull: [5066]
}, {
  code: 43931,
  lower: [],
  title: [],
  upper: [],
  fold: 5067,
  foldFull: [5067]
}, {
  code: 43932,
  lower: [],
  title: [],
  upper: [],
  fold: 5068,
  foldFull: [5068]
}, {
  code: 43933,
  lower: [],
  title: [],
  upper: [],
  fold: 5069,
  foldFull: [5069]
}, {
  code: 43934,
  lower: [],
  title: [],
  upper: [],
  fold: 5070,
  foldFull: [5070]
}, {
  code: 43935,
  lower: [],
  title: [],
  upper: [],
  fold: 5071,
  foldFull: [5071]
}, {
  code: 43936,
  lower: [],
  title: [],
  upper: [],
  fold: 5072,
  foldFull: [5072]
}, {
  code: 43937,
  lower: [],
  title: [],
  upper: [],
  fold: 5073,
  foldFull: [5073]
}, {
  code: 43938,
  lower: [],
  title: [],
  upper: [],
  fold: 5074,
  foldFull: [5074]
}, {
  code: 43939,
  lower: [],
  title: [],
  upper: [],
  fold: 5075,
  foldFull: [5075]
}, {
  code: 43940,
  lower: [],
  title: [],
  upper: [],
  fold: 5076,
  foldFull: [5076]
}, {
  code: 43941,
  lower: [],
  title: [],
  upper: [],
  fold: 5077,
  foldFull: [5077]
}, {
  code: 43942,
  lower: [],
  title: [],
  upper: [],
  fold: 5078,
  foldFull: [5078]
}, {
  code: 43943,
  lower: [],
  title: [],
  upper: [],
  fold: 5079,
  foldFull: [5079]
}, {
  code: 43944,
  lower: [],
  title: [],
  upper: [],
  fold: 5080,
  foldFull: [5080]
}, {
  code: 43945,
  lower: [],
  title: [],
  upper: [],
  fold: 5081,
  foldFull: [5081]
}, {
  code: 43946,
  lower: [],
  title: [],
  upper: [],
  fold: 5082,
  foldFull: [5082]
}, {
  code: 43947,
  lower: [],
  title: [],
  upper: [],
  fold: 5083,
  foldFull: [5083]
}, {
  code: 43948,
  lower: [],
  title: [],
  upper: [],
  fold: 5084,
  foldFull: [5084]
}, {
  code: 43949,
  lower: [],
  title: [],
  upper: [],
  fold: 5085,
  foldFull: [5085]
}, {
  code: 43950,
  lower: [],
  title: [],
  upper: [],
  fold: 5086,
  foldFull: [5086]
}, {
  code: 43951,
  lower: [],
  title: [],
  upper: [],
  fold: 5087,
  foldFull: [5087]
}, {
  code: 43952,
  lower: [],
  title: [],
  upper: [],
  fold: 5088,
  foldFull: [5088]
}, {
  code: 43953,
  lower: [],
  title: [],
  upper: [],
  fold: 5089,
  foldFull: [5089]
}, {
  code: 43954,
  lower: [],
  title: [],
  upper: [],
  fold: 5090,
  foldFull: [5090]
}, {
  code: 43955,
  lower: [],
  title: [],
  upper: [],
  fold: 5091,
  foldFull: [5091]
}, {
  code: 43956,
  lower: [],
  title: [],
  upper: [],
  fold: 5092,
  foldFull: [5092]
}, {
  code: 43957,
  lower: [],
  title: [],
  upper: [],
  fold: 5093,
  foldFull: [5093]
}, {
  code: 43958,
  lower: [],
  title: [],
  upper: [],
  fold: 5094,
  foldFull: [5094]
}, {
  code: 43959,
  lower: [],
  title: [],
  upper: [],
  fold: 5095,
  foldFull: [5095]
}, {
  code: 43960,
  lower: [],
  title: [],
  upper: [],
  fold: 5096,
  foldFull: [5096]
}, {
  code: 43961,
  lower: [],
  title: [],
  upper: [],
  fold: 5097,
  foldFull: [5097]
}, {
  code: 43962,
  lower: [],
  title: [],
  upper: [],
  fold: 5098,
  foldFull: [5098]
}, {
  code: 43963,
  lower: [],
  title: [],
  upper: [],
  fold: 5099,
  foldFull: [5099]
}, {
  code: 43964,
  lower: [],
  title: [],
  upper: [],
  fold: 5100,
  foldFull: [5100]
}, {
  code: 43965,
  lower: [],
  title: [],
  upper: [],
  fold: 5101,
  foldFull: [5101]
}, {
  code: 43966,
  lower: [],
  title: [],
  upper: [],
  fold: 5102,
  foldFull: [5102]
}, {
  code: 43967,
  lower: [],
  title: [],
  upper: [],
  fold: 5103,
  foldFull: [5103]
}, {
  code: 64256,
  lower: [64256],
  title: [70, 102],
  upper: [70, 70],
  fold: 0,
  foldFull: [102, 102]
}, {
  code: 64256,
  lower: [64256],
  title: [70, 102],
  upper: [70, 70],
  fold: 0,
  foldFull: [102, 102]
}, {
  code: 64257,
  lower: [64257],
  title: [70, 105],
  upper: [70, 73],
  fold: 0,
  foldFull: [102, 105]
}, {
  code: 64257,
  lower: [64257],
  title: [70, 105],
  upper: [70, 73],
  fold: 0,
  foldFull: [102, 105]
}, {
  code: 64258,
  lower: [64258],
  title: [70, 108],
  upper: [70, 76],
  fold: 0,
  foldFull: [102, 108]
}, {
  code: 64258,
  lower: [64258],
  title: [70, 108],
  upper: [70, 76],
  fold: 0,
  foldFull: [102, 108]
}, {
  code: 64259,
  lower: [64259],
  title: [70, 102, 105],
  upper: [70, 70, 73],
  fold: 0,
  foldFull: [102, 102, 105]
}, {
  code: 64259,
  lower: [64259],
  title: [70, 102, 105],
  upper: [70, 70, 73],
  fold: 0,
  foldFull: [102, 102, 105]
}, {
  code: 64260,
  lower: [64260],
  title: [70, 102, 108],
  upper: [70, 70, 76],
  fold: 0,
  foldFull: [102, 102, 108]
}, {
  code: 64260,
  lower: [64260],
  title: [70, 102, 108],
  upper: [70, 70, 76],
  fold: 0,
  foldFull: [102, 102, 108]
}, {
  code: 64261,
  lower: [64261],
  title: [83, 116],
  upper: [83, 84],
  fold: 0,
  foldFull: [115, 116]
}, {
  code: 64261,
  lower: [64261],
  title: [83, 116],
  upper: [83, 84],
  fold: 0,
  foldFull: [115, 116]
}, {
  code: 64262,
  lower: [64262],
  title: [83, 116],
  upper: [83, 84],
  fold: 0,
  foldFull: [115, 116]
}, {
  code: 64262,
  lower: [64262],
  title: [83, 116],
  upper: [83, 84],
  fold: 0,
  foldFull: [115, 116]
}, {
  code: 64275,
  lower: [64275],
  title: [1348, 1398],
  upper: [1348, 1350],
  fold: 0,
  foldFull: [1396, 1398]
}, {
  code: 64275,
  lower: [64275],
  title: [1348, 1398],
  upper: [1348, 1350],
  fold: 0,
  foldFull: [1396, 1398]
}, {
  code: 64276,
  lower: [64276],
  title: [1348, 1381],
  upper: [1348, 1333],
  fold: 0,
  foldFull: [1396, 1381]
}, {
  code: 64276,
  lower: [64276],
  title: [1348, 1381],
  upper: [1348, 1333],
  fold: 0,
  foldFull: [1396, 1381]
}, {
  code: 64277,
  lower: [64277],
  title: [1348, 1387],
  upper: [1348, 1339],
  fold: 0,
  foldFull: [1396, 1387]
}, {
  code: 64277,
  lower: [64277],
  title: [1348, 1387],
  upper: [1348, 1339],
  fold: 0,
  foldFull: [1396, 1387]
}, {
  code: 64278,
  lower: [64278],
  title: [1358, 1398],
  upper: [1358, 1350],
  fold: 0,
  foldFull: [1406, 1398]
}, {
  code: 64278,
  lower: [64278],
  title: [1358, 1398],
  upper: [1358, 1350],
  fold: 0,
  foldFull: [1406, 1398]
}, {
  code: 64279,
  lower: [64279],
  title: [1348, 1389],
  upper: [1348, 1341],
  fold: 0,
  foldFull: [1396, 1389]
}, {
  code: 64279,
  lower: [64279],
  title: [1348, 1389],
  upper: [1348, 1341],
  fold: 0,
  foldFull: [1396, 1389]
}, {
  code: 65313,
  lower: [],
  title: [],
  upper: [],
  fold: 65345,
  foldFull: [65345]
}, {
  code: 65314,
  lower: [],
  title: [],
  upper: [],
  fold: 65346,
  foldFull: [65346]
}, {
  code: 65315,
  lower: [],
  title: [],
  upper: [],
  fold: 65347,
  foldFull: [65347]
}, {
  code: 65316,
  lower: [],
  title: [],
  upper: [],
  fold: 65348,
  foldFull: [65348]
}, {
  code: 65317,
  lower: [],
  title: [],
  upper: [],
  fold: 65349,
  foldFull: [65349]
}, {
  code: 65318,
  lower: [],
  title: [],
  upper: [],
  fold: 65350,
  foldFull: [65350]
}, {
  code: 65319,
  lower: [],
  title: [],
  upper: [],
  fold: 65351,
  foldFull: [65351]
}, {
  code: 65320,
  lower: [],
  title: [],
  upper: [],
  fold: 65352,
  foldFull: [65352]
}, {
  code: 65321,
  lower: [],
  title: [],
  upper: [],
  fold: 65353,
  foldFull: [65353]
}, {
  code: 65322,
  lower: [],
  title: [],
  upper: [],
  fold: 65354,
  foldFull: [65354]
}, {
  code: 65323,
  lower: [],
  title: [],
  upper: [],
  fold: 65355,
  foldFull: [65355]
}, {
  code: 65324,
  lower: [],
  title: [],
  upper: [],
  fold: 65356,
  foldFull: [65356]
}, {
  code: 65325,
  lower: [],
  title: [],
  upper: [],
  fold: 65357,
  foldFull: [65357]
}, {
  code: 65326,
  lower: [],
  title: [],
  upper: [],
  fold: 65358,
  foldFull: [65358]
}, {
  code: 65327,
  lower: [],
  title: [],
  upper: [],
  fold: 65359,
  foldFull: [65359]
}, {
  code: 65328,
  lower: [],
  title: [],
  upper: [],
  fold: 65360,
  foldFull: [65360]
}, {
  code: 65329,
  lower: [],
  title: [],
  upper: [],
  fold: 65361,
  foldFull: [65361]
}, {
  code: 65330,
  lower: [],
  title: [],
  upper: [],
  fold: 65362,
  foldFull: [65362]
}, {
  code: 65331,
  lower: [],
  title: [],
  upper: [],
  fold: 65363,
  foldFull: [65363]
}, {
  code: 65332,
  lower: [],
  title: [],
  upper: [],
  fold: 65364,
  foldFull: [65364]
}, {
  code: 65333,
  lower: [],
  title: [],
  upper: [],
  fold: 65365,
  foldFull: [65365]
}, {
  code: 65334,
  lower: [],
  title: [],
  upper: [],
  fold: 65366,
  foldFull: [65366]
}, {
  code: 65335,
  lower: [],
  title: [],
  upper: [],
  fold: 65367,
  foldFull: [65367]
}, {
  code: 65336,
  lower: [],
  title: [],
  upper: [],
  fold: 65368,
  foldFull: [65368]
}, {
  code: 65337,
  lower: [],
  title: [],
  upper: [],
  fold: 65369,
  foldFull: [65369]
}, {
  code: 65338,
  lower: [],
  title: [],
  upper: [],
  fold: 65370,
  foldFull: [65370]
}, {
  code: 66560,
  lower: [],
  title: [],
  upper: [],
  fold: 66600,
  foldFull: [66600]
}, {
  code: 66561,
  lower: [],
  title: [],
  upper: [],
  fold: 66601,
  foldFull: [66601]
}, {
  code: 66562,
  lower: [],
  title: [],
  upper: [],
  fold: 66602,
  foldFull: [66602]
}, {
  code: 66563,
  lower: [],
  title: [],
  upper: [],
  fold: 66603,
  foldFull: [66603]
}, {
  code: 66564,
  lower: [],
  title: [],
  upper: [],
  fold: 66604,
  foldFull: [66604]
}, {
  code: 66565,
  lower: [],
  title: [],
  upper: [],
  fold: 66605,
  foldFull: [66605]
}, {
  code: 66566,
  lower: [],
  title: [],
  upper: [],
  fold: 66606,
  foldFull: [66606]
}, {
  code: 66567,
  lower: [],
  title: [],
  upper: [],
  fold: 66607,
  foldFull: [66607]
}, {
  code: 66568,
  lower: [],
  title: [],
  upper: [],
  fold: 66608,
  foldFull: [66608]
}, {
  code: 66569,
  lower: [],
  title: [],
  upper: [],
  fold: 66609,
  foldFull: [66609]
}, {
  code: 66570,
  lower: [],
  title: [],
  upper: [],
  fold: 66610,
  foldFull: [66610]
}, {
  code: 66571,
  lower: [],
  title: [],
  upper: [],
  fold: 66611,
  foldFull: [66611]
}, {
  code: 66572,
  lower: [],
  title: [],
  upper: [],
  fold: 66612,
  foldFull: [66612]
}, {
  code: 66573,
  lower: [],
  title: [],
  upper: [],
  fold: 66613,
  foldFull: [66613]
}, {
  code: 66574,
  lower: [],
  title: [],
  upper: [],
  fold: 66614,
  foldFull: [66614]
}, {
  code: 66575,
  lower: [],
  title: [],
  upper: [],
  fold: 66615,
  foldFull: [66615]
}, {
  code: 66576,
  lower: [],
  title: [],
  upper: [],
  fold: 66616,
  foldFull: [66616]
}, {
  code: 66577,
  lower: [],
  title: [],
  upper: [],
  fold: 66617,
  foldFull: [66617]
}, {
  code: 66578,
  lower: [],
  title: [],
  upper: [],
  fold: 66618,
  foldFull: [66618]
}, {
  code: 66579,
  lower: [],
  title: [],
  upper: [],
  fold: 66619,
  foldFull: [66619]
}, {
  code: 66580,
  lower: [],
  title: [],
  upper: [],
  fold: 66620,
  foldFull: [66620]
}, {
  code: 66581,
  lower: [],
  title: [],
  upper: [],
  fold: 66621,
  foldFull: [66621]
}, {
  code: 66582,
  lower: [],
  title: [],
  upper: [],
  fold: 66622,
  foldFull: [66622]
}, {
  code: 66583,
  lower: [],
  title: [],
  upper: [],
  fold: 66623,
  foldFull: [66623]
}, {
  code: 66584,
  lower: [],
  title: [],
  upper: [],
  fold: 66624,
  foldFull: [66624]
}, {
  code: 66585,
  lower: [],
  title: [],
  upper: [],
  fold: 66625,
  foldFull: [66625]
}, {
  code: 66586,
  lower: [],
  title: [],
  upper: [],
  fold: 66626,
  foldFull: [66626]
}, {
  code: 66587,
  lower: [],
  title: [],
  upper: [],
  fold: 66627,
  foldFull: [66627]
}, {
  code: 66588,
  lower: [],
  title: [],
  upper: [],
  fold: 66628,
  foldFull: [66628]
}, {
  code: 66589,
  lower: [],
  title: [],
  upper: [],
  fold: 66629,
  foldFull: [66629]
}, {
  code: 66590,
  lower: [],
  title: [],
  upper: [],
  fold: 66630,
  foldFull: [66630]
}, {
  code: 66591,
  lower: [],
  title: [],
  upper: [],
  fold: 66631,
  foldFull: [66631]
}, {
  code: 66592,
  lower: [],
  title: [],
  upper: [],
  fold: 66632,
  foldFull: [66632]
}, {
  code: 66593,
  lower: [],
  title: [],
  upper: [],
  fold: 66633,
  foldFull: [66633]
}, {
  code: 66594,
  lower: [],
  title: [],
  upper: [],
  fold: 66634,
  foldFull: [66634]
}, {
  code: 66595,
  lower: [],
  title: [],
  upper: [],
  fold: 66635,
  foldFull: [66635]
}, {
  code: 66596,
  lower: [],
  title: [],
  upper: [],
  fold: 66636,
  foldFull: [66636]
}, {
  code: 66597,
  lower: [],
  title: [],
  upper: [],
  fold: 66637,
  foldFull: [66637]
}, {
  code: 66598,
  lower: [],
  title: [],
  upper: [],
  fold: 66638,
  foldFull: [66638]
}, {
  code: 66599,
  lower: [],
  title: [],
  upper: [],
  fold: 66639,
  foldFull: [66639]
}, {
  code: 66736,
  lower: [],
  title: [],
  upper: [],
  fold: 66776,
  foldFull: [66776]
}, {
  code: 66737,
  lower: [],
  title: [],
  upper: [],
  fold: 66777,
  foldFull: [66777]
}, {
  code: 66738,
  lower: [],
  title: [],
  upper: [],
  fold: 66778,
  foldFull: [66778]
}, {
  code: 66739,
  lower: [],
  title: [],
  upper: [],
  fold: 66779,
  foldFull: [66779]
}, {
  code: 66740,
  lower: [],
  title: [],
  upper: [],
  fold: 66780,
  foldFull: [66780]
}, {
  code: 66741,
  lower: [],
  title: [],
  upper: [],
  fold: 66781,
  foldFull: [66781]
}, {
  code: 66742,
  lower: [],
  title: [],
  upper: [],
  fold: 66782,
  foldFull: [66782]
}, {
  code: 66743,
  lower: [],
  title: [],
  upper: [],
  fold: 66783,
  foldFull: [66783]
}, {
  code: 66744,
  lower: [],
  title: [],
  upper: [],
  fold: 66784,
  foldFull: [66784]
}, {
  code: 66745,
  lower: [],
  title: [],
  upper: [],
  fold: 66785,
  foldFull: [66785]
}, {
  code: 66746,
  lower: [],
  title: [],
  upper: [],
  fold: 66786,
  foldFull: [66786]
}, {
  code: 66747,
  lower: [],
  title: [],
  upper: [],
  fold: 66787,
  foldFull: [66787]
}, {
  code: 66748,
  lower: [],
  title: [],
  upper: [],
  fold: 66788,
  foldFull: [66788]
}, {
  code: 66749,
  lower: [],
  title: [],
  upper: [],
  fold: 66789,
  foldFull: [66789]
}, {
  code: 66750,
  lower: [],
  title: [],
  upper: [],
  fold: 66790,
  foldFull: [66790]
}, {
  code: 66751,
  lower: [],
  title: [],
  upper: [],
  fold: 66791,
  foldFull: [66791]
}, {
  code: 66752,
  lower: [],
  title: [],
  upper: [],
  fold: 66792,
  foldFull: [66792]
}, {
  code: 66753,
  lower: [],
  title: [],
  upper: [],
  fold: 66793,
  foldFull: [66793]
}, {
  code: 66754,
  lower: [],
  title: [],
  upper: [],
  fold: 66794,
  foldFull: [66794]
}, {
  code: 66755,
  lower: [],
  title: [],
  upper: [],
  fold: 66795,
  foldFull: [66795]
}, {
  code: 66756,
  lower: [],
  title: [],
  upper: [],
  fold: 66796,
  foldFull: [66796]
}, {
  code: 66757,
  lower: [],
  title: [],
  upper: [],
  fold: 66797,
  foldFull: [66797]
}, {
  code: 66758,
  lower: [],
  title: [],
  upper: [],
  fold: 66798,
  foldFull: [66798]
}, {
  code: 66759,
  lower: [],
  title: [],
  upper: [],
  fold: 66799,
  foldFull: [66799]
}, {
  code: 66760,
  lower: [],
  title: [],
  upper: [],
  fold: 66800,
  foldFull: [66800]
}, {
  code: 66761,
  lower: [],
  title: [],
  upper: [],
  fold: 66801,
  foldFull: [66801]
}, {
  code: 66762,
  lower: [],
  title: [],
  upper: [],
  fold: 66802,
  foldFull: [66802]
}, {
  code: 66763,
  lower: [],
  title: [],
  upper: [],
  fold: 66803,
  foldFull: [66803]
}, {
  code: 66764,
  lower: [],
  title: [],
  upper: [],
  fold: 66804,
  foldFull: [66804]
}, {
  code: 66765,
  lower: [],
  title: [],
  upper: [],
  fold: 66805,
  foldFull: [66805]
}, {
  code: 66766,
  lower: [],
  title: [],
  upper: [],
  fold: 66806,
  foldFull: [66806]
}, {
  code: 66767,
  lower: [],
  title: [],
  upper: [],
  fold: 66807,
  foldFull: [66807]
}, {
  code: 66768,
  lower: [],
  title: [],
  upper: [],
  fold: 66808,
  foldFull: [66808]
}, {
  code: 66769,
  lower: [],
  title: [],
  upper: [],
  fold: 66809,
  foldFull: [66809]
}, {
  code: 66770,
  lower: [],
  title: [],
  upper: [],
  fold: 66810,
  foldFull: [66810]
}, {
  code: 66771,
  lower: [],
  title: [],
  upper: [],
  fold: 66811,
  foldFull: [66811]
}, {
  code: 68736,
  lower: [],
  title: [],
  upper: [],
  fold: 68800,
  foldFull: [68800]
}, {
  code: 68737,
  lower: [],
  title: [],
  upper: [],
  fold: 68801,
  foldFull: [68801]
}, {
  code: 68738,
  lower: [],
  title: [],
  upper: [],
  fold: 68802,
  foldFull: [68802]
}, {
  code: 68739,
  lower: [],
  title: [],
  upper: [],
  fold: 68803,
  foldFull: [68803]
}, {
  code: 68740,
  lower: [],
  title: [],
  upper: [],
  fold: 68804,
  foldFull: [68804]
}, {
  code: 68741,
  lower: [],
  title: [],
  upper: [],
  fold: 68805,
  foldFull: [68805]
}, {
  code: 68742,
  lower: [],
  title: [],
  upper: [],
  fold: 68806,
  foldFull: [68806]
}, {
  code: 68743,
  lower: [],
  title: [],
  upper: [],
  fold: 68807,
  foldFull: [68807]
}, {
  code: 68744,
  lower: [],
  title: [],
  upper: [],
  fold: 68808,
  foldFull: [68808]
}, {
  code: 68745,
  lower: [],
  title: [],
  upper: [],
  fold: 68809,
  foldFull: [68809]
}, {
  code: 68746,
  lower: [],
  title: [],
  upper: [],
  fold: 68810,
  foldFull: [68810]
}, {
  code: 68747,
  lower: [],
  title: [],
  upper: [],
  fold: 68811,
  foldFull: [68811]
}, {
  code: 68748,
  lower: [],
  title: [],
  upper: [],
  fold: 68812,
  foldFull: [68812]
}, {
  code: 68749,
  lower: [],
  title: [],
  upper: [],
  fold: 68813,
  foldFull: [68813]
}, {
  code: 68750,
  lower: [],
  title: [],
  upper: [],
  fold: 68814,
  foldFull: [68814]
}, {
  code: 68751,
  lower: [],
  title: [],
  upper: [],
  fold: 68815,
  foldFull: [68815]
}, {
  code: 68752,
  lower: [],
  title: [],
  upper: [],
  fold: 68816,
  foldFull: [68816]
}, {
  code: 68753,
  lower: [],
  title: [],
  upper: [],
  fold: 68817,
  foldFull: [68817]
}, {
  code: 68754,
  lower: [],
  title: [],
  upper: [],
  fold: 68818,
  foldFull: [68818]
}, {
  code: 68755,
  lower: [],
  title: [],
  upper: [],
  fold: 68819,
  foldFull: [68819]
}, {
  code: 68756,
  lower: [],
  title: [],
  upper: [],
  fold: 68820,
  foldFull: [68820]
}, {
  code: 68757,
  lower: [],
  title: [],
  upper: [],
  fold: 68821,
  foldFull: [68821]
}, {
  code: 68758,
  lower: [],
  title: [],
  upper: [],
  fold: 68822,
  foldFull: [68822]
}, {
  code: 68759,
  lower: [],
  title: [],
  upper: [],
  fold: 68823,
  foldFull: [68823]
}, {
  code: 68760,
  lower: [],
  title: [],
  upper: [],
  fold: 68824,
  foldFull: [68824]
}, {
  code: 68761,
  lower: [],
  title: [],
  upper: [],
  fold: 68825,
  foldFull: [68825]
}, {
  code: 68762,
  lower: [],
  title: [],
  upper: [],
  fold: 68826,
  foldFull: [68826]
}, {
  code: 68763,
  lower: [],
  title: [],
  upper: [],
  fold: 68827,
  foldFull: [68827]
}, {
  code: 68764,
  lower: [],
  title: [],
  upper: [],
  fold: 68828,
  foldFull: [68828]
}, {
  code: 68765,
  lower: [],
  title: [],
  upper: [],
  fold: 68829,
  foldFull: [68829]
}, {
  code: 68766,
  lower: [],
  title: [],
  upper: [],
  fold: 68830,
  foldFull: [68830]
}, {
  code: 68767,
  lower: [],
  title: [],
  upper: [],
  fold: 68831,
  foldFull: [68831]
}, {
  code: 68768,
  lower: [],
  title: [],
  upper: [],
  fold: 68832,
  foldFull: [68832]
}, {
  code: 68769,
  lower: [],
  title: [],
  upper: [],
  fold: 68833,
  foldFull: [68833]
}, {
  code: 68770,
  lower: [],
  title: [],
  upper: [],
  fold: 68834,
  foldFull: [68834]
}, {
  code: 68771,
  lower: [],
  title: [],
  upper: [],
  fold: 68835,
  foldFull: [68835]
}, {
  code: 68772,
  lower: [],
  title: [],
  upper: [],
  fold: 68836,
  foldFull: [68836]
}, {
  code: 68773,
  lower: [],
  title: [],
  upper: [],
  fold: 68837,
  foldFull: [68837]
}, {
  code: 68774,
  lower: [],
  title: [],
  upper: [],
  fold: 68838,
  foldFull: [68838]
}, {
  code: 68775,
  lower: [],
  title: [],
  upper: [],
  fold: 68839,
  foldFull: [68839]
}, {
  code: 68776,
  lower: [],
  title: [],
  upper: [],
  fold: 68840,
  foldFull: [68840]
}, {
  code: 68777,
  lower: [],
  title: [],
  upper: [],
  fold: 68841,
  foldFull: [68841]
}, {
  code: 68778,
  lower: [],
  title: [],
  upper: [],
  fold: 68842,
  foldFull: [68842]
}, {
  code: 68779,
  lower: [],
  title: [],
  upper: [],
  fold: 68843,
  foldFull: [68843]
}, {
  code: 68780,
  lower: [],
  title: [],
  upper: [],
  fold: 68844,
  foldFull: [68844]
}, {
  code: 68781,
  lower: [],
  title: [],
  upper: [],
  fold: 68845,
  foldFull: [68845]
}, {
  code: 68782,
  lower: [],
  title: [],
  upper: [],
  fold: 68846,
  foldFull: [68846]
}, {
  code: 68783,
  lower: [],
  title: [],
  upper: [],
  fold: 68847,
  foldFull: [68847]
}, {
  code: 68784,
  lower: [],
  title: [],
  upper: [],
  fold: 68848,
  foldFull: [68848]
}, {
  code: 68785,
  lower: [],
  title: [],
  upper: [],
  fold: 68849,
  foldFull: [68849]
}, {
  code: 68786,
  lower: [],
  title: [],
  upper: [],
  fold: 68850,
  foldFull: [68850]
}, {
  code: 71840,
  lower: [],
  title: [],
  upper: [],
  fold: 71872,
  foldFull: [71872]
}, {
  code: 71841,
  lower: [],
  title: [],
  upper: [],
  fold: 71873,
  foldFull: [71873]
}, {
  code: 71842,
  lower: [],
  title: [],
  upper: [],
  fold: 71874,
  foldFull: [71874]
}, {
  code: 71843,
  lower: [],
  title: [],
  upper: [],
  fold: 71875,
  foldFull: [71875]
}, {
  code: 71844,
  lower: [],
  title: [],
  upper: [],
  fold: 71876,
  foldFull: [71876]
}, {
  code: 71845,
  lower: [],
  title: [],
  upper: [],
  fold: 71877,
  foldFull: [71877]
}, {
  code: 71846,
  lower: [],
  title: [],
  upper: [],
  fold: 71878,
  foldFull: [71878]
}, {
  code: 71847,
  lower: [],
  title: [],
  upper: [],
  fold: 71879,
  foldFull: [71879]
}, {
  code: 71848,
  lower: [],
  title: [],
  upper: [],
  fold: 71880,
  foldFull: [71880]
}, {
  code: 71849,
  lower: [],
  title: [],
  upper: [],
  fold: 71881,
  foldFull: [71881]
}, {
  code: 71850,
  lower: [],
  title: [],
  upper: [],
  fold: 71882,
  foldFull: [71882]
}, {
  code: 71851,
  lower: [],
  title: [],
  upper: [],
  fold: 71883,
  foldFull: [71883]
}, {
  code: 71852,
  lower: [],
  title: [],
  upper: [],
  fold: 71884,
  foldFull: [71884]
}, {
  code: 71853,
  lower: [],
  title: [],
  upper: [],
  fold: 71885,
  foldFull: [71885]
}, {
  code: 71854,
  lower: [],
  title: [],
  upper: [],
  fold: 71886,
  foldFull: [71886]
}, {
  code: 71855,
  lower: [],
  title: [],
  upper: [],
  fold: 71887,
  foldFull: [71887]
}, {
  code: 71856,
  lower: [],
  title: [],
  upper: [],
  fold: 71888,
  foldFull: [71888]
}, {
  code: 71857,
  lower: [],
  title: [],
  upper: [],
  fold: 71889,
  foldFull: [71889]
}, {
  code: 71858,
  lower: [],
  title: [],
  upper: [],
  fold: 71890,
  foldFull: [71890]
}, {
  code: 71859,
  lower: [],
  title: [],
  upper: [],
  fold: 71891,
  foldFull: [71891]
}, {
  code: 71860,
  lower: [],
  title: [],
  upper: [],
  fold: 71892,
  foldFull: [71892]
}, {
  code: 71861,
  lower: [],
  title: [],
  upper: [],
  fold: 71893,
  foldFull: [71893]
}, {
  code: 71862,
  lower: [],
  title: [],
  upper: [],
  fold: 71894,
  foldFull: [71894]
}, {
  code: 71863,
  lower: [],
  title: [],
  upper: [],
  fold: 71895,
  foldFull: [71895]
}, {
  code: 71864,
  lower: [],
  title: [],
  upper: [],
  fold: 71896,
  foldFull: [71896]
}, {
  code: 71865,
  lower: [],
  title: [],
  upper: [],
  fold: 71897,
  foldFull: [71897]
}, {
  code: 71866,
  lower: [],
  title: [],
  upper: [],
  fold: 71898,
  foldFull: [71898]
}, {
  code: 71867,
  lower: [],
  title: [],
  upper: [],
  fold: 71899,
  foldFull: [71899]
}, {
  code: 71868,
  lower: [],
  title: [],
  upper: [],
  fold: 71900,
  foldFull: [71900]
}, {
  code: 71869,
  lower: [],
  title: [],
  upper: [],
  fold: 71901,
  foldFull: [71901]
}, {
  code: 71870,
  lower: [],
  title: [],
  upper: [],
  fold: 71902,
  foldFull: [71902]
}, {
  code: 71871,
  lower: [],
  title: [],
  upper: [],
  fold: 71903,
  foldFull: [71903]
}, {
  code: 93760,
  lower: [],
  title: [],
  upper: [],
  fold: 93792,
  foldFull: [93792]
}, {
  code: 93761,
  lower: [],
  title: [],
  upper: [],
  fold: 93793,
  foldFull: [93793]
}, {
  code: 93762,
  lower: [],
  title: [],
  upper: [],
  fold: 93794,
  foldFull: [93794]
}, {
  code: 93763,
  lower: [],
  title: [],
  upper: [],
  fold: 93795,
  foldFull: [93795]
}, {
  code: 93764,
  lower: [],
  title: [],
  upper: [],
  fold: 93796,
  foldFull: [93796]
}, {
  code: 93765,
  lower: [],
  title: [],
  upper: [],
  fold: 93797,
  foldFull: [93797]
}, {
  code: 93766,
  lower: [],
  title: [],
  upper: [],
  fold: 93798,
  foldFull: [93798]
}, {
  code: 93767,
  lower: [],
  title: [],
  upper: [],
  fold: 93799,
  foldFull: [93799]
}, {
  code: 93768,
  lower: [],
  title: [],
  upper: [],
  fold: 93800,
  foldFull: [93800]
}, {
  code: 93769,
  lower: [],
  title: [],
  upper: [],
  fold: 93801,
  foldFull: [93801]
}, {
  code: 93770,
  lower: [],
  title: [],
  upper: [],
  fold: 93802,
  foldFull: [93802]
}, {
  code: 93771,
  lower: [],
  title: [],
  upper: [],
  fold: 93803,
  foldFull: [93803]
}, {
  code: 93772,
  lower: [],
  title: [],
  upper: [],
  fold: 93804,
  foldFull: [93804]
}, {
  code: 93773,
  lower: [],
  title: [],
  upper: [],
  fold: 93805,
  foldFull: [93805]
}, {
  code: 93774,
  lower: [],
  title: [],
  upper: [],
  fold: 93806,
  foldFull: [93806]
}, {
  code: 93775,
  lower: [],
  title: [],
  upper: [],
  fold: 93807,
  foldFull: [93807]
}, {
  code: 93776,
  lower: [],
  title: [],
  upper: [],
  fold: 93808,
  foldFull: [93808]
}, {
  code: 93777,
  lower: [],
  title: [],
  upper: [],
  fold: 93809,
  foldFull: [93809]
}, {
  code: 93778,
  lower: [],
  title: [],
  upper: [],
  fold: 93810,
  foldFull: [93810]
}, {
  code: 93779,
  lower: [],
  title: [],
  upper: [],
  fold: 93811,
  foldFull: [93811]
}, {
  code: 93780,
  lower: [],
  title: [],
  upper: [],
  fold: 93812,
  foldFull: [93812]
}, {
  code: 93781,
  lower: [],
  title: [],
  upper: [],
  fold: 93813,
  foldFull: [93813]
}, {
  code: 93782,
  lower: [],
  title: [],
  upper: [],
  fold: 93814,
  foldFull: [93814]
}, {
  code: 93783,
  lower: [],
  title: [],
  upper: [],
  fold: 93815,
  foldFull: [93815]
}, {
  code: 93784,
  lower: [],
  title: [],
  upper: [],
  fold: 93816,
  foldFull: [93816]
}, {
  code: 93785,
  lower: [],
  title: [],
  upper: [],
  fold: 93817,
  foldFull: [93817]
}, {
  code: 93786,
  lower: [],
  title: [],
  upper: [],
  fold: 93818,
  foldFull: [93818]
}, {
  code: 93787,
  lower: [],
  title: [],
  upper: [],
  fold: 93819,
  foldFull: [93819]
}, {
  code: 93788,
  lower: [],
  title: [],
  upper: [],
  fold: 93820,
  foldFull: [93820]
}, {
  code: 93789,
  lower: [],
  title: [],
  upper: [],
  fold: 93821,
  foldFull: [93821]
}, {
  code: 93790,
  lower: [],
  title: [],
  upper: [],
  fold: 93822,
  foldFull: [93822]
}, {
  code: 93791,
  lower: [],
  title: [],
  upper: [],
  fold: 93823,
  foldFull: [93823]
}, {
  code: 125184,
  lower: [],
  title: [],
  upper: [],
  fold: 125218,
  foldFull: [125218]
}, {
  code: 125185,
  lower: [],
  title: [],
  upper: [],
  fold: 125219,
  foldFull: [125219]
}, {
  code: 125186,
  lower: [],
  title: [],
  upper: [],
  fold: 125220,
  foldFull: [125220]
}, {
  code: 125187,
  lower: [],
  title: [],
  upper: [],
  fold: 125221,
  foldFull: [125221]
}, {
  code: 125188,
  lower: [],
  title: [],
  upper: [],
  fold: 125222,
  foldFull: [125222]
}, {
  code: 125189,
  lower: [],
  title: [],
  upper: [],
  fold: 125223,
  foldFull: [125223]
}, {
  code: 125190,
  lower: [],
  title: [],
  upper: [],
  fold: 125224,
  foldFull: [125224]
}, {
  code: 125191,
  lower: [],
  title: [],
  upper: [],
  fold: 125225,
  foldFull: [125225]
}, {
  code: 125192,
  lower: [],
  title: [],
  upper: [],
  fold: 125226,
  foldFull: [125226]
}, {
  code: 125193,
  lower: [],
  title: [],
  upper: [],
  fold: 125227,
  foldFull: [125227]
}, {
  code: 125194,
  lower: [],
  title: [],
  upper: [],
  fold: 125228,
  foldFull: [125228]
}, {
  code: 125195,
  lower: [],
  title: [],
  upper: [],
  fold: 125229,
  foldFull: [125229]
}, {
  code: 125196,
  lower: [],
  title: [],
  upper: [],
  fold: 125230,
  foldFull: [125230]
}, {
  code: 125197,
  lower: [],
  title: [],
  upper: [],
  fold: 125231,
  foldFull: [125231]
}, {
  code: 125198,
  lower: [],
  title: [],
  upper: [],
  fold: 125232,
  foldFull: [125232]
}, {
  code: 125199,
  lower: [],
  title: [],
  upper: [],
  fold: 125233,
  foldFull: [125233]
}, {
  code: 125200,
  lower: [],
  title: [],
  upper: [],
  fold: 125234,
  foldFull: [125234]
}, {
  code: 125201,
  lower: [],
  title: [],
  upper: [],
  fold: 125235,
  foldFull: [125235]
}, {
  code: 125202,
  lower: [],
  title: [],
  upper: [],
  fold: 125236,
  foldFull: [125236]
}, {
  code: 125203,
  lower: [],
  title: [],
  upper: [],
  fold: 125237,
  foldFull: [125237]
}, {
  code: 125204,
  lower: [],
  title: [],
  upper: [],
  fold: 125238,
  foldFull: [125238]
}, {
  code: 125205,
  lower: [],
  title: [],
  upper: [],
  fold: 125239,
  foldFull: [125239]
}, {
  code: 125206,
  lower: [],
  title: [],
  upper: [],
  fold: 125240,
  foldFull: [125240]
}, {
  code: 125207,
  lower: [],
  title: [],
  upper: [],
  fold: 125241,
  foldFull: [125241]
}, {
  code: 125208,
  lower: [],
  title: [],
  upper: [],
  fold: 125242,
  foldFull: [125242]
}, {
  code: 125209,
  lower: [],
  title: [],
  upper: [],
  fold: 125243,
  foldFull: [125243]
}, {
  code: 125210,
  lower: [],
  title: [],
  upper: [],
  fold: 125244,
  foldFull: [125244]
}, {
  code: 125211,
  lower: [],
  title: [],
  upper: [],
  fold: 125245,
  foldFull: [125245]
}, {
  code: 125212,
  lower: [],
  title: [],
  upper: [],
  fold: 125246,
  foldFull: [125246]
}, {
  code: 125213,
  lower: [],
  title: [],
  upper: [],
  fold: 125247,
  foldFull: [125247]
}, {
  code: 125214,
  lower: [],
  title: [],
  upper: [],
  fold: 125248,
  foldFull: [125248]
}, {
  code: 125215,
  lower: [],
  title: [],
  upper: [],
  fold: 125249,
  foldFull: [125249]
}, {
  code: 125216,
  lower: [],
  title: [],
  upper: [],
  fold: 125250,
  foldFull: [125250]
}, {
  code: 125217,
  lower: [],
  title: [],
  upper: [],
  fold: 125251,
  foldFull: [125251]
}];
var recCmp = function(v) {
  return function(v1) {
    return compare71(v.code)(v1.code);
  };
};
var findRule = function(code) {
  var v = bsearch(zeroRec(code))(rules)(length3(rules))(recCmp);
  if (v instanceof Nothing) {
    return zeroRec(code);
  }
  ;
  if (v instanceof Just) {
    return v.value0;
  }
  ;
  throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal.Casing (line 1627, column 17 - line 1629, column 14): " + [v.constructor.name]);
};
var lower = function(code) {
  var lowered = findRule(code).lower;
  var $13 = $$null(lowered);
  if ($13) {
    return [uTowlower(code)];
  }
  ;
  return lowered;
};
var title = function(code) {
  var titled = findRule(code).title;
  var $14 = $$null(titled);
  if ($14) {
    return [uTowtitle(code)];
  }
  ;
  return titled;
};
var upper = function(code) {
  var uppered = findRule(code).upper;
  var $15 = $$null(uppered);
  if ($15) {
    return [uTowupper(code)];
  }
  ;
  return uppered;
};

// output/Data.CodePoint.Unicode/index.js
var fromEnum3 = /* @__PURE__ */ fromEnum(boundedEnumCodePoint);
var compare72 = /* @__PURE__ */ compare(ordInt);
var UppercaseLetter = /* @__PURE__ */ function() {
  function UppercaseLetter2() {
  }
  ;
  UppercaseLetter2.value = new UppercaseLetter2();
  return UppercaseLetter2;
}();
var LowercaseLetter = /* @__PURE__ */ function() {
  function LowercaseLetter2() {
  }
  ;
  LowercaseLetter2.value = new LowercaseLetter2();
  return LowercaseLetter2;
}();
var TitlecaseLetter = /* @__PURE__ */ function() {
  function TitlecaseLetter2() {
  }
  ;
  TitlecaseLetter2.value = new TitlecaseLetter2();
  return TitlecaseLetter2;
}();
var ModifierLetter = /* @__PURE__ */ function() {
  function ModifierLetter2() {
  }
  ;
  ModifierLetter2.value = new ModifierLetter2();
  return ModifierLetter2;
}();
var OtherLetter = /* @__PURE__ */ function() {
  function OtherLetter2() {
  }
  ;
  OtherLetter2.value = new OtherLetter2();
  return OtherLetter2;
}();
var NonSpacingMark = /* @__PURE__ */ function() {
  function NonSpacingMark2() {
  }
  ;
  NonSpacingMark2.value = new NonSpacingMark2();
  return NonSpacingMark2;
}();
var SpacingCombiningMark = /* @__PURE__ */ function() {
  function SpacingCombiningMark2() {
  }
  ;
  SpacingCombiningMark2.value = new SpacingCombiningMark2();
  return SpacingCombiningMark2;
}();
var EnclosingMark = /* @__PURE__ */ function() {
  function EnclosingMark2() {
  }
  ;
  EnclosingMark2.value = new EnclosingMark2();
  return EnclosingMark2;
}();
var DecimalNumber = /* @__PURE__ */ function() {
  function DecimalNumber2() {
  }
  ;
  DecimalNumber2.value = new DecimalNumber2();
  return DecimalNumber2;
}();
var LetterNumber = /* @__PURE__ */ function() {
  function LetterNumber2() {
  }
  ;
  LetterNumber2.value = new LetterNumber2();
  return LetterNumber2;
}();
var OtherNumber = /* @__PURE__ */ function() {
  function OtherNumber2() {
  }
  ;
  OtherNumber2.value = new OtherNumber2();
  return OtherNumber2;
}();
var ConnectorPunctuation = /* @__PURE__ */ function() {
  function ConnectorPunctuation2() {
  }
  ;
  ConnectorPunctuation2.value = new ConnectorPunctuation2();
  return ConnectorPunctuation2;
}();
var DashPunctuation = /* @__PURE__ */ function() {
  function DashPunctuation2() {
  }
  ;
  DashPunctuation2.value = new DashPunctuation2();
  return DashPunctuation2;
}();
var OpenPunctuation = /* @__PURE__ */ function() {
  function OpenPunctuation2() {
  }
  ;
  OpenPunctuation2.value = new OpenPunctuation2();
  return OpenPunctuation2;
}();
var ClosePunctuation = /* @__PURE__ */ function() {
  function ClosePunctuation2() {
  }
  ;
  ClosePunctuation2.value = new ClosePunctuation2();
  return ClosePunctuation2;
}();
var InitialQuote = /* @__PURE__ */ function() {
  function InitialQuote2() {
  }
  ;
  InitialQuote2.value = new InitialQuote2();
  return InitialQuote2;
}();
var FinalQuote = /* @__PURE__ */ function() {
  function FinalQuote2() {
  }
  ;
  FinalQuote2.value = new FinalQuote2();
  return FinalQuote2;
}();
var OtherPunctuation = /* @__PURE__ */ function() {
  function OtherPunctuation2() {
  }
  ;
  OtherPunctuation2.value = new OtherPunctuation2();
  return OtherPunctuation2;
}();
var MathSymbol = /* @__PURE__ */ function() {
  function MathSymbol2() {
  }
  ;
  MathSymbol2.value = new MathSymbol2();
  return MathSymbol2;
}();
var CurrencySymbol = /* @__PURE__ */ function() {
  function CurrencySymbol2() {
  }
  ;
  CurrencySymbol2.value = new CurrencySymbol2();
  return CurrencySymbol2;
}();
var ModifierSymbol = /* @__PURE__ */ function() {
  function ModifierSymbol2() {
  }
  ;
  ModifierSymbol2.value = new ModifierSymbol2();
  return ModifierSymbol2;
}();
var OtherSymbol = /* @__PURE__ */ function() {
  function OtherSymbol2() {
  }
  ;
  OtherSymbol2.value = new OtherSymbol2();
  return OtherSymbol2;
}();
var Space = /* @__PURE__ */ function() {
  function Space3() {
  }
  ;
  Space3.value = new Space3();
  return Space3;
}();
var LineSeparator = /* @__PURE__ */ function() {
  function LineSeparator2() {
  }
  ;
  LineSeparator2.value = new LineSeparator2();
  return LineSeparator2;
}();
var ParagraphSeparator = /* @__PURE__ */ function() {
  function ParagraphSeparator2() {
  }
  ;
  ParagraphSeparator2.value = new ParagraphSeparator2();
  return ParagraphSeparator2;
}();
var Control = /* @__PURE__ */ function() {
  function Control2() {
  }
  ;
  Control2.value = new Control2();
  return Control2;
}();
var Format = /* @__PURE__ */ function() {
  function Format2() {
  }
  ;
  Format2.value = new Format2();
  return Format2;
}();
var Surrogate = /* @__PURE__ */ function() {
  function Surrogate2() {
  }
  ;
  Surrogate2.value = new Surrogate2();
  return Surrogate2;
}();
var PrivateUse = /* @__PURE__ */ function() {
  function PrivateUse2() {
  }
  ;
  PrivateUse2.value = new PrivateUse2();
  return PrivateUse2;
}();
var NotAssigned = /* @__PURE__ */ function() {
  function NotAssigned2() {
  }
  ;
  NotAssigned2.value = new NotAssigned2();
  return NotAssigned2;
}();
var unicodeCatToGeneralCat = function(v) {
  if (v instanceof NUMCAT_LU) {
    return UppercaseLetter.value;
  }
  ;
  if (v instanceof NUMCAT_LL) {
    return LowercaseLetter.value;
  }
  ;
  if (v instanceof NUMCAT_LT) {
    return TitlecaseLetter.value;
  }
  ;
  if (v instanceof NUMCAT_LM) {
    return ModifierLetter.value;
  }
  ;
  if (v instanceof NUMCAT_LO) {
    return OtherLetter.value;
  }
  ;
  if (v instanceof NUMCAT_MN) {
    return NonSpacingMark.value;
  }
  ;
  if (v instanceof NUMCAT_MC) {
    return SpacingCombiningMark.value;
  }
  ;
  if (v instanceof NUMCAT_ME) {
    return EnclosingMark.value;
  }
  ;
  if (v instanceof NUMCAT_ND) {
    return DecimalNumber.value;
  }
  ;
  if (v instanceof NUMCAT_NL) {
    return LetterNumber.value;
  }
  ;
  if (v instanceof NUMCAT_NO) {
    return OtherNumber.value;
  }
  ;
  if (v instanceof NUMCAT_PC) {
    return ConnectorPunctuation.value;
  }
  ;
  if (v instanceof NUMCAT_PD) {
    return DashPunctuation.value;
  }
  ;
  if (v instanceof NUMCAT_PS) {
    return OpenPunctuation.value;
  }
  ;
  if (v instanceof NUMCAT_PE) {
    return ClosePunctuation.value;
  }
  ;
  if (v instanceof NUMCAT_PI) {
    return InitialQuote.value;
  }
  ;
  if (v instanceof NUMCAT_PF) {
    return FinalQuote.value;
  }
  ;
  if (v instanceof NUMCAT_PO) {
    return OtherPunctuation.value;
  }
  ;
  if (v instanceof NUMCAT_SM) {
    return MathSymbol.value;
  }
  ;
  if (v instanceof NUMCAT_SC) {
    return CurrencySymbol.value;
  }
  ;
  if (v instanceof NUMCAT_SK) {
    return ModifierSymbol.value;
  }
  ;
  if (v instanceof NUMCAT_SO) {
    return OtherSymbol.value;
  }
  ;
  if (v instanceof NUMCAT_ZS) {
    return Space.value;
  }
  ;
  if (v instanceof NUMCAT_ZL) {
    return LineSeparator.value;
  }
  ;
  if (v instanceof NUMCAT_ZP) {
    return ParagraphSeparator.value;
  }
  ;
  if (v instanceof NUMCAT_CC) {
    return Control.value;
  }
  ;
  if (v instanceof NUMCAT_CF) {
    return Format.value;
  }
  ;
  if (v instanceof NUMCAT_CS) {
    return Surrogate.value;
  }
  ;
  if (v instanceof NUMCAT_CO) {
    return PrivateUse.value;
  }
  ;
  if (v instanceof NUMCAT_CN) {
    return NotAssigned.value;
  }
  ;
  throw new Error("Failed pattern match at Data.CodePoint.Unicode (line 206, column 1 - line 206, column 61): " + [v.constructor.name]);
};
var modifyFull = unsafeCoerce2;
var toLower2 = /* @__PURE__ */ modifyFull(lower);
var toTitle = /* @__PURE__ */ modifyFull(title);
var toUpper2 = /* @__PURE__ */ modifyFull(upper);
var isLower = function($68) {
  return uIswlower(fromEnum3($68));
};
var isAlpha = function($71) {
  return uIswalpha(fromEnum3($71));
};
var generalCategory = /* @__PURE__ */ function() {
  var $72 = map(functorMaybe)(unicodeCatToGeneralCat);
  return function($73) {
    return $72(uGencat(fromEnum3($73)));
  };
}();
var generalCatToInt = function(v) {
  if (v instanceof UppercaseLetter) {
    return 1;
  }
  ;
  if (v instanceof LowercaseLetter) {
    return 2;
  }
  ;
  if (v instanceof TitlecaseLetter) {
    return 3;
  }
  ;
  if (v instanceof ModifierLetter) {
    return 4;
  }
  ;
  if (v instanceof OtherLetter) {
    return 5;
  }
  ;
  if (v instanceof NonSpacingMark) {
    return 6;
  }
  ;
  if (v instanceof SpacingCombiningMark) {
    return 7;
  }
  ;
  if (v instanceof EnclosingMark) {
    return 8;
  }
  ;
  if (v instanceof DecimalNumber) {
    return 9;
  }
  ;
  if (v instanceof LetterNumber) {
    return 10;
  }
  ;
  if (v instanceof OtherNumber) {
    return 11;
  }
  ;
  if (v instanceof ConnectorPunctuation) {
    return 12;
  }
  ;
  if (v instanceof DashPunctuation) {
    return 13;
  }
  ;
  if (v instanceof OpenPunctuation) {
    return 14;
  }
  ;
  if (v instanceof ClosePunctuation) {
    return 15;
  }
  ;
  if (v instanceof InitialQuote) {
    return 16;
  }
  ;
  if (v instanceof FinalQuote) {
    return 17;
  }
  ;
  if (v instanceof OtherPunctuation) {
    return 18;
  }
  ;
  if (v instanceof MathSymbol) {
    return 19;
  }
  ;
  if (v instanceof CurrencySymbol) {
    return 20;
  }
  ;
  if (v instanceof ModifierSymbol) {
    return 21;
  }
  ;
  if (v instanceof OtherSymbol) {
    return 22;
  }
  ;
  if (v instanceof Space) {
    return 23;
  }
  ;
  if (v instanceof LineSeparator) {
    return 24;
  }
  ;
  if (v instanceof ParagraphSeparator) {
    return 25;
  }
  ;
  if (v instanceof Control) {
    return 26;
  }
  ;
  if (v instanceof Format) {
    return 27;
  }
  ;
  if (v instanceof Surrogate) {
    return 28;
  }
  ;
  if (v instanceof PrivateUse) {
    return 29;
  }
  ;
  if (v instanceof NotAssigned) {
    return 30;
  }
  ;
  throw new Error("Failed pattern match at Data.CodePoint.Unicode (line 142, column 1 - line 142, column 42): " + [v.constructor.name]);
};
var eqGeneralCategory = {
  eq: function(v) {
    return function(v1) {
      if (v instanceof UppercaseLetter && v1 instanceof UppercaseLetter) {
        return true;
      }
      ;
      if (v instanceof LowercaseLetter && v1 instanceof LowercaseLetter) {
        return true;
      }
      ;
      if (v instanceof TitlecaseLetter && v1 instanceof TitlecaseLetter) {
        return true;
      }
      ;
      if (v instanceof ModifierLetter && v1 instanceof ModifierLetter) {
        return true;
      }
      ;
      if (v instanceof OtherLetter && v1 instanceof OtherLetter) {
        return true;
      }
      ;
      if (v instanceof NonSpacingMark && v1 instanceof NonSpacingMark) {
        return true;
      }
      ;
      if (v instanceof SpacingCombiningMark && v1 instanceof SpacingCombiningMark) {
        return true;
      }
      ;
      if (v instanceof EnclosingMark && v1 instanceof EnclosingMark) {
        return true;
      }
      ;
      if (v instanceof DecimalNumber && v1 instanceof DecimalNumber) {
        return true;
      }
      ;
      if (v instanceof LetterNumber && v1 instanceof LetterNumber) {
        return true;
      }
      ;
      if (v instanceof OtherNumber && v1 instanceof OtherNumber) {
        return true;
      }
      ;
      if (v instanceof ConnectorPunctuation && v1 instanceof ConnectorPunctuation) {
        return true;
      }
      ;
      if (v instanceof DashPunctuation && v1 instanceof DashPunctuation) {
        return true;
      }
      ;
      if (v instanceof OpenPunctuation && v1 instanceof OpenPunctuation) {
        return true;
      }
      ;
      if (v instanceof ClosePunctuation && v1 instanceof ClosePunctuation) {
        return true;
      }
      ;
      if (v instanceof InitialQuote && v1 instanceof InitialQuote) {
        return true;
      }
      ;
      if (v instanceof FinalQuote && v1 instanceof FinalQuote) {
        return true;
      }
      ;
      if (v instanceof OtherPunctuation && v1 instanceof OtherPunctuation) {
        return true;
      }
      ;
      if (v instanceof MathSymbol && v1 instanceof MathSymbol) {
        return true;
      }
      ;
      if (v instanceof CurrencySymbol && v1 instanceof CurrencySymbol) {
        return true;
      }
      ;
      if (v instanceof ModifierSymbol && v1 instanceof ModifierSymbol) {
        return true;
      }
      ;
      if (v instanceof OtherSymbol && v1 instanceof OtherSymbol) {
        return true;
      }
      ;
      if (v instanceof Space && v1 instanceof Space) {
        return true;
      }
      ;
      if (v instanceof LineSeparator && v1 instanceof LineSeparator) {
        return true;
      }
      ;
      if (v instanceof ParagraphSeparator && v1 instanceof ParagraphSeparator) {
        return true;
      }
      ;
      if (v instanceof Control && v1 instanceof Control) {
        return true;
      }
      ;
      if (v instanceof Format && v1 instanceof Format) {
        return true;
      }
      ;
      if (v instanceof Surrogate && v1 instanceof Surrogate) {
        return true;
      }
      ;
      if (v instanceof PrivateUse && v1 instanceof PrivateUse) {
        return true;
      }
      ;
      if (v instanceof NotAssigned && v1 instanceof NotAssigned) {
        return true;
      }
      ;
      return false;
    };
  }
};
var ordGeneralCategory = {
  compare: function(catA) {
    return function(catB) {
      return compare72(generalCatToInt(catA))(generalCatToInt(catB));
    };
  },
  Eq0: function() {
    return eqGeneralCategory;
  }
};

// output/Data.String.Regex/foreign.js
var regexImpl = function(left2) {
  return function(right2) {
    return function(s1) {
      return function(s2) {
        try {
          return right2(new RegExp(s1, s2));
        } catch (e) {
          return left2(e.message);
        }
      };
    };
  };
};
var test = function(r) {
  return function(s) {
    var lastIndex = r.lastIndex;
    var result = r.test(s);
    r.lastIndex = lastIndex;
    return result;
  };
};
var _match = function(just) {
  return function(nothing) {
    return function(r) {
      return function(s) {
        var m = s.match(r);
        if (m == null || m.length === 0) {
          return nothing;
        } else {
          for (var i = 0; i < m.length; i++) {
            m[i] = m[i] == null ? nothing : just(m[i]);
          }
          return just(m);
        }
      };
    };
  };
};
var split2 = function(r) {
  return function(s) {
    return s.split(r);
  };
};

// output/Data.String.Regex.Flags/index.js
var unicode = {
  global: false,
  ignoreCase: false,
  multiline: false,
  dotAll: false,
  sticky: false,
  unicode: true
};
var global = {
  global: true,
  ignoreCase: false,
  multiline: false,
  dotAll: false,
  sticky: false,
  unicode: false
};

// output/Data.String.Regex/index.js
var renderFlags = function(v) {
  return function() {
    if (v.global) {
      return "g";
    }
    ;
    return "";
  }() + (function() {
    if (v.ignoreCase) {
      return "i";
    }
    ;
    return "";
  }() + (function() {
    if (v.multiline) {
      return "m";
    }
    ;
    return "";
  }() + (function() {
    if (v.dotAll) {
      return "s";
    }
    ;
    return "";
  }() + (function() {
    if (v.sticky) {
      return "y";
    }
    ;
    return "";
  }() + function() {
    if (v.unicode) {
      return "u";
    }
    ;
    return "";
  }()))));
};
var regex = function(s) {
  return function(f) {
    return regexImpl(Left.create)(Right.create)(s)(renderFlags(f));
  };
};
var match = /* @__PURE__ */ function() {
  return _match(Just.create)(Nothing.value);
}();

// output/Data.String.Regex.Unsafe/index.js
var identity13 = /* @__PURE__ */ identity(categoryFn);
var unsafeRegex = function(s) {
  return function(f) {
    return either(unsafeCrashWith)(identity13)(regex(s)(f));
  };
};

// output/Data.String.Unicode/index.js
var bindFlipped3 = /* @__PURE__ */ bindFlipped(bindArray);
var convertFull = function(f) {
  var $4 = bindFlipped3(f);
  return function($5) {
    return fromCodePointArray($4(toCodePointArray($5)));
  };
};
var toLower3 = /* @__PURE__ */ convertFull(toLower2);
var toUpper3 = /* @__PURE__ */ convertFull(toUpper2);

// output/Data.String.Extra/index.js
var foldMap5 = /* @__PURE__ */ foldMap(foldableMaybe);
var foldMap13 = /* @__PURE__ */ foldMap5(monoidString);
var foldMap22 = /* @__PURE__ */ foldMap5(monoidArray);
var foldMap32 = /* @__PURE__ */ foldMap(foldableArray)(monoidString);
var upperCaseFirst = /* @__PURE__ */ function() {
  var $17 = foldMap13(function(v) {
    return fromCodePointArray(toTitle(v.head)) + toLower3(v.tail);
  });
  return function($18) {
    return $17(uncons4($18));
  };
}();
var regexGlobal = function(regexStr) {
  return unsafeRegex(regexStr)(global);
};
var regexHasASCIIWords = /* @__PURE__ */ regexGlobal("[^\0-/:-@[-`{-\x7F]+");
var regexHasUnicodeWords = /* @__PURE__ */ regexGlobal("[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9]");
var regexUnicodeWords = /* @__PURE__ */ function() {
  var rsUpper = "[A-Z\\xc0-\\xd6\\xd8-\\xde]";
  var rsOptVar = "[\\ufe0e\\ufe0f]?";
  var rsLower = "[a-z\\xdf-\\xf6\\xf8-\\xff]";
  var rsDingbat = "[\\u2700-\\u27bf]";
  var rsBreakRange = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
  var rsBreak = "[" + (rsBreakRange + "]");
  var rsMisc = "[^" + ("\\ud800-\\udfff" + (rsBreakRange + "\\d\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]"));
  var rsMiscLower = "(?:" + (rsLower + ("|" + (rsMisc + ")")));
  var rsMiscUpper = "(?:" + (rsUpper + ("|" + (rsMisc + ")")));
  var rsNonAstral = "[^\\ud800-\\udfff]";
  var rsOptContrLower = "(?:['\\u2019](?:d|ll|m|re|s|t|ve))?";
  var rsOptContrUpper = "(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?";
  var rsComboRange = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\u1ab0-\\u1aff\\u1dc0-\\u1dff";
  var rsCombo = "[" + (rsComboRange + "]");
  var rsModifier = "(?:" + (rsCombo + "|\\ud83c[\\udffb-\\udfff])");
  var reOptMod = rsModifier + "?";
  var rsOptJoin = "(?:" + ("\\u200d" + ("(?:" + (rsNonAstral + ("|" + ("(?:\\ud83c[\\udde6-\\uddff]){2}" + ("|" + ("[\\ud800-\\udbff][\\udc00-\\udfff]" + (")" + (rsOptVar + (reOptMod + ")*"))))))))));
  var rsSeq = rsOptVar + (reOptMod + rsOptJoin);
  var rsEmoji = "(?:" + (rsDingbat + ("|" + ("(?:\\ud83c[\\udde6-\\uddff]){2}" + ("|" + ("[\\ud800-\\udbff][\\udc00-\\udfff]" + (")" + rsSeq))))));
  return regexGlobal(joinWith("|")([rsUpper + ("?" + (rsLower + ("+" + (rsOptContrLower + ("(?=" + (rsBreak + ("|" + (rsUpper + "|$)")))))))), rsMiscUpper + ("+" + (rsOptContrUpper + ("(?=" + (rsBreak + ("|" + (rsUpper + (rsMiscLower + "|$)"))))))), rsUpper + ("?" + (rsMiscLower + ("+" + rsOptContrLower))), rsUpper + ("+" + rsOptContrUpper), "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", "\\d+", rsEmoji]));
}();
var unicodeWords = /* @__PURE__ */ function() {
  var $19 = foldMap22(catMaybes3);
  var $20 = match(regexUnicodeWords);
  return function($21) {
    return $19($20($21));
  };
}();
var hasUnicodeWords = /* @__PURE__ */ test(regexHasUnicodeWords);
var asciiWords = /* @__PURE__ */ function() {
  var $22 = foldMap22(catMaybes3);
  var $23 = match(regexHasASCIIWords);
  return function($24) {
    return $22($23($24));
  };
}();
var words = function(string2) {
  var $13 = hasUnicodeWords(string2);
  if ($13) {
    return unicodeWords(string2);
  }
  ;
  return asciiWords(string2);
};
var pascalCase = /* @__PURE__ */ function() {
  var $28 = foldMap32(upperCaseFirst);
  return function($29) {
    return $28(words($29));
  };
}();

// output/PureScript.CST.Types/index.js
var ASCII = /* @__PURE__ */ function() {
  function ASCII2() {
  }
  ;
  ASCII2.value = new ASCII2();
  return ASCII2;
}();
var Unicode = /* @__PURE__ */ function() {
  function Unicode2() {
  }
  ;
  Unicode2.value = new Unicode2();
  return Unicode2;
}();
var Proper = function(x) {
  return x;
};
var LF = /* @__PURE__ */ function() {
  function LF2() {
  }
  ;
  LF2.value = new LF2();
  return LF2;
}();
var CRLF = /* @__PURE__ */ function() {
  function CRLF2() {
  }
  ;
  CRLF2.value = new CRLF2();
  return CRLF2;
}();
var SmallInt = /* @__PURE__ */ function() {
  function SmallInt2(value0) {
    this.value0 = value0;
  }
  ;
  SmallInt2.create = function(value0) {
    return new SmallInt2(value0);
  };
  return SmallInt2;
}();
var BigInt = /* @__PURE__ */ function() {
  function BigInt2(value0) {
    this.value0 = value0;
  }
  ;
  BigInt2.create = function(value0) {
    return new BigInt2(value0);
  };
  return BigInt2;
}();
var BigHex = /* @__PURE__ */ function() {
  function BigHex2(value0) {
    this.value0 = value0;
  }
  ;
  BigHex2.create = function(value0) {
    return new BigHex2(value0);
  };
  return BigHex2;
}();
var TokLeftParen = /* @__PURE__ */ function() {
  function TokLeftParen2() {
  }
  ;
  TokLeftParen2.value = new TokLeftParen2();
  return TokLeftParen2;
}();
var TokRightParen = /* @__PURE__ */ function() {
  function TokRightParen2() {
  }
  ;
  TokRightParen2.value = new TokRightParen2();
  return TokRightParen2;
}();
var TokLeftBrace = /* @__PURE__ */ function() {
  function TokLeftBrace2() {
  }
  ;
  TokLeftBrace2.value = new TokLeftBrace2();
  return TokLeftBrace2;
}();
var TokRightBrace = /* @__PURE__ */ function() {
  function TokRightBrace2() {
  }
  ;
  TokRightBrace2.value = new TokRightBrace2();
  return TokRightBrace2;
}();
var TokLeftSquare = /* @__PURE__ */ function() {
  function TokLeftSquare2() {
  }
  ;
  TokLeftSquare2.value = new TokLeftSquare2();
  return TokLeftSquare2;
}();
var TokRightSquare = /* @__PURE__ */ function() {
  function TokRightSquare2() {
  }
  ;
  TokRightSquare2.value = new TokRightSquare2();
  return TokRightSquare2;
}();
var TokLeftArrow = /* @__PURE__ */ function() {
  function TokLeftArrow2(value0) {
    this.value0 = value0;
  }
  ;
  TokLeftArrow2.create = function(value0) {
    return new TokLeftArrow2(value0);
  };
  return TokLeftArrow2;
}();
var TokRightArrow = /* @__PURE__ */ function() {
  function TokRightArrow2(value0) {
    this.value0 = value0;
  }
  ;
  TokRightArrow2.create = function(value0) {
    return new TokRightArrow2(value0);
  };
  return TokRightArrow2;
}();
var TokRightFatArrow = /* @__PURE__ */ function() {
  function TokRightFatArrow2(value0) {
    this.value0 = value0;
  }
  ;
  TokRightFatArrow2.create = function(value0) {
    return new TokRightFatArrow2(value0);
  };
  return TokRightFatArrow2;
}();
var TokDoubleColon = /* @__PURE__ */ function() {
  function TokDoubleColon2(value0) {
    this.value0 = value0;
  }
  ;
  TokDoubleColon2.create = function(value0) {
    return new TokDoubleColon2(value0);
  };
  return TokDoubleColon2;
}();
var TokForall = /* @__PURE__ */ function() {
  function TokForall2(value0) {
    this.value0 = value0;
  }
  ;
  TokForall2.create = function(value0) {
    return new TokForall2(value0);
  };
  return TokForall2;
}();
var TokEquals = /* @__PURE__ */ function() {
  function TokEquals2() {
  }
  ;
  TokEquals2.value = new TokEquals2();
  return TokEquals2;
}();
var TokPipe = /* @__PURE__ */ function() {
  function TokPipe2() {
  }
  ;
  TokPipe2.value = new TokPipe2();
  return TokPipe2;
}();
var TokTick = /* @__PURE__ */ function() {
  function TokTick2() {
  }
  ;
  TokTick2.value = new TokTick2();
  return TokTick2;
}();
var TokDot = /* @__PURE__ */ function() {
  function TokDot2() {
  }
  ;
  TokDot2.value = new TokDot2();
  return TokDot2;
}();
var TokComma = /* @__PURE__ */ function() {
  function TokComma2() {
  }
  ;
  TokComma2.value = new TokComma2();
  return TokComma2;
}();
var TokUnderscore = /* @__PURE__ */ function() {
  function TokUnderscore2() {
  }
  ;
  TokUnderscore2.value = new TokUnderscore2();
  return TokUnderscore2;
}();
var TokBackslash = /* @__PURE__ */ function() {
  function TokBackslash2() {
  }
  ;
  TokBackslash2.value = new TokBackslash2();
  return TokBackslash2;
}();
var TokAt = /* @__PURE__ */ function() {
  function TokAt2() {
  }
  ;
  TokAt2.value = new TokAt2();
  return TokAt2;
}();
var TokLowerName = /* @__PURE__ */ function() {
  function TokLowerName2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TokLowerName2.create = function(value0) {
    return function(value1) {
      return new TokLowerName2(value0, value1);
    };
  };
  return TokLowerName2;
}();
var TokUpperName = /* @__PURE__ */ function() {
  function TokUpperName2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TokUpperName2.create = function(value0) {
    return function(value1) {
      return new TokUpperName2(value0, value1);
    };
  };
  return TokUpperName2;
}();
var TokOperator = /* @__PURE__ */ function() {
  function TokOperator2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TokOperator2.create = function(value0) {
    return function(value1) {
      return new TokOperator2(value0, value1);
    };
  };
  return TokOperator2;
}();
var TokSymbolName = /* @__PURE__ */ function() {
  function TokSymbolName2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TokSymbolName2.create = function(value0) {
    return function(value1) {
      return new TokSymbolName2(value0, value1);
    };
  };
  return TokSymbolName2;
}();
var TokSymbolArrow = /* @__PURE__ */ function() {
  function TokSymbolArrow2(value0) {
    this.value0 = value0;
  }
  ;
  TokSymbolArrow2.create = function(value0) {
    return new TokSymbolArrow2(value0);
  };
  return TokSymbolArrow2;
}();
var TokHole = /* @__PURE__ */ function() {
  function TokHole2(value0) {
    this.value0 = value0;
  }
  ;
  TokHole2.create = function(value0) {
    return new TokHole2(value0);
  };
  return TokHole2;
}();
var TokChar = /* @__PURE__ */ function() {
  function TokChar2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TokChar2.create = function(value0) {
    return function(value1) {
      return new TokChar2(value0, value1);
    };
  };
  return TokChar2;
}();
var TokString = /* @__PURE__ */ function() {
  function TokString2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TokString2.create = function(value0) {
    return function(value1) {
      return new TokString2(value0, value1);
    };
  };
  return TokString2;
}();
var TokRawString = /* @__PURE__ */ function() {
  function TokRawString2(value0) {
    this.value0 = value0;
  }
  ;
  TokRawString2.create = function(value0) {
    return new TokRawString2(value0);
  };
  return TokRawString2;
}();
var TokInt = /* @__PURE__ */ function() {
  function TokInt2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TokInt2.create = function(value0) {
    return function(value1) {
      return new TokInt2(value0, value1);
    };
  };
  return TokInt2;
}();
var TokNumber = /* @__PURE__ */ function() {
  function TokNumber2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TokNumber2.create = function(value0) {
    return function(value1) {
      return new TokNumber2(value0, value1);
    };
  };
  return TokNumber2;
}();
var TokLayoutStart = /* @__PURE__ */ function() {
  function TokLayoutStart2(value0) {
    this.value0 = value0;
  }
  ;
  TokLayoutStart2.create = function(value0) {
    return new TokLayoutStart2(value0);
  };
  return TokLayoutStart2;
}();
var TokLayoutSep = /* @__PURE__ */ function() {
  function TokLayoutSep2(value0) {
    this.value0 = value0;
  }
  ;
  TokLayoutSep2.create = function(value0) {
    return new TokLayoutSep2(value0);
  };
  return TokLayoutSep2;
}();
var TokLayoutEnd = /* @__PURE__ */ function() {
  function TokLayoutEnd2(value0) {
    this.value0 = value0;
  }
  ;
  TokLayoutEnd2.create = function(value0) {
    return new TokLayoutEnd2(value0);
  };
  return TokLayoutEnd2;
}();
var Comment = /* @__PURE__ */ function() {
  function Comment2(value0) {
    this.value0 = value0;
  }
  ;
  Comment2.create = function(value0) {
    return new Comment2(value0);
  };
  return Comment2;
}();
var Space2 = /* @__PURE__ */ function() {
  function Space3(value0) {
    this.value0 = value0;
  }
  ;
  Space3.create = function(value0) {
    return new Space3(value0);
  };
  return Space3;
}();
var Line = /* @__PURE__ */ function() {
  function Line2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Line2.create = function(value0) {
    return function(value1) {
      return new Line2(value0, value1);
    };
  };
  return Line2;
}();
var Name = function(x) {
  return x;
};
var Prefixed = function(x) {
  return x;
};
var FixityValue = /* @__PURE__ */ function() {
  function FixityValue2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  FixityValue2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new FixityValue2(value0, value1, value2);
      };
    };
  };
  return FixityValue2;
}();
var FixityType = /* @__PURE__ */ function() {
  function FixityType2(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  FixityType2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new FixityType2(value0, value1, value2, value3);
        };
      };
    };
  };
  return FixityType2;
}();
var RecordPun = /* @__PURE__ */ function() {
  function RecordPun2(value0) {
    this.value0 = value0;
  }
  ;
  RecordPun2.create = function(value0) {
    return new RecordPun2(value0);
  };
  return RecordPun2;
}();
var RecordField = /* @__PURE__ */ function() {
  function RecordField2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  RecordField2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new RecordField2(value0, value1, value2);
      };
    };
  };
  return RecordField2;
}();
var Wrapped = function(x) {
  return x;
};
var DataAll = /* @__PURE__ */ function() {
  function DataAll2(value0) {
    this.value0 = value0;
  }
  ;
  DataAll2.create = function(value0) {
    return new DataAll2(value0);
  };
  return DataAll2;
}();
var DataEnumerated = /* @__PURE__ */ function() {
  function DataEnumerated2(value0) {
    this.value0 = value0;
  }
  ;
  DataEnumerated2.create = function(value0) {
    return new DataEnumerated2(value0);
  };
  return DataEnumerated2;
}();
var ExportValue = /* @__PURE__ */ function() {
  function ExportValue2(value0) {
    this.value0 = value0;
  }
  ;
  ExportValue2.create = function(value0) {
    return new ExportValue2(value0);
  };
  return ExportValue2;
}();
var ExportOp = /* @__PURE__ */ function() {
  function ExportOp2(value0) {
    this.value0 = value0;
  }
  ;
  ExportOp2.create = function(value0) {
    return new ExportOp2(value0);
  };
  return ExportOp2;
}();
var ExportType = /* @__PURE__ */ function() {
  function ExportType2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExportType2.create = function(value0) {
    return function(value1) {
      return new ExportType2(value0, value1);
    };
  };
  return ExportType2;
}();
var ExportTypeOp = /* @__PURE__ */ function() {
  function ExportTypeOp2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExportTypeOp2.create = function(value0) {
    return function(value1) {
      return new ExportTypeOp2(value0, value1);
    };
  };
  return ExportTypeOp2;
}();
var ExportClass = /* @__PURE__ */ function() {
  function ExportClass2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExportClass2.create = function(value0) {
    return function(value1) {
      return new ExportClass2(value0, value1);
    };
  };
  return ExportClass2;
}();
var ExportModule = /* @__PURE__ */ function() {
  function ExportModule2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExportModule2.create = function(value0) {
    return function(value1) {
      return new ExportModule2(value0, value1);
    };
  };
  return ExportModule2;
}();
var ExportError = /* @__PURE__ */ function() {
  function ExportError2(value0) {
    this.value0 = value0;
  }
  ;
  ExportError2.create = function(value0) {
    return new ExportError2(value0);
  };
  return ExportError2;
}();
var ImportValue = /* @__PURE__ */ function() {
  function ImportValue2(value0) {
    this.value0 = value0;
  }
  ;
  ImportValue2.create = function(value0) {
    return new ImportValue2(value0);
  };
  return ImportValue2;
}();
var ImportOp = /* @__PURE__ */ function() {
  function ImportOp2(value0) {
    this.value0 = value0;
  }
  ;
  ImportOp2.create = function(value0) {
    return new ImportOp2(value0);
  };
  return ImportOp2;
}();
var ImportType = /* @__PURE__ */ function() {
  function ImportType2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ImportType2.create = function(value0) {
    return function(value1) {
      return new ImportType2(value0, value1);
    };
  };
  return ImportType2;
}();
var ImportTypeOp = /* @__PURE__ */ function() {
  function ImportTypeOp2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ImportTypeOp2.create = function(value0) {
    return function(value1) {
      return new ImportTypeOp2(value0, value1);
    };
  };
  return ImportTypeOp2;
}();
var ImportClass = /* @__PURE__ */ function() {
  function ImportClass2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ImportClass2.create = function(value0) {
    return function(value1) {
      return new ImportClass2(value0, value1);
    };
  };
  return ImportClass2;
}();
var ImportError = /* @__PURE__ */ function() {
  function ImportError2(value0) {
    this.value0 = value0;
  }
  ;
  ImportError2.create = function(value0) {
    return new ImportError2(value0);
  };
  return ImportError2;
}();
var One = /* @__PURE__ */ function() {
  function One2(value0) {
    this.value0 = value0;
  }
  ;
  One2.create = function(value0) {
    return new One2(value0);
  };
  return One2;
}();
var Many = /* @__PURE__ */ function() {
  function Many2(value0) {
    this.value0 = value0;
  }
  ;
  Many2.create = function(value0) {
    return new Many2(value0);
  };
  return Many2;
}();
var TypeVarKinded = /* @__PURE__ */ function() {
  function TypeVarKinded2(value0) {
    this.value0 = value0;
  }
  ;
  TypeVarKinded2.create = function(value0) {
    return new TypeVarKinded2(value0);
  };
  return TypeVarKinded2;
}();
var TypeVarName = /* @__PURE__ */ function() {
  function TypeVarName2(value0) {
    this.value0 = value0;
  }
  ;
  TypeVarName2.create = function(value0) {
    return new TypeVarName2(value0);
  };
  return TypeVarName2;
}();
var TypeVar = /* @__PURE__ */ function() {
  function TypeVar2(value0) {
    this.value0 = value0;
  }
  ;
  TypeVar2.create = function(value0) {
    return new TypeVar2(value0);
  };
  return TypeVar2;
}();
var TypeConstructor = /* @__PURE__ */ function() {
  function TypeConstructor2(value0) {
    this.value0 = value0;
  }
  ;
  TypeConstructor2.create = function(value0) {
    return new TypeConstructor2(value0);
  };
  return TypeConstructor2;
}();
var TypeWildcard = /* @__PURE__ */ function() {
  function TypeWildcard2(value0) {
    this.value0 = value0;
  }
  ;
  TypeWildcard2.create = function(value0) {
    return new TypeWildcard2(value0);
  };
  return TypeWildcard2;
}();
var TypeHole = /* @__PURE__ */ function() {
  function TypeHole2(value0) {
    this.value0 = value0;
  }
  ;
  TypeHole2.create = function(value0) {
    return new TypeHole2(value0);
  };
  return TypeHole2;
}();
var TypeString = /* @__PURE__ */ function() {
  function TypeString2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TypeString2.create = function(value0) {
    return function(value1) {
      return new TypeString2(value0, value1);
    };
  };
  return TypeString2;
}();
var TypeInt = /* @__PURE__ */ function() {
  function TypeInt2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  TypeInt2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new TypeInt2(value0, value1, value2);
      };
    };
  };
  return TypeInt2;
}();
var TypeRow = /* @__PURE__ */ function() {
  function TypeRow2(value0) {
    this.value0 = value0;
  }
  ;
  TypeRow2.create = function(value0) {
    return new TypeRow2(value0);
  };
  return TypeRow2;
}();
var TypeRecord = /* @__PURE__ */ function() {
  function TypeRecord2(value0) {
    this.value0 = value0;
  }
  ;
  TypeRecord2.create = function(value0) {
    return new TypeRecord2(value0);
  };
  return TypeRecord2;
}();
var TypeForall = /* @__PURE__ */ function() {
  function TypeForall2(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  TypeForall2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new TypeForall2(value0, value1, value2, value3);
        };
      };
    };
  };
  return TypeForall2;
}();
var TypeKinded = /* @__PURE__ */ function() {
  function TypeKinded2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  TypeKinded2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new TypeKinded2(value0, value1, value2);
      };
    };
  };
  return TypeKinded2;
}();
var TypeApp = /* @__PURE__ */ function() {
  function TypeApp2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TypeApp2.create = function(value0) {
    return function(value1) {
      return new TypeApp2(value0, value1);
    };
  };
  return TypeApp2;
}();
var TypeOp = /* @__PURE__ */ function() {
  function TypeOp2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TypeOp2.create = function(value0) {
    return function(value1) {
      return new TypeOp2(value0, value1);
    };
  };
  return TypeOp2;
}();
var TypeOpName = /* @__PURE__ */ function() {
  function TypeOpName2(value0) {
    this.value0 = value0;
  }
  ;
  TypeOpName2.create = function(value0) {
    return new TypeOpName2(value0);
  };
  return TypeOpName2;
}();
var TypeArrow = /* @__PURE__ */ function() {
  function TypeArrow2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  TypeArrow2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new TypeArrow2(value0, value1, value2);
      };
    };
  };
  return TypeArrow2;
}();
var TypeArrowName = /* @__PURE__ */ function() {
  function TypeArrowName2(value0) {
    this.value0 = value0;
  }
  ;
  TypeArrowName2.create = function(value0) {
    return new TypeArrowName2(value0);
  };
  return TypeArrowName2;
}();
var TypeConstrained = /* @__PURE__ */ function() {
  function TypeConstrained2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  TypeConstrained2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new TypeConstrained2(value0, value1, value2);
      };
    };
  };
  return TypeConstrained2;
}();
var TypeParens = /* @__PURE__ */ function() {
  function TypeParens2(value0) {
    this.value0 = value0;
  }
  ;
  TypeParens2.create = function(value0) {
    return new TypeParens2(value0);
  };
  return TypeParens2;
}();
var $$TypeError = /* @__PURE__ */ function() {
  function $$TypeError2(value0) {
    this.value0 = value0;
  }
  ;
  $$TypeError2.create = function(value0) {
    return new $$TypeError2(value0);
  };
  return $$TypeError2;
}();
var ForeignValue = /* @__PURE__ */ function() {
  function ForeignValue2(value0) {
    this.value0 = value0;
  }
  ;
  ForeignValue2.create = function(value0) {
    return new ForeignValue2(value0);
  };
  return ForeignValue2;
}();
var ForeignData = /* @__PURE__ */ function() {
  function ForeignData2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ForeignData2.create = function(value0) {
    return function(value1) {
      return new ForeignData2(value0, value1);
    };
  };
  return ForeignData2;
}();
var ForeignKind = /* @__PURE__ */ function() {
  function ForeignKind2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ForeignKind2.create = function(value0) {
    return function(value1) {
      return new ForeignKind2(value0, value1);
    };
  };
  return ForeignKind2;
}();
var FundepDetermined = /* @__PURE__ */ function() {
  function FundepDetermined2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  FundepDetermined2.create = function(value0) {
    return function(value1) {
      return new FundepDetermined2(value0, value1);
    };
  };
  return FundepDetermined2;
}();
var FundepDetermines = /* @__PURE__ */ function() {
  function FundepDetermines2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  FundepDetermines2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new FundepDetermines2(value0, value1, value2);
      };
    };
  };
  return FundepDetermines2;
}();
var BinderWildcard = /* @__PURE__ */ function() {
  function BinderWildcard2(value0) {
    this.value0 = value0;
  }
  ;
  BinderWildcard2.create = function(value0) {
    return new BinderWildcard2(value0);
  };
  return BinderWildcard2;
}();
var BinderVar = /* @__PURE__ */ function() {
  function BinderVar2(value0) {
    this.value0 = value0;
  }
  ;
  BinderVar2.create = function(value0) {
    return new BinderVar2(value0);
  };
  return BinderVar2;
}();
var BinderNamed = /* @__PURE__ */ function() {
  function BinderNamed2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  BinderNamed2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new BinderNamed2(value0, value1, value2);
      };
    };
  };
  return BinderNamed2;
}();
var BinderConstructor = /* @__PURE__ */ function() {
  function BinderConstructor2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  BinderConstructor2.create = function(value0) {
    return function(value1) {
      return new BinderConstructor2(value0, value1);
    };
  };
  return BinderConstructor2;
}();
var BinderBoolean = /* @__PURE__ */ function() {
  function BinderBoolean2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  BinderBoolean2.create = function(value0) {
    return function(value1) {
      return new BinderBoolean2(value0, value1);
    };
  };
  return BinderBoolean2;
}();
var BinderChar = /* @__PURE__ */ function() {
  function BinderChar2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  BinderChar2.create = function(value0) {
    return function(value1) {
      return new BinderChar2(value0, value1);
    };
  };
  return BinderChar2;
}();
var BinderString = /* @__PURE__ */ function() {
  function BinderString2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  BinderString2.create = function(value0) {
    return function(value1) {
      return new BinderString2(value0, value1);
    };
  };
  return BinderString2;
}();
var BinderInt = /* @__PURE__ */ function() {
  function BinderInt2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  BinderInt2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new BinderInt2(value0, value1, value2);
      };
    };
  };
  return BinderInt2;
}();
var BinderNumber = /* @__PURE__ */ function() {
  function BinderNumber2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  BinderNumber2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new BinderNumber2(value0, value1, value2);
      };
    };
  };
  return BinderNumber2;
}();
var BinderArray = /* @__PURE__ */ function() {
  function BinderArray2(value0) {
    this.value0 = value0;
  }
  ;
  BinderArray2.create = function(value0) {
    return new BinderArray2(value0);
  };
  return BinderArray2;
}();
var BinderRecord = /* @__PURE__ */ function() {
  function BinderRecord2(value0) {
    this.value0 = value0;
  }
  ;
  BinderRecord2.create = function(value0) {
    return new BinderRecord2(value0);
  };
  return BinderRecord2;
}();
var BinderParens = /* @__PURE__ */ function() {
  function BinderParens2(value0) {
    this.value0 = value0;
  }
  ;
  BinderParens2.create = function(value0) {
    return new BinderParens2(value0);
  };
  return BinderParens2;
}();
var BinderTyped = /* @__PURE__ */ function() {
  function BinderTyped2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  BinderTyped2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new BinderTyped2(value0, value1, value2);
      };
    };
  };
  return BinderTyped2;
}();
var BinderOp = /* @__PURE__ */ function() {
  function BinderOp2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  BinderOp2.create = function(value0) {
    return function(value1) {
      return new BinderOp2(value0, value1);
    };
  };
  return BinderOp2;
}();
var BinderError = /* @__PURE__ */ function() {
  function BinderError2(value0) {
    this.value0 = value0;
  }
  ;
  BinderError2.create = function(value0) {
    return new BinderError2(value0);
  };
  return BinderError2;
}();
var AppType = /* @__PURE__ */ function() {
  function AppType2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  AppType2.create = function(value0) {
    return function(value1) {
      return new AppType2(value0, value1);
    };
  };
  return AppType2;
}();
var AppTerm = /* @__PURE__ */ function() {
  function AppTerm2(value0) {
    this.value0 = value0;
  }
  ;
  AppTerm2.create = function(value0) {
    return new AppTerm2(value0);
  };
  return AppTerm2;
}();
var DoLet = /* @__PURE__ */ function() {
  function DoLet2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  DoLet2.create = function(value0) {
    return function(value1) {
      return new DoLet2(value0, value1);
    };
  };
  return DoLet2;
}();
var DoDiscard = /* @__PURE__ */ function() {
  function DoDiscard2(value0) {
    this.value0 = value0;
  }
  ;
  DoDiscard2.create = function(value0) {
    return new DoDiscard2(value0);
  };
  return DoDiscard2;
}();
var DoBind = /* @__PURE__ */ function() {
  function DoBind2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  DoBind2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new DoBind2(value0, value1, value2);
      };
    };
  };
  return DoBind2;
}();
var DoError = /* @__PURE__ */ function() {
  function DoError2(value0) {
    this.value0 = value0;
  }
  ;
  DoError2.create = function(value0) {
    return new DoError2(value0);
  };
  return DoError2;
}();
var LetBindingSignature = /* @__PURE__ */ function() {
  function LetBindingSignature2(value0) {
    this.value0 = value0;
  }
  ;
  LetBindingSignature2.create = function(value0) {
    return new LetBindingSignature2(value0);
  };
  return LetBindingSignature2;
}();
var LetBindingName = /* @__PURE__ */ function() {
  function LetBindingName2(value0) {
    this.value0 = value0;
  }
  ;
  LetBindingName2.create = function(value0) {
    return new LetBindingName2(value0);
  };
  return LetBindingName2;
}();
var LetBindingPattern = /* @__PURE__ */ function() {
  function LetBindingPattern2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  LetBindingPattern2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new LetBindingPattern2(value0, value1, value2);
      };
    };
  };
  return LetBindingPattern2;
}();
var LetBindingError = /* @__PURE__ */ function() {
  function LetBindingError2(value0) {
    this.value0 = value0;
  }
  ;
  LetBindingError2.create = function(value0) {
    return new LetBindingError2(value0);
  };
  return LetBindingError2;
}();
var Unconditional = /* @__PURE__ */ function() {
  function Unconditional2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Unconditional2.create = function(value0) {
    return function(value1) {
      return new Unconditional2(value0, value1);
    };
  };
  return Unconditional2;
}();
var Guarded = /* @__PURE__ */ function() {
  function Guarded2(value0) {
    this.value0 = value0;
  }
  ;
  Guarded2.create = function(value0) {
    return new Guarded2(value0);
  };
  return Guarded2;
}();
var Where = function(x) {
  return x;
};
var ExprHole = /* @__PURE__ */ function() {
  function ExprHole2(value0) {
    this.value0 = value0;
  }
  ;
  ExprHole2.create = function(value0) {
    return new ExprHole2(value0);
  };
  return ExprHole2;
}();
var ExprSection = /* @__PURE__ */ function() {
  function ExprSection2(value0) {
    this.value0 = value0;
  }
  ;
  ExprSection2.create = function(value0) {
    return new ExprSection2(value0);
  };
  return ExprSection2;
}();
var ExprIdent = /* @__PURE__ */ function() {
  function ExprIdent2(value0) {
    this.value0 = value0;
  }
  ;
  ExprIdent2.create = function(value0) {
    return new ExprIdent2(value0);
  };
  return ExprIdent2;
}();
var ExprConstructor = /* @__PURE__ */ function() {
  function ExprConstructor2(value0) {
    this.value0 = value0;
  }
  ;
  ExprConstructor2.create = function(value0) {
    return new ExprConstructor2(value0);
  };
  return ExprConstructor2;
}();
var ExprBoolean = /* @__PURE__ */ function() {
  function ExprBoolean2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprBoolean2.create = function(value0) {
    return function(value1) {
      return new ExprBoolean2(value0, value1);
    };
  };
  return ExprBoolean2;
}();
var ExprChar = /* @__PURE__ */ function() {
  function ExprChar2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprChar2.create = function(value0) {
    return function(value1) {
      return new ExprChar2(value0, value1);
    };
  };
  return ExprChar2;
}();
var ExprString = /* @__PURE__ */ function() {
  function ExprString2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprString2.create = function(value0) {
    return function(value1) {
      return new ExprString2(value0, value1);
    };
  };
  return ExprString2;
}();
var ExprInt = /* @__PURE__ */ function() {
  function ExprInt2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprInt2.create = function(value0) {
    return function(value1) {
      return new ExprInt2(value0, value1);
    };
  };
  return ExprInt2;
}();
var ExprNumber = /* @__PURE__ */ function() {
  function ExprNumber2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprNumber2.create = function(value0) {
    return function(value1) {
      return new ExprNumber2(value0, value1);
    };
  };
  return ExprNumber2;
}();
var ExprArray = /* @__PURE__ */ function() {
  function ExprArray2(value0) {
    this.value0 = value0;
  }
  ;
  ExprArray2.create = function(value0) {
    return new ExprArray2(value0);
  };
  return ExprArray2;
}();
var ExprRecord = /* @__PURE__ */ function() {
  function ExprRecord2(value0) {
    this.value0 = value0;
  }
  ;
  ExprRecord2.create = function(value0) {
    return new ExprRecord2(value0);
  };
  return ExprRecord2;
}();
var ExprParens = /* @__PURE__ */ function() {
  function ExprParens2(value0) {
    this.value0 = value0;
  }
  ;
  ExprParens2.create = function(value0) {
    return new ExprParens2(value0);
  };
  return ExprParens2;
}();
var ExprTyped = /* @__PURE__ */ function() {
  function ExprTyped2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  ExprTyped2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new ExprTyped2(value0, value1, value2);
      };
    };
  };
  return ExprTyped2;
}();
var ExprInfix = /* @__PURE__ */ function() {
  function ExprInfix2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprInfix2.create = function(value0) {
    return function(value1) {
      return new ExprInfix2(value0, value1);
    };
  };
  return ExprInfix2;
}();
var ExprOp = /* @__PURE__ */ function() {
  function ExprOp2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprOp2.create = function(value0) {
    return function(value1) {
      return new ExprOp2(value0, value1);
    };
  };
  return ExprOp2;
}();
var ExprOpName = /* @__PURE__ */ function() {
  function ExprOpName2(value0) {
    this.value0 = value0;
  }
  ;
  ExprOpName2.create = function(value0) {
    return new ExprOpName2(value0);
  };
  return ExprOpName2;
}();
var ExprNegate = /* @__PURE__ */ function() {
  function ExprNegate2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprNegate2.create = function(value0) {
    return function(value1) {
      return new ExprNegate2(value0, value1);
    };
  };
  return ExprNegate2;
}();
var ExprRecordAccessor = /* @__PURE__ */ function() {
  function ExprRecordAccessor2(value0) {
    this.value0 = value0;
  }
  ;
  ExprRecordAccessor2.create = function(value0) {
    return new ExprRecordAccessor2(value0);
  };
  return ExprRecordAccessor2;
}();
var ExprRecordUpdate = /* @__PURE__ */ function() {
  function ExprRecordUpdate2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprRecordUpdate2.create = function(value0) {
    return function(value1) {
      return new ExprRecordUpdate2(value0, value1);
    };
  };
  return ExprRecordUpdate2;
}();
var ExprApp = /* @__PURE__ */ function() {
  function ExprApp2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ExprApp2.create = function(value0) {
    return function(value1) {
      return new ExprApp2(value0, value1);
    };
  };
  return ExprApp2;
}();
var ExprLambda = /* @__PURE__ */ function() {
  function ExprLambda2(value0) {
    this.value0 = value0;
  }
  ;
  ExprLambda2.create = function(value0) {
    return new ExprLambda2(value0);
  };
  return ExprLambda2;
}();
var ExprIf = /* @__PURE__ */ function() {
  function ExprIf2(value0) {
    this.value0 = value0;
  }
  ;
  ExprIf2.create = function(value0) {
    return new ExprIf2(value0);
  };
  return ExprIf2;
}();
var ExprCase = /* @__PURE__ */ function() {
  function ExprCase2(value0) {
    this.value0 = value0;
  }
  ;
  ExprCase2.create = function(value0) {
    return new ExprCase2(value0);
  };
  return ExprCase2;
}();
var ExprLet = /* @__PURE__ */ function() {
  function ExprLet2(value0) {
    this.value0 = value0;
  }
  ;
  ExprLet2.create = function(value0) {
    return new ExprLet2(value0);
  };
  return ExprLet2;
}();
var ExprDo = /* @__PURE__ */ function() {
  function ExprDo2(value0) {
    this.value0 = value0;
  }
  ;
  ExprDo2.create = function(value0) {
    return new ExprDo2(value0);
  };
  return ExprDo2;
}();
var ExprAdo = /* @__PURE__ */ function() {
  function ExprAdo2(value0) {
    this.value0 = value0;
  }
  ;
  ExprAdo2.create = function(value0) {
    return new ExprAdo2(value0);
  };
  return ExprAdo2;
}();
var ExprError = /* @__PURE__ */ function() {
  function ExprError2(value0) {
    this.value0 = value0;
  }
  ;
  ExprError2.create = function(value0) {
    return new ExprError2(value0);
  };
  return ExprError2;
}();
var RecordUpdateLeaf = /* @__PURE__ */ function() {
  function RecordUpdateLeaf2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  RecordUpdateLeaf2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new RecordUpdateLeaf2(value0, value1, value2);
      };
    };
  };
  return RecordUpdateLeaf2;
}();
var RecordUpdateBranch = /* @__PURE__ */ function() {
  function RecordUpdateBranch2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  RecordUpdateBranch2.create = function(value0) {
    return function(value1) {
      return new RecordUpdateBranch2(value0, value1);
    };
  };
  return RecordUpdateBranch2;
}();
var InstanceBindingSignature = /* @__PURE__ */ function() {
  function InstanceBindingSignature2(value0) {
    this.value0 = value0;
  }
  ;
  InstanceBindingSignature2.create = function(value0) {
    return new InstanceBindingSignature2(value0);
  };
  return InstanceBindingSignature2;
}();
var InstanceBindingName = /* @__PURE__ */ function() {
  function InstanceBindingName2(value0) {
    this.value0 = value0;
  }
  ;
  InstanceBindingName2.create = function(value0) {
    return new InstanceBindingName2(value0);
  };
  return InstanceBindingName2;
}();
var DeclData = /* @__PURE__ */ function() {
  function DeclData2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  DeclData2.create = function(value0) {
    return function(value1) {
      return new DeclData2(value0, value1);
    };
  };
  return DeclData2;
}();
var DeclType = /* @__PURE__ */ function() {
  function DeclType2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  DeclType2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new DeclType2(value0, value1, value2);
      };
    };
  };
  return DeclType2;
}();
var DeclNewtype = /* @__PURE__ */ function() {
  function DeclNewtype2(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  DeclNewtype2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new DeclNewtype2(value0, value1, value2, value3);
        };
      };
    };
  };
  return DeclNewtype2;
}();
var DeclClass = /* @__PURE__ */ function() {
  function DeclClass2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  DeclClass2.create = function(value0) {
    return function(value1) {
      return new DeclClass2(value0, value1);
    };
  };
  return DeclClass2;
}();
var DeclInstanceChain = /* @__PURE__ */ function() {
  function DeclInstanceChain2(value0) {
    this.value0 = value0;
  }
  ;
  DeclInstanceChain2.create = function(value0) {
    return new DeclInstanceChain2(value0);
  };
  return DeclInstanceChain2;
}();
var DeclDerive = /* @__PURE__ */ function() {
  function DeclDerive2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  DeclDerive2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new DeclDerive2(value0, value1, value2);
      };
    };
  };
  return DeclDerive2;
}();
var DeclKindSignature = /* @__PURE__ */ function() {
  function DeclKindSignature2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  DeclKindSignature2.create = function(value0) {
    return function(value1) {
      return new DeclKindSignature2(value0, value1);
    };
  };
  return DeclKindSignature2;
}();
var DeclSignature = /* @__PURE__ */ function() {
  function DeclSignature2(value0) {
    this.value0 = value0;
  }
  ;
  DeclSignature2.create = function(value0) {
    return new DeclSignature2(value0);
  };
  return DeclSignature2;
}();
var DeclValue = /* @__PURE__ */ function() {
  function DeclValue2(value0) {
    this.value0 = value0;
  }
  ;
  DeclValue2.create = function(value0) {
    return new DeclValue2(value0);
  };
  return DeclValue2;
}();
var DeclFixity = /* @__PURE__ */ function() {
  function DeclFixity2(value0) {
    this.value0 = value0;
  }
  ;
  DeclFixity2.create = function(value0) {
    return new DeclFixity2(value0);
  };
  return DeclFixity2;
}();
var DeclForeign = /* @__PURE__ */ function() {
  function DeclForeign2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  DeclForeign2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new DeclForeign2(value0, value1, value2);
      };
    };
  };
  return DeclForeign2;
}();
var DeclRole = /* @__PURE__ */ function() {
  function DeclRole2(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  DeclRole2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new DeclRole2(value0, value1, value2, value3);
        };
      };
    };
  };
  return DeclRole2;
}();
var DeclError = /* @__PURE__ */ function() {
  function DeclError2(value0) {
    this.value0 = value0;
  }
  ;
  DeclError2.create = function(value0) {
    return new DeclError2(value0);
  };
  return DeclError2;
}();
var ordProper = ordString;
var ordOperator = ordString;
var ordModuleName = ordString;
var ordIdent = ordString;
var eqProper = eqString;
var eqOperator = eqString;
var eqModuleName = eqString;
var eqIdent = eqString;

// output/Dodo.Internal/index.js
var Append = /* @__PURE__ */ function() {
  function Append2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Append2.create = function(value0) {
    return function(value1) {
      return new Append2(value0, value1);
    };
  };
  return Append2;
}();
var Indent = /* @__PURE__ */ function() {
  function Indent2(value0) {
    this.value0 = value0;
  }
  ;
  Indent2.create = function(value0) {
    return new Indent2(value0);
  };
  return Indent2;
}();
var Align = /* @__PURE__ */ function() {
  function Align2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Align2.create = function(value0) {
    return function(value1) {
      return new Align2(value0, value1);
    };
  };
  return Align2;
}();
var Annotate = /* @__PURE__ */ function() {
  function Annotate2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Annotate2.create = function(value0) {
    return function(value1) {
      return new Annotate2(value0, value1);
    };
  };
  return Annotate2;
}();
var FlexSelect = /* @__PURE__ */ function() {
  function FlexSelect2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  FlexSelect2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new FlexSelect2(value0, value1, value2);
      };
    };
  };
  return FlexSelect2;
}();
var FlexAlt = /* @__PURE__ */ function() {
  function FlexAlt2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  FlexAlt2.create = function(value0) {
    return function(value1) {
      return new FlexAlt2(value0, value1);
    };
  };
  return FlexAlt2;
}();
var WithPosition = /* @__PURE__ */ function() {
  function WithPosition2(value0) {
    this.value0 = value0;
  }
  ;
  WithPosition2.create = function(value0) {
    return new WithPosition2(value0);
  };
  return WithPosition2;
}();
var Local = /* @__PURE__ */ function() {
  function Local2(value0) {
    this.value0 = value0;
  }
  ;
  Local2.create = function(value0) {
    return new Local2(value0);
  };
  return Local2;
}();
var Text = /* @__PURE__ */ function() {
  function Text2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Text2.create = function(value0) {
    return function(value1) {
      return new Text2(value0, value1);
    };
  };
  return Text2;
}();
var Break = /* @__PURE__ */ function() {
  function Break2() {
  }
  ;
  Break2.value = new Break2();
  return Break2;
}();
var Empty = /* @__PURE__ */ function() {
  function Empty2() {
  }
  ;
  Empty2.value = new Empty2();
  return Empty2;
}();
var notEmpty = function(f) {
  return function(v) {
    if (v instanceof Empty) {
      return Empty.value;
    }
    ;
    return f(v);
  };
};
var isEmpty2 = function(v) {
  if (v instanceof Empty) {
    return true;
  }
  ;
  return false;
};
var bothNotEmpty = function(f) {
  return function(v) {
    return function(v1) {
      if (v instanceof Empty) {
        return v1;
      }
      ;
      if (v1 instanceof Empty) {
        return v;
      }
      ;
      return f(v)(v1);
    };
  };
};
var semigroupDoc = {
  append: /* @__PURE__ */ bothNotEmpty(function(v) {
    return function(v1) {
      if (v instanceof Text && v1 instanceof Text) {
        return new Text(v.value0 + v1.value0 | 0, v.value1 + v1.value1);
      }
      ;
      return new Append(v, v1);
    };
  })
};
var monoidDoc = /* @__PURE__ */ function() {
  return {
    mempty: Empty.value,
    Semigroup0: function() {
      return semigroupDoc;
    }
  };
}();

// output/Dodo.Internal.Buffer/index.js
var foldr6 = /* @__PURE__ */ foldr(foldableList);
var $$new2 = function(buffer) {
  return {
    buffer,
    queue: Nil.value
  };
};
var modify3 = function(f) {
  return function(v) {
    if (v.queue instanceof Cons) {
      return {
        buffer: v.buffer,
        queue: new Cons(new Cons(f, v.queue.value0), v.queue.value1)
      };
    }
    ;
    return {
      queue: v.queue,
      buffer: f(v.buffer)
    };
  };
};
var commit = function(v) {
  return {
    buffer: foldr6(flip(foldr6(apply)))(v.buffer)(v.queue),
    queue: Nil.value
  };
};
var get2 = function($23) {
  return function(v) {
    return v.buffer;
  }(commit($23));
};
var branch = function(v) {
  return {
    buffer: v.buffer,
    queue: new Cons(Nil.value, v.queue)
  };
};

// output/Dodo/index.js
var mempty3 = /* @__PURE__ */ mempty(monoidDoc);
var append12 = /* @__PURE__ */ append(semigroupDoc);
var max3 = /* @__PURE__ */ max(ordInt);
var max1 = /* @__PURE__ */ max(ordNumber);
var min3 = /* @__PURE__ */ min(ordNumber);
var power2 = /* @__PURE__ */ power(monoidString);
var pure4 = /* @__PURE__ */ pure(applicativeList);
var Doc = /* @__PURE__ */ function() {
  function Doc2(value0) {
    this.value0 = value0;
  }
  ;
  Doc2.create = function(value0) {
    return new Doc2(value0);
  };
  return Doc2;
}();
var Dedent = /* @__PURE__ */ function() {
  function Dedent2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Dedent2.create = function(value0) {
    return function(value1) {
      return new Dedent2(value0, value1);
    };
  };
  return Dedent2;
}();
var LeaveAnnotation = /* @__PURE__ */ function() {
  function LeaveAnnotation2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  LeaveAnnotation2.create = function(value0) {
    return function(value1) {
      return new LeaveAnnotation2(value0, value1);
    };
  };
  return LeaveAnnotation2;
}();
var LeaveFlexGroup = /* @__PURE__ */ function() {
  function LeaveFlexGroup2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  LeaveFlexGroup2.create = function(value0) {
    return function(value1) {
      return new LeaveFlexGroup2(value0, value1);
    };
  };
  return LeaveFlexGroup2;
}();
var LeaveLocal = /* @__PURE__ */ function() {
  function LeaveLocal2(value0) {
    this.value0 = value0;
  }
  ;
  LeaveLocal2.create = function(value0) {
    return new LeaveLocal2(value0);
  };
  return LeaveLocal2;
}();
var NoFlexGroup = /* @__PURE__ */ function() {
  function NoFlexGroup2() {
  }
  ;
  NoFlexGroup2.value = new NoFlexGroup2();
  return NoFlexGroup2;
}();
var FlexGroupPending = /* @__PURE__ */ function() {
  function FlexGroupPending2() {
  }
  ;
  FlexGroupPending2.value = new FlexGroupPending2();
  return FlexGroupPending2;
}();
var FlexGroupReset = /* @__PURE__ */ function() {
  function FlexGroupReset2(value0) {
    this.value0 = value0;
  }
  ;
  FlexGroupReset2.create = function(value0) {
    return new FlexGroupReset2(value0);
  };
  return FlexGroupReset2;
}();
var withPosition = /* @__PURE__ */ function() {
  return WithPosition.create;
}();
var text = function(v) {
  if (v === "") {
    return Empty.value;
  }
  ;
  return new Text(length6(v), v);
};
var storeState = function(stack) {
  return function(v) {
    return {
      position: v.position,
      buffer: v.buffer,
      annotations: v.annotations,
      indentSpaces: v.indentSpaces,
      stack,
      options: v.options
    };
  };
};
var space = /* @__PURE__ */ text(" ");
var resetState = function(v) {
  return {
    position: v.position,
    buffer: v.buffer,
    annotations: v.annotations,
    indentSpaces: v.indentSpaces,
    flexGroup: NoFlexGroup.value,
    options: v.options
  };
};
var plainText = {
  emptyBuffer: "",
  writeText: function(v) {
    return function(str) {
      return function(buff) {
        return buff + str;
      };
    };
  },
  writeIndent: function(v) {
    return function(str) {
      return function(buff) {
        return buff + str;
      };
    };
  },
  writeBreak: function(buff) {
    return buff + "\n";
  },
  enterAnnotation: function(v) {
    return function(v1) {
      return function(buff) {
        return buff;
      };
    };
  },
  leaveAnnotation: function(v) {
    return function(v1) {
      return function(buff) {
        return buff;
      };
    };
  },
  flushBuffer: function(buff) {
    return buff;
  }
};
var locally = function(k) {
  return function(doc) {
    return new Local(function(options) {
      return new Tuple(k(options), doc);
    });
  };
};
var indent = /* @__PURE__ */ function() {
  return notEmpty(Indent.create);
}();
var flexSelect = function(doc1) {
  return function(doc2) {
    return function(doc3) {
      if (isEmpty2(doc1)) {
        return doc2;
      }
      ;
      if (otherwise) {
        return new FlexSelect(doc1, doc2, doc3);
      }
      ;
      throw new Error("Failed pattern match at Dodo (line 89, column 1 - line 89, column 57): " + [doc1.constructor.name, doc2.constructor.name, doc3.constructor.name]);
    };
  };
};
var flexGroup = /* @__PURE__ */ notEmpty(function(v) {
  if (v instanceof FlexSelect && (isEmpty2(v.value1) && isEmpty2(v.value2))) {
    return v;
  }
  ;
  return new FlexSelect(v, Empty.value, Empty.value);
});
var flexAlt = /* @__PURE__ */ function() {
  return FlexAlt.create;
}();
var calcRibbonWidth = function(v) {
  return function(n) {
    return max3(0)(ceil2(v.ribbonRatio * toNumber(v.pageWidth - n | 0)));
  };
};
var storeOptions = function(prevIndent) {
  return function(localOptions) {
    return function(state2) {
      var newOptions = {
        indentUnit: localOptions.indentUnit,
        indentWidth: localOptions.indentWidth,
        pageWidth: localOptions.pageWidth,
        ribbonRatio: localOptions.ribbonRatio
      };
      return {
        buffer: state2.buffer,
        annotations: state2.annotations,
        flexGroup: state2.flexGroup,
        indentSpaces: localOptions.indentSpaces,
        options: newOptions,
        position: {
          line: state2.position.line,
          column: state2.position.column,
          indent: state2.position.indent,
          pageWidth: newOptions.pageWidth,
          ribbonWidth: calcRibbonWidth(newOptions)(prevIndent),
          nextIndent: localOptions.indent
        }
      };
    };
  };
};
var print = function(v) {
  return function(opts) {
    var initOptions = {
      pageWidth: opts.pageWidth,
      indentUnit: opts.indentUnit,
      indentWidth: opts.indentWidth,
      ribbonRatio: max1(0)(min3(1)(opts.ribbonRatio))
    };
    var initState = {
      position: {
        line: 0,
        column: 0,
        indent: 0,
        nextIndent: 0,
        pageWidth: initOptions.pageWidth,
        ribbonWidth: calcRibbonWidth(initOptions)(0)
      },
      buffer: $$new2(v.emptyBuffer),
      annotations: Nil.value,
      indentSpaces: "",
      flexGroup: NoFlexGroup.value,
      options: initOptions
    };
    var go = function($copy_stack) {
      return function($copy_state) {
        var $tco_var_stack = $copy_stack;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(stack, state2) {
          if (stack instanceof Nil) {
            $tco_done = true;
            return v.flushBuffer(get2(state2.buffer));
          }
          ;
          if (stack instanceof Cons) {
            if (stack.value0 instanceof Doc) {
              if (stack.value0.value0 instanceof Append) {
                $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0), new Cons(new Doc(stack.value0.value0.value1), stack.value1));
                $copy_state = state2;
                return;
              }
              ;
              if (stack.value0.value0 instanceof Text) {
                if (state2.position.column === 0 && state2.position.indent > 0) {
                  $tco_var_stack = stack;
                  $copy_state = {
                    annotations: state2.annotations,
                    indentSpaces: state2.indentSpaces,
                    flexGroup: state2.flexGroup,
                    options: state2.options,
                    position: {
                      line: state2.position.line,
                      indent: state2.position.indent,
                      nextIndent: state2.position.nextIndent,
                      pageWidth: state2.position.pageWidth,
                      ribbonWidth: state2.position.ribbonWidth,
                      column: state2.position.indent
                    },
                    buffer: modify3(v.writeIndent(state2.position.indent)(state2.indentSpaces))(state2.buffer)
                  };
                  return;
                }
                ;
                if ((state2.position.column + stack.value0.value0.value0 | 0) <= (state2.position.indent + state2.position.ribbonWidth | 0)) {
                  $tco_var_stack = stack.value1;
                  $copy_state = {
                    annotations: state2.annotations,
                    indentSpaces: state2.indentSpaces,
                    flexGroup: state2.flexGroup,
                    options: state2.options,
                    position: {
                      line: state2.position.line,
                      indent: state2.position.indent,
                      nextIndent: state2.position.nextIndent,
                      pageWidth: state2.position.pageWidth,
                      ribbonWidth: state2.position.ribbonWidth,
                      column: state2.position.column + stack.value0.value0.value0 | 0
                    },
                    buffer: modify3(v.writeText(stack.value0.value0.value0)(stack.value0.value0.value1))(state2.buffer)
                  };
                  return;
                }
                ;
                if (otherwise) {
                  if (state2.flexGroup instanceof FlexGroupReset) {
                    $tco_var_stack = state2.flexGroup.value0.stack;
                    $copy_state = resetState(state2.flexGroup.value0);
                    return;
                  }
                  ;
                  $tco_var_stack = stack.value1;
                  $copy_state = {
                    annotations: state2.annotations,
                    indentSpaces: state2.indentSpaces,
                    options: state2.options,
                    position: {
                      line: state2.position.line,
                      indent: state2.position.indent,
                      nextIndent: state2.position.nextIndent,
                      pageWidth: state2.position.pageWidth,
                      ribbonWidth: state2.position.ribbonWidth,
                      column: state2.position.column + stack.value0.value0.value0 | 0
                    },
                    flexGroup: NoFlexGroup.value,
                    buffer: modify3(v.writeText(stack.value0.value0.value0)(stack.value0.value0.value1))(state2.buffer)
                  };
                  return;
                }
                ;
              }
              ;
              if (stack.value0.value0 instanceof Break) {
                if (state2.flexGroup instanceof FlexGroupReset) {
                  $tco_var_stack = state2.flexGroup.value0.stack;
                  $copy_state = resetState(state2.flexGroup.value0);
                  return;
                }
                ;
                $tco_var_stack = stack.value1;
                $copy_state = {
                  annotations: state2.annotations,
                  indentSpaces: state2.indentSpaces,
                  options: state2.options,
                  position: {
                    nextIndent: state2.position.nextIndent,
                    pageWidth: state2.position.pageWidth,
                    line: state2.position.line + 1 | 0,
                    column: 0,
                    indent: state2.position.nextIndent,
                    ribbonWidth: calcRibbonWidth(state2.options)(state2.position.nextIndent)
                  },
                  buffer: modify3(v.writeBreak)(state2.buffer),
                  flexGroup: NoFlexGroup.value
                };
                return;
              }
              ;
              if (stack.value0.value0 instanceof Indent) {
                if (state2.position.column === 0) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0), new Cons(new Dedent(state2.indentSpaces, state2.position.nextIndent), stack.value1));
                  $copy_state = {
                    buffer: state2.buffer,
                    annotations: state2.annotations,
                    flexGroup: state2.flexGroup,
                    options: state2.options,
                    position: {
                      line: state2.position.line,
                      column: state2.position.column,
                      pageWidth: state2.position.pageWidth,
                      indent: state2.position.nextIndent + opts.indentWidth | 0,
                      nextIndent: state2.position.nextIndent + opts.indentWidth | 0,
                      ribbonWidth: calcRibbonWidth(state2.options)(state2.position.nextIndent + opts.indentWidth | 0)
                    },
                    indentSpaces: state2.indentSpaces + opts.indentUnit
                  };
                  return;
                }
                ;
                if (otherwise) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0), new Cons(new Dedent(state2.indentSpaces, state2.position.nextIndent), stack.value1));
                  $copy_state = {
                    buffer: state2.buffer,
                    annotations: state2.annotations,
                    flexGroup: state2.flexGroup,
                    options: state2.options,
                    position: {
                      line: state2.position.line,
                      column: state2.position.column,
                      indent: state2.position.indent,
                      pageWidth: state2.position.pageWidth,
                      ribbonWidth: state2.position.ribbonWidth,
                      nextIndent: state2.position.nextIndent + opts.indentWidth | 0
                    },
                    indentSpaces: state2.indentSpaces + opts.indentUnit
                  };
                  return;
                }
                ;
              }
              ;
              if (stack.value0.value0 instanceof Align) {
                if (state2.position.column === 0) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value1), new Cons(new Dedent(state2.indentSpaces, state2.position.nextIndent), stack.value1));
                  $copy_state = {
                    buffer: state2.buffer,
                    annotations: state2.annotations,
                    flexGroup: state2.flexGroup,
                    options: state2.options,
                    position: {
                      line: state2.position.line,
                      column: state2.position.column,
                      pageWidth: state2.position.pageWidth,
                      indent: state2.position.nextIndent + stack.value0.value0.value0 | 0,
                      nextIndent: state2.position.nextIndent + stack.value0.value0.value0 | 0,
                      ribbonWidth: calcRibbonWidth(state2.options)(state2.position.nextIndent + stack.value0.value0.value0 | 0)
                    },
                    indentSpaces: state2.indentSpaces + power2(" ")(stack.value0.value0.value0)
                  };
                  return;
                }
                ;
                if (otherwise) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value1), new Cons(new Dedent(state2.indentSpaces, state2.position.nextIndent), stack.value1));
                  $copy_state = {
                    buffer: state2.buffer,
                    annotations: state2.annotations,
                    flexGroup: state2.flexGroup,
                    options: state2.options,
                    position: {
                      line: state2.position.line,
                      column: state2.position.column,
                      indent: state2.position.indent,
                      pageWidth: state2.position.pageWidth,
                      ribbonWidth: state2.position.ribbonWidth,
                      nextIndent: state2.position.nextIndent + stack.value0.value0.value0 | 0
                    },
                    indentSpaces: state2.indentSpaces + power2(" ")(stack.value0.value0.value0)
                  };
                  return;
                }
                ;
              }
              ;
              if (stack.value0.value0 instanceof FlexSelect) {
                if (state2.flexGroup instanceof NoFlexGroup) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0), new Cons(new LeaveFlexGroup(stack.value0.value0.value1, stack.value0.value0.value2), stack.value1));
                  $copy_state = {
                    position: state2.position,
                    buffer: state2.buffer,
                    annotations: state2.annotations,
                    indentSpaces: state2.indentSpaces,
                    options: state2.options,
                    flexGroup: FlexGroupPending.value
                  };
                  return;
                }
                ;
                if (state2.flexGroup instanceof FlexGroupPending && state2.position.ribbonWidth > 0) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0), new Cons(new Doc(stack.value0.value0.value1), stack.value1));
                  $copy_state = {
                    position: state2.position,
                    annotations: state2.annotations,
                    indentSpaces: state2.indentSpaces,
                    options: state2.options,
                    flexGroup: new FlexGroupReset(storeState(stack)(state2)),
                    buffer: branch(state2.buffer)
                  };
                  return;
                }
                ;
                $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0), new Cons(new Doc(stack.value0.value0.value1), stack.value1));
                $copy_state = state2;
                return;
              }
              ;
              if (stack.value0.value0 instanceof FlexAlt) {
                if (state2.flexGroup instanceof FlexGroupReset) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0), stack.value1);
                  $copy_state = state2;
                  return;
                }
                ;
                if (state2.flexGroup instanceof FlexGroupPending && state2.position.ribbonWidth > 0) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0), stack.value1);
                  $copy_state = {
                    position: state2.position,
                    annotations: state2.annotations,
                    indentSpaces: state2.indentSpaces,
                    options: state2.options,
                    flexGroup: new FlexGroupReset(storeState(new Cons(new Doc(stack.value0.value0.value1), stack.value1))(state2)),
                    buffer: branch(state2.buffer)
                  };
                  return;
                }
                ;
                $tco_var_stack = new Cons(new Doc(stack.value0.value0.value1), stack.value1);
                $copy_state = state2;
                return;
              }
              ;
              if (stack.value0.value0 instanceof WithPosition) {
                if (state2.position.column === 0 && state2.position.nextIndent > 0) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0({
                    line: state2.position.line,
                    indent: state2.position.indent,
                    nextIndent: state2.position.nextIndent,
                    pageWidth: state2.position.pageWidth,
                    ribbonWidth: state2.position.ribbonWidth,
                    column: state2.position.nextIndent
                  })), stack.value1);
                  $copy_state = state2;
                  return;
                }
                ;
                if (otherwise) {
                  $tco_var_stack = new Cons(new Doc(stack.value0.value0.value0(state2.position)), stack.value1);
                  $copy_state = state2;
                  return;
                }
                ;
              }
              ;
              if (stack.value0.value0 instanceof Annotate) {
                $tco_var_stack = new Cons(new Doc(stack.value0.value0.value1), new Cons(new LeaveAnnotation(stack.value0.value0.value0, state2.annotations), stack.value1));
                $copy_state = {
                  position: state2.position,
                  indentSpaces: state2.indentSpaces,
                  flexGroup: state2.flexGroup,
                  options: state2.options,
                  annotations: new Cons(stack.value0.value0.value0, state2.annotations),
                  buffer: modify3(v.enterAnnotation(stack.value0.value0.value0)(state2.annotations))(state2.buffer)
                };
                return;
              }
              ;
              if (stack.value0.value0 instanceof Local) {
                var prevOptions = {
                  indent: state2.position.indent,
                  indentSpaces: state2.indentSpaces,
                  indentUnit: state2.options.indentUnit,
                  indentWidth: state2.options.indentWidth,
                  pageWidth: state2.options.pageWidth,
                  ribbonRatio: state2.options.ribbonRatio
                };
                var v1 = stack.value0.value0.value0(prevOptions);
                $tco_var_stack = new Cons(new Doc(v1.value1), new Cons(new LeaveLocal(prevOptions), stack.value1));
                $copy_state = storeOptions(state2.position.indent)(v1.value0)(state2);
                return;
              }
              ;
              if (stack.value0.value0 instanceof Empty) {
                $tco_var_stack = stack.value1;
                $copy_state = state2;
                return;
              }
              ;
              throw new Error("Failed pattern match at Dodo (line 365, column 18 - line 477, column 23): " + [stack.value0.value0.constructor.name]);
            }
            ;
            if (stack.value0 instanceof LeaveFlexGroup) {
              if (state2.flexGroup instanceof NoFlexGroup) {
                $tco_var_stack = new Cons(new Doc(stack.value0.value1), stack.value1);
                $copy_state = {
                  position: state2.position,
                  annotations: state2.annotations,
                  indentSpaces: state2.indentSpaces,
                  flexGroup: state2.flexGroup,
                  options: state2.options,
                  buffer: commit(state2.buffer)
                };
                return;
              }
              ;
              $tco_var_stack = new Cons(new Doc(stack.value0.value0), stack.value1);
              $copy_state = {
                position: state2.position,
                annotations: state2.annotations,
                indentSpaces: state2.indentSpaces,
                options: state2.options,
                flexGroup: NoFlexGroup.value,
                buffer: commit(state2.buffer)
              };
              return;
            }
            ;
            if (stack.value0 instanceof Dedent) {
              $tco_var_stack = stack.value1;
              $copy_state = {
                buffer: state2.buffer,
                annotations: state2.annotations,
                flexGroup: state2.flexGroup,
                options: state2.options,
                position: {
                  line: state2.position.line,
                  column: state2.position.column,
                  indent: state2.position.indent,
                  pageWidth: state2.position.pageWidth,
                  ribbonWidth: state2.position.ribbonWidth,
                  nextIndent: stack.value0.value1
                },
                indentSpaces: stack.value0.value0
              };
              return;
            }
            ;
            if (stack.value0 instanceof LeaveAnnotation) {
              $tco_var_stack = stack.value1;
              $copy_state = {
                position: state2.position,
                indentSpaces: state2.indentSpaces,
                flexGroup: state2.flexGroup,
                options: state2.options,
                annotations: stack.value0.value1,
                buffer: modify3(v.leaveAnnotation(stack.value0.value0)(stack.value0.value1))(state2.buffer)
              };
              return;
            }
            ;
            if (stack.value0 instanceof LeaveLocal) {
              $tco_var_stack = stack.value1;
              $copy_state = storeOptions(state2.position.indent)(stack.value0.value0)(state2);
              return;
            }
            ;
            throw new Error("Failed pattern match at Dodo (line 364, column 18 - line 499, column 70): " + [stack.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Dodo (line 361, column 20 - line 499, column 70): " + [stack.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_stack, $copy_state);
        }
        ;
        return $tco_result;
      };
    };
    var $135 = flip(go)(initState);
    return function($136) {
      return $135(pure4(Doc.create($136)));
    };
  };
};
var $$break = /* @__PURE__ */ function() {
  return Break.value;
}();
var softBreak = /* @__PURE__ */ flexAlt(mempty3)($$break);
var spaceBreak = /* @__PURE__ */ flexAlt(space)($$break);
var appendBreak = /* @__PURE__ */ bothNotEmpty(function(a) {
  return function(b) {
    return append12(a)(append12($$break)(b));
  };
});
var lines = function(dictFoldable) {
  return foldr(dictFoldable)(appendBreak)(Empty.value);
};
var align = function(n) {
  return function(doc) {
    if (n > 0) {
      return notEmpty(Align.create(n))(doc);
    }
    ;
    if (otherwise) {
      return doc;
    }
    ;
    throw new Error("Failed pattern match at Dodo (line 64, column 1 - line 64, column 41): " + [n.constructor.name, doc.constructor.name]);
  };
};
var alignCurrentColumn = /* @__PURE__ */ notEmpty(function(doc) {
  return withPosition(function(pos) {
    return align(pos.column - pos.nextIndent | 0)(doc);
  });
});

// output/Tidy.Util/index.js
var splitStringEscapeLines = /* @__PURE__ */ split2(/* @__PURE__ */ unsafeRegex("\\\\ *\\r?\\n\\s*\\\\")(global));
var splitLines = /* @__PURE__ */ split2(/* @__PURE__ */ unsafeRegex("\\r?\\n")(global));
var overLabel = function(k) {
  return function(v) {
    return {
      separator: v.separator,
      value: v.value,
      label: k(v.label)
    };
  };
};
var nameOf = function(v) {
  return v.name;
};

// output/Tidy.Doc/index.js
var mempty4 = /* @__PURE__ */ mempty(monoidDoc);
var sort3 = /* @__PURE__ */ sort2(ordInt);
var eq71 = /* @__PURE__ */ eq(eqCodePoint);
var voidLeft2 = /* @__PURE__ */ voidLeft(functorMaybe);
var guard3 = /* @__PURE__ */ guard2(alternativeMaybe);
var power3 = /* @__PURE__ */ power(monoidString);
var map16 = /* @__PURE__ */ map(functorArray);
var lines2 = /* @__PURE__ */ lines(foldableArray);
var intercalate5 = /* @__PURE__ */ intercalate(foldableArray)(monoidDoc);
var max4 = /* @__PURE__ */ max(ordInt);
var append3 = /* @__PURE__ */ append(semigroupDoc);
var min4 = /* @__PURE__ */ min(ordInt);
var identity14 = /* @__PURE__ */ identity(categoryFn);
var ForceNone = /* @__PURE__ */ function() {
  function ForceNone2() {
  }
  ;
  ForceNone2.value = new ForceNone2();
  return ForceNone2;
}();
var ForceSpace = /* @__PURE__ */ function() {
  function ForceSpace2() {
  }
  ;
  ForceSpace2.value = new ForceSpace2();
  return ForceSpace2;
}();
var ForceBreak = /* @__PURE__ */ function() {
  function ForceBreak2() {
  }
  ;
  ForceBreak2.value = new ForceBreak2();
  return ForceBreak2;
}();
var sourceBreak = function(n) {
  return function(v) {
    return {
      doc: v.doc,
      multiline: v.multiline,
      trailing: v.trailing,
      isEmpty: false,
      leading: {
        doc: v.leading.doc,
        left: v.leading.left,
        multiline: v.leading.multiline,
        right: v.leading.right,
        lines: v.leading.lines + n | 0
      }
    };
  };
};
var softSpaceDoc = /* @__PURE__ */ flexAlt(mempty4)(space);
var mapDocs = function(k) {
  return function(v) {
    if (v.isEmpty) {
      return v;
    }
    ;
    if (otherwise) {
      return {
        isEmpty: v.isEmpty,
        multiline: v.multiline,
        doc: k(v.doc),
        leading: {
          left: v.leading.left,
          lines: v.leading.lines,
          multiline: v.leading.multiline,
          right: v.leading.right,
          doc: k(v.leading.doc)
        },
        trailing: {
          left: v.trailing.left,
          multiline: v.trailing.multiline,
          right: v.trailing.right,
          doc: k(v.trailing.doc)
        }
      };
    }
    ;
    throw new Error("Failed pattern match at Tidy.Doc (line 470, column 1 - line 470, column 68): " + [k.constructor.name, v.constructor.name]);
  };
};
var locally2 = function(k) {
  return function(v) {
    return {
      isEmpty: v.isEmpty,
      leading: v.leading,
      multiline: v.multiline,
      trailing: v.trailing,
      doc: locally(k)(v.doc)
    };
  };
};
var isEmpty3 = function(v) {
  return v.isEmpty;
};
var indent2 = /* @__PURE__ */ mapDocs(indent);
var formatBlockComment = function($187) {
  return function(v) {
    if (v instanceof Nothing) {
      return new Tuple(false, mempty4);
    }
    ;
    if (v instanceof Just) {
      var prefixSpaces = head2(sort3(mapMaybe2(function(str) {
        var spaces = length2(takeWhile3(eq71(codePointFromChar(" ")))(str));
        return voidLeft2(guard3(spaces < length2(str)))(spaces);
      })(v.value0.tail)));
      if (prefixSpaces instanceof Nothing) {
        return new Tuple(false, text(v.value0.head));
      }
      ;
      if (prefixSpaces instanceof Just) {
        return new Tuple(true, withPosition(function(pos) {
          var newIndent = function() {
            var $111 = prefixSpaces.value0 < pos.indent;
            if ($111) {
              return 0;
            }
            ;
            return prefixSpaces.value0;
          }();
          var spaces = power3(" ")(newIndent);
          var tailDocs = map16(function(str) {
            return text(fromMaybe(str)(stripPrefix(spaces)(str)));
          })(v.value0.tail);
          return lines2([text(v.value0.head), locally(function(prev) {
            var $112 = newIndent < prev.indent;
            if ($112) {
              return {
                indentUnit: prev.indentUnit,
                indentWidth: prev.indentWidth,
                pageWidth: prev.pageWidth,
                ribbonRatio: prev.ribbonRatio,
                indentSpaces: spaces,
                indent: newIndent
              };
            }
            ;
            return prev;
          })(intercalate5($$break)(tailDocs))]);
        }));
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 204, column 5 - line 224, column 14): " + [prefixSpaces.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at Tidy.Doc (line 200, column 54 - line 234, column 21): " + [v.constructor.name]);
  }(uncons2(splitLines($187)));
};
var forceMinSourceBreaks = function(n) {
  return function(v) {
    if (v.isEmpty) {
      return v;
    }
    ;
    if (otherwise) {
      return {
        doc: v.doc,
        isEmpty: v.isEmpty,
        multiline: v.multiline,
        trailing: v.trailing,
        leading: {
          doc: v.leading.doc,
          left: v.leading.left,
          multiline: v.leading.multiline,
          right: v.leading.right,
          lines: max4(v.leading.lines)(n)
        }
      };
    }
    ;
    throw new Error("Failed pattern match at Tidy.Doc (line 314, column 1 - line 314, column 68): " + [n.constructor.name, v.constructor.name]);
  };
};
var force2 = function(k) {
  return function(f) {
    return function(m) {
      return function(doc) {
        if (f instanceof ForceBreak) {
          return new Tuple(true, append3($$break)(doc));
        }
        ;
        return new Tuple(m, k(doc));
      };
    };
  };
};
var flexGroup2 = function(v) {
  if (v.multiline) {
    return v;
  }
  ;
  if (otherwise) {
    return {
      isEmpty: v.isEmpty,
      leading: v.leading,
      multiline: v.multiline,
      trailing: v.trailing,
      doc: flexGroup(v.doc)
    };
  }
  ;
  throw new Error("Failed pattern match at Tidy.Doc (line 289, column 1 - line 289, column 50): " + [v.constructor.name]);
};
var flattenMax = function(n) {
  return function(v) {
    return {
      doc: v.doc,
      isEmpty: v.isEmpty,
      multiline: v.multiline,
      trailing: v.trailing,
      leading: {
        doc: v.leading.doc,
        left: v.leading.left,
        multiline: v.leading.multiline,
        right: v.leading.right,
        lines: min4(v.leading.lines)(n)
      }
    };
  };
};
var flatten = /* @__PURE__ */ flattenMax(0);
var eqForceBreak = {
  eq: function(x) {
    return function(y) {
      if (x instanceof ForceNone && y instanceof ForceNone) {
        return true;
      }
      ;
      if (x instanceof ForceSpace && y instanceof ForceSpace) {
        return true;
      }
      ;
      if (x instanceof ForceBreak && y instanceof ForceBreak) {
        return true;
      }
      ;
      return false;
    };
  }
};
var eq210 = /* @__PURE__ */ eq(eqForceBreak);
var ordForceBreak = {
  compare: function(x) {
    return function(y) {
      if (x instanceof ForceNone && y instanceof ForceNone) {
        return EQ.value;
      }
      ;
      if (x instanceof ForceNone) {
        return LT.value;
      }
      ;
      if (y instanceof ForceNone) {
        return GT.value;
      }
      ;
      if (x instanceof ForceSpace && y instanceof ForceSpace) {
        return EQ.value;
      }
      ;
      if (x instanceof ForceSpace) {
        return LT.value;
      }
      ;
      if (y instanceof ForceSpace) {
        return GT.value;
      }
      ;
      if (x instanceof ForceBreak && y instanceof ForceBreak) {
        return EQ.value;
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return eqForceBreak;
  }
};
var max12 = /* @__PURE__ */ max(ordForceBreak);
var breaks = function(fl) {
  return function(n) {
    if (n >= 2) {
      return append3($$break)($$break);
    }
    ;
    if (n === 1) {
      return $$break;
    }
    ;
    if (otherwise) {
      if (fl instanceof ForceBreak) {
        return $$break;
      }
      ;
      if (fl instanceof ForceSpace) {
        return space;
      }
      ;
      if (fl instanceof ForceNone) {
        return mempty4;
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 430, column 17 - line 433, column 26): " + [fl.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at Tidy.Doc (line 426, column 1 - line 426, column 47): " + [fl.constructor.name, n.constructor.name]);
  };
};
var breakDoc = function(br) {
  return function(doc) {
    if (isEmpty2(doc)) {
      return doc;
    }
    ;
    if (otherwise) {
      if (br instanceof ForceBreak) {
        return append3($$break)(doc);
      }
      ;
      if (br instanceof ForceSpace) {
        return append3(space)(doc);
      }
      ;
      if (br instanceof ForceNone) {
        return doc;
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 421, column 17 - line 424, column 23): " + [br.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at Tidy.Doc (line 418, column 1 - line 418, column 51): " + [br.constructor.name, doc.constructor.name]);
  };
};
var flexDoubleBreak = function(v) {
  return function(v1) {
    if (v.isEmpty) {
      return v1;
    }
    ;
    if (v1.isEmpty) {
      return v;
    }
    ;
    if (otherwise) {
      var docLeft = append3(v.doc)(breakDoc(v.trailing.left)(v.trailing.doc));
      var docRight = append3(v1.leading.doc)(breakDoc(v1.leading.right)(v1.doc));
      var $139 = v1.leading.lines >= 2 || v.multiline;
      if ($139) {
        return {
          isEmpty: v.isEmpty,
          leading: v.leading,
          doc: append3(docLeft)(append3($$break)(append3($$break)(docRight))),
          multiline: true,
          trailing: v1.trailing
        };
      }
      ;
      return {
        isEmpty: v.isEmpty,
        leading: v.leading,
        doc: append3(flexSelect(docLeft)(mempty4)($$break))(append3($$break)(docRight)),
        multiline: true,
        trailing: v1.trailing
      };
    }
    ;
    throw new Error("Failed pattern match at Tidy.Doc (line 393, column 1 - line 393, column 49): " + [v.constructor.name, v1.constructor.name]);
  };
};
var joinDoc = function(spaceFn) {
  return function(v) {
    return function(v1) {
      if (v.isEmpty) {
        return v1;
      }
      ;
      if (v1.isEmpty) {
        return v;
      }
      ;
      if (otherwise) {
        var docLeft = append3(v.doc)(breakDoc(v.trailing.left)(v.trailing.doc));
        var docRight = append3(v1.leading.doc)(breakDoc(v1.leading.right)(v1.doc));
        var $145 = v1.leading.lines > 0;
        if ($145) {
          return {
            isEmpty: v.isEmpty,
            leading: v.leading,
            doc: append3(docLeft)(append3(breaks(ForceBreak.value)(v1.leading.lines))(docRight)),
            multiline: true,
            trailing: v1.trailing
          };
        }
        ;
        var v2 = spaceFn(max12(v.trailing.right)(v1.leading.left))(v1.leading.multiline || v1.multiline)(docRight);
        return {
          isEmpty: v.isEmpty,
          leading: v.leading,
          doc: append3(docLeft)(v2.value1),
          multiline: v.trailing.multiline || (v.multiline || v2.value0),
          trailing: v1.trailing
        };
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 435, column 1 - line 435, column 102): " + [spaceFn.constructor.name, v.constructor.name, v1.constructor.name]);
    };
  };
};
var flexSoftBreak = /* @__PURE__ */ joinDoc(function(f) {
  return function(m) {
    return function(doc) {
      if (f instanceof ForceBreak) {
        return new Tuple(true, append3($$break)(doc));
      }
      ;
      if (f instanceof ForceSpace) {
        if (m) {
          return new Tuple(true, append3(space)(doc));
        }
        ;
        return new Tuple(false, flexGroup(append3(spaceBreak)(doc)));
      }
      ;
      if (f instanceof ForceNone) {
        if (m) {
          return new Tuple(true, append3($$break)(doc));
        }
        ;
        return new Tuple(false, flexGroup(append3(softBreak)(doc)));
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 358, column 37 - line 370, column 59): " + [f.constructor.name]);
    };
  };
});
var flexSpaceBreak = /* @__PURE__ */ joinDoc(function(f) {
  return function(m) {
    return function(doc) {
      if (f instanceof ForceBreak) {
        return new Tuple(true, append3($$break)(doc));
      }
      ;
      if (m) {
        return new Tuple(true, append3(spaceBreak)(doc));
      }
      ;
      return new Tuple(false, flexGroup(append3(spaceBreak)(doc)));
    };
  };
});
var semigroupFormatDoc = {
  append: /* @__PURE__ */ joinDoc(/* @__PURE__ */ force2(identity14))
};
var softBreak2 = /* @__PURE__ */ joinDoc(function(f) {
  return function(m) {
    return function(doc) {
      if (f instanceof ForceBreak) {
        return new Tuple(true, append3($$break)(doc));
      }
      ;
      if (f instanceof ForceSpace) {
        return new Tuple(m, append3(spaceBreak)(doc));
      }
      ;
      if (f instanceof ForceNone) {
        return new Tuple(m, append3(softBreak)(doc));
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 373, column 33 - line 379, column 36): " + [f.constructor.name]);
    };
  };
});
var softSpace = /* @__PURE__ */ joinDoc(function(f) {
  return function(m) {
    return function(doc) {
      if (f instanceof ForceBreak) {
        return new Tuple(true, append3($$break)(doc));
      }
      ;
      if (f instanceof ForceSpace) {
        return new Tuple(m, append3(space)(doc));
      }
      ;
      if (f instanceof ForceNone) {
        return new Tuple(m, append3(softSpaceDoc)(doc));
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 382, column 33 - line 388, column 34): " + [f.constructor.name]);
    };
  };
});
var space2 = /* @__PURE__ */ joinDoc(/* @__PURE__ */ force2(/* @__PURE__ */ append3(space)));
var spaceBreak2 = /* @__PURE__ */ joinDoc(/* @__PURE__ */ force2(/* @__PURE__ */ append3(spaceBreak)));
var toDoc = function(v) {
  if (v.isEmpty) {
    return mempty4;
  }
  ;
  if (otherwise) {
    return append3(v.leading.doc)(append3(breakDoc(v.leading.right)(v.doc))(breakDoc(v.trailing.left)(v.trailing.doc)));
  }
  ;
  throw new Error("Failed pattern match at Tidy.Doc (line 482, column 1 - line 482, column 40): " + [v.constructor.name]);
};
var semigroupLeadingComment = {
  append: function(v) {
    return function(v1) {
      if (isEmpty2(v.doc)) {
        return {
          doc: v1.doc,
          multiline: v1.multiline,
          right: v1.right,
          left: max12(v.left)(v1.left),
          lines: v.lines + v1.lines | 0
        };
      }
      ;
      if (isEmpty2(v1.doc)) {
        return {
          left: v.left,
          lines: v.lines,
          doc: append3(v.doc)(breaks(ForceNone.value)(v1.lines)),
          multiline: v.multiline || v1.lines > 0,
          right: function() {
            var $164 = v1.lines > 0;
            if ($164) {
              return ForceNone.value;
            }
            ;
            return max12(v.right)(v1.right);
          }()
        };
      }
      ;
      if (otherwise) {
        var br = max12(v.right)(v1.left);
        var $165 = v1.lines > 0 || eq210(br)(ForceBreak.value);
        if ($165) {
          return {
            left: v.left,
            lines: v.lines,
            doc: append3(v.doc)(append3(breaks(ForceBreak.value)(v1.lines))(v1.doc)),
            multiline: true,
            right: v1.right
          };
        }
        ;
        return {
          left: v.left,
          lines: v.lines,
          doc: append3(v.doc)(breakDoc(br)(v1.doc)),
          multiline: v.multiline || v1.multiline,
          right: v1.right
        };
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 74, column 1 - line 104, column 14): " + [v.constructor.name, v1.constructor.name]);
    };
  }
};
var append13 = /* @__PURE__ */ append(semigroupLeadingComment);
var leadingBlockComment = function(str) {
  return function(v) {
    var v1 = formatBlockComment(str);
    var comm = {
      doc: v1.value1,
      left: ForceSpace.value,
      lines: 0,
      multiline: v1.value0,
      right: ForceSpace.value
    };
    return {
      doc: v.doc,
      multiline: v.multiline,
      trailing: v.trailing,
      leading: append13(comm)(v.leading),
      isEmpty: false
    };
  };
};
var leadingLineComment = function(str) {
  return function(v) {
    var comm = {
      doc: text(str),
      left: ForceBreak.value,
      lines: 0,
      multiline: false,
      right: ForceBreak.value
    };
    return {
      doc: v.doc,
      multiline: v.multiline,
      trailing: v.trailing,
      leading: append13(comm)(v.leading),
      isEmpty: false
    };
  };
};
var monoidLeadingComment = /* @__PURE__ */ function() {
  return {
    mempty: {
      doc: mempty4,
      left: ForceNone.value,
      lines: 0,
      multiline: false,
      right: ForceNone.value
    },
    Semigroup0: function() {
      return semigroupLeadingComment;
    }
  };
}();
var mempty1 = /* @__PURE__ */ mempty(monoidLeadingComment);
var semigroupTrailingComment = {
  append: function(v) {
    return function(v1) {
      if (isEmpty2(v.doc)) {
        return {
          doc: v1.doc,
          multiline: v1.multiline,
          right: v1.right,
          left: max12(v.left)(v1.left)
        };
      }
      ;
      if (isEmpty2(v1.doc)) {
        return {
          doc: v.doc,
          left: v.left,
          multiline: v.multiline,
          right: max12(v.right)(v1.right)
        };
      }
      ;
      if (otherwise) {
        return {
          left: v.left,
          doc: append3(v.doc)(breakDoc(max12(v.right)(v1.left))(v1.doc)),
          multiline: v.multiline || v1.multiline,
          right: v1.right
        };
      }
      ;
      throw new Error("Failed pattern match at Tidy.Doc (line 115, column 1 - line 126, column 12): " + [v.constructor.name, v1.constructor.name]);
    };
  }
};
var append22 = /* @__PURE__ */ append(semigroupTrailingComment);
var trailingBlockComment = function(str) {
  return function(v) {
    var v1 = formatBlockComment(str);
    var comm = {
      doc: v1.value1,
      left: ForceSpace.value,
      multiline: v1.value0,
      right: ForceSpace.value
    };
    return {
      doc: v.doc,
      leading: v.leading,
      multiline: v.multiline,
      trailing: append22(comm)(v.trailing),
      isEmpty: false
    };
  };
};
var trailingLineComment = function(str) {
  return function(v) {
    var comm = {
      doc: text(str),
      left: ForceSpace.value,
      multiline: false,
      right: ForceBreak.value
    };
    return {
      doc: v.doc,
      leading: v.leading,
      multiline: v.multiline,
      trailing: append22(comm)(v.trailing),
      isEmpty: false
    };
  };
};
var monoidTrailingComment = /* @__PURE__ */ function() {
  return {
    mempty: {
      doc: mempty4,
      left: ForceNone.value,
      multiline: false,
      right: ForceNone.value
    },
    Semigroup0: function() {
      return semigroupTrailingComment;
    }
  };
}();
var mempty22 = /* @__PURE__ */ mempty(monoidTrailingComment);
var monoidFormatDoc = {
  mempty: {
    doc: mempty4,
    leading: mempty1,
    isEmpty: true,
    multiline: false,
    trailing: mempty22
  },
  Semigroup0: function() {
    return semigroupFormatDoc;
  }
};
var mempty32 = /* @__PURE__ */ mempty(monoidFormatDoc);
var fromDoc = function(doc) {
  if (isEmpty2(doc)) {
    return mempty32;
  }
  ;
  if (otherwise) {
    return {
      doc,
      leading: mempty1,
      isEmpty: false,
      multiline: false,
      trailing: mempty22
    };
  }
  ;
  throw new Error("Failed pattern match at Tidy.Doc (line 158, column 1 - line 158, column 42): " + [doc.constructor.name]);
};
var text2 = function($188) {
  return fromDoc(text($188));
};
var joinWithMap = function(dictFoldable) {
  var foldl6 = foldl(dictFoldable);
  return function(op) {
    return function(k) {
      var go = function(a) {
        return function(b) {
          if (isEmpty3(a)) {
            return k(b);
          }
          ;
          if (otherwise) {
            return op(a)(k(b));
          }
          ;
          throw new Error("Failed pattern match at Tidy.Doc (line 501, column 3 - line 503, column 29): " + [a.constructor.name, b.constructor.name]);
        };
      };
      return foldl6(go)(mempty32);
    };
  };
};
var joinWith2 = function(dictFoldable) {
  return flip(joinWithMap(dictFoldable))(identity14);
};
var $$break2 = /* @__PURE__ */ joinDoc(/* @__PURE__ */ force2(/* @__PURE__ */ append3($$break)));
var anchor = function(v) {
  if (v.leading.lines > 0) {
    return {
      doc: v.doc,
      isEmpty: v.isEmpty,
      trailing: v.trailing,
      leading: {
        doc: v.leading.doc,
        left: v.leading.left,
        multiline: v.leading.multiline,
        right: v.leading.right,
        lines: 0
      },
      multiline: true
    };
  }
  ;
  return v;
};
var alignCurrentColumn2 = /* @__PURE__ */ mapDocs(alignCurrentColumn);
var align2 = function($189) {
  return mapDocs(align($189));
};

// output/Tidy.Hang/index.js
var pure5 = /* @__PURE__ */ pure(applicativeNonEmptyArray);
var append14 = /* @__PURE__ */ append(semigroupDoc);
var eq72 = /* @__PURE__ */ eq(eqForceBreak);
var mempty5 = /* @__PURE__ */ mempty(monoidDoc);
var notEq4 = /* @__PURE__ */ notEq(eqForceBreak);
var max5 = /* @__PURE__ */ max(ordForceBreak);
var mempty12 = /* @__PURE__ */ mempty(monoidLeadingComment);
var identity15 = /* @__PURE__ */ identity(categoryFn);
var append23 = /* @__PURE__ */ append(semigroupFormatDoc);
var HangBreak = /* @__PURE__ */ function() {
  function HangBreak2(value0) {
    this.value0 = value0;
  }
  ;
  HangBreak2.create = function(value0) {
    return new HangBreak2(value0);
  };
  return HangBreak2;
}();
var HangOps = /* @__PURE__ */ function() {
  function HangOps2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  HangOps2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new HangOps2(value0, value1, value2);
      };
    };
  };
  return HangOps2;
}();
var HangApp = /* @__PURE__ */ function() {
  function HangApp2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  HangApp2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new HangApp2(value0, value1, value2);
      };
    };
  };
  return HangApp2;
}();
var HangingOp = /* @__PURE__ */ function() {
  function HangingOp2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  HangingOp2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new HangingOp2(value0, value1, value2);
      };
    };
  };
  return HangingOp2;
}();
var overHangHead = function(f) {
  var go = function(v) {
    if (v instanceof HangBreak) {
      return new HangBreak(f(v.value0));
    }
    ;
    if (v instanceof HangOps) {
      return new HangOps(v.value0, go(v.value1), v.value2);
    }
    ;
    if (v instanceof HangApp) {
      return new HangApp(v.value0, go(v.value1), v.value2);
    }
    ;
    throw new Error("Failed pattern match at Tidy.Hang (line 62, column 8 - line 65, column 54): " + [v.constructor.name]);
  };
  return go;
};
var hangWithIndent = function(ind) {
  return function(a) {
    var $183 = maybe(a)(HangApp.create(ind)(a));
    return function($184) {
      return $183(fromArray($184));
    };
  };
};
var hangOps = /* @__PURE__ */ function() {
  return HangOps.create(indent2);
}();
var hangHead = function($copy_v) {
  var $tco_done = false;
  var $tco_result;
  function $tco_loop(v) {
    if (v instanceof HangBreak) {
      $tco_done = true;
      return v.value0;
    }
    ;
    if (v instanceof HangOps) {
      $copy_v = v.value1;
      return;
    }
    ;
    if (v instanceof HangApp) {
      $copy_v = v.value1;
      return;
    }
    ;
    throw new Error("Failed pattern match at Tidy.Hang (line 54, column 12 - line 57, column 34): " + [v.constructor.name]);
  }
  ;
  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }
  ;
  return $tco_result;
};
var hangBreak = function($185) {
  return HangBreak.create(flexGroup2($185));
};
var hangApp = /* @__PURE__ */ function() {
  return HangApp.create(indent2);
}();
var hang = function(a) {
  var $186 = HangApp.create(indent2)(hangBreak(a));
  return function($187) {
    return $186(pure5($187));
  };
};
var forceBreaks = function(n) {
  if (n >= 2) {
    return append14($$break)($$break);
  }
  ;
  if (otherwise) {
    return $$break;
  }
  ;
  throw new Error("Failed pattern match at Tidy.Hang (line 67, column 1 - line 67, column 38): " + [n.constructor.name]);
};
var breaks2 = function(fl) {
  return function(n) {
    if (eq72(fl)(ForceBreak.value) || n > 0) {
      return forceBreaks(n);
    }
    ;
    if (eq72(fl)(ForceSpace.value)) {
      return space;
    }
    ;
    if (otherwise) {
      return mempty5;
    }
    ;
    throw new Error("Failed pattern match at Tidy.Hang (line 72, column 1 - line 72, column 47): " + [fl.constructor.name, n.constructor.name]);
  };
};
var toFormatDoc = /* @__PURE__ */ function() {
  var realignOp = function($copy_op) {
    return function($copy_doc) {
      var $tco_var_op = $copy_op;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(op, doc) {
        var v = hangHead(doc);
        if (notEq4(op.leading.left)(ForceBreak.value) && (op.leading.lines === 0 && (notEq4(op.trailing.right)(ForceBreak.value) && (notEq4(v.leading.left)(ForceBreak.value) && v.leading.lines > 0)))) {
          $tco_var_op = forceMinSourceBreaks(1)(op);
          $copy_doc = overHangHead(flatten)(doc);
          return;
        }
        ;
        var v2 = function(v3) {
          return new Tuple(op, doc);
        };
        if (doc instanceof HangBreak) {
          var $77 = notEq4(op.trailing.right)(ForceBreak.value) && (notEq4(v.leading.left)(ForceBreak.value) && (v.leading.lines === 0 && (v.leading.multiline || op.multiline)));
          if ($77) {
            $tco_done = true;
            return new Tuple(op, overHangHead(forceMinSourceBreaks(1))(doc));
          }
          ;
          $tco_done = true;
          return v2(true);
        }
        ;
        $tco_done = true;
        return v2(true);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_op, $copy_doc);
      }
      ;
      return $tco_result;
    };
  };
  var indMulti = function(head4) {
    return function(ind) {
      return function(doc) {
        if (head4 instanceof HangApp) {
          return doc;
        }
        ;
        return ind(doc);
      };
    };
  };
  var flexSelectJoin = function(v) {
    return function(v1) {
      return function(v2) {
        var $$break3 = function() {
          if (eq72(v.leading.left)(ForceBreak.value) || v.leading.lines > 0) {
            return $$break;
          }
          ;
          if (otherwise) {
            return spaceBreak;
          }
          ;
          throw new Error("Failed pattern match at Tidy.Hang (line 255, column 7 - line 257, column 38): " + []);
        }();
        var doc1$prime = append14($$break3)(append14(v.leading.doc)(append14(breakDoc(v.leading.right)(v.doc))(breakDoc(v.trailing.left)(v.trailing.doc))));
        var doc2$prime = append14(breaks2(max5(v.trailing.right)(v1.leading.left))(v1.leading.lines))(append14(v1.leading.doc)(append14(breakDoc(v1.leading.right)(v1.doc))(breakDoc(v1.trailing.left)(v1.trailing.doc))));
        var m3 = v2.leading.multiline || (v2.multiline || v2.trailing.multiline);
        var m2 = v1.leading.multiline || (v1.multiline || v1.trailing.multiline);
        var m1 = v.leading.multiline || (v.multiline || v.trailing.multiline);
        var doc3$prime = append14(breaks2(max5(v.trailing.right)(v2.leading.left))(v2.leading.lines))(append14(v2.leading.doc)(append14(breakDoc(v1.leading.right)(v2.doc))(breakDoc(v2.trailing.left)(v2.trailing.doc))));
        return {
          doc: flexSelect(doc1$prime)(doc2$prime)(doc3$prime),
          leading: mempty12,
          isEmpty: false,
          multiline: m1 || m2 && m3,
          trailing: {
            doc: mempty5,
            left: ForceNone.value,
            multiline: false,
            right: max5(v1.trailing.right)(v2.trailing.right)
          }
        };
      };
    };
  };
  var flexSelect2 = function(v) {
    return function(v1) {
      return function(v2) {
        var doc1$prime = append14(v.doc)(breakDoc(v.trailing.left)(v.trailing.doc));
        var doc2$prime = append14(breaks2(max5(v.trailing.right)(v1.leading.left))(v1.leading.lines))(append14(v1.leading.doc)(append14(breakDoc(v1.leading.right)(v1.doc))(breakDoc(v1.trailing.left)(v1.trailing.doc))));
        var m3 = v2.leading.multiline || (v2.multiline || v2.trailing.multiline);
        var m2 = v1.leading.multiline || (v1.multiline || v1.trailing.multiline);
        var m1 = v.multiline || v.trailing.multiline;
        var doc3$prime = append14(breaks2(max5(v.trailing.right)(v2.leading.left))(v2.leading.lines))(append14(v2.leading.doc)(append14(breakDoc(v1.leading.right)(v2.doc))(breakDoc(v2.trailing.left)(v2.trailing.doc))));
        return {
          doc: flexSelect(doc1$prime)(doc2$prime)(doc3$prime),
          leading: v.leading,
          isEmpty: false,
          multiline: m1 || m2 && m3,
          trailing: {
            doc: mempty5,
            left: ForceNone.value,
            multiline: false,
            right: max5(v1.trailing.right)(v2.trailing.right)
          }
        };
      };
    };
  };
  var docJoin = function(v) {
    if (v.isEmpty) {
      return v;
    }
    ;
    if (otherwise) {
      var $105 = eq72(v.leading.left)(ForceBreak.value) || v.leading.lines > 0;
      if ($105) {
        return v;
      }
      ;
      var $106 = v.leading.multiline || v.multiline;
      if ($106) {
        return forceMinSourceBreaks(1)(v);
      }
      ;
      return {
        isEmpty: v.isEmpty,
        multiline: v.multiline,
        trailing: v.trailing,
        doc: append14(spaceBreak)(append14(v.leading.doc)(breakDoc(v.leading.right)(v.doc))),
        leading: mempty12
      };
    }
    ;
    throw new Error("Failed pattern match at Tidy.Hang (line 301, column 3 - line 313, column 14): " + [v.constructor.name]);
  };
  var goLastOperand = function(prevAlgn) {
    return function(prevInd) {
      return function(v) {
        if (v instanceof HangBreak) {
          var doc$prime = flexGroup2(docJoin(v.value0));
          return new Tuple(doc$prime, prevInd(doc$prime));
        }
        ;
        if (v instanceof HangApp) {
          var v1 = unsnoc3(v.value2);
          var $$this = fst(goInit(function() {
            if (v.value1 instanceof HangApp) {
              return overHangHead(forceMinSourceBreaks(1))(v.value1);
            }
            ;
            return v.value1;
          }()));
          var next2 = foldr3(goInitApp)(goLastApp(v1.last))(v1.init);
          var docIndent = indMulti(v.value1)(v.value0)(fst(next2));
          var docGroup = flexSelectJoin($$this)(fst(next2))(docIndent);
          var docBreak = flexSelectJoin(prevInd($$this))(prevAlgn(docIndent))(prevInd(docIndent));
          return new Tuple(docGroup, docBreak);
        }
        ;
        if (v instanceof HangOps) {
          var v1 = unsnoc3(v.value2);
          var $$this = fst(goInit(v.value1));
          var next2 = foldr3(goInitOp(v.value0))(goLastOp(v.value0)(v1.last))(v1.init);
          var docIndent = v.value0(fst(next2));
          var docGroup = flexSelectJoin($$this)(fst(next2))(docIndent);
          var docBreak = flexSelectJoin(prevInd($$this))(prevAlgn(docIndent))(prevInd(docIndent));
          return new Tuple(docGroup, docBreak);
        }
        ;
        throw new Error("Failed pattern match at Tidy.Hang (line 181, column 36 - line 204, column 30): " + [v.constructor.name]);
      };
    };
  };
  var goLastOp = function(ind) {
    return function(v) {
      var algn = function() {
        var $127 = v.value0 <= 1;
        if ($127) {
          return align2(2);
        }
        ;
        return identity15;
      }();
      var next2 = goLastOperand(algn)(ind)(v.value2);
      var docIndent = snd(next2);
      var docBreak = append23(docJoin(v.value1))(docIndent);
      var docGroup = flexSelectJoin(v.value1)(fst(next2))(docIndent);
      return new Tuple(docGroup, docBreak);
    };
  };
  var goLastApp = function(doc) {
    var $$this = goLast(doc);
    var docGroup = flexGroup2(fst($$this));
    var docBreak = snd($$this);
    return new Tuple(docGroup, docBreak);
  };
  var goLast = function(v) {
    if (v instanceof HangBreak) {
      var doc$prime = docJoin(v.value0);
      return new Tuple(doc$prime, doc$prime);
    }
    ;
    if (v instanceof HangApp) {
      var v1 = unsnoc3(v.value2);
      var $$this = fst(goInit(v.value1));
      var next2 = foldr3(goInitApp)(goLastApp(v1.last))(v1.init);
      var docGroup = flexSelectJoin($$this)(fst(next2))(indMulti(v.value1)(v.value0)(fst(next2)));
      var docBreak = append23(docJoin($$this))(indMulti(v.value1)(v.value0)(fst(next2)));
      return new Tuple(docGroup, docBreak);
    }
    ;
    if (v instanceof HangOps) {
      var v1 = unsnoc3(v.value2);
      var $$this = fst(goInit(v.value1));
      var next2 = foldr3(goInitOp(v.value0))(goLastOp(v.value0)(v1.last))(v1.init);
      var docGroup = flexSelectJoin($$this)(fst(next2))(v.value0(fst(next2)));
      var docBreak = $$break2(docJoin($$this))(v.value0(snd(next2)));
      return new Tuple(docGroup, docBreak);
    }
    ;
    throw new Error("Failed pattern match at Tidy.Hang (line 101, column 12 - line 120, column 30): " + [v.constructor.name]);
  };
  var goInitOperand = function(prevAlgn) {
    return function(prevInd) {
      return function(v) {
        if (v instanceof HangBreak) {
          var doc$prime = prevInd(flexGroup2(docJoin(v.value0)));
          return new Tuple(doc$prime, doc$prime);
        }
        ;
        if (v instanceof HangApp) {
          var v1 = unsnoc3(v.value2);
          var $$this = fst(goInit(v.value1));
          var next2 = foldr3(goInitApp)(goLastApp(v1.last))(v1.init);
          var docGroup = flexSelectJoin(prevInd($$this))(indMulti(v.value1)(function($188) {
            return prevAlgn(v.value0($188));
          })(fst(next2)))(prevInd(indMulti(v.value1)(v.value0)(fst(next2))));
          var docBreak = prevInd(append23(docJoin($$this))(v.value0(snd(next2))));
          return new Tuple(docGroup, docBreak);
        }
        ;
        if (v instanceof HangOps) {
          var v1 = unsnoc3(v.value2);
          var $$this = fst(goInit(v.value1));
          var next2 = foldr3(goInitOp(v.value0))(goLastOp(v.value0)(v1.last))(v1.init);
          var docGroup = flexSelectJoin(prevInd($$this))(prevAlgn(v.value0(fst(next2))))(prevInd(v.value0(fst(next2))));
          var docBreak = prevInd(append23(docJoin($$this))(v.value0(snd(next2))));
          return new Tuple(docGroup, docBreak);
        }
        ;
        throw new Error("Failed pattern match at Tidy.Hang (line 154, column 36 - line 179, column 30): " + [v.constructor.name]);
      };
    };
  };
  var goInitOp = function(ind) {
    return function(v) {
      return function(next2) {
        var v1 = realignOp(v.value1)(v.value2);
        var algn = function() {
          var $163 = v.value0 <= 1;
          if ($163) {
            return align2(2);
          }
          ;
          return identity15;
        }();
        var docOprd = fst(goInitOperand(algn)(ind)(v1.value1));
        var docBreak = append23(docJoin(v1.value0))(append23(docOprd)(snd(next2)));
        var docGroup = flexSelectJoin(append23(v1.value0)(docOprd))(fst(next2))(snd(next2));
        return new Tuple(docGroup, docBreak);
      };
    };
  };
  var goInitApp = function(doc) {
    return function(next2) {
      var $$this = fst(goInit(doc));
      var docGroup = flexSelectJoin($$this)(fst(next2))(snd(next2));
      var docBreak = append23(docJoin($$this))(snd(next2));
      return new Tuple(docGroup, docBreak);
    };
  };
  var goInit = function(v) {
    if (v instanceof HangBreak) {
      return new Tuple(v.value0, v.value0);
    }
    ;
    if (v instanceof HangApp) {
      var v1 = unsnoc3(v.value2);
      var $$this = fst(goInit(v.value1));
      var next2 = foldr3(goInitApp)(goLastApp(v1.last))(v1.init);
      var docGroup = flexSelect2($$this)(v.value0(fst(next2)))(indMulti(v.value1)(v.value0)(fst(next2)));
      var docBreak = $$break2($$this)(v.value0(snd(next2)));
      return new Tuple(docGroup, docBreak);
    }
    ;
    if (v instanceof HangOps) {
      var v1 = unsnoc3(v.value2);
      var $$this = fst(goInit(v.value1));
      var next2 = foldr3(goInitOp(v.value0))(goLastOp(v.value0)(v1.last))(v1.init);
      var docGroup = append23(flexGroup2($$this))(v.value0(fst(next2)));
      var docBreak = $$break2($$this)(v.value0(snd(next2)));
      return new Tuple(docGroup, docBreak);
    }
    ;
    throw new Error("Failed pattern match at Tidy.Hang (line 81, column 12 - line 99, column 30): " + [v.constructor.name]);
  };
  return function($189) {
    return fst(goInit($189));
  };
}();

// output/Tidy.Precedence/index.js
var compare73 = /* @__PURE__ */ compare(ordInt);
var append4 = /* @__PURE__ */ append(semigroupNonEmptyArray);
var ordMaybe2 = /* @__PURE__ */ ordMaybe(ordModuleName);
var alter2 = /* @__PURE__ */ alter(ordMaybe2);
var lookup3 = /* @__PURE__ */ lookup(ordMaybe2);
var bindFlipped4 = /* @__PURE__ */ bindFlipped(bindMaybe);
var pure1 = /* @__PURE__ */ pure(applicativeNonEmptyArray);
var pure22 = /* @__PURE__ */ pure(applicativeList);
var foldl12 = /* @__PURE__ */ foldl(foldableNonEmptyArray);
var OperatorType = /* @__PURE__ */ function() {
  function OperatorType2() {
  }
  ;
  OperatorType2.value = new OperatorType2();
  return OperatorType2;
}();
var OperatorValue = /* @__PURE__ */ function() {
  function OperatorValue2() {
  }
  ;
  OperatorValue2.value = new OperatorValue2();
  return OperatorValue2;
}();
var QualifiedOperator = /* @__PURE__ */ function() {
  function QualifiedOperator2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  QualifiedOperator2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new QualifiedOperator2(value0, value1, value2);
      };
    };
  };
  return QualifiedOperator2;
}();
var OpList = /* @__PURE__ */ function() {
  function OpList2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  OpList2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new OpList2(value0, value1, value2);
      };
    };
  };
  return OpList2;
}();
var OpPure = /* @__PURE__ */ function() {
  function OpPure2(value0) {
    this.value0 = value0;
  }
  ;
  OpPure2.create = function(value0) {
    return new OpPure2(value0);
  };
  return OpPure2;
}();
var OpHead = /* @__PURE__ */ function() {
  function OpHead2(value0) {
    this.value0 = value0;
  }
  ;
  OpHead2.create = function(value0) {
    return new OpHead2(value0);
  };
  return OpHead2;
}();
var OpPrec = /* @__PURE__ */ function() {
  function OpPrec2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  OpPrec2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new OpPrec2(value0, value1, value2);
      };
    };
  };
  return OpPrec2;
}();
var snoc4 = function(prevOps) {
  return function(nextPrec) {
    return function(nextOps) {
      var v = unsnoc3(prevOps);
      return snoc$prime(v.init)(new Tuple(v.last.value0, new OpList(v.last.value1, nextPrec, nextOps)));
    };
  };
};
var unwind = /* @__PURE__ */ function() {
  var go = function($copy_prec) {
    return function($copy_ops) {
      return function($copy_v) {
        var $tco_var_prec = $copy_prec;
        var $tco_var_ops = $copy_ops;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(prec, ops, v) {
          if (v instanceof OpHead) {
            $tco_done = true;
            return new OpList(v.value0, prec, ops);
          }
          ;
          if (v instanceof OpPrec) {
            $tco_var_prec = v.value1;
            $tco_var_ops = snoc4(v.value2)(prec)(ops);
            $copy_v = v.value0;
            return;
          }
          ;
          throw new Error("Failed pattern match at Tidy.Precedence (line 101, column 17 - line 104, column 46): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_prec, $tco_var_ops, $copy_v);
        }
        ;
        return $tco_result;
      };
    };
  };
  return function(v) {
    if (v instanceof OpHead) {
      return v.value0;
    }
    ;
    if (v instanceof OpPrec) {
      return go(v.value1)(v.value2)(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy.Precedence (line 97, column 10 - line 99, column 41): " + [v.constructor.name]);
  };
}();
var push2 = function($copy_stk) {
  return function($copy_chs) {
    var $tco_var_stk = $copy_stk;
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(stk, chs) {
      if (chs instanceof Nil) {
        $tco_done = true;
        return stk;
      }
      ;
      if (chs instanceof Cons && chs.value1 instanceof Nil) {
        if (stk instanceof OpHead) {
          $tco_done = true;
          return new OpPrec(stk, chs.value0.value0, chs.value0.value1);
        }
        ;
        if (stk instanceof OpPrec) {
          var v = compare73(chs.value0.value0)(stk.value1);
          if (v instanceof EQ) {
            $tco_done = true;
            return new OpPrec(stk.value0, stk.value1, append4(stk.value2)(chs.value0.value1));
          }
          ;
          if (v instanceof GT) {
            $tco_done = true;
            return new OpPrec(stk, chs.value0.value0, chs.value0.value1);
          }
          ;
          if (v instanceof LT) {
            $tco_var_stk = stk.value0;
            $copy_chs = new Cons(new Tuple(stk.value1, stk.value2), chs);
            return;
          }
          ;
          throw new Error("Failed pattern match at Tidy.Precedence (line 82, column 9 - line 85, column 60): " + [v.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Tidy.Precedence (line 78, column 5 - line 85, column 60): " + [stk.constructor.name]);
      }
      ;
      if (chs instanceof Cons) {
        if (stk instanceof OpHead) {
          $tco_var_stk = new OpHead(new OpList(stk.value0, chs.value0.value0, chs.value0.value1));
          $copy_chs = chs.value1;
          return;
        }
        ;
        if (stk instanceof OpPrec) {
          var v = compare73(chs.value0.value0)(stk.value1);
          if (v instanceof EQ) {
            $tco_var_stk = new OpPrec(stk.value0, stk.value1, append4(stk.value2)(chs.value0.value1));
            $copy_chs = chs.value1;
            return;
          }
          ;
          if (v instanceof GT) {
            $tco_var_stk = new OpPrec(stk.value0, stk.value1, snoc4(stk.value2)(chs.value0.value0)(chs.value0.value1));
            $copy_chs = chs.value1;
            return;
          }
          ;
          if (v instanceof LT) {
            $tco_var_stk = stk.value0;
            $copy_chs = new Cons(new Tuple(stk.value1, snoc4(stk.value2)(chs.value0.value0)(chs.value0.value1)), chs.value1);
            return;
          }
          ;
          throw new Error("Failed pattern match at Tidy.Precedence (line 91, column 9 - line 94, column 85): " + [v.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Tidy.Precedence (line 87, column 5 - line 94, column 85): " + [stk.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Tidy.Precedence (line 75, column 16 - line 94, column 85): " + [chs.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_stk, $copy_chs);
    }
    ;
    return $tco_result;
  };
};
var eqOperatorNamespace = {
  eq: function(x) {
    return function(y) {
      if (x instanceof OperatorType && y instanceof OperatorType) {
        return true;
      }
      ;
      if (x instanceof OperatorValue && y instanceof OperatorValue) {
        return true;
      }
      ;
      return false;
    };
  }
};
var ordOperatorNamespace = {
  compare: function(x) {
    return function(y) {
      if (x instanceof OperatorType && y instanceof OperatorType) {
        return EQ.value;
      }
      ;
      if (x instanceof OperatorType) {
        return LT.value;
      }
      ;
      if (y instanceof OperatorType) {
        return GT.value;
      }
      ;
      if (x instanceof OperatorValue && y instanceof OperatorValue) {
        return EQ.value;
      }
      ;
      throw new Error("Failed pattern match at Tidy.Precedence (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return eqOperatorNamespace;
  }
};
var ordTuple2 = /* @__PURE__ */ ordTuple(ordOperatorNamespace)(ordOperator);
var insert6 = /* @__PURE__ */ insert(ordTuple2);
var lookup1 = /* @__PURE__ */ lookup(ordTuple2);
var insertOperator = function(v) {
  return function(prec) {
    var opKey = new Tuple(v.value1, v.value2);
    return alter2(function(v1) {
      if (v1 instanceof Nothing) {
        return new Just(singleton6(opKey)(prec));
      }
      ;
      if (v1 instanceof Just) {
        return new Just(insert6(opKey)(prec)(v1.value0));
      }
      ;
      throw new Error("Failed pattern match at Tidy.Precedence (line 159, column 5 - line 163, column 41): " + [v1.constructor.name]);
    })(v.value0);
  };
};
var defaultPrecedence = 10;
var toOperatorTree = function(precMap) {
  return function(getOperator) {
    return function(init3) {
      var go = function(stk) {
        return function(v) {
          var v1 = getOperator(v.value0);
          var prec = fromMaybe(defaultPrecedence)(bindFlipped4(lookup1(new Tuple(v1.value1, v1.value2)))(lookup3(v1.value0)(precMap)));
          var opCh = pure1(new Tuple(v.value0, new OpPure(v.value1)));
          return push2(stk)(pure22(new Tuple(prec, opCh)));
        };
      };
      var $217 = foldl12(go)(new OpHead(new OpPure(init3)));
      return function($218) {
        return unwind($217($218));
      };
    };
  };
};

// output/Tidy.Token/index.js
var UnicodeSource = /* @__PURE__ */ function() {
  function UnicodeSource2() {
  }
  ;
  UnicodeSource2.value = new UnicodeSource2();
  return UnicodeSource2;
}();
var UnicodeAlways = /* @__PURE__ */ function() {
  function UnicodeAlways2() {
  }
  ;
  UnicodeAlways2.value = new UnicodeAlways2();
  return UnicodeAlways2;
}();
var UnicodeNever = /* @__PURE__ */ function() {
  function UnicodeNever2() {
  }
  ;
  UnicodeNever2.value = new UnicodeNever2();
  return UnicodeNever2;
}();
var printUnicode = function(ascii) {
  return function(uni) {
    return function(style) {
      return function(v) {
        if (v instanceof UnicodeNever) {
          return ascii;
        }
        ;
        if (v instanceof UnicodeAlways) {
          return uni;
        }
        ;
        if (v instanceof UnicodeSource) {
          if (style instanceof ASCII) {
            return ascii;
          }
          ;
          if (style instanceof Unicode) {
            return uni;
          }
          ;
          throw new Error("Failed pattern match at Tidy.Token (line 23, column 5 - line 25, column 21): " + [style.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Tidy.Token (line 19, column 32 - line 25, column 21): " + [v.constructor.name]);
      };
    };
  };
};
var printQualified = function(moduleName) {
  return function(name2) {
    if (moduleName instanceof Nothing) {
      return name2;
    }
    ;
    if (moduleName instanceof Just) {
      return moduleName.value0 + ("." + name2);
    }
    ;
    throw new Error("Failed pattern match at Tidy.Token (line 97, column 34 - line 99, column 44): " + [moduleName.constructor.name]);
  };
};
var printToken = function(option) {
  return function(v) {
    if (v instanceof TokLeftParen) {
      return "(";
    }
    ;
    if (v instanceof TokRightParen) {
      return ")";
    }
    ;
    if (v instanceof TokLeftBrace) {
      return "{";
    }
    ;
    if (v instanceof TokRightBrace) {
      return "}";
    }
    ;
    if (v instanceof TokLeftSquare) {
      return "[";
    }
    ;
    if (v instanceof TokRightSquare) {
      return "]";
    }
    ;
    if (v instanceof TokLeftArrow) {
      return printUnicode("<-")("\u2190")(v.value0)(option);
    }
    ;
    if (v instanceof TokRightArrow) {
      return printUnicode("->")("\u2192")(v.value0)(option);
    }
    ;
    if (v instanceof TokRightFatArrow) {
      return printUnicode("=>")("\u21D2")(v.value0)(option);
    }
    ;
    if (v instanceof TokDoubleColon) {
      return printUnicode("::")("\u2237")(v.value0)(option);
    }
    ;
    if (v instanceof TokForall) {
      return printUnicode("forall")("\u2200")(v.value0)(option);
    }
    ;
    if (v instanceof TokEquals) {
      return "=";
    }
    ;
    if (v instanceof TokPipe) {
      return "|";
    }
    ;
    if (v instanceof TokTick) {
      return "`";
    }
    ;
    if (v instanceof TokDot) {
      return ".";
    }
    ;
    if (v instanceof TokComma) {
      return ",";
    }
    ;
    if (v instanceof TokUnderscore) {
      return "_";
    }
    ;
    if (v instanceof TokBackslash) {
      return "\\";
    }
    ;
    if (v instanceof TokAt) {
      return "@";
    }
    ;
    if (v instanceof TokLowerName) {
      return printQualified(v.value0)(v.value1);
    }
    ;
    if (v instanceof TokUpperName) {
      return printQualified(v.value0)(v.value1);
    }
    ;
    if (v instanceof TokOperator) {
      return printQualified(v.value0)(v.value1);
    }
    ;
    if (v instanceof TokSymbolName) {
      return printQualified(v.value0)("(" + (v.value1 + ")"));
    }
    ;
    if (v instanceof TokSymbolArrow) {
      return printUnicode("(->)")("(\u2192)")(v.value0)(option);
    }
    ;
    if (v instanceof TokHole) {
      return "?" + v.value0;
    }
    ;
    if (v instanceof TokChar) {
      return "'" + (v.value0 + "'");
    }
    ;
    if (v instanceof TokString) {
      return '"' + (v.value0 + '"');
    }
    ;
    if (v instanceof TokRawString) {
      return '"""' + (v.value0 + '"""');
    }
    ;
    if (v instanceof TokInt) {
      return v.value0;
    }
    ;
    if (v instanceof TokNumber) {
      return v.value0;
    }
    ;
    if (v instanceof TokLayoutStart) {
      return "";
    }
    ;
    if (v instanceof TokLayoutSep) {
      return "";
    }
    ;
    if (v instanceof TokLayoutEnd) {
      return "";
    }
    ;
    throw new Error("Failed pattern match at Tidy.Token (line 28, column 21 - line 94, column 7): " + [v.constructor.name]);
  };
};
var eqUnicodeOption = {
  eq: function(x) {
    return function(y) {
      if (x instanceof UnicodeSource && y instanceof UnicodeSource) {
        return true;
      }
      ;
      if (x instanceof UnicodeAlways && y instanceof UnicodeAlways) {
        return true;
      }
      ;
      if (x instanceof UnicodeNever && y instanceof UnicodeNever) {
        return true;
      }
      ;
      return false;
    };
  }
};

// output/Tidy/index.js
var $runtime_lazy5 = function(name2, moduleName, init3) {
  var state2 = 0;
  var val;
  return function(lineNumber) {
    if (state2 === 2)
      return val;
    if (state2 === 1)
      throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
    state2 = 1;
    val = init3();
    state2 = 2;
    return val;
  };
};
var pure6 = /* @__PURE__ */ pure(applicativeNonEmptyArray);
var foldMap6 = /* @__PURE__ */ foldMap(foldableMaybe)(monoidFormatDoc);
var joinWithMap2 = /* @__PURE__ */ joinWithMap(foldableArray);
var lines3 = /* @__PURE__ */ lines(foldableArray);
var intercalate6 = /* @__PURE__ */ intercalate2(monoidDoc);
var map17 = /* @__PURE__ */ map(functorArray);
var map18 = /* @__PURE__ */ map(functorNonEmptyArray);
var joinWithMap1 = /* @__PURE__ */ joinWithMap(foldableNonEmptyList);
var mempty6 = /* @__PURE__ */ mempty(monoidFormatDoc);
var foldr7 = /* @__PURE__ */ foldr(foldableArray);
var append15 = /* @__PURE__ */ append(semigroupFormatDoc);
var foldl4 = /* @__PURE__ */ foldl(foldableArray);
var mempty13 = /* @__PURE__ */ mempty(monoidDoc);
var foldMap14 = /* @__PURE__ */ foldMap(foldableArray);
var joinWithMap22 = /* @__PURE__ */ joinWithMap(foldableNonEmptyArray);
var identity16 = /* @__PURE__ */ identity(categoryFn);
var foldl13 = /* @__PURE__ */ foldl(foldableNonEmptyArray);
var guard4 = /* @__PURE__ */ guard(monoidFormatDoc);
var eq110 = /* @__PURE__ */ eq(eqUnicodeOption);
var eq211 = /* @__PURE__ */ eq(eqProper);
var eq310 = /* @__PURE__ */ eq(eqOperator);
var eq510 = /* @__PURE__ */ eq(/* @__PURE__ */ eqArray(eqProper));
var eq610 = /* @__PURE__ */ eq(eqIdent);
var eq73 = /* @__PURE__ */ eq(eqModuleName);
var eq92 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(eqModuleName));
var compare74 = /* @__PURE__ */ compare(ordProper);
var compare110 = /* @__PURE__ */ compare(ordOperator);
var compare210 = /* @__PURE__ */ compare(ordBoolean);
var compare310 = /* @__PURE__ */ compare(/* @__PURE__ */ ordArray(ordProper));
var compare410 = /* @__PURE__ */ compare(ordIdent);
var compare510 = /* @__PURE__ */ compare(ordModuleName);
var compare610 = /* @__PURE__ */ compare(ordInt);
var compare75 = /* @__PURE__ */ compare(/* @__PURE__ */ ordMaybe(ordModuleName));
var un2 = /* @__PURE__ */ un();
var bindFlipped5 = /* @__PURE__ */ bindFlipped(bindFn);
var foldMap33 = /* @__PURE__ */ foldMap14(monoidFormatDoc);
var append32 = /* @__PURE__ */ append(semigroupArray);
var pure12 = /* @__PURE__ */ pure(applicativeArray);
var map23 = /* @__PURE__ */ map(functorMaybe);
var joinWith3 = /* @__PURE__ */ joinWith2(foldableArray);
var top3 = /* @__PURE__ */ top(boundedInt);
var TypeArrowFirst = /* @__PURE__ */ function() {
  function TypeArrowFirst2() {
  }
  ;
  TypeArrowFirst2.value = new TypeArrowFirst2();
  return TypeArrowFirst2;
}();
var TypeArrowLast = /* @__PURE__ */ function() {
  function TypeArrowLast2() {
  }
  ;
  TypeArrowLast2.value = new TypeArrowLast2();
  return TypeArrowLast2;
}();
var PolyForall = /* @__PURE__ */ function() {
  function PolyForall2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  PolyForall2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new PolyForall2(value0, value1, value2);
      };
    };
  };
  return PolyForall2;
}();
var PolyArrow = /* @__PURE__ */ function() {
  function PolyArrow2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  PolyArrow2.create = function(value0) {
    return function(value1) {
      return new PolyArrow2(value0, value1);
    };
  };
  return PolyArrow2;
}();
var ImportWrapSource = /* @__PURE__ */ function() {
  function ImportWrapSource2() {
  }
  ;
  ImportWrapSource2.value = new ImportWrapSource2();
  return ImportWrapSource2;
}();
var ImportWrapAuto = /* @__PURE__ */ function() {
  function ImportWrapAuto2() {
  }
  ;
  ImportWrapAuto2.value = new ImportWrapAuto2();
  return ImportWrapAuto2;
}();
var ImportSortSource = /* @__PURE__ */ function() {
  function ImportSortSource2() {
  }
  ;
  ImportSortSource2.value = new ImportSortSource2();
  return ImportSortSource2;
}();
var ImportSortIde = /* @__PURE__ */ function() {
  function ImportSortIde2() {
  }
  ;
  ImportSortIde2.value = new ImportSortIde2();
  return ImportSortIde2;
}();
var ImportClassCmp = /* @__PURE__ */ function() {
  function ImportClassCmp2(value0) {
    this.value0 = value0;
  }
  ;
  ImportClassCmp2.create = function(value0) {
    return new ImportClassCmp2(value0);
  };
  return ImportClassCmp2;
}();
var ImportTypeOpCmp = /* @__PURE__ */ function() {
  function ImportTypeOpCmp2(value0) {
    this.value0 = value0;
  }
  ;
  ImportTypeOpCmp2.create = function(value0) {
    return new ImportTypeOpCmp2(value0);
  };
  return ImportTypeOpCmp2;
}();
var ImportTypeCmp = /* @__PURE__ */ function() {
  function ImportTypeCmp2(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  ;
  ImportTypeCmp2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return new ImportTypeCmp2(value0, value1, value2);
      };
    };
  };
  return ImportTypeCmp2;
}();
var ImportValueCmp = /* @__PURE__ */ function() {
  function ImportValueCmp2(value0) {
    this.value0 = value0;
  }
  ;
  ImportValueCmp2.create = function(value0) {
    return new ImportValueCmp2(value0);
  };
  return ImportValueCmp2;
}();
var ImportOpCmp = /* @__PURE__ */ function() {
  function ImportOpCmp2(value0) {
    this.value0 = value0;
  }
  ;
  ImportOpCmp2.create = function(value0) {
    return new ImportOpCmp2(value0);
  };
  return ImportOpCmp2;
}();
var ImportErrorCmp = /* @__PURE__ */ function() {
  function ImportErrorCmp2() {
  }
  ;
  ImportErrorCmp2.value = new ImportErrorCmp2();
  return ImportErrorCmp2;
}();
var ImportModuleCmp = /* @__PURE__ */ function() {
  function ImportModuleCmp2(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  ImportModuleCmp2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new ImportModuleCmp2(value0, value1, value2, value3);
        };
      };
    };
  };
  return ImportModuleCmp2;
}();
var Grouped = /* @__PURE__ */ function() {
  function Grouped2() {
  }
  ;
  Grouped2.value = new Grouped2();
  return Grouped2;
}();
var NotGrouped = /* @__PURE__ */ function() {
  function NotGrouped2() {
  }
  ;
  NotGrouped2.value = new NotGrouped2();
  return NotGrouped2;
}();
var IfThen = /* @__PURE__ */ function() {
  function IfThen2(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  IfThen2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new IfThen2(value0, value1, value2, value3);
        };
      };
    };
  };
  return IfThen2;
}();
var ElseIfThen = /* @__PURE__ */ function() {
  function ElseIfThen2(value0, value1, value2, value3, value4) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }
  ;
  ElseIfThen2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return function(value4) {
            return new ElseIfThen2(value0, value1, value2, value3, value4);
          };
        };
      };
    };
  };
  return ElseIfThen2;
}();
var Else = /* @__PURE__ */ function() {
  function Else2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Else2.create = function(value0) {
    return function(value1) {
      return new Else2(value0, value1);
    };
  };
  return Else2;
}();
var DeclGroupSame = /* @__PURE__ */ function() {
  function DeclGroupSame2() {
  }
  ;
  DeclGroupSame2.value = new DeclGroupSame2();
  return DeclGroupSame2;
}();
var DeclGroupHard = /* @__PURE__ */ function() {
  function DeclGroupHard2() {
  }
  ;
  DeclGroupHard2.value = new DeclGroupHard2();
  return DeclGroupHard2;
}();
var DeclGroupSoft = /* @__PURE__ */ function() {
  function DeclGroupSoft2() {
  }
  ;
  DeclGroupSoft2.value = new DeclGroupSoft2();
  return DeclGroupSoft2;
}();
var DeclGroupValueSignature = /* @__PURE__ */ function() {
  function DeclGroupValueSignature2(value0) {
    this.value0 = value0;
  }
  ;
  DeclGroupValueSignature2.create = function(value0) {
    return new DeclGroupValueSignature2(value0);
  };
  return DeclGroupValueSignature2;
}();
var DeclGroupValue = /* @__PURE__ */ function() {
  function DeclGroupValue2(value0) {
    this.value0 = value0;
  }
  ;
  DeclGroupValue2.create = function(value0) {
    return new DeclGroupValue2(value0);
  };
  return DeclGroupValue2;
}();
var DeclGroupTypeSignature = /* @__PURE__ */ function() {
  function DeclGroupTypeSignature2(value0) {
    this.value0 = value0;
  }
  ;
  DeclGroupTypeSignature2.create = function(value0) {
    return new DeclGroupTypeSignature2(value0);
  };
  return DeclGroupTypeSignature2;
}();
var DeclGroupType = /* @__PURE__ */ function() {
  function DeclGroupType2(value0) {
    this.value0 = value0;
  }
  ;
  DeclGroupType2.create = function(value0) {
    return new DeclGroupType2(value0);
  };
  return DeclGroupType2;
}();
var DeclGroupClass = /* @__PURE__ */ function() {
  function DeclGroupClass2(value0) {
    this.value0 = value0;
  }
  ;
  DeclGroupClass2.create = function(value0) {
    return new DeclGroupClass2(value0);
  };
  return DeclGroupClass2;
}();
var DeclGroupInstance = /* @__PURE__ */ function() {
  function DeclGroupInstance2() {
  }
  ;
  DeclGroupInstance2.value = new DeclGroupInstance2();
  return DeclGroupInstance2;
}();
var DeclGroupFixity = /* @__PURE__ */ function() {
  function DeclGroupFixity2() {
  }
  ;
  DeclGroupFixity2.value = new DeclGroupFixity2();
  return DeclGroupFixity2;
}();
var DeclGroupForeign = /* @__PURE__ */ function() {
  function DeclGroupForeign2() {
  }
  ;
  DeclGroupForeign2.value = new DeclGroupForeign2();
  return DeclGroupForeign2;
}();
var DeclGroupRole = /* @__PURE__ */ function() {
  function DeclGroupRole2() {
  }
  ;
  DeclGroupRole2.value = new DeclGroupRole2();
  return DeclGroupRole2;
}();
var DeclGroupUnknown = /* @__PURE__ */ function() {
  function DeclGroupUnknown2() {
  }
  ;
  DeclGroupUnknown2.value = new DeclGroupUnknown2();
  return DeclGroupUnknown2;
}();
var toQualifiedOperatorTree = function(precMap) {
  return function(opNs) {
    return toOperatorTree(precMap)(function(v) {
      return new QualifiedOperator(v.module, opNs, v.name);
    });
  };
};
var toPolytype = /* @__PURE__ */ function() {
  var go = function($copy_init) {
    return function($copy_v) {
      var $tco_var_init = $copy_init;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(init3, v) {
        if (v instanceof TypeForall) {
          $tco_var_init = snoc2(init3)(new PolyForall(v.value0, v.value1, v.value2));
          $copy_v = v.value3;
          return;
        }
        ;
        if (v instanceof TypeArrow) {
          $tco_var_init = snoc2(init3)(new PolyArrow(v.value0, v.value1));
          $copy_v = v.value2;
          return;
        }
        ;
        if (v instanceof TypeConstrained) {
          $tco_var_init = snoc2(init3)(new PolyArrow(v.value0, v.value1));
          $copy_v = v.value2;
          return;
        }
        ;
        $tco_done = true;
        return {
          init: init3,
          last: v
        };
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_init, $copy_v);
      }
      ;
      return $tco_result;
    };
  };
  return go([]);
}();
var toElseIfChain = function(ifte) {
  var go = function($copy_acc) {
    return function($copy_curr) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(acc, curr) {
        if (curr["false"] instanceof ExprIf) {
          var chain = new ElseIfThen(curr["else"], curr["false"].value0.keyword, curr["false"].value0.cond, curr["false"].value0.then, curr["false"]["value0"]["true"]);
          $tco_var_acc = snoc3(acc)(chain);
          $copy_curr = curr["false"].value0;
          return;
        }
        ;
        $tco_done = true;
        return snoc3(acc)(new Else(curr["else"], curr["false"]));
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_curr);
      }
      ;
      return $tco_result;
    };
  };
  return go(pure6(new IfThen(ifte.keyword, ifte.cond, ifte.then, ifte["true"])))(ifte);
};
var formatString = /* @__PURE__ */ function() {
  var $1055 = foldMap6(function(v) {
    var v1 = unsnoc2(v.tail);
    if (v1 instanceof Nothing) {
      return text2(v.head);
    }
    ;
    if (v1 instanceof Just) {
      return $$break2($$break2(text2(v.head + "\\"))(joinWithMap2($$break2)(function(str) {
        return text2("\\" + (str + "\\"));
      })(v1.value0.init)))(text2("\\" + v1.value0.last));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 186, column 3 - line 191, column 41): " + [v1.constructor.name]);
  });
  return function($1056) {
    return $1055(uncons2(splitStringEscapeLines($1056)));
  };
}();
var formatRawString = /* @__PURE__ */ function() {
  var $1057 = foldMap6(function(v) {
    var $252 = $$null(v.tail);
    if ($252) {
      return text2(v.head);
    }
    ;
    return fromDoc(lines3([text(v.head), locally(function(v1) {
      return {
        indentUnit: v1.indentUnit,
        indentWidth: v1.indentWidth,
        pageWidth: v1.pageWidth,
        ribbonRatio: v1.ribbonRatio,
        indent: 0,
        indentSpaces: ""
      };
    })(intercalate6($$break)(map17(text)(v.tail)))]));
  });
  return function($1058) {
    return $1057(uncons2(splitLines($1058)));
  };
}();
var formatListElem = function(alignment) {
  return function(format) {
    return function(conf) {
      return function(b) {
        return flexGroup2(align2(alignment)(anchor(format(conf)(b))));
      };
    };
  };
};
var formatHangingOperatorTree = function(formatOperator) {
  return function(format) {
    return function(conf) {
      var opWidth = function(v) {
        return v.token.range.end.column - v.token.range.start.column | 0;
      };
      var go = function(v) {
        if (v instanceof OpPure) {
          return format(conf)(v.value0);
        }
        ;
        if (v instanceof OpList) {
          return hangOps(go(v.value0))(map18(function(v1) {
            return new HangingOp(opWidth(v1.value0), formatOperator(conf)(v1.value0), go(v1.value1));
          })(v.value2));
        }
        ;
        throw new Error("Failed pattern match at Tidy (line 1187, column 8 - line 1192, column 93): " + [v.constructor.name]);
      };
      return go;
    };
  };
};
var formatErrorVoid = {
  formatError: absurd
};
var formatError = function(dict) {
  return dict.formatError;
};
var formatDeclGroups = function(declSeparator) {
  return function(k) {
    return function(format) {
      return function(conf) {
        var joinDecls = function(acc) {
          var newDoc = joinWithMap1($$break2)(format(conf))(acc.decls);
          if (acc.sep instanceof DeclGroupSame) {
            return $$break2(newDoc)(acc.doc);
          }
          ;
          if (acc.sep instanceof DeclGroupSoft) {
            return flexDoubleBreak(newDoc)(acc.doc);
          }
          ;
          if (acc.sep instanceof DeclGroupHard) {
            return $$break2(newDoc)(forceMinSourceBreaks(2)(acc.doc));
          }
          ;
          throw new Error("Failed pattern match at Tidy (line 1399, column 19 - line 1405, column 52): " + [acc.sep.constructor.name]);
        };
        var go = function(decl) {
          return function($1059) {
            return Just.create(function(v) {
              if (v instanceof Nothing) {
                return {
                  doc: mempty6,
                  sep: DeclGroupSame.value,
                  group: k(decl),
                  decls: singleton4(decl)
                };
              }
              ;
              if (v instanceof Just) {
                var group3 = k(decl);
                var v1 = declSeparator(group3)(v.value0.group);
                if (v1 instanceof DeclGroupSame) {
                  return {
                    doc: v.value0.doc,
                    sep: v.value0.sep,
                    group: group3,
                    decls: cons(decl)(v.value0.decls)
                  };
                }
                ;
                return {
                  doc: joinDecls(v.value0),
                  sep: v1,
                  group: group3,
                  decls: singleton4(decl)
                };
              }
              ;
              throw new Error("Failed pattern match at Tidy (line 1376, column 22 - line 1397, column 12): " + [v.constructor.name]);
            }($1059));
          };
        };
        var $1060 = maybe(mempty6)(joinDecls);
        var $1061 = foldr7(go)(Nothing.value);
        return function($1062) {
          return $1060($1061($1062));
        };
      };
    };
  };
};
var formatComment = function(lineComment2) {
  return function(blockComment) {
    return function(com) {
      return function(next2) {
        if (com instanceof Comment) {
          if (take2(2)(com.value0) === "--") {
            return lineComment2(com.value0)(next2);
          }
          ;
          if (otherwise) {
            return blockComment(com.value0)(next2);
          }
          ;
        }
        ;
        if (com instanceof Line) {
          return sourceBreak(com.value1)(next2);
        }
        ;
        if (com instanceof Space2) {
          return next2;
        }
        ;
        throw new Error("Failed pattern match at Tidy (line 146, column 51 - line 155, column 9): " + [com.constructor.name]);
      };
    };
  };
};
var formatWithComments = function(leading5) {
  return function(trailing) {
    return function(doc) {
      return foldr7(formatComment(leadingLineComment)(leadingBlockComment))(append15(doc)(foldr7(formatComment(trailingLineComment)(trailingBlockComment))(mempty6)(trailing)))(leading5);
    };
  };
};
var formatToken = function(conf) {
  return function(tok) {
    var tokStr = printToken(conf.unicode)(tok.value);
    var tokDoc = function() {
      if (tok.value instanceof TokRawString) {
        return formatRawString(tokStr);
      }
      ;
      if (tok.value instanceof TokString) {
        return formatString(tokStr);
      }
      ;
      return text2(tokStr);
    }();
    return formatWithComments(tok.leadingComments)(tok.trailingComments)(tokDoc);
  };
};
var formatEmptyList = function(conf) {
  return function(v) {
    return append15(formatToken(conf)(v.open))(formatToken(conf)(v.close));
  };
};
var formatListTail = function(alignment) {
  return function(format) {
    return function(conf) {
      return joinWithMap2(softBreak2)(function(v) {
        return space2(formatToken(conf)(v.value0))(formatListElem(alignment)(format)(conf)(v.value1));
      });
    };
  };
};
var formatList = function(openSpace) {
  return function(closeSpace) {
    return function(alignment) {
      return function(grouped) {
        return function(format) {
          return function(conf) {
            return function(v) {
              var listElems = closeSpace(softBreak2(formatListElem(alignment)(format)(conf)(v.head))(formatListTail(alignment)(format)(conf)(v.tail)))(formatToken(conf)(v.close));
              if (grouped instanceof Grouped) {
                return flexGroup2(openSpace(formatToken(conf)(v.open))(listElems));
              }
              ;
              if (grouped instanceof NotGrouped) {
                return openSpace(formatToken(conf)(v.open))(listElems);
              }
              ;
              throw new Error("Failed pattern match at Tidy (line 1246, column 3 - line 1252, column 30): " + [grouped.constructor.name]);
            };
          };
        };
      };
    };
  };
};
var formatDelimited = function(openSpace) {
  return function(closeSpace) {
    return function(alignment) {
      return function(grouped) {
        return function(format) {
          return function(conf) {
            return function(v) {
              if (v.value instanceof Nothing) {
                return formatEmptyList(conf)({
                  open: v.open,
                  close: v.close
                });
              }
              ;
              if (v.value instanceof Just) {
                return formatList(openSpace)(closeSpace)(alignment)(grouped)(format)(conf)({
                  open: v.open,
                  head: v.value.value0.head,
                  tail: v.value.value0.tail,
                  close: v.close
                });
              }
              ;
              throw new Error("Failed pattern match at Tidy (line 1222, column 103 - line 1226, column 94): " + [v.value.constructor.name]);
            };
          };
        };
      };
    };
  };
};
var formatParenList = /* @__PURE__ */ formatDelimited(softSpace)(softBreak2)(2);
var formatDelimitedNonEmpty = function(openSpace) {
  return function(closeSpace) {
    return function(alignment) {
      return function(grouped) {
        return function(format) {
          return function(conf) {
            return function(v) {
              return formatList(openSpace)(closeSpace)(alignment)(grouped)(format)(conf)({
                open: v.open,
                head: v.value.head,
                tail: v.value.tail,
                close: v.close
              });
            };
          };
        };
      };
    };
  };
};
var formatParenListNonEmpty = /* @__PURE__ */ formatDelimitedNonEmpty(softSpace)(softBreak2)(2);
var formatOneOrDelimited = function(format) {
  return function(conf) {
    return function(v) {
      if (v instanceof One) {
        return format(conf)(v.value0);
      }
      ;
      if (v instanceof Many) {
        return formatParenListNonEmpty(NotGrouped.value)(format)(conf)(v.value0);
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 586, column 36 - line 588, column 63): " + [v.constructor.name]);
    };
  };
};
var formatName = function(conf) {
  return function(v) {
    return formatToken(conf)(v.token);
  };
};
var formatDataMembers = function(conf) {
  return function(v) {
    if (v instanceof DataAll) {
      return formatToken(conf)(v.value0);
    }
    ;
    if (v instanceof DataEnumerated) {
      return formatParenList(NotGrouped.value)(formatName)(conf)(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 282, column 26 - line 286, column 50): " + [v.constructor.name]);
  };
};
var formatExport = function(conf) {
  return function(v) {
    if (v instanceof ExportValue) {
      return formatName(conf)(v.value0);
    }
    ;
    if (v instanceof ExportOp) {
      return formatName(conf)(v.value0);
    }
    ;
    if (v instanceof ExportType) {
      return flexGroup2(softBreak2(formatName(conf)(v.value0))(indent2(foldMap6(formatDataMembers(conf))(v.value1))));
    }
    ;
    if (v instanceof ExportTypeOp) {
      return space2(formatToken(conf)(v.value0))(anchor(formatName(conf)(v.value1)));
    }
    ;
    if (v instanceof ExportClass) {
      return space2(formatToken(conf)(v.value0))(anchor(formatName(conf)(v.value1)));
    }
    ;
    if (v instanceof ExportModule) {
      return space2(formatToken(conf)(v.value0))(anchor(formatName(conf)(v.value1)));
    }
    ;
    if (v instanceof ExportError) {
      return conf.formatError(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 265, column 21 - line 279, column 23): " + [v.constructor.name]);
  };
};
var formatFundep = function(conf) {
  return function(v) {
    if (v instanceof FundepDetermined) {
      return space2(formatToken(conf)(v.value0))(joinWithMap22(space2)(formatName(conf))(v.value1));
    }
    ;
    if (v instanceof FundepDetermines) {
      return space2(space2(joinWithMap22(space2)(formatName(conf))(v.value0))(formatToken(conf)(v.value1)))(joinWithMap22(space2)(formatName(conf))(v.value2));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 576, column 21 - line 583, column 57): " + [v.constructor.name]);
  };
};
var formatImport = function(conf) {
  return function(v) {
    if (v instanceof ImportValue) {
      return formatName(conf)(v.value0);
    }
    ;
    if (v instanceof ImportOp) {
      return formatName(conf)(v.value0);
    }
    ;
    if (v instanceof ImportType) {
      return flexGroup2(softBreak2(formatName(conf)(v.value0))(indent2(foldMap6(formatDataMembers(conf))(v.value1))));
    }
    ;
    if (v instanceof ImportTypeOp) {
      return space2(formatToken(conf)(v.value0))(anchor(formatName(conf)(v.value1)));
    }
    ;
    if (v instanceof ImportClass) {
      return space2(formatToken(conf)(v.value0))(anchor(formatName(conf)(v.value1)));
    }
    ;
    if (v instanceof ImportError) {
      return conf.formatError(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 362, column 21 - line 374, column 23): " + [v.constructor.name]);
  };
};
var formatImportDecl = function(conf) {
  return function(v) {
    var formatImportQualified = function(v1) {
      return space2(formatToken(conf)(v1.value0))(anchor(formatName(conf)(v1.value1)));
    };
    var importDeclBody = function() {
      if (v.names instanceof Just && v.names.value0.value0 instanceof Just) {
        return space2(flexSpaceBreak(space2(formatName(conf)(v.module))(anchor(formatToken(conf)(v.names.value0.value0.value0))))(anchor(formatParenListNonEmpty(NotGrouped.value)(formatImport)(conf)(v.names.value0.value1))))(anchor(foldMap6(formatImportQualified)(v.qualified)));
      }
      ;
      if (v.names instanceof Just && v.names.value0.value0 instanceof Nothing) {
        return space2(flexSpaceBreak(formatName(conf)(v.module))(anchor(formatParenListNonEmpty(NotGrouped.value)(formatImport)(conf)(v.names.value0.value1))))(anchor(foldMap6(formatImportQualified)(v.qualified)));
      }
      ;
      if (v.names instanceof Nothing) {
        return space2(formatName(conf)(v.module))(anchor(foldMap6(formatImportQualified)(v.qualified)));
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 292, column 20 - line 304, column 69): " + [v.names.constructor.name]);
    }();
    return space2(formatToken(conf)(v.keyword))(indent2(anchor(importDeclBody)));
  };
};
var formatParens = function(format) {
  return function(conf) {
    return function(v) {
      return append15(formatToken(conf)(v.open))(append15(anchor(format(conf)(v.value)))(formatToken(conf)(v.close)));
    };
  };
};
var formatParensBlock = function(format) {
  return function(conf) {
    return function(v) {
      return flexGroup2(softSpace(formatToken(conf)(v.open))(softBreak2(align2(2)(anchor(format(conf)(v.value))))(formatToken(conf)(v.close))));
    };
  };
};
var formatPrefixedName = function(conf) {
  return function(v) {
    return append15(foldMap6(formatToken(conf))(v.prefix))(formatToken(conf)(v.value.token));
  };
};
var formatQualifiedName = function(conf) {
  return function(v) {
    return formatToken(conf)(v.token);
  };
};
var formatBasicListNonEmpty = /* @__PURE__ */ formatDelimitedNonEmpty(space2)(spaceBreak2)(2);
var formatBasicList = /* @__PURE__ */ formatDelimited(space2)(spaceBreak2)(2);
var flatten2 = /* @__PURE__ */ function() {
  var format = function(v) {
    return space2(v.head)(indent2(joinWithMap2(space2)(anchor)(v.tail)));
  };
  var $1065 = foldMap6(format);
  return function($1066) {
    return $1065(uncons2($1066));
  };
}();
var formatTypeVarBinding = function(conf) {
  return function(v) {
    if (v instanceof TypeVarKinded) {
      return formatParensBlock(formatKindedTypeVarBinding)(conf)(v.value0);
    }
    ;
    if (v instanceof TypeVarName) {
      return formatPrefixedName(conf)(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 626, column 29 - line 630, column 30): " + [v.constructor.name]);
  };
};
var formatType = function(conf) {
  var $1067 = formatHangingType(conf);
  return function($1068) {
    return toFormatDoc($1067($1068));
  };
};
var formatRowLabeled = function(conf) {
  return function(v) {
    return space2(formatName(conf)(v.label))(indent2(flexSpaceBreak(anchor(formatToken(conf)(v.separator)))(anchor(formatType(conf)(v.value)))));
  };
};
var formatRow = function(openSpace) {
  return function(closeSpace) {
    return function(conf) {
      return function(v) {
        if (v.value.labels instanceof Nothing && v.value.tail instanceof Nothing) {
          return formatEmptyList(conf)({
            open: v.open,
            close: v.close
          });
        }
        ;
        if (v.value.labels instanceof Just && v.value.tail instanceof Nothing) {
          return formatDelimitedNonEmpty(openSpace)(closeSpace)(2)(Grouped.value)(formatRowLabeled)(conf)({
            open: v.open,
            value: v.value.labels.value0,
            close: v.close
          });
        }
        ;
        if (v.value.labels instanceof Nothing && v.value.tail instanceof Just) {
          return closeSpace(openSpace(formatToken(conf)(v.open))(flatten2([formatToken(conf)(v.value.tail.value0.value0), formatType(conf)(v.value.tail.value0.value1)])))(formatToken(conf)(v.close));
        }
        ;
        if (v.value.labels instanceof Just && v.value.tail instanceof Just) {
          return closeSpace(spaceBreak2(softBreak2(openSpace(formatToken(conf)(v.open))(formatListElem(2)(formatRowLabeled)(conf)(v.value.labels.value0.head)))(formatListTail(2)(formatRowLabeled)(conf)(v.value.labels.value0.tail)))(space2(formatToken(conf)(v.value.tail.value0.value0))(formatListElem(2)(formatType)(conf)(v.value.tail.value0.value1))))(formatToken(conf)(v.close));
        }
        ;
        throw new Error("Failed pattern match at Tidy (line 815, column 94 - line 838, column 31): " + [v.value.labels.constructor.name, v.value.tail.constructor.name]);
      };
    };
  };
};
var formatMonotype = function(conf) {
  var $1069 = formatHangingMonotype(conf);
  return function($1070) {
    return toFormatDoc($1069($1070));
  };
};
var formatKindedTypeVarBinding = function(conf) {
  return function(v) {
    return space2(formatPrefixedName(conf)(v.label))(indent2(flexSpaceBreak(anchor(formatToken(conf)(v.separator)))(formatType(conf)(v.value))));
  };
};
var formatHangingType = function(conf) {
  var $1071 = formatHangingPolytype(identity16)(conf);
  return function($1072) {
    return $1071(toPolytype($1072));
  };
};
var formatHangingPolytype = function(ind) {
  return function(conf) {
    return function(v) {
      if ($$null(v.init)) {
        return formatHangingMonotype(conf)(v.last);
      }
      ;
      if (conf.typeArrowPlacement instanceof TypeArrowFirst) {
        var isUnicodeArrow = function() {
          if (conf.unicode instanceof UnicodeAlways) {
            return $$const(true);
          }
          ;
          if (conf.unicode instanceof UnicodeNever) {
            return $$const(false);
          }
          ;
          if (conf.unicode instanceof UnicodeSource) {
            return function(v1) {
              if (v1 instanceof PolyArrow && (v1.value1.value instanceof TokRightArrow && v1.value1.value.value0 instanceof Unicode)) {
                return true;
              }
              ;
              if (v1 instanceof PolyArrow && (v1.value1.value instanceof TokRightFatArrow && v1.value1.value.value0 instanceof Unicode)) {
                return true;
              }
              ;
              if (v1 instanceof PolyForall && (v1.value0.value instanceof TokForall && v1.value0.value.value0 instanceof Unicode)) {
                return true;
              }
              ;
              return false;
            };
          }
          ;
          throw new Error("Failed pattern match at Tidy (line 769, column 22 - line 779, column 21): " + [conf.unicode.constructor.name]);
        }();
        var isUnicode = all2(isUnicodeArrow)(v.init);
        var formatPolyArrowFirst = function(k) {
          return function(v1) {
            if (v1 instanceof PolyForall) {
              var go = function(doc) {
                return function(tyVar) {
                  return flexSpaceBreak(doc)(indent2(formatTypeVarBinding(conf)(tyVar)));
                };
              };
              return function(doc) {
                return space2(softBreak2(k(foldl13(go)(formatToken(conf)(v1.value0))(v1.value1)))(append15(guard4(!isUnicode)(fromDoc(flexAlt(mempty13)(space))))(anchor(formatToken(conf)(v1.value2)))))(anchor(alignCurrentColumn2(doc)));
              };
            }
            ;
            if (v1 instanceof PolyArrow) {
              return function(doc) {
                return space2(spaceBreak2(k(flexGroup2(formatMonotype(conf)(v1.value0))))(anchor(formatToken(conf)(v1.value1))))(anchor(alignCurrentColumn2(doc)));
              };
            }
            ;
            throw new Error("Failed pattern match at Tidy (line 781, column 30 - line 797, column 52): " + [v1.constructor.name]);
          };
        };
        return hangBreak(foldl4(formatPolyArrowFirst)(ind)(v.init)(anchor(formatMonotype(conf)(v.last))));
      }
      ;
      if (conf.typeArrowPlacement instanceof TypeArrowLast) {
        var formatPolyArrowLast = function(v1) {
          if (v1 instanceof PolyForall) {
            var go = function(doc) {
              return function(tyVar) {
                return flexSpaceBreak(doc)(indent2(formatTypeVarBinding(conf)(tyVar)));
              };
            };
            return append15(foldl13(go)(formatToken(conf)(v1.value0))(v1.value1))(indent2(anchor(formatToken(conf)(v1.value2))));
          }
          ;
          if (v1 instanceof PolyArrow) {
            return space2(flexGroup2(formatType(conf)(v1.value0)))(indent2(anchor(formatToken(conf)(v1.value1))));
          }
          ;
          throw new Error("Failed pattern match at Tidy (line 803, column 27 - line 812, column 57): " + [v1.constructor.name]);
        };
        return hangBreak(spaceBreak2(joinWithMap2(spaceBreak2)(formatPolyArrowLast)(v.init))(flexGroup2(formatMonotype(conf)(v.last))));
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 762, column 49 - line 812, column 57): " + [conf.typeArrowPlacement.constructor.name]);
    };
  };
};
var formatHangingMonotype = function(conf) {
  return function(v) {
    if (v instanceof TypeVar) {
      return hangBreak(formatName(conf)(v.value0));
    }
    ;
    if (v instanceof TypeConstructor) {
      return hangBreak(formatQualifiedName(conf)(v.value0));
    }
    ;
    if (v instanceof TypeWildcard) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof TypeHole) {
      return hangBreak(formatName(conf)(v.value0));
    }
    ;
    if (v instanceof TypeString) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof TypeInt) {
      return hangBreak(append15(foldMap6(formatToken(conf))(v.value0))(formatToken(conf)(v.value1)));
    }
    ;
    if (v instanceof TypeArrowName) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof TypeOpName) {
      return hangBreak(formatQualifiedName(conf)(v.value0));
    }
    ;
    if (v instanceof TypeRow) {
      return hangBreak(formatRow(softSpace)(softBreak2)(conf)(v.value0));
    }
    ;
    if (v instanceof TypeRecord) {
      return hangBreak(formatRow(space2)(spaceBreak2)(conf)(v.value0));
    }
    ;
    if (v instanceof TypeApp) {
      return hangApp(formatHangingType(conf)(v.value0))(map18(formatHangingType(conf))(v.value1));
    }
    ;
    if (v instanceof TypeParens) {
      return hangBreak(formatParensBlock(formatType)(conf)(v.value0));
    }
    ;
    if (v instanceof TypeKinded) {
      return hangBreak(space2(formatType(conf)(v.value0))(indent2(flexSpaceBreak(anchor(formatToken(conf)(v.value1)))(anchor(formatType(conf)(v.value2))))));
    }
    ;
    if (v instanceof TypeOp) {
      return formatHangingOperatorTree(formatQualifiedName)(formatHangingType)(conf)(toQualifiedOperatorTree(conf.operators)(OperatorType.value)(v.value0)(v.value1));
    }
    ;
    if (v instanceof $$TypeError) {
      return hangBreak(conf.formatError(v.value0));
    }
    ;
    if (v instanceof TypeArrow) {
      return unsafeCrashWith("formatMonotype: TypeArrow handled by formatPolytype");
    }
    ;
    if (v instanceof TypeConstrained) {
      return unsafeCrashWith("formatMonotype: TypeConstrained handled by formatPolytype");
    }
    ;
    if (v instanceof TypeForall) {
      return unsafeCrashWith("formatMonotype: TypeForall handled by formatPolytype");
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 691, column 30 - line 731, column 75): " + [v.constructor.name]);
  };
};
var formatHangingDataCtor = function(conf) {
  return function(v) {
    var hangingName = hangBreak(formatName(conf)(v.name));
    var v1 = fromArray(v.fields);
    if (v1 instanceof Nothing) {
      return hangingName;
    }
    ;
    if (v1 instanceof Just) {
      return hangApp(hangingName)(map18(formatHangingType(conf))(v1.value0));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 528, column 3 - line 530, column 69): " + [v1.constructor.name]);
  };
};
var formatDataCtor = function(conf) {
  var $1073 = formatHangingDataCtor(conf);
  return function($1074) {
    return toFormatDoc($1073($1074));
  };
};
var formatConstraints = function(conf) {
  return function(v) {
    var unicodeArr = function() {
      if (v.value1.value instanceof TokOperator && (v.value1.value.value0 instanceof Nothing && (v.value1.value.value1 === "<=" && eq110(conf.unicode)(UnicodeAlways.value)))) {
        return {
          leadingComments: v.value1.leadingComments,
          range: v.value1.range,
          trailingComments: v.value1.trailingComments,
          value: new TokOperator(Nothing.value, "\u21D0")
        };
      }
      ;
      if (v.value1.value instanceof TokOperator && (v.value1.value.value0 instanceof Nothing && (v.value1.value.value1 === "\u21D0" && eq110(conf.unicode)(UnicodeNever.value)))) {
        return {
          leadingComments: v.value1.leadingComments,
          range: v.value1.range,
          trailingComments: v.value1.trailingComments,
          value: new TokOperator(Nothing.value, "<=")
        };
      }
      ;
      return v.value1;
    }();
    return space2(formatOneOrDelimited(formatType)(conf)(v.value0))(anchor(formatToken(conf)(unicodeArr)));
  };
};
var formatInstanceHead = function(conf) {
  return function(v) {
    var hdTypes = spaceBreak2(foldMap6(formatConstraints(conf))(v.value0.constraints))(flexGroup2(space2(formatQualifiedName(conf)(v.value0.className))(indent2(joinWithMap2(spaceBreak2)(formatType(conf))(v.value0.types)))));
    if (v.value0.name instanceof Just) {
      return space2(flexSpaceBreak(space2(space2(formatToken(conf)(v.value0.keyword))(anchor(formatName(conf)(v.value0.name.value0.value0))))(anchor(formatToken(conf)(v.value0.name.value0.value1))))(indent2(hdTypes)))(indent2(foldMap6(formatToken(conf))(v.value1)));
    }
    ;
    if (v.value0.name instanceof Nothing) {
      return space2(flexSpaceBreak(formatToken(conf)(v.value0.keyword))(indent2(hdTypes)))(indent2(foldMap6(formatToken(conf))(v.value1)));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 600, column 3 - line 610, column 57): " + [v.value0.name.constructor.name]);
  };
};
var formatKindedTypeVarBindingPlain = function(conf) {
  return function(v) {
    return space2(formatName(conf)(v.label))(indent2(flexSpaceBreak(anchor(formatToken(conf)(v.separator)))(formatType(conf)(v.value))));
  };
};
var formatTypeVarBindingPlain = function(conf) {
  return function(v) {
    if (v instanceof TypeVarKinded) {
      return formatParensBlock(formatKindedTypeVarBindingPlain)(conf)(v.value0);
    }
    ;
    if (v instanceof TypeVarName) {
      return formatName(conf)(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 639, column 34 - line 643, column 22): " + [v.constructor.name]);
  };
};
var formatClassHead = function(conf) {
  return function(v) {
    var formatFundeps = function(v1) {
      return softBreak2(space2(formatToken(conf)(v1.value0))(formatListElem(2)(formatFundep)(conf)(v1.value1.head)))(joinWithMap2(softBreak2)(function(v2) {
        return space2(formatToken(conf)(v2.value0))(formatListElem(2)(formatFundep)(conf)(v2.value1));
      })(v1.value1.tail));
    };
    return flexSpaceBreak(formatToken(conf)(v.value0.keyword))(indent2(space2(spaceBreak2(spaceBreak2(anchor(foldMap6(formatConstraints(conf))(v["value0"]["super"])))(flexGroup2(spaceBreak2(formatName(conf)(v.value0.name))(joinWithMap2(spaceBreak2)(function() {
      var $1075 = formatTypeVarBindingPlain(conf);
      return function($1076) {
        return indent2($1075($1076));
      };
    }())(v.value0.vars)))))(flexGroup2(anchor(foldMap6(formatFundeps)(v.value0.fundeps)))))(foldMap6(formatToken(conf))(v.value1))));
  };
};
var formatDataHead = function(conf) {
  return function(v) {
    return space2(formatToken(conf)(v.keyword))(indent2(flexSpaceBreak(anchor(formatName(conf)(v.name)))(joinWithMap2(spaceBreak2)(formatTypeVarBindingPlain(conf))(v.vars))));
  };
};
var formatSignature = function(conf) {
  return function(v) {
    if (conf.typeArrowPlacement instanceof TypeArrowFirst) {
      var polytype = toPolytype(v.value);
      var isUnicode = function() {
        if (conf.unicode instanceof UnicodeAlways) {
          return true;
        }
        ;
        if (conf.unicode instanceof UnicodeNever) {
          return false;
        }
        ;
        if (conf.unicode instanceof UnicodeSource) {
          if (v.separator.value instanceof TokDoubleColon && v.separator.value.value0 instanceof Unicode) {
            return true;
          }
          ;
          return false;
        }
        ;
        throw new Error("Failed pattern match at Tidy (line 674, column 19 - line 680, column 23): " + [conf.unicode.constructor.name]);
      }();
      var width = function() {
        if (isUnicode) {
          return 2;
        }
        ;
        if (otherwise) {
          return 3;
        }
        ;
        throw new Error("Failed pattern match at Tidy (line 670, column 7 - line 672, column 24): " + []);
      }();
      var formattedPolytype = formatHangingPolytype(align2(width))(conf)(polytype);
      var $567 = $$null(polytype.init);
      if ($567) {
        return flexSpaceBreak(v.label)(indent2(space2(anchor(formatToken(conf)(v.separator)))(anchor(align2(width)(toFormatDoc(formattedPolytype))))));
      }
      ;
      return flexSpaceBreak(v.label)(indent2(space2(anchor(formatToken(conf)(v.separator)))(anchor(toFormatDoc(formattedPolytype)))));
    }
    ;
    if (conf.typeArrowPlacement instanceof TypeArrowLast) {
      return space2(v.label)(indent2(flexGroup2(spaceBreak2(anchor(formatToken(conf)(v.separator)))(anchor(flexGroup2(formatType(conf)(v.value)))))));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 653, column 3 - line 685, column 66): " + [conf.typeArrowPlacement.constructor.name]);
  };
};
var eqImportComparison = {
  eq: function(x) {
    return function(y) {
      if (x instanceof ImportClassCmp && y instanceof ImportClassCmp) {
        return eq211(x.value0)(y.value0);
      }
      ;
      if (x instanceof ImportTypeOpCmp && y instanceof ImportTypeOpCmp) {
        return eq310(x.value0)(y.value0);
      }
      ;
      if (x instanceof ImportTypeCmp && y instanceof ImportTypeCmp) {
        return eq211(x.value0)(y.value0) && x.value1 === y.value1 && eq510(x.value2)(y.value2);
      }
      ;
      if (x instanceof ImportValueCmp && y instanceof ImportValueCmp) {
        return eq610(x.value0)(y.value0);
      }
      ;
      if (x instanceof ImportOpCmp && y instanceof ImportOpCmp) {
        return eq310(x.value0)(y.value0);
      }
      ;
      if (x instanceof ImportErrorCmp && y instanceof ImportErrorCmp) {
        return true;
      }
      ;
      return false;
    };
  }
};
var eq102 = /* @__PURE__ */ eq(/* @__PURE__ */ eqArray(eqImportComparison));
var eqImportModuleComparison = {
  eq: function(x) {
    return function(y) {
      return eq73(x.value0)(y.value0) && x.value1 === y.value1 && eq102(x.value2)(y.value2) && eq92(x.value3)(y.value3);
    };
  }
};
var ordImportComparison = {
  compare: function(x) {
    return function(y) {
      if (x instanceof ImportClassCmp && y instanceof ImportClassCmp) {
        return compare74(x.value0)(y.value0);
      }
      ;
      if (x instanceof ImportClassCmp) {
        return LT.value;
      }
      ;
      if (y instanceof ImportClassCmp) {
        return GT.value;
      }
      ;
      if (x instanceof ImportTypeOpCmp && y instanceof ImportTypeOpCmp) {
        return compare110(x.value0)(y.value0);
      }
      ;
      if (x instanceof ImportTypeOpCmp) {
        return LT.value;
      }
      ;
      if (y instanceof ImportTypeOpCmp) {
        return GT.value;
      }
      ;
      if (x instanceof ImportTypeCmp && y instanceof ImportTypeCmp) {
        var v = compare74(x.value0)(y.value0);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        var v1 = compare210(x.value1)(y.value1);
        if (v1 instanceof LT) {
          return LT.value;
        }
        ;
        if (v1 instanceof GT) {
          return GT.value;
        }
        ;
        return compare310(x.value2)(y.value2);
      }
      ;
      if (x instanceof ImportTypeCmp) {
        return LT.value;
      }
      ;
      if (y instanceof ImportTypeCmp) {
        return GT.value;
      }
      ;
      if (x instanceof ImportValueCmp && y instanceof ImportValueCmp) {
        return compare410(x.value0)(y.value0);
      }
      ;
      if (x instanceof ImportValueCmp) {
        return LT.value;
      }
      ;
      if (y instanceof ImportValueCmp) {
        return GT.value;
      }
      ;
      if (x instanceof ImportOpCmp && y instanceof ImportOpCmp) {
        return compare110(x.value0)(y.value0);
      }
      ;
      if (x instanceof ImportOpCmp) {
        return LT.value;
      }
      ;
      if (y instanceof ImportOpCmp) {
        return GT.value;
      }
      ;
      if (x instanceof ImportErrorCmp && y instanceof ImportErrorCmp) {
        return EQ.value;
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return eqImportComparison;
  }
};
var compare82 = /* @__PURE__ */ compare(/* @__PURE__ */ ordArray(ordImportComparison));
var sortWith3 = /* @__PURE__ */ sortWith2(ordImportComparison);
var ordImportModuleComparison = {
  compare: function(x) {
    return function(y) {
      var v = compare510(x.value0)(y.value0);
      if (v instanceof LT) {
        return LT.value;
      }
      ;
      if (v instanceof GT) {
        return GT.value;
      }
      ;
      var v1 = compare610(x.value1)(y.value1);
      if (v1 instanceof LT) {
        return LT.value;
      }
      ;
      if (v1 instanceof GT) {
        return GT.value;
      }
      ;
      var v2 = compare82(x.value2)(y.value2);
      if (v2 instanceof LT) {
        return LT.value;
      }
      ;
      if (v2 instanceof GT) {
        return GT.value;
      }
      ;
      return compare75(x.value3)(y.value3);
    };
  },
  Eq0: function() {
    return eqImportModuleComparison;
  }
};
var sortWith12 = /* @__PURE__ */ sortWith(ordImportModuleComparison);
var sortImportsIde = function(v) {
  var toComparison = function(v12) {
    if (v12 instanceof ImportValue) {
      return new ImportValueCmp(v12.value0.name);
    }
    ;
    if (v12 instanceof ImportOp) {
      return new ImportOpCmp(v12.value0.name);
    }
    ;
    if (v12 instanceof ImportType && v12.value1 instanceof Nothing) {
      return new ImportTypeCmp(v12.value0.name, true, []);
    }
    ;
    if (v12 instanceof ImportType && (v12.value1 instanceof Just && v12.value1.value0 instanceof DataEnumerated)) {
      if (v12.value1.value0.value0.value instanceof Nothing) {
        return new ImportTypeCmp(v12.value0.name, true, []);
      }
      ;
      if (v12.value1.value0.value0.value instanceof Just) {
        return new ImportTypeCmp(v12.value0.name, true, map17(function() {
          var $1077 = un2(Name);
          return function($1078) {
            return function(v22) {
              return v22.name;
            }($1077($1078));
          };
        }())(cons3(v12.value1.value0.value0.value.value0.head)(map17(snd)(v12.value1.value0.value0.value.value0.tail))));
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 336, column 7 - line 340, column 104): " + [v12.value1.value0.value0.value.constructor.name]);
    }
    ;
    if (v12 instanceof ImportType && (v12.value1 instanceof Just && v12.value1.value0 instanceof DataAll)) {
      return new ImportTypeCmp(v12.value0.name, false, []);
    }
    ;
    if (v12 instanceof ImportTypeOp) {
      return new ImportTypeOpCmp(v12.value1.name);
    }
    ;
    if (v12 instanceof ImportClass) {
      return new ImportClassCmp(v12.value1.name);
    }
    ;
    if (v12 instanceof ImportError) {
      return ImportErrorCmp.value;
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 328, column 18 - line 348, column 21): " + [v12.constructor.name]);
  };
  var v1 = unzip(v.value.tail);
  var v2 = unzip2(sortWith3(fst)(map18(bindFlipped5(Tuple.create)(toComparison))(cons$prime(v.value.head)(v1.value1))));
  return new Tuple(toArray2(v2.value0), {
    open: v.open,
    value: {
      head: head3(v2.value1),
      tail: zip(v1.value0)(tail2(v2.value1))
    },
    close: v.close
  });
};
var defaultFormatOptions = function(dictFormatError) {
  return {
    formatError: formatError(dictFormatError),
    unicode: UnicodeSource.value,
    typeArrowPlacement: TypeArrowFirst.value,
    operators: empty2,
    importSort: ImportSortSource.value,
    importWrap: ImportWrapSource.value
  };
};
var declareHanging = function(label) {
  return function(spc) {
    return function(separator) {
      return function(value) {
        return spc(label)(toFormatDoc(hang(indent2(separator))(value)));
      };
    };
  };
};
var formatRecordLabeled = function(format) {
  return function(conf) {
    return function(v) {
      if (v instanceof RecordPun) {
        return formatName(conf)(v.value0);
      }
      ;
      if (v instanceof RecordField) {
        return declareHanging(formatName(conf)(v.value0))(append15)(anchor(formatToken(conf)(v.value1)))(format(conf)(v.value2));
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 1178, column 35 - line 1182, column 106): " + [v.constructor.name]);
    };
  };
};
var formatHangingBinder = function(conf) {
  return function(v) {
    if (v instanceof BinderWildcard) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof BinderVar) {
      return hangBreak(formatName(conf)(v.value0));
    }
    ;
    if (v instanceof BinderNamed) {
      return hangBreak(append15(formatName(conf)(v.value0))(flexSoftBreak(anchor(formatToken(conf)(v.value1)))(indent2(formatBinder(conf)(v.value2)))));
    }
    ;
    if (v instanceof BinderConstructor) {
      var ctorName = hangBreak(formatQualifiedName(conf)(v.value0));
      var v1 = fromArray(v.value1);
      if (v1 instanceof Nothing) {
        return ctorName;
      }
      ;
      if (v1 instanceof Just) {
        return hangApp(ctorName)(map18(formatHangingBinder(conf))(v1.value0));
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 1144, column 5 - line 1148, column 67): " + [v1.constructor.name]);
    }
    ;
    if (v instanceof BinderBoolean) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof BinderChar) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof BinderString) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof BinderInt) {
      return hangBreak(append15(foldMap6(formatToken(conf))(v.value0))(formatToken(conf)(v.value1)));
    }
    ;
    if (v instanceof BinderNumber) {
      return hangBreak(append15(foldMap6(formatToken(conf))(v.value0))(formatToken(conf)(v.value1)));
    }
    ;
    if (v instanceof BinderArray) {
      return hangBreak(formatBasicList(Grouped.value)(formatBinder)(conf)(v.value0));
    }
    ;
    if (v instanceof BinderRecord) {
      return hangBreak(formatBasicList(Grouped.value)(formatRecordLabeled(formatHangingBinder))(conf)(v.value0));
    }
    ;
    if (v instanceof BinderParens) {
      return hangBreak(formatParensBlock(formatBinder)(conf)(v.value0));
    }
    ;
    if (v instanceof BinderTyped) {
      return hangBreak(formatSignature(conf)({
        label: formatBinder(conf)(v.value0),
        separator: v.value1,
        value: v.value2
      }));
    }
    ;
    if (v instanceof BinderOp) {
      return formatHangingOperatorTree(formatQualifiedName)(formatHangingBinder)(conf)(toQualifiedOperatorTree(conf.operators)(OperatorValue.value)(v.value0)(v.value1));
    }
    ;
    if (v instanceof BinderError) {
      return hangBreak(conf.formatError(v.value0));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 1135, column 28 - line 1175, column 35): " + [v.constructor.name]);
  };
};
var formatBinder = function(conf) {
  var $1079 = formatHangingBinder(conf);
  return function($1080) {
    return toFormatDoc($1079($1080));
  };
};
var formatWhere = function(conf) {
  return function(v) {
    return $$break2(formatToken(conf)(v.value0))($lazy_formatLetGroups(1075)(conf)(toArray2(v.value1)));
  };
};
var formatValueBinding = function(conf) {
  return function(v) {
    if (v.guarded instanceof Unconditional) {
      return $$break2(space2(flexSpaceBreak(formatName(conf)(v.name))(indent2(joinWithMap2(spaceBreak2)(function() {
        var $1081 = formatBinder(conf);
        return function($1082) {
          return anchor($1081($1082));
        };
      }())(v.binders))))(toFormatDoc(hang(indent2(anchor(formatToken(conf)(v.guarded.value0))))(formatHangingExpr(conf)(v.guarded.value1.expr)))))(indent2(foldMap6(formatWhere(conf))(v.guarded.value1.bindings)));
    }
    ;
    if (v.guarded instanceof Guarded) {
      var valBinders = flexSpaceBreak(formatName(conf)(v.name))(indent2(joinWithMap2(spaceBreak2)(function() {
        var $1083 = formatBinder(conf);
        return function($1084) {
          return anchor(flexGroup2($1083($1084)));
        };
      }())(v.binders)));
      var $735 = length5(v.guarded.value0) === 1;
      if ($735) {
        return toFormatDoc(hang(valBinders)(formatGuardedExpr(conf)(head3(v.guarded.value0))));
      }
      ;
      return flexSpaceBreak(valBinders)(indent2(joinWithMap22($$break2)(function() {
        var $1085 = formatGuardedExpr(conf);
        return function($1086) {
          return toFormatDoc($1085($1086));
        };
      }())(v.guarded.value0)));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 1095, column 3 - line 1115, column 86): " + [v.guarded.constructor.name]);
  };
};
var formatRecordUpdate = function(conf) {
  return function(v) {
    if (v instanceof RecordUpdateLeaf) {
      return declareHanging(formatName(conf)(v.value0))(space2)(formatToken(conf)(v.value1))(formatHangingExpr(conf)(v.value2));
    }
    ;
    if (v instanceof RecordUpdateBranch) {
      return flexSpaceBreak(formatName(conf)(v.value0))(indent2(formatBasicListNonEmpty(Grouped.value)(formatRecordUpdate)(conf)(v.value1)));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 1009, column 27 - line 1014, column 66): " + [v.constructor.name]);
  };
};
var formatPatternGuard = function(conf) {
  return function(v) {
    if (v.binder instanceof Nothing) {
      return formatExpr(conf)(v.expr);
    }
    ;
    if (v.binder instanceof Just) {
      return space2(formatBinder(conf)(v.binder.value0.value0))(indent2(flexSpaceBreak(anchor(formatToken(conf)(v.binder.value0.value1)))(formatExpr(conf)(v.expr))));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 1064, column 59 - line 1070, column 46): " + [v.binder.constructor.name]);
  };
};
var formatLetBinding = function(conf) {
  return function(v) {
    if (v instanceof LetBindingSignature) {
      return formatSignature(conf)({
        separator: v.value0.separator,
        value: v.value0.value,
        label: formatName(conf)(v.value0.label)
      });
    }
    ;
    if (v instanceof LetBindingName) {
      return formatValueBinding(conf)(v.value0);
    }
    ;
    if (v instanceof LetBindingPattern) {
      return $$break2(space2(flexGroup2(formatBinder(conf)(v.value0)))(toFormatDoc(hang(indent2(anchor(formatToken(conf)(v.value1))))(formatHangingExpr(conf)(v.value2.expr)))))(indent2(foldMap6(formatWhere(conf))(v.value2.bindings)));
    }
    ;
    if (v instanceof LetBindingError) {
      return conf.formatError(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 1078, column 25 - line 1091, column 23): " + [v.constructor.name]);
  };
};
var formatHangingExprAppSpine = function(conf) {
  return function(v) {
    if (v instanceof AppType) {
      return hangBreak(append15(formatToken(conf)(v.value0))(formatType(conf)(v.value1)));
    }
    ;
    if (v instanceof AppTerm) {
      return formatHangingExpr(conf)(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 968, column 34 - line 972, column 32): " + [v.constructor.name]);
  };
};
var formatHangingExpr = function(conf) {
  return function(v) {
    if (v instanceof ExprHole) {
      return hangBreak(formatName(conf)(v.value0));
    }
    ;
    if (v instanceof ExprSection) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof ExprIdent) {
      return hangBreak(formatQualifiedName(conf)(v.value0));
    }
    ;
    if (v instanceof ExprConstructor) {
      return hangBreak(formatQualifiedName(conf)(v.value0));
    }
    ;
    if (v instanceof ExprBoolean) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof ExprChar) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof ExprString) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof ExprInt) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof ExprNumber) {
      return hangBreak(formatToken(conf)(v.value0));
    }
    ;
    if (v instanceof ExprArray) {
      return hangBreak(formatBasicList(Grouped.value)(formatExpr)(conf)(v.value0));
    }
    ;
    if (v instanceof ExprRecord) {
      return hangBreak(formatBasicList(Grouped.value)(formatRecordLabeled(formatHangingExpr))(conf)(v.value0));
    }
    ;
    if (v instanceof ExprParens) {
      return hangBreak(formatParensBlock(formatExpr)(conf)(v.value0));
    }
    ;
    if (v instanceof ExprTyped) {
      return hangBreak(formatSignature(conf)({
        label: formatExpr(conf)(v.value0),
        separator: v.value1,
        value: v.value2
      }));
    }
    ;
    if (v instanceof ExprInfix) {
      return hangOps(formatHangingExpr(conf)(v.value0))(map18(function(v1) {
        return new HangingOp(3, formatParens(formatExpr)(conf)(v1.value0), formatHangingExpr(conf)(v1.value1));
      })(v.value1));
    }
    ;
    if (v instanceof ExprOp) {
      return formatHangingOperatorTree(formatQualifiedName)(formatHangingExpr)(conf)(toQualifiedOperatorTree(conf.operators)(OperatorValue.value)(v.value0)(v.value1));
    }
    ;
    if (v instanceof ExprOpName) {
      return hangBreak(formatQualifiedName(conf)(v.value0));
    }
    ;
    if (v instanceof ExprNegate) {
      return hangBreak(append15(formatToken(conf)(v.value0))(formatExpr(conf)(v.value1)));
    }
    ;
    if (v instanceof ExprRecordAccessor) {
      return hangBreak(append15(formatExpr(conf)(v.value0.expr))(indent2(foldMap33(anchor)([formatToken(conf)(v.value0.dot), formatName(conf)(v.value0.path.head), foldMap33(function(v1) {
        return append15(anchor(formatToken(conf)(v1.value0)))(anchor(formatName(conf)(v1.value1)));
      })(v.value0.path.tail)]))));
    }
    ;
    if (v instanceof ExprRecordUpdate) {
      return hang(formatExpr(conf)(v.value0))(hangBreak(formatBasicListNonEmpty(Grouped.value)(formatRecordUpdate)(conf)(v.value1)));
    }
    ;
    if (v instanceof ExprApp) {
      return hangApp(formatHangingExpr(conf)(v.value0))(map18(formatHangingExprAppSpine(conf))(v.value1));
    }
    ;
    if (v instanceof ExprLambda) {
      var binders = flexGroup2(joinWithMap22(spaceBreak2)(function() {
        var $1087 = formatBinder(conf);
        return function($1088) {
          return anchor($1087($1088));
        };
      }())(v.value0.binders));
      return hang(space2(append15(formatToken(conf)(v.value0.symbol))(alignCurrentColumn2(binders)))(indent2(anchor(formatToken(conf)(v.value0.arrow)))))(formatHangingExpr(conf)(v.value0.body));
    }
    ;
    if (v instanceof ExprIf) {
      return hangBreak(formatElseIfChain(conf)(toElseIfChain(v.value0)));
    }
    ;
    if (v instanceof ExprCase) {
      var caseHeadExprs = foldl4(function(doc) {
        return function(v1) {
          return spaceBreak2(append15(doc)(anchor(formatToken(conf)(v1.value0))))(flexGroup2(formatExpr(conf)(v1.value1)));
        };
      })(flexGroup2(formatExpr(conf)(v.value0.head.head)))(v.value0.head.tail);
      var caseHead = spaceBreak2(caseHeadExprs)(anchor(formatToken(conf)(v.value0.of)));
      return hang(flexSpaceBreak(formatToken(conf)(v.value0.keyword))(indent2(caseHead)))(hangBreak(joinWithMap22($$break2)(function() {
        var $1089 = formatCaseBranch(conf);
        return function($1090) {
          return flexGroup2($1089($1090));
        };
      }())(v.value0.branches)));
    }
    ;
    if (v instanceof ExprLet) {
      return hangBreak(spaceBreak2(spaceBreak2(formatToken(conf)(v.value0.keyword))(indent2($lazy_formatLetGroups(942)(conf)(toArray2(v.value0.bindings)))))(spaceBreak2(formatToken(conf)(v["value0"]["in"]))(indent2(flexGroup2(formatExpr(conf)(v.value0.body))))));
    }
    ;
    if (v instanceof ExprDo) {
      return hang(formatToken(conf)(v.value0.keyword))(hangBreak(joinWithMap22($$break2)(function() {
        var $1091 = formatDoStatement(conf);
        return function($1092) {
          return flexGroup2($1091($1092));
        };
      }())(v.value0.statements)));
    }
    ;
    if (v instanceof ExprAdo) {
      return hang(formatToken(conf)(v.value0.keyword))(hangBreak(flexSpaceBreak(joinWithMap2($$break2)(formatDoStatement(conf))(v.value0.statements))(flexSpaceBreak(formatToken(conf)(v["value0"]["in"]))(indent2(formatExpr(conf)(v.value0.result))))));
    }
    ;
    if (v instanceof ExprError) {
      return hangBreak(conf.formatError(v.value0));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 850, column 26 - line 965, column 35): " + [v.constructor.name]);
  };
};
var formatGuardedExpr = function(conf) {
  return function(v) {
    var patternGuards = softBreak2(formatListElem(2)(formatPatternGuard)(conf)(v.patterns.head))(formatListTail(2)(formatPatternGuard)(conf)(v.patterns.tail));
    return hangWithIndent(function() {
      var $1093 = align2(2);
      return function($1094) {
        return $1093(indent2($1094));
      };
    }())(hangBreak(space2(space2(formatToken(conf)(v.bar))(flexGroup2(patternGuards)))(anchor(formatToken(conf)(v.separator)))))(function() {
      if (v.where.bindings instanceof Nothing) {
        return [formatHangingExpr(conf)(v.where.expr)];
      }
      ;
      if (v.where.bindings instanceof Just) {
        return [formatHangingExpr(conf)(v.where.expr), hangBreak(formatWhere(conf)(v.where.bindings.value0))];
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 1051, column 5 - line 1057, column 10): " + [v.where.bindings.constructor.name]);
    }());
  };
};
var formatExpr = function(conf) {
  var $1095 = formatHangingExpr(conf);
  return function($1096) {
    return toFormatDoc($1095($1096));
  };
};
var formatElseIfChain = function(conf) {
  var $1097 = joinWithMap22(spaceBreak2)(function(v) {
    if (v instanceof IfThen) {
      return space2(flexSpaceBreak(formatToken(conf)(v.value0))(indent2(anchor(flexGroup2(formatExpr(conf)(v.value1))))))(toFormatDoc(hang(anchor(formatToken(conf)(v.value2)))(formatHangingExpr(conf)(v.value3))));
    }
    ;
    if (v instanceof ElseIfThen) {
      return space2(flexSpaceBreak(space2(formatToken(conf)(v.value0))(indent2(anchor(formatToken(conf)(v.value1)))))(indent2(anchor(flexGroup2(formatExpr(conf)(v.value2))))))(toFormatDoc(hang(anchor(formatToken(conf)(v.value3)))(formatHangingExpr(conf)(v.value4))));
    }
    ;
    if (v instanceof Else) {
      return toFormatDoc(hang(formatToken(conf)(v.value0))(formatHangingExpr(conf)(v.value1)));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 990, column 63 - line 1006, column 79): " + [v.constructor.name]);
  });
  return function($1098) {
    return flexGroup2($1097($1098));
  };
};
var formatDoStatement = function(conf) {
  return function(v) {
    if (v instanceof DoLet) {
      return flexSpaceBreak(formatToken(conf)(v.value0))(indent2($lazy_formatLetGroups(1121)(conf)(toArray2(v.value1))));
    }
    ;
    if (v instanceof DoDiscard) {
      return formatExpr(conf)(v.value0);
    }
    ;
    if (v instanceof DoBind) {
      return space2(flexGroup2(formatBinder(conf)(v.value0)))(toFormatDoc(hang(indent2(anchor(formatToken(conf)(v.value1))))(formatHangingExpr(conf)(v.value2))));
    }
    ;
    if (v instanceof DoError) {
      return conf.formatError(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 1118, column 26 - line 1129, column 23): " + [v.constructor.name]);
  };
};
var formatCaseBranch = function(conf) {
  return function(v) {
    var caseBinders = flexGroup2(foldl4(function(doc) {
      return function(v1) {
        return spaceBreak2(append15(doc)(indent2(anchor(formatToken(conf)(v1.value0)))))(flexGroup2(formatBinder(conf)(v1.value1)));
      };
    })(flexGroup2(formatBinder(conf)(v.value0.head)))(v.value0.tail));
    if (v.value1 instanceof Unconditional) {
      return $$break2(space2(caseBinders)(toFormatDoc(hang(formatToken(conf)(v.value1.value0))(formatHangingExpr(conf)(v.value1.value1.expr)))))(indent2(foldMap6(formatWhere(conf))(v.value1.value1.bindings)));
    }
    ;
    if (v.value1 instanceof Guarded) {
      var $864 = length5(v.value1.value0) === 1;
      if ($864) {
        return toFormatDoc(hang(caseBinders)(formatGuardedExpr(conf)(head3(v.value1.value0))));
      }
      ;
      return flexSpaceBreak(caseBinders)(indent2(joinWithMap22($$break2)(function() {
        var $1099 = formatGuardedExpr(conf);
        return function($1100) {
          return toFormatDoc($1099($1100));
        };
      }())(v.value1.value0)));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 1018, column 3 - line 1031, column 81): " + [v.value1.constructor.name]);
  };
};
var $lazy_formatLetGroups = /* @__PURE__ */ $runtime_lazy5("formatLetGroups", "Tidy", function() {
  var letGroup = function(v) {
    if (v instanceof LetBindingSignature) {
      return new DeclGroupValueSignature(v.value0.label.name);
    }
    ;
    if (v instanceof LetBindingName) {
      return new DeclGroupValue(v.value0.name.name);
    }
    ;
    if (v instanceof LetBindingPattern) {
      return DeclGroupUnknown.value;
    }
    ;
    if (v instanceof LetBindingError) {
      return DeclGroupUnknown.value;
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 1361, column 14 - line 1365, column 42): " + [v.constructor.name]);
  };
  var letDeclGroupSeparator = function(v) {
    return function(v1) {
      if (v1 instanceof DeclGroupValueSignature) {
        return DeclGroupHard.value;
      }
      ;
      return DeclGroupSame.value;
    };
  };
  return formatDeclGroups(letDeclGroupSeparator)(letGroup)(formatLetBinding);
});
var formatInstanceBinding = function(conf) {
  return function(v) {
    if (v instanceof InstanceBindingSignature) {
      return formatSignature(conf)(overLabel(formatName(conf))(v.value0));
    }
    ;
    if (v instanceof InstanceBindingName) {
      return formatValueBinding(conf)(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 619, column 30 - line 623, column 32): " + [v.constructor.name]);
  };
};
var formatInstance = function(conf) {
  return function(v) {
    if (v.body instanceof Nothing) {
      return formatInstanceHead(conf)(new Tuple(v.head, Nothing.value));
    }
    ;
    if (v.body instanceof Just) {
      return $$break2(formatInstanceHead(conf)(new Tuple(v.head, new Just(v.body.value0.value0))))(indent2(joinWithMap22($$break2)(formatInstanceBinding(conf))(v.body.value0.value1)));
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 591, column 49 - line 596, column 62): " + [v.body.constructor.name]);
  };
};
var formatDecl = function(conf) {
  return function(v) {
    if (v instanceof DeclData && v.value1 instanceof Just) {
      var formatDataElem = function(v1) {
        return space2(formatToken(conf)(v1.value0))(formatListElem(2)(formatDataCtor)(conf)(v1.value1));
      };
      var $899 = $$null(v.value1.value0.value1.tail);
      if ($899) {
        return declareHanging(formatDataHead(conf)(v.value0))(space2)(anchor(formatToken(conf)(v.value1.value0.value0)))(formatHangingDataCtor(conf)(v.value1.value0.value1.head));
      }
      ;
      return flexSpaceBreak(formatDataHead(conf)(v.value0))(indent2(spaceBreak2(formatDataElem(new Tuple(v.value1.value0.value0, v.value1.value0.value1.head)))(joinWithMap2(spaceBreak2)(formatDataElem)(v.value1.value0.value1.tail))));
    }
    ;
    if (v instanceof DeclData) {
      return formatDataHead(conf)(v.value0);
    }
    ;
    if (v instanceof DeclType) {
      return declareHanging(formatDataHead(conf)(v.value0))(space2)(anchor(formatToken(conf)(v.value1)))(formatHangingType(conf)(v.value2));
    }
    ;
    if (v instanceof DeclNewtype) {
      return declareHanging(formatDataHead(conf)(v.value0))(space2)(anchor(formatToken(conf)(v.value1)))(formatHangingDataCtor(conf)({
        name: v.value2,
        fields: [v.value3]
      }));
    }
    ;
    if (v instanceof DeclRole) {
      var words2 = [formatToken(conf)(v.value0), formatToken(conf)(v.value1), formatName(conf)(v.value2)];
      var roles = map18(function() {
        var $1101 = formatToken(conf);
        return function($1102) {
          return $1101(fst($1102));
        };
      }())(v.value3);
      return flatten2(append32(words2)(toArray2(roles)));
    }
    ;
    if (v instanceof DeclFixity) {
      if (v.value0.operator instanceof FixityValue) {
        return flatten2([formatToken(conf)(v.value0.keyword.value0), formatToken(conf)(v.value0.prec.value0), formatQualifiedName(conf)(v.value0.operator.value0), formatToken(conf)(v.value0.operator.value1), formatName(conf)(v.value0.operator.value2)]);
      }
      ;
      if (v.value0.operator instanceof FixityType) {
        return flatten2([formatToken(conf)(v.value0.keyword.value0), formatToken(conf)(v.value0.prec.value0), formatToken(conf)(v.value0.operator.value0), formatQualifiedName(conf)(v.value0.operator.value1), formatToken(conf)(v.value0.operator.value2), formatName(conf)(v.value0.operator.value3)]);
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 424, column 5 - line 441, column 12): " + [v.value0.operator.constructor.name]);
    }
    ;
    if (v instanceof DeclKindSignature) {
      return formatSignature(conf)({
        label: flatten2([formatToken(conf)(v.value0), formatName(conf)(v.value1.label)]),
        separator: v.value1.separator,
        value: v.value1.value
      });
    }
    ;
    if (v instanceof DeclForeign) {
      if (v.value2 instanceof ForeignValue) {
        return formatSignature(conf)(overLabel(function(label) {
          return flatten2([formatToken(conf)(v.value0), formatToken(conf)(v.value1), formatName(conf)(label)]);
        })(v.value2.value0));
      }
      ;
      if (v.value2 instanceof ForeignData) {
        return formatSignature(conf)(overLabel(function(label) {
          return flatten2([formatToken(conf)(v.value0), formatToken(conf)(v.value1), formatToken(conf)(v.value2.value0), formatName(conf)(label)]);
        })(v.value2.value1));
      }
      ;
      if (v.value2 instanceof ForeignKind) {
        return flatten2([formatToken(conf)(v.value0), formatToken(conf)(v.value1), formatToken(conf)(v.value2.value0), formatName(conf)(v.value2.value1)]);
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 455, column 5 - line 483, column 12): " + [v.value2.constructor.name]);
    }
    ;
    if (v instanceof DeclClass) {
      if (v.value1 instanceof Nothing) {
        return formatClassHead(conf)(new Tuple(v.value0, Nothing.value));
      }
      ;
      if (v.value1 instanceof Just) {
        return $$break2(formatClassHead(conf)(new Tuple(v.value0, new Just(v.value1.value0.value0))))(indent2(joinWithMap22($$break2)(function() {
          var $1103 = formatSignature(conf);
          var $1104 = overLabel(formatName(conf));
          return function($1105) {
            return $1103($1104($1105));
          };
        }())(v.value1.value0.value1)));
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 486, column 5 - line 494, column 19): " + [v.value1.constructor.name]);
    }
    ;
    if (v instanceof DeclInstanceChain) {
      return $$break2(formatInstance(conf)(v.value0.head))(joinWithMap2($$break2)(function(v1) {
        return space2(formatToken(conf)(v1.value0))(anchor(formatInstance(conf)(v1.value1)));
      })(v.value0.tail));
    }
    ;
    if (v instanceof DeclDerive) {
      return space2(space2(formatToken(conf)(v.value0))(foldMap6(function() {
        var $1106 = formatToken(conf);
        return function($1107) {
          return indent2(anchor($1106($1107)));
        };
      }())(v.value1)))(anchor(formatInstanceHead(conf)(new Tuple(v.value2, Nothing.value))));
    }
    ;
    if (v instanceof DeclSignature) {
      return formatSignature(conf)(overLabel(function() {
        var $1108 = formatName(conf);
        return function($1109) {
          return flatten2(pure12($1108($1109)));
        };
      }())(v.value0));
    }
    ;
    if (v instanceof DeclValue) {
      return formatValueBinding(conf)(v.value0);
    }
    ;
    if (v instanceof DeclError) {
      return conf.formatError(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 377, column 19 - line 515, column 23): " + [v.constructor.name]);
  };
};
var formatTopLevelGroups = /* @__PURE__ */ function() {
  var topDeclGroupSeparator = function(v) {
    return function(v1) {
      if (v instanceof DeclGroupValue && v1 instanceof DeclGroupValue) {
        var $968 = eq610(v.value0)(v1.value0);
        if ($968) {
          return DeclGroupSame.value;
        }
        ;
        return DeclGroupSoft.value;
      }
      ;
      if (v instanceof DeclGroupValueSignature && v1 instanceof DeclGroupValue) {
        var $971 = eq610(v.value0)(v1.value0);
        if ($971) {
          return DeclGroupSame.value;
        }
        ;
        return DeclGroupHard.value;
      }
      ;
      if (v1 instanceof DeclGroupValueSignature) {
        return DeclGroupHard.value;
      }
      ;
      if (v instanceof DeclGroupType && v1 instanceof DeclGroupType) {
        return DeclGroupSoft.value;
      }
      ;
      if (v instanceof DeclGroupTypeSignature && v1 instanceof DeclGroupType) {
        var $977 = eq211(v.value0)(v1.value0);
        if ($977) {
          return DeclGroupSame.value;
        }
        ;
        return DeclGroupHard.value;
      }
      ;
      if (v instanceof DeclGroupTypeSignature && v1 instanceof DeclGroupClass) {
        var $980 = eq211(v.value0)(v1.value0);
        if ($980) {
          return DeclGroupSame.value;
        }
        ;
        return DeclGroupHard.value;
      }
      ;
      if (v1 instanceof DeclGroupTypeSignature) {
        return DeclGroupHard.value;
      }
      ;
      if (v instanceof DeclGroupClass && v1 instanceof DeclGroupClass) {
        return DeclGroupSoft.value;
      }
      ;
      if (v1 instanceof DeclGroupClass) {
        return DeclGroupHard.value;
      }
      ;
      if (v instanceof DeclGroupInstance && v1 instanceof DeclGroupInstance) {
        return DeclGroupSoft.value;
      }
      ;
      if (v1 instanceof DeclGroupInstance) {
        return DeclGroupHard.value;
      }
      ;
      if (v instanceof DeclGroupFixity && v1 instanceof DeclGroupFixity) {
        return DeclGroupSoft.value;
      }
      ;
      if (v1 instanceof DeclGroupFixity) {
        return DeclGroupHard.value;
      }
      ;
      if (v instanceof DeclGroupForeign && v1 instanceof DeclGroupForeign) {
        return DeclGroupSoft.value;
      }
      ;
      if (v1 instanceof DeclGroupForeign) {
        return DeclGroupHard.value;
      }
      ;
      if (v instanceof DeclGroupRole && v1 instanceof DeclGroupRole) {
        return DeclGroupSoft.value;
      }
      ;
      if (v1 instanceof DeclGroupRole) {
        return DeclGroupHard.value;
      }
      ;
      return DeclGroupSoft.value;
    };
  };
  var topDeclGroup = function(v) {
    if (v instanceof DeclData) {
      return new DeclGroupType(v.value0.name.name);
    }
    ;
    if (v instanceof DeclType) {
      return new DeclGroupType(v.value0.name.name);
    }
    ;
    if (v instanceof DeclNewtype) {
      return new DeclGroupType(v.value0.name.name);
    }
    ;
    if (v instanceof DeclClass) {
      return new DeclGroupClass(v.value0.name.name);
    }
    ;
    if (v instanceof DeclKindSignature) {
      return new DeclGroupTypeSignature(v.value1.label.name);
    }
    ;
    if (v instanceof DeclSignature) {
      return new DeclGroupValueSignature(v.value0.label.name);
    }
    ;
    if (v instanceof DeclValue) {
      return new DeclGroupValue(v.value0.name.name);
    }
    ;
    if (v instanceof DeclInstanceChain) {
      return DeclGroupInstance.value;
    }
    ;
    if (v instanceof DeclDerive) {
      return DeclGroupInstance.value;
    }
    ;
    if (v instanceof DeclFixity) {
      return DeclGroupFixity.value;
    }
    ;
    if (v instanceof DeclForeign) {
      return DeclGroupForeign.value;
    }
    ;
    if (v instanceof DeclRole) {
      return DeclGroupRole.value;
    }
    ;
    if (v instanceof DeclError) {
      return DeclGroupUnknown.value;
    }
    ;
    throw new Error("Failed pattern match at Tidy (line 1339, column 18 - line 1352, column 36): " + [v.constructor.name]);
  };
  return formatDeclGroups(topDeclGroupSeparator)(topDeclGroup)(formatDecl);
}();
var formatModule = function(conf) {
  return function(v) {
    var formatImports = function(k) {
      return joinWithMap2($$break2)(function() {
        var $1110 = formatImportDecl(conf);
        return function($1111) {
          return k($1110($1111));
        };
      }());
    };
    var imports = function() {
      if (conf.importSort instanceof ImportSortSource) {
        return formatImports(identity16)(v.header.imports);
      }
      ;
      if (conf.importSort instanceof ImportSortIde) {
        var toComparison = function(v12) {
          var modName = nameOf(v12.module);
          var qualName = map23(function($1112) {
            return nameOf(snd($1112));
          })(v12.qualified);
          if (v12.names instanceof Just) {
            var v2 = sortImportsIde(v12.names.value0.value1);
            var order = function() {
              var $1036 = isJust(v12.names.value0.value0);
              if ($1036) {
                return 3;
              }
              ;
              return 1;
            }();
            return new Tuple(new ImportModuleCmp(modName, order, v2.value0, qualName), {
              keyword: v12.keyword,
              module: v12.module,
              qualified: v12.qualified,
              names: new Just(new Tuple(v12.names.value0.value0, v2.value1))
            });
          }
          ;
          if (v12.names instanceof Nothing) {
            return new Tuple(new ImportModuleCmp(modName, 2, [], qualName), v12);
          }
          ;
          throw new Error("Failed pattern match at Tidy (line 242, column 11 - line 248, column 78): " + [v12.names.constructor.name]);
        };
        var sorted = map17(snd)(sortWith12(fst)(map17(toComparison)(v.header.imports)));
        var isOpenImport = function(v12) {
          if (v12.qualified instanceof Nothing && v12.names instanceof Nothing) {
            return true;
          }
          ;
          if (v12.qualified instanceof Nothing && (v12.names instanceof Just && v12.names.value0.value0 instanceof Just)) {
            return true;
          }
          ;
          return false;
        };
        var v1 = partition2(isOpenImport)(sorted);
        return append15(formatImports(flatten)(v1.yes))(forceMinSourceBreaks(2)(formatImports(flatten)(v1.no)));
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 225, column 5 - line 256, column 18): " + [conf.importSort.constructor.name]);
    }();
    return joinWith3($$break2)([space2(anchor(formatToken(conf)(v.header.keyword)))(indent2(space2(flexSpaceBreak(anchor(formatName(conf)(v.header.name)))(anchor(foldMap6(formatParenListNonEmpty(NotGrouped.value)(formatExport)(conf))(v.header.exports))))(anchor(formatToken(conf)(v.header.where))))), forceMinSourceBreaks(2)(function() {
      if (conf.importWrap instanceof ImportWrapAuto) {
        return imports;
      }
      ;
      if (conf.importWrap instanceof ImportWrapSource) {
        return locally2(function(v1) {
          return {
            indent: v1.indent,
            indentSpaces: v1.indentSpaces,
            indentUnit: v1.indentUnit,
            indentWidth: v1.indentWidth,
            pageWidth: top3,
            ribbonRatio: 1
          };
        })(imports);
      }
      ;
      throw new Error("Failed pattern match at Tidy (line 212, column 30 - line 216, column 69): " + [conf.importWrap.constructor.name]);
    }()), forceMinSourceBreaks(2)(formatTopLevelGroups(conf)(v.body.decls)), foldr7(formatComment(leadingLineComment)(leadingBlockComment))(mempty6)(v.body.trailingComments)]);
  };
};

// output/PureScript.CST.Errors/index.js
var ExpectedEof = /* @__PURE__ */ function() {
  function ExpectedEof2(value0) {
    this.value0 = value0;
  }
  ;
  ExpectedEof2.create = function(value0) {
    return new ExpectedEof2(value0);
  };
  return ExpectedEof2;
}();
var LexExpected = /* @__PURE__ */ function() {
  function LexExpected2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  LexExpected2.create = function(value0) {
    return function(value1) {
      return new LexExpected2(value0, value1);
    };
  };
  return LexExpected2;
}();
var LexInvalidCharEscape = /* @__PURE__ */ function() {
  function LexInvalidCharEscape2(value0) {
    this.value0 = value0;
  }
  ;
  LexInvalidCharEscape2.create = function(value0) {
    return new LexInvalidCharEscape2(value0);
  };
  return LexInvalidCharEscape2;
}();
var LexCharEscapeOutOfRange = /* @__PURE__ */ function() {
  function LexCharEscapeOutOfRange2(value0) {
    this.value0 = value0;
  }
  ;
  LexCharEscapeOutOfRange2.create = function(value0) {
    return new LexCharEscapeOutOfRange2(value0);
  };
  return LexCharEscapeOutOfRange2;
}();
var LexNumberOutOfRange = /* @__PURE__ */ function() {
  function LexNumberOutOfRange2(value0) {
    this.value0 = value0;
  }
  ;
  LexNumberOutOfRange2.create = function(value0) {
    return new LexNumberOutOfRange2(value0);
  };
  return LexNumberOutOfRange2;
}();

// output/PureScript.CST.Layout/index.js
var find3 = /* @__PURE__ */ find(foldableList);
var LytRoot = /* @__PURE__ */ function() {
  function LytRoot2() {
  }
  ;
  LytRoot2.value = new LytRoot2();
  return LytRoot2;
}();
var LytTopDecl = /* @__PURE__ */ function() {
  function LytTopDecl2() {
  }
  ;
  LytTopDecl2.value = new LytTopDecl2();
  return LytTopDecl2;
}();
var LytTopDeclHead = /* @__PURE__ */ function() {
  function LytTopDeclHead2() {
  }
  ;
  LytTopDeclHead2.value = new LytTopDeclHead2();
  return LytTopDeclHead2;
}();
var LytDeclGuard = /* @__PURE__ */ function() {
  function LytDeclGuard2() {
  }
  ;
  LytDeclGuard2.value = new LytDeclGuard2();
  return LytDeclGuard2;
}();
var LytCase = /* @__PURE__ */ function() {
  function LytCase2() {
  }
  ;
  LytCase2.value = new LytCase2();
  return LytCase2;
}();
var LytCaseBinders = /* @__PURE__ */ function() {
  function LytCaseBinders2() {
  }
  ;
  LytCaseBinders2.value = new LytCaseBinders2();
  return LytCaseBinders2;
}();
var LytCaseGuard = /* @__PURE__ */ function() {
  function LytCaseGuard2() {
  }
  ;
  LytCaseGuard2.value = new LytCaseGuard2();
  return LytCaseGuard2;
}();
var LytLambdaBinders = /* @__PURE__ */ function() {
  function LytLambdaBinders2() {
  }
  ;
  LytLambdaBinders2.value = new LytLambdaBinders2();
  return LytLambdaBinders2;
}();
var LytParen = /* @__PURE__ */ function() {
  function LytParen2() {
  }
  ;
  LytParen2.value = new LytParen2();
  return LytParen2;
}();
var LytBrace = /* @__PURE__ */ function() {
  function LytBrace2() {
  }
  ;
  LytBrace2.value = new LytBrace2();
  return LytBrace2;
}();
var LytSquare = /* @__PURE__ */ function() {
  function LytSquare2() {
  }
  ;
  LytSquare2.value = new LytSquare2();
  return LytSquare2;
}();
var LytIf = /* @__PURE__ */ function() {
  function LytIf2() {
  }
  ;
  LytIf2.value = new LytIf2();
  return LytIf2;
}();
var LytThen = /* @__PURE__ */ function() {
  function LytThen2() {
  }
  ;
  LytThen2.value = new LytThen2();
  return LytThen2;
}();
var LytProperty = /* @__PURE__ */ function() {
  function LytProperty2() {
  }
  ;
  LytProperty2.value = new LytProperty2();
  return LytProperty2;
}();
var LytForall = /* @__PURE__ */ function() {
  function LytForall2() {
  }
  ;
  LytForall2.value = new LytForall2();
  return LytForall2;
}();
var LytTick = /* @__PURE__ */ function() {
  function LytTick2() {
  }
  ;
  LytTick2.value = new LytTick2();
  return LytTick2;
}();
var LytLet = /* @__PURE__ */ function() {
  function LytLet2() {
  }
  ;
  LytLet2.value = new LytLet2();
  return LytLet2;
}();
var LytLetStmt = /* @__PURE__ */ function() {
  function LytLetStmt2() {
  }
  ;
  LytLetStmt2.value = new LytLetStmt2();
  return LytLetStmt2;
}();
var LytWhere = /* @__PURE__ */ function() {
  function LytWhere2() {
  }
  ;
  LytWhere2.value = new LytWhere2();
  return LytWhere2;
}();
var LytOf = /* @__PURE__ */ function() {
  function LytOf2() {
  }
  ;
  LytOf2.value = new LytOf2();
  return LytOf2;
}();
var LytDo = /* @__PURE__ */ function() {
  function LytDo2() {
  }
  ;
  LytDo2.value = new LytDo2();
  return LytDo2;
}();
var LytAdo = /* @__PURE__ */ function() {
  function LytAdo2() {
  }
  ;
  LytAdo2.value = new LytAdo2();
  return LytAdo2;
}();
var lytToken = function(pos) {
  return function(value) {
    return {
      range: {
        start: pos,
        end: pos
      },
      leadingComments: [],
      trailingComments: [],
      value
    };
  };
};
var isTopDecl = function(tokPos) {
  return function(v) {
    if (v instanceof Cons && (v.value0.value1 instanceof LytWhere && (v.value1 instanceof Cons && (v.value1.value0.value1 instanceof LytRoot && (v.value1.value1 instanceof Nil && tokPos.column === v.value0.value0.column))))) {
      return true;
    }
    ;
    return false;
  };
};
var isIndented = function(v) {
  if (v instanceof LytLet) {
    return true;
  }
  ;
  if (v instanceof LytLetStmt) {
    return true;
  }
  ;
  if (v instanceof LytWhere) {
    return true;
  }
  ;
  if (v instanceof LytOf) {
    return true;
  }
  ;
  if (v instanceof LytDo) {
    return true;
  }
  ;
  if (v instanceof LytAdo) {
    return true;
  }
  ;
  return false;
};
var eqLayoutDelim = {
  eq: function(x) {
    return function(y) {
      if (x instanceof LytRoot && y instanceof LytRoot) {
        return true;
      }
      ;
      if (x instanceof LytTopDecl && y instanceof LytTopDecl) {
        return true;
      }
      ;
      if (x instanceof LytTopDeclHead && y instanceof LytTopDeclHead) {
        return true;
      }
      ;
      if (x instanceof LytDeclGuard && y instanceof LytDeclGuard) {
        return true;
      }
      ;
      if (x instanceof LytCase && y instanceof LytCase) {
        return true;
      }
      ;
      if (x instanceof LytCaseBinders && y instanceof LytCaseBinders) {
        return true;
      }
      ;
      if (x instanceof LytCaseGuard && y instanceof LytCaseGuard) {
        return true;
      }
      ;
      if (x instanceof LytLambdaBinders && y instanceof LytLambdaBinders) {
        return true;
      }
      ;
      if (x instanceof LytParen && y instanceof LytParen) {
        return true;
      }
      ;
      if (x instanceof LytBrace && y instanceof LytBrace) {
        return true;
      }
      ;
      if (x instanceof LytSquare && y instanceof LytSquare) {
        return true;
      }
      ;
      if (x instanceof LytIf && y instanceof LytIf) {
        return true;
      }
      ;
      if (x instanceof LytThen && y instanceof LytThen) {
        return true;
      }
      ;
      if (x instanceof LytProperty && y instanceof LytProperty) {
        return true;
      }
      ;
      if (x instanceof LytForall && y instanceof LytForall) {
        return true;
      }
      ;
      if (x instanceof LytTick && y instanceof LytTick) {
        return true;
      }
      ;
      if (x instanceof LytLet && y instanceof LytLet) {
        return true;
      }
      ;
      if (x instanceof LytLetStmt && y instanceof LytLetStmt) {
        return true;
      }
      ;
      if (x instanceof LytWhere && y instanceof LytWhere) {
        return true;
      }
      ;
      if (x instanceof LytOf && y instanceof LytOf) {
        return true;
      }
      ;
      if (x instanceof LytDo && y instanceof LytDo) {
        return true;
      }
      ;
      if (x instanceof LytAdo && y instanceof LytAdo) {
        return true;
      }
      ;
      return false;
    };
  }
};
var eq111 = /* @__PURE__ */ eq(eqLayoutDelim);
var insertLayout = function(v) {
  return function(nextPos) {
    return function(stack) {
      var sepP = function(lytPos) {
        return v.range.start.column === lytPos.column && v.range.start.line !== lytPos.line;
      };
      var pushStack = function(lytPos) {
        return function(lyt) {
          return function(v1) {
            return new Tuple(new Cons(new Tuple(lytPos, lyt), v1.value0), v1.value1);
          };
        };
      };
      var popStack = function(v1) {
        return function(v2) {
          if (v2.value0 instanceof Cons && v1(v2.value0.value0.value1)) {
            return new Tuple(v2.value0.value1, v2.value1);
          }
          ;
          return v2;
        };
      };
      var offsideP = function(lytPos) {
        return function(lyt) {
          return isIndented(lyt) && v.range.start.column < lytPos.column;
        };
      };
      var offsideEndP = function(lytPos) {
        return function(lyt) {
          return isIndented(lyt) && v.range.start.column <= lytPos.column;
        };
      };
      var insertToken = function(token2) {
        return function(v1) {
          return new Tuple(v1.value0, snoc2(v1.value1)(new Tuple(token2, v1.value0)));
        };
      };
      var insertStart = function(lyt) {
        return function(v1) {
          var v2 = find3(function($307) {
            return isIndented(snd($307));
          })(v1.value0);
          if (v2 instanceof Just && nextPos.column <= v2.value0.value0.column) {
            return v1;
          }
          ;
          return insertToken(lytToken(nextPos)(new TokLayoutStart(nextPos.column)))(pushStack(nextPos)(lyt)(v1));
        };
      };
      var insertEnd = function(indent3) {
        return insertToken(lytToken(v.range.start)(new TokLayoutEnd(indent3)));
      };
      var indentedP = $$const(isIndented);
      var indentSepP = function(lytPos) {
        return function(lyt) {
          return isIndented(lyt) && sepP(lytPos);
        };
      };
      var insertSep = function(v1) {
        var sepTok = lytToken(v.range.start)(new TokLayoutSep(v.range.start.column));
        if (v1.value0 instanceof Cons && (v1.value0.value0.value1 instanceof LytTopDecl && sepP(v1.value0.value0.value0))) {
          return insertToken(sepTok)(new Tuple(v1.value0.value1, v1.value1));
        }
        ;
        if (v1.value0 instanceof Cons && (v1.value0.value0.value1 instanceof LytTopDeclHead && sepP(v1.value0.value0.value0))) {
          return insertToken(sepTok)(new Tuple(v1.value0.value1, v1.value1));
        }
        ;
        if (v1.value0 instanceof Cons && indentSepP(v1.value0.value0.value0)(v1.value0.value0.value1)) {
          if (v1.value0.value0.value1 instanceof LytOf) {
            return pushStack(v.range.start)(LytCaseBinders.value)(insertToken(sepTok)(v1));
          }
          ;
          return insertToken(sepTok)(v1);
        }
        ;
        return v1;
      };
      var collapse = function(p) {
        var go = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v1 instanceof Cons && p(v1.value0.value0)(v1.value0.value1)) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = function() {
                  var $120 = isIndented(v1.value0.value1);
                  if ($120) {
                    return snoc2(v2)(new Tuple(lytToken(v.range.start)(new TokLayoutEnd(v1.value0.value0.column)), v1.value1));
                  }
                  ;
                  return v2;
                }();
                return;
              }
              ;
              $tco_done = true;
              return new Tuple(v1, v2);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        return uncurry(go);
      };
      var insertDefault = function(state2) {
        return insertToken(v)(insertSep(collapse(offsideP)(state2)));
      };
      var insertKwProperty = function(k) {
        return function(state2) {
          var v1 = insertDefault(state2);
          if (v1.value0 instanceof Cons && v1.value0.value0.value1 instanceof LytProperty) {
            return new Tuple(v1.value0.value1, v1.value1);
          }
          ;
          return k(v1);
        };
      };
      var insert9 = function(v1) {
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "data")) {
          var v2 = insertDefault(v1);
          if (isTopDecl(v.range.start)(v2.value0)) {
            return pushStack(v.range.start)(LytTopDecl.value)(v2);
          }
          ;
          return popStack(function(v32) {
            return eq111(v32)(LytProperty.value);
          })(v2);
        }
        ;
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "class")) {
          var v2 = insertDefault(v1);
          if (isTopDecl(v.range.start)(v2.value0)) {
            return pushStack(v.range.start)(LytTopDeclHead.value)(v2);
          }
          ;
          return popStack(function(v32) {
            return eq111(v32)(LytProperty.value);
          })(v2);
        }
        ;
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "where")) {
          var whereP = function(v22) {
            return function(v32) {
              if (v32 instanceof LytDo) {
                return true;
              }
              ;
              return offsideEndP(v22)(v32);
            };
          };
          if (v1.value0 instanceof Cons && v1.value0.value0.value1 instanceof LytTopDeclHead) {
            return insertStart(LytWhere.value)(insertToken(v)(new Tuple(v1.value0.value1, v1.value1)));
          }
          ;
          if (v1.value0 instanceof Cons && v1.value0.value0.value1 instanceof LytProperty) {
            return insertToken(v)(new Tuple(v1.value0.value1, v1.value1));
          }
          ;
          return insertStart(LytWhere.value)(insertToken(v)(collapse(whereP)(v1)));
        }
        ;
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "in")) {
          var inP = function(v22) {
            return function(v32) {
              if (v32 instanceof LytLet) {
                return false;
              }
              ;
              if (v32 instanceof LytAdo) {
                return false;
              }
              ;
              return isIndented(v32);
            };
          };
          var v2 = collapse(inP)(v1);
          if (v2.value0 instanceof Cons && (v2.value0.value0.value1 instanceof LytLetStmt && (v2.value0.value1 instanceof Cons && v2.value0.value1.value0.value1 instanceof LytAdo))) {
            return insertToken(v)(insertEnd(v2.value0.value1.value0.value0.column)(insertEnd(v2.value0.value0.value0.column)(new Tuple(v2.value0.value1.value1, v2.value1))));
          }
          ;
          if (v2.value0 instanceof Cons && isIndented(v2.value0.value0.value1)) {
            return insertToken(v)(insertEnd(v2.value0.value0.value0.column)(new Tuple(v2.value0.value1, v2.value1)));
          }
          ;
          return popStack(function(v32) {
            return eq111(v32)(LytProperty.value);
          })(insertDefault(v1));
        }
        ;
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "let")) {
          var next2 = function(v22) {
            if (v22.value0 instanceof Cons && (v22.value0.value0.value1 instanceof LytDo && v22.value0.value0.value0.column === v.range.start.column)) {
              return insertStart(LytLetStmt.value)(v22);
            }
            ;
            if (v22.value0 instanceof Cons && (v22.value0.value0.value1 instanceof LytAdo && v22.value0.value0.value0.column === v.range.start.column)) {
              return insertStart(LytLetStmt.value)(v22);
            }
            ;
            return insertStart(LytLet.value)(v22);
          };
          return insertKwProperty(next2)(v1);
        }
        ;
        if (v.value instanceof TokLowerName && v.value.value1 === "do") {
          return insertKwProperty(insertStart(LytDo.value))(v1);
        }
        ;
        if (v.value instanceof TokLowerName && v.value.value1 === "ado") {
          return insertKwProperty(insertStart(LytAdo.value))(v1);
        }
        ;
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "case")) {
          return insertKwProperty(pushStack(v.range.start)(LytCase.value))(v1);
        }
        ;
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "of")) {
          var v2 = collapse(indentedP)(v1);
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytCase) {
            return pushStack(nextPos)(LytCaseBinders.value)(insertStart(LytOf.value)(insertToken(v)(new Tuple(v2.value0.value1, v2.value1))));
          }
          ;
          return popStack(function(v32) {
            return eq111(v32)(LytProperty.value);
          })(insertDefault(v2));
        }
        ;
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "if")) {
          return insertKwProperty(pushStack(v.range.start)(LytIf.value))(v1);
        }
        ;
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "then")) {
          var v2 = collapse(indentedP)(v1);
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytIf) {
            return pushStack(v.range.start)(LytThen.value)(insertToken(v)(new Tuple(v2.value0.value1, v2.value1)));
          }
          ;
          return popStack(function(v32) {
            return eq111(v32)(LytProperty.value);
          })(insertDefault(v1));
        }
        ;
        if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "else")) {
          var v2 = collapse(indentedP)(v1);
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytThen) {
            return insertToken(v)(new Tuple(v2.value0.value1, v2.value1));
          }
          ;
          var v3 = collapse(offsideP)(v1);
          if (isTopDecl(v.range.start)(v3.value0)) {
            return insertToken(v)(v3);
          }
          ;
          return popStack(function(v4) {
            return eq111(v4)(LytProperty.value);
          })(insertToken(v)(insertSep(v3)));
        }
        ;
        if (v.value instanceof TokForall) {
          return insertKwProperty(pushStack(v.range.start)(LytForall.value))(v1);
        }
        ;
        if (v.value instanceof TokBackslash) {
          return pushStack(v.range.start)(LytLambdaBinders.value)(insertDefault(v1));
        }
        ;
        if (v.value instanceof TokRightArrow) {
          var guardP = function(v22) {
            if (v22 instanceof LytCaseBinders) {
              return true;
            }
            ;
            if (v22 instanceof LytCaseGuard) {
              return true;
            }
            ;
            if (v22 instanceof LytLambdaBinders) {
              return true;
            }
            ;
            return false;
          };
          var arrowP = function(v22) {
            return function(v32) {
              if (v32 instanceof LytDo) {
                return true;
              }
              ;
              if (v32 instanceof LytOf) {
                return false;
              }
              ;
              return offsideEndP(v22)(v32);
            };
          };
          return insertToken(v)(popStack(guardP)(collapse(arrowP)(v1)));
        }
        ;
        if (v.value instanceof TokEquals) {
          var equalsP = function(v22) {
            return function(v32) {
              if (v32 instanceof LytWhere) {
                return true;
              }
              ;
              if (v32 instanceof LytLet) {
                return true;
              }
              ;
              if (v32 instanceof LytLetStmt) {
                return true;
              }
              ;
              return false;
            };
          };
          var v2 = collapse(equalsP)(v1);
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytDeclGuard) {
            return insertToken(v)(new Tuple(v2.value0.value1, v2.value1));
          }
          ;
          return insertDefault(v1);
        }
        ;
        if (v.value instanceof TokPipe) {
          var v2 = collapse(offsideEndP)(v1);
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytOf) {
            return insertToken(v)(pushStack(v.range.start)(LytCaseGuard.value)(v2));
          }
          ;
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytLet) {
            return insertToken(v)(pushStack(v.range.start)(LytDeclGuard.value)(v2));
          }
          ;
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytLetStmt) {
            return insertToken(v)(pushStack(v.range.start)(LytDeclGuard.value)(v2));
          }
          ;
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytWhere) {
            return insertToken(v)(pushStack(v.range.start)(LytDeclGuard.value)(v2));
          }
          ;
          return insertDefault(v1);
        }
        ;
        if (v.value instanceof TokTick) {
          var v2 = collapse(indentedP)(v1);
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytTick) {
            return insertToken(v)(new Tuple(v2.value0.value1, v2.value1));
          }
          ;
          return pushStack(v.range.start)(LytTick.value)(insertToken(v)(insertSep(collapse(offsideEndP)(v1))));
        }
        ;
        if (v.value instanceof TokComma) {
          var v2 = collapse(indentedP)(v1);
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytBrace) {
            return pushStack(v.range.start)(LytProperty.value)(insertToken(v)(v2));
          }
          ;
          return insertToken(v)(v2);
        }
        ;
        if (v.value instanceof TokDot) {
          var v2 = insertDefault(v1);
          if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytForall) {
            return new Tuple(v2.value0.value1, v2.value1);
          }
          ;
          return pushStack(v.range.start)(LytProperty.value)(v2);
        }
        ;
        if (v.value instanceof TokLeftParen) {
          return pushStack(v.range.start)(LytParen.value)(insertDefault(v1));
        }
        ;
        if (v.value instanceof TokLeftBrace) {
          return pushStack(v.range.start)(LytProperty.value)(pushStack(v.range.start)(LytBrace.value)(insertDefault(v1)));
        }
        ;
        if (v.value instanceof TokLeftSquare) {
          return pushStack(v.range.start)(LytSquare.value)(insertDefault(v1));
        }
        ;
        if (v.value instanceof TokRightParen) {
          return insertToken(v)(popStack(function(v22) {
            return eq111(v22)(LytParen.value);
          })(collapse(indentedP)(v1)));
        }
        ;
        if (v.value instanceof TokRightBrace) {
          return insertToken(v)(popStack(function(v22) {
            return eq111(v22)(LytBrace.value);
          })(popStack(function(v22) {
            return eq111(v22)(LytProperty.value);
          })(collapse(indentedP)(v1))));
        }
        ;
        if (v.value instanceof TokRightSquare) {
          return insertToken(v)(popStack(function(v22) {
            return eq111(v22)(LytSquare.value);
          })(collapse(indentedP)(v1)));
        }
        ;
        if (v.value instanceof TokString) {
          return popStack(function(v22) {
            return eq111(v22)(LytProperty.value);
          })(insertDefault(v1));
        }
        ;
        if (v.value instanceof TokLowerName && v.value.value0 instanceof Nothing) {
          return popStack(function(v22) {
            return eq111(v22)(LytProperty.value);
          })(insertDefault(v1));
        }
        ;
        if (v.value instanceof TokOperator) {
          return insertToken(v)(insertSep(collapse(offsideEndP)(v1)));
        }
        ;
        return insertDefault(v1);
      };
      return insert9(new Tuple(stack, []));
    };
  };
};

// output/PureScript.CST.TokenStream/index.js
var TokenEOF = /* @__PURE__ */ function() {
  function TokenEOF2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  TokenEOF2.create = function(value0) {
    return function(value1) {
      return new TokenEOF2(value0, value1);
    };
  };
  return TokenEOF2;
}();
var TokenError = /* @__PURE__ */ function() {
  function TokenError2(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  TokenError2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new TokenError2(value0, value1, value2, value3);
        };
      };
    };
  };
  return TokenError2;
}();
var TokenCons = /* @__PURE__ */ function() {
  function TokenCons2(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }
  ;
  TokenCons2.create = function(value0) {
    return function(value1) {
      return function(value2) {
        return function(value3) {
          return new TokenCons2(value0, value1, value2, value3);
        };
      };
    };
  };
  return TokenCons2;
}();
var step2 = /* @__PURE__ */ function() {
  var $32 = unwrap();
  return function($33) {
    return force($32($33));
  };
}();
var unwindLayout = function(pos) {
  return function(eof) {
    var go = function(stk) {
      return defer2(function(v) {
        if (stk instanceof Nil) {
          return step2(eof);
        }
        ;
        if (stk instanceof Cons) {
          if (stk.value0.value1 instanceof LytRoot) {
            return step2(eof);
          }
          ;
          if (isIndented(stk.value0.value1)) {
            return new TokenCons(lytToken(pos)(new TokLayoutEnd(stk.value0.value0.column)), pos, go(stk.value1), stk.value1);
          }
          ;
          if (otherwise) {
            return step2(go(stk.value1));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.TokenStream (line 59, column 7 - line 66, column 27): " + [stk.value0.value1.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.TokenStream (line 56, column 43 - line 66, column 27): " + [stk.constructor.name]);
      });
    };
    return go;
  };
};
var consTokens = function(dictFoldable) {
  var go = function(v) {
    return function(v1) {
      return new Tuple(v.value0.range.start, defer2(function(v2) {
        return new TokenCons(v.value0, v1.value0, v1.value1, v.value1);
      }));
    };
  };
  return flip(foldr(dictFoldable)(go));
};

// output/PureScript.CST.Lexer/index.js
var add2 = /* @__PURE__ */ add(semiringInt);
var div4 = /* @__PURE__ */ div(euclideanRingInt);
var bindFlipped6 = /* @__PURE__ */ bindFlipped(bindMaybe);
var foldMap7 = /* @__PURE__ */ foldMap(foldableMaybe)(monoidString);
var fold4 = /* @__PURE__ */ fold(foldableMaybe)(monoidString);
var fold12 = /* @__PURE__ */ fold(foldableArray)(/* @__PURE__ */ monoidRecord()(/* @__PURE__ */ monoidRecordCons({
  reflectSymbol: function() {
    return "raw";
  }
})(monoidString)()(/* @__PURE__ */ monoidRecordCons({
  reflectSymbol: function() {
    return "string";
  }
})(monoidString)()(monoidRecordNil))));
var foldl5 = /* @__PURE__ */ foldl(foldableArray);
var consTokens2 = /* @__PURE__ */ consTokens(foldableArray);
var LexFail = /* @__PURE__ */ function() {
  function LexFail2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  LexFail2.create = function(value0) {
    return function(value1) {
      return new LexFail2(value0, value1);
    };
  };
  return LexFail2;
}();
var LexSucc = /* @__PURE__ */ function() {
  function LexSucc2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  LexSucc2.create = function(value0) {
    return function(value1) {
      return new LexSucc2(value0, value1);
    };
  };
  return LexSucc2;
}();
var Lex = function(x) {
  return x;
};
var isCharCodePoint = {
  fromChar: codePointFromChar,
  fromCharCode: /* @__PURE__ */ toEnum(boundedEnumCodePoint)
};
var isCharChar = {
  fromChar: /* @__PURE__ */ identity(categoryFn),
  fromCharCode: fromCharCode3
};
var $$try3 = function(v) {
  return function(str) {
    var v1 = v(str);
    if (v1 instanceof LexFail) {
      return new LexFail(v1.value0, str);
    }
    ;
    if (v1 instanceof LexSucc) {
      return new LexSucc(v1.value0, v1.value1);
    }
    ;
    throw new Error("Failed pattern match at PureScript.CST.Lexer (line 102, column 3 - line 104, column 31): " + [v1.constructor.name]);
  };
};
var toModuleName = function(v) {
  if (v === "") {
    return Nothing.value;
  }
  ;
  return new Just(dropRight(1)(v));
};
var qualLength = /* @__PURE__ */ maybe(0)(/* @__PURE__ */ function() {
  var $305 = add2(1);
  var $306 = unwrap();
  return function($307) {
    return $305(length6($306($307)));
  };
}());
var optional = function(v) {
  return function(str) {
    var v1 = v(str);
    if (v1 instanceof LexFail) {
      if (length2(str) === length2(v1.value1)) {
        return new LexSucc(Nothing.value, str);
      }
      ;
      if (otherwise) {
        return new LexFail(v1.value0, v1.value1);
      }
      ;
    }
    ;
    if (v1 instanceof LexSucc) {
      return new LexSucc(new Just(v1.value0), v1.value1);
    }
    ;
    throw new Error("Failed pattern match at PureScript.CST.Lexer (line 151, column 3 - line 158, column 25): " + [v1.constructor.name]);
  };
};
var mkUnexpected = function(str) {
  var start = take4(6)(str);
  var len = length6(start);
  var $142 = len === 0;
  if ($142) {
    return "end of file";
  }
  ;
  var $143 = len < 6;
  if ($143) {
    return start;
  }
  ;
  return start + "...";
};
var regex2 = function(mkErr) {
  return function(regexStr) {
    var matchRegex = unsafeRegex("^(?:" + (regexStr + ")"))(unicode);
    return function(str) {
      var v = match(matchRegex)(str);
      var v1 = function(v2) {
        return new LexFail(function(v3) {
          return mkErr(mkUnexpected(str));
        }, str);
      };
      if (v instanceof Just) {
        var $145 = head3(v.value0);
        if ($145 instanceof Just) {
          return new LexSucc($145.value0, drop2(length2($145.value0))(str));
        }
        ;
        return v1(true);
      }
      ;
      return v1(true);
    };
  };
};
var satisfy = function(mkErr) {
  return function(p) {
    return function(str) {
      var v = charAt2(0)(str);
      if (v instanceof Just && p(v.value0)) {
        return new LexSucc(v.value0, drop2(1)(str));
      }
      ;
      return new LexFail(function(v1) {
        return mkErr(mkUnexpected(str));
      }, str);
    };
  };
};
var string = function(mkErr) {
  return function(match2) {
    return function(str) {
      var $150 = take2(length2(match2))(str) === match2;
      if ($150) {
        return new LexSucc(match2, drop2(length2(match2))(str));
      }
      ;
      return new LexFail(function(v) {
        return mkErr(mkUnexpected(str));
      }, str);
    };
  };
};
var many = function(v) {
  return function(str) {
    return function __do() {
      var valuesRef = newSTArray();
      var strRef = str;
      var contRef = true;
      var resRef = new LexSucc([], str);
      (function() {
        while (contRef) {
          (function __do2() {
            var str$prime = strRef;
            var v1 = v(str$prime);
            if (v1 instanceof LexFail) {
              if (length2(str$prime) === length2(v1.value1)) {
                var values2 = unsafeFreeze(valuesRef)();
                resRef = new LexSucc(values2, v1.value1);
                contRef = false;
                return unit;
              }
              ;
              if (otherwise) {
                resRef = new LexFail(v1.value0, v1.value1);
                contRef = false;
                return unit;
              }
              ;
            }
            ;
            if (v1 instanceof LexSucc) {
              push(v1.value0)(valuesRef)();
              strRef = v1.value1;
              return unit;
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Lexer (line 176, column 5 - line 190, column 18): " + [v1.constructor.name]);
          })();
        }
        ;
        return {};
      })();
      return resRef;
    }();
  };
};
var functorLex = {
  map: function(f) {
    return function(v) {
      return function(str) {
        var v1 = v(str);
        if (v1 instanceof LexFail) {
          return new LexFail(v1.value0, v1.value1);
        }
        ;
        if (v1 instanceof LexSucc) {
          return new LexSucc(f(v1.value0), v1.value1);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 64, column 5 - line 66, column 37): " + [v1.constructor.name]);
      };
    };
  }
};
var map19 = /* @__PURE__ */ map(functorLex);
var spaceComment = /* @__PURE__ */ function() {
  return map19(length2)(regex2(LexExpected.create("spaces"))(" +"));
}();
var fromCharCode4 = function(dict) {
  return dict.fromCharCode;
};
var fromChar = function(dict) {
  return dict.fromChar;
};
var fail2 = function($308) {
  return Lex(LexFail.create($$const($308)));
};
var char$prime = function(mkErr) {
  return function(res) {
    return function(match2) {
      return function(str) {
        var $166 = singleton5(match2) === take2(1)(str);
        if ($166) {
          return new LexSucc(res, drop2(1)(str));
        }
        ;
        return new LexFail(function(v) {
          return mkErr(mkUnexpected(str));
        }, str);
      };
    };
  };
};
var $$char = function(mkErr) {
  return function(match2) {
    return function(str) {
      var $167 = singleton5(match2) === take2(1)(str);
      if ($167) {
        return new LexSucc(match2, drop2(1)(str));
      }
      ;
      return new LexFail(function(v) {
        return mkErr(mkUnexpected(str));
      }, str);
    };
  };
};
var bumpText = function(v) {
  return function(colOffset) {
    return function(str) {
      var go = function($copy_n) {
        return function($copy_ix) {
          var $tco_var_n = $copy_n;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(n, ix) {
            var v1 = indexOf$prime("\n")(ix)(str);
            if (v1 instanceof Just) {
              $tco_var_n = n + 1 | 0;
              $copy_ix = v1.value0 + 1 | 0;
              return;
            }
            ;
            if (v1 instanceof Nothing) {
              if (n === 0) {
                $tco_done = true;
                return {
                  line: v.line,
                  column: (v.column + length6(str) | 0) + (colOffset * 2 | 0) | 0
                };
              }
              ;
              if (otherwise) {
                $tco_done = true;
                return {
                  line: v.line + n | 0,
                  column: length6(drop2(ix)(str)) + colOffset | 0
                };
              }
              ;
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Lexer (line 338, column 13 - line 347, column 12): " + [v1.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_n, $copy_ix);
          }
          ;
          return $tco_result;
        };
      };
      return go(0)(0);
    };
  };
};
var bumpToken = function(v) {
  return function(v1) {
    if (v1 instanceof TokLeftParen) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokRightParen) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokLeftBrace) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokRightBrace) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokLeftSquare) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokRightSquare) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokLeftArrow && v1.value0 instanceof ASCII) {
      return {
        line: v.line,
        column: v.column + 2 | 0
      };
    }
    ;
    if (v1 instanceof TokLeftArrow && v1.value0 instanceof Unicode) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokRightArrow && v1.value0 instanceof ASCII) {
      return {
        line: v.line,
        column: v.column + 2 | 0
      };
    }
    ;
    if (v1 instanceof TokRightArrow && v1.value0 instanceof Unicode) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokRightFatArrow && v1.value0 instanceof ASCII) {
      return {
        line: v.line,
        column: v.column + 2 | 0
      };
    }
    ;
    if (v1 instanceof TokRightFatArrow && v1.value0 instanceof Unicode) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokDoubleColon && v1.value0 instanceof ASCII) {
      return {
        line: v.line,
        column: v.column + 2 | 0
      };
    }
    ;
    if (v1 instanceof TokDoubleColon && v1.value0 instanceof Unicode) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokForall && v1.value0 instanceof ASCII) {
      return {
        line: v.line,
        column: v.column + 6 | 0
      };
    }
    ;
    if (v1 instanceof TokForall && v1.value0 instanceof Unicode) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokEquals) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokPipe) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokTick) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokDot) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokComma) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokUnderscore) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokBackslash) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokAt) {
      return {
        line: v.line,
        column: v.column + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokLowerName) {
      return {
        line: v.line,
        column: (v.column + qualLength(v1.value0) | 0) + length6(v1.value1) | 0
      };
    }
    ;
    if (v1 instanceof TokUpperName) {
      return {
        line: v.line,
        column: (v.column + qualLength(v1.value0) | 0) + length6(v1.value1) | 0
      };
    }
    ;
    if (v1 instanceof TokOperator) {
      return {
        line: v.line,
        column: (v.column + qualLength(v1.value0) | 0) + length6(v1.value1) | 0
      };
    }
    ;
    if (v1 instanceof TokSymbolName) {
      return {
        line: v.line,
        column: ((v.column + qualLength(v1.value0) | 0) + length6(v1.value1) | 0) + 2 | 0
      };
    }
    ;
    if (v1 instanceof TokSymbolArrow && v1.value0 instanceof Unicode) {
      return {
        line: v.line,
        column: v.column + 3 | 0
      };
    }
    ;
    if (v1 instanceof TokSymbolArrow && v1.value0 instanceof ASCII) {
      return {
        line: v.line,
        column: v.column + 4 | 0
      };
    }
    ;
    if (v1 instanceof TokHole) {
      return {
        line: v.line,
        column: (v.column + length6(v1.value0) | 0) + 1 | 0
      };
    }
    ;
    if (v1 instanceof TokChar) {
      return {
        line: v.line,
        column: (v.column + length6(v1.value0) | 0) + 2 | 0
      };
    }
    ;
    if (v1 instanceof TokInt) {
      return {
        line: v.line,
        column: v.column + length6(v1.value0) | 0
      };
    }
    ;
    if (v1 instanceof TokNumber) {
      return {
        line: v.line,
        column: v.column + length6(v1.value0) | 0
      };
    }
    ;
    if (v1 instanceof TokString) {
      return bumpText(v)(1)(v1.value0);
    }
    ;
    if (v1 instanceof TokRawString) {
      return bumpText(v)(3)(v1.value0);
    }
    ;
    if (v1 instanceof TokLayoutStart) {
      return v;
    }
    ;
    if (v1 instanceof TokLayoutSep) {
      return v;
    }
    ;
    if (v1 instanceof TokLayoutEnd) {
      return v;
    }
    ;
    throw new Error("Failed pattern match at PureScript.CST.Lexer (line 255, column 34 - line 333, column 8): " + [v1.constructor.name]);
  };
};
var bumpComment = function(v) {
  return function(v1) {
    if (v1 instanceof Comment) {
      return bumpText(v)(0)(v1.value0);
    }
    ;
    if (v1 instanceof Space2) {
      return {
        line: v.line,
        column: v.column + v1.value0 | 0
      };
    }
    ;
    if (v1 instanceof Line) {
      return {
        line: v.line + v1.value1 | 0,
        column: 0
      };
    }
    ;
    throw new Error("Failed pattern match at PureScript.CST.Lexer (line 350, column 36 - line 356, column 34): " + [v1.constructor.name]);
  };
};
var applyLex = {
  apply: function(v) {
    return function(v1) {
      return function(str) {
        var v2 = v(str);
        if (v2 instanceof LexFail) {
          return new LexFail(v2.value0, v2.value1);
        }
        ;
        if (v2 instanceof LexSucc) {
          var v3 = v1(v2.value1);
          if (v3 instanceof LexFail) {
            return new LexFail(v3.value0, v3.value1);
          }
          ;
          if (v3 instanceof LexSucc) {
            return new LexSucc(v2.value0(v3.value0), v3.value1);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Lexer (line 73, column 9 - line 76, column 32): " + [v3.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 70, column 5 - line 76, column 32): " + [v2.constructor.name]);
      };
    };
  },
  Functor0: function() {
    return functorLex;
  }
};
var applyFirst2 = /* @__PURE__ */ applyFirst(applyLex);
var applySecond2 = /* @__PURE__ */ applySecond(applyLex);
var apply5 = /* @__PURE__ */ apply2(applyLex);
var bindLex = {
  bind: function(v) {
    return function(k) {
      return function(str) {
        var v1 = v(str);
        if (v1 instanceof LexFail) {
          return new LexFail(v1.value0, v1.value1);
        }
        ;
        if (v1 instanceof LexSucc) {
          var v2 = k(v1.value0);
          return v2(v1.value1);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 83, column 5 - line 87, column 16): " + [v1.constructor.name]);
      };
    };
  },
  Apply0: function() {
    return applyLex;
  }
};
var bind1 = /* @__PURE__ */ bind(bindLex);
var applicativeLex = {
  pure: function($309) {
    return Lex(LexSucc.create($309));
  },
  Apply0: function() {
    return applyLex;
  }
};
var pure13 = /* @__PURE__ */ pure(applicativeLex);
var altLex = {
  alt: function(v) {
    return function(v1) {
      return function(str) {
        var v2 = v(str);
        if (v2 instanceof LexFail) {
          if (length2(str) === length2(v2.value1)) {
            return v1(str);
          }
          ;
          if (otherwise) {
            return new LexFail(v2.value0, v2.value1);
          }
          ;
        }
        ;
        if (v2 instanceof LexSucc) {
          return new LexSucc(v2.value0, v2.value1);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 91, column 5 - line 98, column 20): " + [v2.constructor.name]);
      };
    };
  },
  Functor0: function() {
    return functorLex;
  }
};
var alt3 = /* @__PURE__ */ alt(altLex);
var comment = /* @__PURE__ */ function() {
  return alt3(regex2(LexExpected.create("block comment"))("\\{-(-(?!\\})|[^-]+)*(-\\}|$)"))(regex2(LexExpected.create("line comment"))("--[^\\r\\n]*"));
}();
var lineComment = /* @__PURE__ */ function() {
  return alt3(map19(function() {
    var $310 = Line.create(LF.value);
    return function($311) {
      return $310(length6($311));
    };
  }())(regex2(LexExpected.create("newline"))("\n+")))(map19(function() {
    var $312 = Line.create(CRLF.value);
    return function($313) {
      return $312(function(v) {
        return div4(v)(2);
      }(length6($313)));
    };
  }())(regex2(LexExpected.create("newline"))("(?:\r\n)+")));
}();
var leadingComments = /* @__PURE__ */ function() {
  return many(alt3(map19(Comment.create)(comment))(alt3(map19(Space2.create)(spaceComment))(lineComment)));
}();
var token = /* @__PURE__ */ function() {
  var tokenTick = char$prime(LexExpected.create("backtick"))(TokTick.value)("`");
  var tokenRightSquare = char$prime(LexExpected.create("right square"))(TokRightSquare.value)("]");
  var tokenRightParen = char$prime(LexExpected.create("right paren"))(TokRightParen.value)(")");
  var tokenRightBrace = char$prime(LexExpected.create("right brace"))(TokRightBrace.value)("}");
  var tokenLeftSquare = char$prime(LexExpected.create("left square"))(TokLeftSquare.value)("[");
  var tokenLeftParen = char$prime(LexExpected.create("left paren"))(TokLeftParen.value)("(");
  var tokenLeftBrace = char$prime(LexExpected.create("left brace"))(TokLeftBrace.value)("{");
  var tokenComma = char$prime(LexExpected.create("comma"))(TokComma.value)(",");
  var stripUnderscores = replaceAll("_")("");
  var stringSpaceEscapeRegex = regex2(LexExpected.create("whitespace escape"))("\\\\[ \\r\\n]+\\\\");
  var stringCharsRegex = regex2(LexExpected.create("string characters"))('[^"\\\\]+');
  var rawStringCharsRegex = regex2(LexExpected.create("raw string characters"))('""""{0,2}([^"]+"{1,2})*[^"]*"""');
  var parseSymbolIdent = regex2(LexExpected.create("symbol"))("(?:[:!#$%&*+./<=>?@\\\\^|~-]|(?!\\p{P})\\p{S})+");
  var parseSymbol = map19(function(v) {
    return function(v1) {
      if (v1 instanceof Nothing) {
        if (v === "->") {
          return new TokSymbolArrow(ASCII.value);
        }
        ;
        if (v === "\u2192") {
          return new TokSymbolArrow(Unicode.value);
        }
        ;
        return new TokSymbolName(Nothing.value, v);
      }
      ;
      return new TokSymbolName(v1, v);
    };
  })($$try3(applyFirst2(applySecond2(tokenLeftParen)(parseSymbolIdent))(tokenRightParen)));
  var parseStringSpaceEscape = map19(function(v) {
    return {
      raw: v,
      string: ""
    };
  })(stringSpaceEscapeRegex);
  var parseStringChars = map19(function(v) {
    return {
      raw: v,
      string: v
    };
  })(stringCharsRegex);
  var parseRawString = map19(function(v) {
    return new TokRawString(dropRight(3)(drop2(3)(v)));
  })(rawStringCharsRegex);
  var parseProper = regex2(LexExpected.create("proper name"))("\\p{Lu}[\\p{L}0-9_']*");
  var parseUpper = map19(flip(TokUpperName.create))(parseProper);
  var parseOperator = map19(function(v) {
    return function(v1) {
      if (v1 instanceof Nothing) {
        if (v === "<-") {
          return new TokLeftArrow(ASCII.value);
        }
        ;
        if (v === "\u2190") {
          return new TokLeftArrow(Unicode.value);
        }
        ;
        if (v === "->") {
          return new TokRightArrow(ASCII.value);
        }
        ;
        if (v === "\u2192") {
          return new TokRightArrow(Unicode.value);
        }
        ;
        if (v === "=>") {
          return new TokRightFatArrow(ASCII.value);
        }
        ;
        if (v === "\u21D2") {
          return new TokRightFatArrow(Unicode.value);
        }
        ;
        if (v === "::") {
          return new TokDoubleColon(ASCII.value);
        }
        ;
        if (v === "\u2237") {
          return new TokDoubleColon(Unicode.value);
        }
        ;
        if (v === "\u2200") {
          return new TokForall(Unicode.value);
        }
        ;
        if (v === "=") {
          return TokEquals.value;
        }
        ;
        if (v === ".") {
          return TokDot.value;
        }
        ;
        if (v === "\\") {
          return TokBackslash.value;
        }
        ;
        if (v === "|") {
          return TokPipe.value;
        }
        ;
        if (v === "@") {
          return TokAt.value;
        }
        ;
        if (v === "`") {
          return TokTick.value;
        }
        ;
        return new TokOperator(Nothing.value, v);
      }
      ;
      return new TokOperator(v1, v);
    };
  })(parseSymbolIdent);
  var parseModuleNamePrefix = regex2(LexExpected.create("module name"))("(?:(?:\\p{Lu}[\\p{L}0-9_']*)\\.)*");
  var parseIdent = regex2(LexExpected.create("ident"))("[\\p{Ll}_][\\p{L}0-9_']*");
  var parseLower = map19(function(v) {
    return function(v1) {
      if (v1 instanceof Nothing) {
        if (v === "forall") {
          return new TokForall(ASCII.value);
        }
        ;
        if (v === "_") {
          return TokUnderscore.value;
        }
        ;
        return new TokLowerName(Nothing.value, v);
      }
      ;
      return new TokLowerName(v1, v);
    };
  })(parseIdent);
  var parseName = alt3(parseLower)(alt3(parseUpper)(alt3(parseOperator)(parseSymbol)));
  var parseModuleName = apply5(map19(function(v) {
    return function(v1) {
      return v1(toModuleName(v));
    };
  })(parseModuleNamePrefix))(parseName);
  var parseExponentSign = alt3(string(LexExpected.create("negative"))("-"))(string(LexExpected.create("positive"))("+"));
  var intPartRegex = regex2(LexExpected.create("int part"))("(0|[1-9][0-9_]*)");
  var parseExponentPart = apply5(map19(function(v) {
    return function(v1) {
      return {
        sign: v,
        exponent: v1
      };
    };
  })(optional(parseExponentSign)))(intPartRegex);
  var hexIntRegex = regex2(LexExpected.create("hex int"))("[a-fA-F0-9]+");
  var hexIntPrefix = string(LexExpected.create("hex int prefix"))("0x");
  var parseHexInt = bind1(applySecond2(hexIntPrefix)(hexIntRegex))(function(raw) {
    var v = fromStringAs(hexadecimal)(raw);
    if (v instanceof Just) {
      return pure13(new TokInt("0x" + raw, new SmallInt(v.value0)));
    }
    ;
    if (v instanceof Nothing) {
      return pure13(new TokInt("0x" + raw, new BigHex(raw)));
    }
    ;
    throw new Error("Failed pattern match at PureScript.CST.Lexer (line 602, column 5 - line 606, column 49): " + [v.constructor.name]);
  });
  var hexEscapeRegex = regex2(LexExpected.create("hex"))("[a-fA-F0-9]{1,6}");
  var parseHexEscape = function(dictIsChar) {
    var fromCharCode1 = fromCharCode4(dictIsChar);
    return bind1(hexEscapeRegex)(function(esc) {
      var v = bindFlipped6(fromCharCode1)(fromStringAs(hexadecimal)(esc));
      if (v instanceof Just) {
        return pure13({
          raw: "\\x" + esc,
          "char": v.value0
        });
      }
      ;
      if (v instanceof Nothing) {
        return fail2(new LexCharEscapeOutOfRange(esc));
      }
      ;
      throw new Error("Failed pattern match at PureScript.CST.Lexer (line 550, column 5 - line 554, column 43): " + [v.constructor.name]);
    });
  };
  var fractionPartRegex = regex2(LexExpected.create("fraction part"))("[0-9_]+");
  var charSingleQuote = $$char(LexExpected.create("single quote"))("'");
  var charQuote = $$char(LexExpected.create("quote"))('"');
  var charQuestionMark = $$char(LexExpected.create("question mark"))("?");
  var parseHole = map19(function(v) {
    return new TokHole(v);
  })($$try3(applySecond2(charQuestionMark)(alt3(parseIdent)(parseProper))));
  var charExponent = $$char(LexExpected.create("exponent"))("e");
  var parseNumberExponentPart = optional(applySecond2(charExponent)(parseExponentPart));
  var charDot = $$char(LexExpected.create("dot"))(".");
  var parseNumberFractionPart = optional($$try3(applySecond2(charDot)(fractionPartRegex)));
  var parseNumber = bind1(intPartRegex)(function(intPart) {
    return bind1(parseNumberFractionPart)(function(fractionPart) {
      return bind1(parseNumberExponentPart)(function(exponentPart) {
        var $268 = isNothing(fractionPart) && isNothing(exponentPart);
        if ($268) {
          var intVal = stripUnderscores(intPart);
          var v = fromString2(intVal);
          if (v instanceof Just) {
            return pure13(new TokInt(intPart, new SmallInt(v.value0)));
          }
          ;
          if (v instanceof Nothing) {
            return pure13(new TokInt(intPart, new BigInt(intVal)));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Lexer (line 614, column 7 - line 618, column 48): " + [v.constructor.name]);
        }
        ;
        var raw = intPart + (foldMap7(function(fr) {
          return "." + fr;
        })(fractionPart) + foldMap7(function(ex) {
          return "e" + (fold4(ex.sign) + ex.exponent);
        })(exponentPart));
        var v = fromString(stripUnderscores(raw));
        if (v instanceof Just) {
          return pure13(new TokNumber(raw, v.value0));
        }
        ;
        if (v instanceof Nothing) {
          return fail2(new LexNumberOutOfRange(raw));
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 625, column 7 - line 629, column 41): " + [v.constructor.name]);
      });
    });
  });
  var parseNumericLiteral = alt3(parseHexInt)(parseNumber);
  var charBackslash = $$char(LexExpected.create("backslash"))("\\");
  var charAny = satisfy(LexExpected.create("char"))($$const(true));
  var parseEscape = function(dictIsChar) {
    var fromChar1 = fromChar(dictIsChar);
    var parseHexEscape1 = parseHexEscape(dictIsChar);
    return bind1(charAny)(function(ch) {
      if (ch === "t") {
        return pure13({
          raw: "\\t",
          "char": fromChar1("	")
        });
      }
      ;
      if (ch === "r") {
        return pure13({
          raw: "\\r",
          "char": fromChar1("\r")
        });
      }
      ;
      if (ch === "n") {
        return pure13({
          raw: "\\n",
          "char": fromChar1("\n")
        });
      }
      ;
      if (ch === '"') {
        return pure13({
          raw: '\\"',
          "char": fromChar1('"')
        });
      }
      ;
      if (ch === "'") {
        return pure13({
          raw: "\\'",
          "char": fromChar1("'")
        });
      }
      ;
      if (ch === "\\") {
        return pure13({
          raw: "\\\\",
          "char": fromChar1("\\")
        });
      }
      ;
      if (ch === "x") {
        return parseHexEscape1;
      }
      ;
      return fail2(new LexInvalidCharEscape(singleton5(ch)));
    });
  };
  var parseEscape1 = parseEscape(isCharChar);
  var parseChar = bind1(charAny)(function(ch) {
    if (ch === "\\") {
      return parseEscape1;
    }
    ;
    if (ch === "'") {
      return fail2(new LexExpected("character", "empty character literal"));
    }
    ;
    return pure13({
      raw: singleton5(ch),
      "char": ch
    });
  });
  var parseCharLiteral = map19(function(v) {
    return new TokChar(v.raw, v["char"]);
  })(applyFirst2(applySecond2(charSingleQuote)(parseChar))(charSingleQuote));
  var parseStringEscape = map19(function(v) {
    return {
      raw: v.raw,
      string: singleton10(v["char"])
    };
  })(applySecond2(charBackslash)(parseEscape(isCharCodePoint)));
  var parseStringPart = alt3(parseStringChars)(alt3(parseStringSpaceEscape)(parseStringEscape));
  var parseString = map19(function(v) {
    var v1 = fold12(v);
    return new TokString(v1.raw, v1.string);
  })(applyFirst2(applySecond2(charQuote)(many(parseStringPart)))(charQuote));
  var parseStringLiteral = alt3(parseRawString)(parseString);
  return alt3(parseHole)(alt3(parseModuleName)(alt3(parseCharLiteral)(alt3(parseStringLiteral)(alt3(parseNumericLiteral)(alt3(tokenLeftParen)(alt3(tokenRightParen)(alt3(tokenLeftBrace)(alt3(tokenRightBrace)(alt3(tokenLeftSquare)(alt3(tokenRightSquare)(alt3(tokenTick)(tokenComma))))))))))));
}();
var lexToken = function($314) {
  return function(v) {
    if (v instanceof LexSucc && v.value1 === "") {
      return new Right(v.value0);
    }
    ;
    if (v instanceof LexSucc) {
      return new Left(function(v1) {
        return new ExpectedEof(v.value0);
      });
    }
    ;
    if (v instanceof LexFail) {
      return new Left(v.value0);
    }
    ;
    throw new Error("Failed pattern match at PureScript.CST.Lexer (line 247, column 18 - line 250, column 28): " + [v.constructor.name]);
  }(token($314));
};
var trailingComments = /* @__PURE__ */ function() {
  return many(alt3(map19(Comment.create)(comment))(map19(Space2.create)(spaceComment)));
}();
var lexWithState = /* @__PURE__ */ function() {
  var token$prime = apply5(apply5(map19(function(v) {
    return function(v1) {
      return function(v2) {
        return {
          token: v,
          trailing: v1,
          nextLeading: v2
        };
      };
    };
  })(token))(trailingComments))(leadingComments);
  var go = function(stack) {
    return function(startPos) {
      return function(leading5) {
        return function(str) {
          return defer2(function(v) {
            var $289 = str === "";
            if ($289) {
              return step2(unwindLayout(startPos)(defer2(function(v12) {
                return new TokenEOF(startPos, leading5);
              }))(stack));
            }
            ;
            var v1 = token$prime(str);
            if (v1 instanceof LexFail) {
              var errPos = bumpText(startPos)(0)(take2(length2(str) - length2(v1.value1) | 0)(str));
              return new TokenError(errPos, v1.value0(unit), Nothing.value, stack);
            }
            ;
            if (v1 instanceof LexSucc) {
              var endPos = bumpToken(startPos)(v1.value0.token);
              var nextStart = foldl5(bumpComment)(foldl5(bumpComment)(endPos)(v1.value0.trailing))(v1.value0.nextLeading);
              var posToken = {
                range: {
                  start: startPos,
                  end: endPos
                },
                leadingComments: leading5,
                trailingComments: v1.value0.trailing,
                value: v1.value0.token
              };
              var v2 = insertLayout(posToken)(nextStart)(stack);
              return step2(snd(consTokens2(v2.value1)(new Tuple(nextStart, go(v2.value0)(nextStart)(v1.value0.nextLeading)(v1.value1)))));
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Lexer (line 218, column 7 - line 237, column 63): " + [v1.constructor.name]);
          });
        };
      };
    };
  };
  var init3 = function(initStack) {
    return function(initPos) {
      return function(str) {
        return defer2(function(v) {
          var v1 = leadingComments(str);
          if (v1 instanceof LexFail) {
            return unsafeCrashWith("Leading comments can't fail.");
          }
          ;
          if (v1 instanceof LexSucc) {
            var nextPos = foldl5(bumpComment)(initPos)(v1.value0);
            return step2(go(initStack)(nextPos)(v1.value0)(v1.value1));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Lexer (line 205, column 5 - line 210, column 51): " + [v1.constructor.name]);
        });
      };
    };
  };
  return init3;
}();
var lex = /* @__PURE__ */ function() {
  return lexWithState(new Cons(new Tuple({
    line: 0,
    column: 0
  }, LytRoot.value), Nil.value))({
    line: 0,
    column: 0
  });
}();

// output/Tidy.Codegen.Common/index.js
var semiringRecord2 = /* @__PURE__ */ semiringRecord();
var semiringRecord1 = /* @__PURE__ */ semiringRecord2(/* @__PURE__ */ semiringRecordCons({
  reflectSymbol: function() {
    return "column";
  }
})()(/* @__PURE__ */ semiringRecordCons({
  reflectSymbol: function() {
    return "line";
  }
})()(semiringRecordNil)(semiringInt))(semiringInt));
var map20 = /* @__PURE__ */ map(functorArray);
var zeroRange = /* @__PURE__ */ zero(/* @__PURE__ */ semiringRecord2(/* @__PURE__ */ semiringRecordCons({
  reflectSymbol: function() {
    return "end";
  }
})()(/* @__PURE__ */ semiringRecordCons({
  reflectSymbol: function() {
    return "start";
  }
})()(semiringRecordNil)(semiringRecord1))(semiringRecord1)));
var toWrapped = function(open) {
  return function(close) {
    return function($35) {
      return Wrapped(function(v) {
        return {
          open,
          close,
          value: v
        };
      }($35));
    };
  };
};
var toSourceToken = function(v) {
  return {
    range: zeroRange,
    leadingComments: [],
    trailingComments: [],
    value: v
  };
};
var tokAll = /* @__PURE__ */ function() {
  return toSourceToken(new TokSymbolName(Nothing.value, ".."));
}();
var tokComma = /* @__PURE__ */ function() {
  return toSourceToken(TokComma.value);
}();
var tokDot = /* @__PURE__ */ function() {
  return toSourceToken(TokDot.value);
}();
var tokDoubleColon = /* @__PURE__ */ function() {
  return toSourceToken(new TokDoubleColon(ASCII.value));
}();
var tokEquals = /* @__PURE__ */ function() {
  return toSourceToken(TokEquals.value);
}();
var tokForall = /* @__PURE__ */ function() {
  return toSourceToken(new TokForall(ASCII.value));
}();
var tokKeyword = /* @__PURE__ */ function() {
  var $36 = TokLowerName.create(Nothing.value);
  return function($37) {
    return toSourceToken($36($37));
  };
}();
var tokAs = /* @__PURE__ */ tokKeyword("as");
var tokClass = /* @__PURE__ */ tokKeyword("class");
var tokDerive = /* @__PURE__ */ tokKeyword("derive");
var tokImport = /* @__PURE__ */ tokKeyword("import");
var tokInstance = /* @__PURE__ */ tokKeyword("instance");
var tokModule = /* @__PURE__ */ tokKeyword("module");
var tokNewtype = /* @__PURE__ */ tokKeyword("newtype");
var tokType = /* @__PURE__ */ tokKeyword("type");
var tokWhere = /* @__PURE__ */ tokKeyword("where");
var tokLeftBrace = /* @__PURE__ */ function() {
  return toSourceToken(TokLeftBrace.value);
}();
var tokLeftParen = /* @__PURE__ */ function() {
  return toSourceToken(TokLeftParen.value);
}();
var tokPipe = /* @__PURE__ */ function() {
  return toSourceToken(TokPipe.value);
}();
var tokRightArrow = /* @__PURE__ */ function() {
  return toSourceToken(new TokRightArrow(ASCII.value));
}();
var tokRightBrace = /* @__PURE__ */ function() {
  return toSourceToken(TokRightBrace.value);
}();
var tokRightFatArrow = /* @__PURE__ */ function() {
  return toSourceToken(new TokRightFatArrow(ASCII.value));
}();
var tokRightParen = /* @__PURE__ */ function() {
  return toSourceToken(TokRightParen.value);
}();
var tokUnderscore = /* @__PURE__ */ function() {
  return toSourceToken(TokUnderscore.value);
}();
var toSeparated = function(tok) {
  return function(arr) {
    return {
      head: head3(arr),
      tail: map20(Tuple.create(tok))(tail2(arr))
    };
  };
};
var toOneOrDelimited = function(arr) {
  var $34 = length5(arr) === 1;
  if ($34) {
    return new One(head3(arr));
  }
  ;
  return new Many({
    close: tokRightParen,
    open: tokLeftParen,
    value: toSeparated(tokComma)(arr)
  });
};
var toDelimitedNonEmpty = function(open) {
  return function(close) {
    return function(sep) {
      return function(value) {
        return toWrapped(open)(close)(toSeparated(sep)(value));
      };
    };
  };
};
var toParenList = /* @__PURE__ */ toDelimitedNonEmpty(tokLeftParen)(tokRightParen)(tokComma);

// output/Tidy.Codegen.Types/index.js
var SourceString = function(x) {
  return x;
};
var Qualified = /* @__PURE__ */ function() {
  function Qualified2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Qualified2.create = function(value0) {
    return function(value1) {
      return new Qualified2(value0, value1);
    };
  };
  return Qualified2;
}();
var ordSymbolName = ordString;
var functorBinaryOp = functorTuple;
var eqSymbolName = eqString;

// output/Tidy.Codegen.String/index.js
var fromEnum4 = /* @__PURE__ */ fromEnum(boundedEnumCodePoint);
var power4 = /* @__PURE__ */ power(monoidString);
var eq74 = /* @__PURE__ */ eq(eqCodePoint);
var escapeSourceString = /* @__PURE__ */ function() {
  var toHex = function(cp) {
    var hex = toStringAs(hexadecimal)(fromEnum4(cp));
    return power4("0")(6 - length2(hex) | 0) + hex;
  };
  var categories = fromFoldable4(foldableArray)(ordGeneralCategory)([UppercaseLetter.value, LowercaseLetter.value, TitlecaseLetter.value, OtherLetter.value, DecimalNumber.value, LetterNumber.value, OtherNumber.value, ConnectorPunctuation.value, DashPunctuation.value, OpenPunctuation.value, ClosePunctuation.value, InitialQuote.value, FinalQuote.value, OtherPunctuation.value, MathSymbol.value, CurrencySymbol.value, ModifierSymbol.value, OtherSymbol.value, Space.value]);
  var shouldPrint = function() {
    var $11 = maybe(false)(flip(member2(ordGeneralCategory))(categories));
    return function($12) {
      return $11(generalCategory($12));
    };
  }();
  var $$escape = function(cp) {
    if (eq74(cp)(codePointFromChar("\n"))) {
      return "\\n";
    }
    ;
    if (eq74(cp)(codePointFromChar("\r"))) {
      return "\\r";
    }
    ;
    if (eq74(cp)(codePointFromChar("	"))) {
      return "\\t";
    }
    ;
    if (eq74(cp)(codePointFromChar("\\"))) {
      return "\\\\";
    }
    ;
    if (eq74(cp)(codePointFromChar('"'))) {
      return '\\"';
    }
    ;
    if (shouldPrint(cp)) {
      return singleton10(cp);
    }
    ;
    if (otherwise) {
      return "\\x" + toHex(cp);
    }
    ;
    throw new Error("Failed pattern match at Tidy.Codegen.String (line 21, column 3 - line 21, column 32): " + [cp.constructor.name]);
  };
  var $13 = foldMap2(monoidString)($$escape);
  return function($14) {
    return SourceString($13(toCodePointArray($14)));
  };
}();

// output/Tidy.Codegen.Class/index.js
var identity17 = /* @__PURE__ */ identity(categoryFn);
var unwrap3 = /* @__PURE__ */ unwrap();
var crashWith3 = /* @__PURE__ */ crashWith();
var bind3 = /* @__PURE__ */ bind(bindMaybe);
var pure7 = /* @__PURE__ */ pure(applicativeMaybe);
var coerce4 = /* @__PURE__ */ coerce();
var lmap4 = /* @__PURE__ */ lmap(bifunctorTuple);
var toWhereExpr = {
  toWhere: function($711) {
    return Where(function(v) {
      return {
        bindings: Nothing.value,
        expr: v
      };
    }($711));
  }
};
var toTokenSymbolNameSymbolNa = {
  toToken: function(str) {
    return new Tuple(new TokSymbolName(Nothing.value, unwrap3(str)), str);
  }
};
var toTokenStringSymbolName = function() {
  return {
    toToken: function(str) {
      var v = lexToken(str);
      if (v instanceof Right && (v.value0 instanceof TokSymbolName && v.value0.value0 instanceof Nothing)) {
        return new Tuple(v.value0, v.value0.value1);
      }
      ;
      if (v instanceof Right && (v.value0 instanceof TokOperator && v.value0.value0 instanceof Nothing)) {
        return new Tuple(new TokSymbolName(Nothing.value, v.value0.value1), str);
      }
      ;
      return crashWith3("Not a SymbolName: " + str);
    }
  };
};
var toTokenProperProper = {
  toToken: function(str) {
    return new Tuple(new TokUpperName(Nothing.value, unwrap3(str)), str);
  }
};
var toTokenModuleNameModuleNa = {
  toToken: function(v) {
    var token2 = fromMaybe(new TokUpperName(Nothing.value, v))(bind3(lastIndexOf2(".")(v))(function(ix) {
      var qual = take4(ix)(v);
      var mod4 = drop4(ix + 1 | 0)(v);
      return pure7(new TokUpperName(new Just(qual), mod4));
    }));
    return new Tuple(token2, v);
  }
};
var toTokenLabelLabel = {
  toToken: function(v) {
    return new Tuple(new TokString(unwrap3(escapeSourceString(v)), v), v);
  }
};
var toTokenIdentIdent = {
  toToken: function(str) {
    return new Tuple(new TokLowerName(Nothing.value, unwrap3(str)), str);
  }
};
var toQualifiedNameQualifiedN = {
  toQualifiedName: identity17
};
var overTrailingCommentsModul = {
  overTrailingComments: function(k) {
    return function(v) {
      return {
        decls: v.decls,
        end: v.end,
        trailingComments: k(v.trailingComments)
      };
    };
  }
};
var overLeadingCommentsVoid = {
  overLeadingComments: function(v) {
    return absurd;
  }
};
var overLeadingCommentsRecord = function(dictTypeEquals) {
  return {
    overLeadingComments: function(k) {
      return function(r) {
        var r$prime = coerce4(r);
        return coerce4(function() {
          var $434 = {};
          for (var $435 in r$prime) {
            if ({}.hasOwnProperty.call(r$prime, $435)) {
              $434[$435] = r$prime[$435];
            }
            ;
          }
          ;
          $434.leadingComments = k(r$prime.leadingComments);
          return $434;
        }());
      };
    }
  };
};
var fromTokenQualifiedProper = {
  fromToken: function(v) {
    if (v instanceof TokUpperName) {
      return new Just(new Qualified(v.value0, v.value1));
    }
    ;
    return Nothing.value;
  }
};
var fromTokenQualifiedOperato = {
  fromToken: function(v) {
    if (v instanceof TokOperator) {
      return new Just(new Qualified(v.value0, v.value1));
    }
    ;
    return Nothing.value;
  }
};
var fromTokenQualifiedIdent = {
  fromToken: function(v) {
    if (v instanceof TokLowerName) {
      return new Just(new Qualified(v.value0, v.value1));
    }
    ;
    return Nothing.value;
  }
};
var fromTokenProper = {
  fromToken: function(v) {
    if (v instanceof TokUpperName && v.value0 instanceof Nothing) {
      return new Just(v.value1);
    }
    ;
    return Nothing.value;
  }
};
var fromTokenModuleName = {
  fromToken: function(v) {
    if (v instanceof TokUpperName && v.value0 instanceof Just) {
      return new Just(unwrap3(v.value0.value0) + ("." + v.value1));
    }
    ;
    if (v instanceof TokUpperName && v.value0 instanceof Nothing) {
      return new Just(v.value1);
    }
    ;
    return Nothing.value;
  }
};
var fromTokenIdent = {
  fromToken: function(v) {
    if (v instanceof TokLowerName && v.value0 instanceof Nothing) {
      return new Just(v.value1);
    }
    ;
    return Nothing.value;
  }
};
var toWhere = function(dict) {
  return dict.toWhere;
};
var toWhere1 = /* @__PURE__ */ toWhere(toWhereExpr);
var toGuardedExpr = {
  toGuarded: function(tok) {
    var $715 = Unconditional.create(tok);
    return function($716) {
      return $715(toWhere1($716));
    };
  }
};
var toToken = function(dict) {
  return dict.toToken;
};
var toToken1 = /* @__PURE__ */ toToken(toTokenLabelLabel);
var toTokenStringLabel = {
  toToken: function(str) {
    var v = lexToken(str);
    if (v instanceof Right && (v.value0 instanceof TokLowerName && v.value0.value0 instanceof Nothing)) {
      return new Tuple(v.value0, v.value0.value1);
    }
    ;
    return toToken1(str);
  }
};
var toQualifiedName = function(dict) {
  return dict.toQualifiedName;
};
var toName = function(dict) {
  return dict.toName;
};
var toModuleName2 = function(dict) {
  return dict.toModuleName;
};
var toGuarded = function(dict) {
  return dict.toGuarded;
};
var overTrailingComments = function(dict) {
  return dict.overTrailingComments;
};
var overTrailingComments1 = /* @__PURE__ */ overTrailingComments(overTrailingCommentsModul);
var overTrailingCommentsModul1 = {
  overTrailingComments: function(k) {
    return function(v) {
      return {
        header: v.header,
        body: overTrailingComments1(k)(v.body)
      };
    };
  }
};
var overLeadingComments = function(dict) {
  return dict.overLeadingComments;
};
var overLeadingComments1 = /* @__PURE__ */ overLeadingComments(/* @__PURE__ */ overLeadingCommentsRecord(refl));
var overLeadingCommentsImport = {
  overLeadingComments: function(k) {
    return function(v) {
      return {
        module: v.module,
        names: v.names,
        qualified: v.qualified,
        keyword: overLeadingComments1(k)(v.keyword)
      };
    };
  }
};
var overLeadingCommentsInstan = {
  overLeadingComments: function(k) {
    return function(v) {
      return {
        body: v.body,
        head: {
          name: v.head.name,
          constraints: v.head.constraints,
          className: v.head.className,
          types: v.head.types,
          keyword: overLeadingComments1(k)(v.head.keyword)
        }
      };
    };
  }
};
var overLeadingCommentsLabele = function(dictOverLeadingComments) {
  var overLeadingComments8 = overLeadingComments(dictOverLeadingComments);
  return {
    overLeadingComments: function(k) {
      return function(v) {
        return {
          separator: v.separator,
          value: v.value,
          label: overLeadingComments8(k)(v.label)
        };
      };
    }
  };
};
var overLeadingCommentsName = {
  overLeadingComments: function(k) {
    return function(v) {
      return {
        name: v.name,
        token: overLeadingComments1(k)(v.token)
      };
    };
  }
};
var overLeadingComments3 = /* @__PURE__ */ overLeadingComments(/* @__PURE__ */ overLeadingCommentsLabele(overLeadingCommentsName));
var overLeadingComments4 = /* @__PURE__ */ overLeadingComments(overLeadingCommentsName);
var overLeadingCommentsQualif = {
  overLeadingComments: function(k) {
    return function(v) {
      return {
        module: v.module,
        name: v.name,
        token: overLeadingComments1(k)(v.token)
      };
    };
  }
};
var overLeadingComments5 = /* @__PURE__ */ overLeadingComments(overLeadingCommentsQualif);
var overLeadingCommentsSepara = function(dictOverLeadingComments) {
  var overLeadingComments8 = overLeadingComments(dictOverLeadingComments);
  return {
    overLeadingComments: function(k) {
      return function(v) {
        return {
          head: overLeadingComments8(k)(v.head),
          tail: v.tail
        };
      };
    }
  };
};
var overLeadingComments6 = /* @__PURE__ */ overLeadingComments(/* @__PURE__ */ overLeadingCommentsSepara(overLeadingCommentsInstan));
var overLeadingCommentsDeclar = function(dictOverLeadingComments) {
  var overLeadingComments8 = overLeadingComments(dictOverLeadingComments);
  return {
    overLeadingComments: function(k) {
      return function(v) {
        if (v instanceof DeclData) {
          return new DeclData({
            name: v.value0.name,
            vars: v.value0.vars,
            keyword: overLeadingComments1(k)(v.value0.keyword)
          }, v.value1);
        }
        ;
        if (v instanceof DeclType) {
          return new DeclType({
            name: v.value0.name,
            vars: v.value0.vars,
            keyword: overLeadingComments1(k)(v.value0.keyword)
          }, v.value1, v.value2);
        }
        ;
        if (v instanceof DeclNewtype) {
          return new DeclNewtype({
            name: v.value0.name,
            vars: v.value0.vars,
            keyword: overLeadingComments1(k)(v.value0.keyword)
          }, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof DeclClass) {
          return new DeclClass({
            "super": v["value0"]["super"],
            name: v.value0.name,
            vars: v.value0.vars,
            fundeps: v.value0.fundeps,
            keyword: overLeadingComments1(k)(v.value0.keyword)
          }, v.value1);
        }
        ;
        if (v instanceof DeclInstanceChain) {
          return new DeclInstanceChain(overLeadingComments6(k)(v.value0));
        }
        ;
        if (v instanceof DeclDerive) {
          return new DeclDerive(overLeadingComments1(k)(v.value0), v.value1, v.value2);
        }
        ;
        if (v instanceof DeclKindSignature) {
          return new DeclKindSignature(overLeadingComments1(k)(v.value0), v.value1);
        }
        ;
        if (v instanceof DeclSignature) {
          return new DeclSignature(overLeadingComments3(k)(v.value0));
        }
        ;
        if (v instanceof DeclValue) {
          return new DeclValue({
            binders: v.value0.binders,
            guarded: v.value0.guarded,
            name: overLeadingComments4(k)(v.value0.name)
          });
        }
        ;
        if (v instanceof DeclFixity) {
          return new DeclFixity({
            prec: v.value0.prec,
            operator: v.value0.operator,
            keyword: lmap4(overLeadingComments1(k))(v.value0.keyword)
          });
        }
        ;
        if (v instanceof DeclForeign) {
          return new DeclForeign(overLeadingComments1(k)(v.value0), v.value1, v.value2);
        }
        ;
        if (v instanceof DeclRole) {
          return new DeclRole(overLeadingComments1(k)(v.value0), v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof DeclError) {
          return new DeclError(overLeadingComments8(k)(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Tidy.Codegen.Class (line 519, column 27 - line 532, column 55): " + [v.constructor.name]);
      };
    }
  };
};
var overLeadingCommentsWrappe = {
  overLeadingComments: function(k) {
    return function(v) {
      return {
        value: v.value,
        close: v.close,
        open: overLeadingComments1(k)(v.open)
      };
    };
  }
};
var overLeadingComments7 = /* @__PURE__ */ overLeadingComments(overLeadingCommentsWrappe);
var overLeadingCommentsType = function(dictOverLeadingComments) {
  var overLeadingComments8 = overLeadingComments(dictOverLeadingComments);
  return {
    overLeadingComments: function(k) {
      return function(v) {
        if (v instanceof TypeVar) {
          return new TypeVar(overLeadingComments4(k)(v.value0));
        }
        ;
        if (v instanceof TypeConstructor) {
          return new TypeConstructor(overLeadingComments5(k)(v.value0));
        }
        ;
        if (v instanceof TypeWildcard) {
          return new TypeWildcard(overLeadingComments1(k)(v.value0));
        }
        ;
        if (v instanceof TypeHole) {
          return new TypeHole(overLeadingComments4(k)(v.value0));
        }
        ;
        if (v instanceof TypeString) {
          return new TypeString(overLeadingComments1(k)(v.value0), v.value1);
        }
        ;
        if (v instanceof TypeInt && v.value0 instanceof Just) {
          return new TypeInt(new Just(overLeadingComments1(k)(v.value0.value0)), v.value1, v.value2);
        }
        ;
        if (v instanceof TypeInt) {
          return new TypeInt(Nothing.value, overLeadingComments1(k)(v.value1), v.value2);
        }
        ;
        if (v instanceof TypeRow) {
          return new TypeRow(overLeadingComments7(k)(v.value0));
        }
        ;
        if (v instanceof TypeRecord) {
          return new TypeRecord(overLeadingComments7(k)(v.value0));
        }
        ;
        if (v instanceof TypeForall) {
          return new TypeForall(overLeadingComments1(k)(v.value0), v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof TypeKinded) {
          return new TypeKinded(overLeadingComments(overLeadingCommentsType(dictOverLeadingComments))(k)(v.value0), v.value1, v.value2);
        }
        ;
        if (v instanceof TypeApp) {
          return new TypeApp(overLeadingComments(overLeadingCommentsType(dictOverLeadingComments))(k)(v.value0), v.value1);
        }
        ;
        if (v instanceof TypeOp) {
          return new TypeOp(overLeadingComments(overLeadingCommentsType(dictOverLeadingComments))(k)(v.value0), v.value1);
        }
        ;
        if (v instanceof TypeOpName) {
          return new TypeOpName(overLeadingComments5(k)(v.value0));
        }
        ;
        if (v instanceof TypeArrow) {
          return new TypeArrow(overLeadingComments(overLeadingCommentsType(dictOverLeadingComments))(k)(v.value0), v.value1, v.value2);
        }
        ;
        if (v instanceof TypeArrowName) {
          return new TypeArrowName(overLeadingComments1(k)(v.value0));
        }
        ;
        if (v instanceof TypeConstrained) {
          return new TypeConstrained(overLeadingComments(overLeadingCommentsType(dictOverLeadingComments))(k)(v.value0), v.value1, v.value2);
        }
        ;
        if (v instanceof TypeParens) {
          return new TypeParens(overLeadingComments7(k)(v.value0));
        }
        ;
        if (v instanceof $$TypeError) {
          return new $$TypeError(overLeadingComments8(k)(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Tidy.Codegen.Class (line 538, column 27 - line 557, column 55): " + [v.constructor.name]);
      };
    }
  };
};
var fromToken = function(dict) {
  return dict.fromToken;
};
var toTokenFromString = function() {
  return function(dictFromToken) {
    var fromToken1 = fromToken(dictFromToken);
    return function(v) {
      return function(str) {
        var v1 = lexToken(str);
        var v2 = function(v3) {
          return crashWith3(v + (": " + str));
        };
        if (v1 instanceof Right) {
          var $693 = fromToken1(v1.value0);
          if ($693 instanceof Just) {
            return new Tuple(v1.value0, $693.value0);
          }
          ;
          return v2(true);
        }
        ;
        return v2(true);
      };
    };
  };
};
var toTokenFromString1 = /* @__PURE__ */ toTokenFromString();
var toTokenFromString2 = /* @__PURE__ */ toTokenFromString1(fromTokenIdent);
var toTokenFromString3 = /* @__PURE__ */ toTokenFromString1(fromTokenModuleName);
var toTokenFromString5 = /* @__PURE__ */ toTokenFromString1(fromTokenProper);
var toTokenFromString8 = /* @__PURE__ */ toTokenFromString1(fromTokenQualifiedProper);
var toTokenStringIdent = function() {
  return {
    toToken: toTokenFromString2("Not an Ident")
  };
};
var toTokenStringModuleName = function() {
  return {
    toToken: toTokenFromString3("Not a ModuleName")
  };
};
var toTokenStringModuleName1 = /* @__PURE__ */ toTokenStringModuleName();
var toToken2 = /* @__PURE__ */ toToken(toTokenStringModuleName1);
var toModuleNameString = function() {
  return {
    toModuleName: function($724) {
      return snd(toToken2($724));
    }
  };
};
var toTokenStringProper = function() {
  return {
    toToken: toTokenFromString5("Not a Proper")
  };
};
var toTokenStringQualifiedPro = function() {
  return {
    toToken: toTokenFromString8("Not a Qualified Proper")
  };
};
var toQualifiedNameString = function() {
  return function(dictFromToken) {
    var fromToken1 = fromToken(dictFromToken);
    return {
      toQualifiedName: function(str) {
        var v = lexToken(str);
        var v1 = function(v2) {
          return crashWith3("Not a QualifiedName: " + str);
        };
        if (v instanceof Right) {
          var $697 = fromToken1(v.value0);
          if ($697 instanceof Just) {
            return {
              module: $697.value0.value0,
              name: $697.value0.value1,
              token: toSourceToken(v.value0)
            };
          }
          ;
          return v1(true);
        }
        ;
        return v1(true);
      }
    };
  };
};
var defaultToQualifiedName = function(dictToToken) {
  var toToken3 = toToken(dictToToken);
  return function(v) {
    var v1 = toToken3(v.value1);
    return {
      module: v.value0,
      name: v1.value1,
      token: toSourceToken(v1.value0)
    };
  };
};
var toQualifiedNameQualified = function(dictToToken) {
  return {
    toQualifiedName: defaultToQualifiedName(dictToToken)
  };
};
var toQualifiedNameProperProp = {
  toQualifiedName: /* @__PURE__ */ function() {
    var $734 = toQualifiedName(toQualifiedNameQualified(toTokenProperProper));
    var $735 = Qualified.create(Nothing.value);
    return function($736) {
      return $734($735($736));
    };
  }()
};
var defaultToName = function(dictToToken) {
  var toToken3 = toToken(dictToToken);
  return function(val) {
    var v = toToken3(val);
    return {
      name: v.value1,
      token: toSourceToken(v.value0)
    };
  };
};
var defaultToName1 = /* @__PURE__ */ defaultToName(/* @__PURE__ */ toTokenStringIdent());
var defaultToName2 = /* @__PURE__ */ defaultToName(toTokenStringModuleName1);
var defaultToName4 = /* @__PURE__ */ defaultToName(/* @__PURE__ */ toTokenStringProper());
var defaultToName5 = /* @__PURE__ */ defaultToName(/* @__PURE__ */ toTokenStringSymbolName());
var toNameIdentIdent = {
  toName: /* @__PURE__ */ defaultToName(toTokenIdentIdent)
};
var toNameLabelLabel = {
  toName: /* @__PURE__ */ defaultToName(toTokenLabelLabel)
};
var toNameModuleNameModuleNam = {
  toName: /* @__PURE__ */ defaultToName(toTokenModuleNameModuleNa)
};
var toNameProperProper = {
  toName: /* @__PURE__ */ defaultToName(toTokenProperProper)
};
var toNameStringIdent = function() {
  return {
    toName: defaultToName1
  };
};
var toNameStringLabel = {
  toName: /* @__PURE__ */ defaultToName(toTokenStringLabel)
};
var toNameStringModuleName = function() {
  return {
    toName: defaultToName2
  };
};
var toNameStringProper = function() {
  return {
    toName: defaultToName4
  };
};
var toNameStringSymbolName = function() {
  return {
    toName: defaultToName5
  };
};
var toNameSymbolNameSymbolNam = {
  toName: /* @__PURE__ */ defaultToName(toTokenSymbolNameSymbolNa)
};

// output/Tidy.Codegen.Precedence/index.js
var map21 = /* @__PURE__ */ map(functorArray);
var map110 = /* @__PURE__ */ map(functorMaybe);
var typeParens = /* @__PURE__ */ function() {
  var $220 = toWrapped(tokLeftParen)(tokRightParen);
  return function($221) {
    return TypeParens.create($220($221));
  };
}();
var precType3 = function(a) {
  if (a instanceof TypeConstrained) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeForall) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeArrow) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeKinded) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeOp) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeApp) {
    return typeParens(a);
  }
  ;
  return a;
};
var precType2 = function(a) {
  if (a instanceof TypeConstrained) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeForall) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeArrow) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeKinded) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeOp) {
    return typeParens(a);
  }
  ;
  return a;
};
var precType1 = function(a) {
  if (a instanceof TypeKinded) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeForall) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeArrow) {
    return typeParens(a);
  }
  ;
  if (a instanceof TypeConstrained) {
    return typeParens(a);
  }
  ;
  return a;
};
var precType0 = function(a) {
  if (a instanceof TypeKinded) {
    return typeParens(a);
  }
  ;
  return a;
};
var precInitLast = function(p1) {
  return function(p2) {
    var $222 = map110(function(v) {
      return snoc$prime(map21(p1)(v.init))(p2(v.last));
    });
    return function($223) {
      return $222(unsnoc2($223));
    };
  };
};
var exprParens = /* @__PURE__ */ function() {
  var $224 = toWrapped(tokLeftParen)(tokRightParen);
  return function($225) {
    return ExprParens.create($224($225));
  };
}();
var precExpr0 = function(a) {
  if (a instanceof ExprTyped) {
    return exprParens(a);
  }
  ;
  return a;
};
var precExprApp = function(a) {
  if (a instanceof ExprTyped) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprOp) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprLambda) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprIf) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprLet) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprAdo) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprInfix) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprApp) {
    return exprParens(a);
  }
  ;
  return a;
};
var precExprAppLast = function(a) {
  if (a instanceof ExprTyped) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprOp) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprInfix) {
    return exprParens(a);
  }
  ;
  if (a instanceof ExprApp) {
    return exprParens(a);
  }
  ;
  return a;
};

// output/Tidy.Operators/index.js
var parseOperatorPrec = /* @__PURE__ */ function() {
  var tokenStreamToArray = function() {
    var go = function(acc) {
      return function($89) {
        return function(v) {
          if (v instanceof TokenEOF) {
            return new Right(acc);
          }
          ;
          if (v instanceof TokenError) {
            return new Left(v.value1);
          }
          ;
          if (v instanceof TokenCons) {
            return go(snoc2(acc)(v.value0.value))(v.value2);
          }
          ;
          throw new Error("Failed pattern match at Tidy.Operators (line 33, column 35 - line 39, column 43): " + [v.constructor.name]);
        }(step2($89));
      };
    };
    return go([]);
  }();
  return function($90) {
    return function(v) {
      if (v instanceof Right && (v.value0.length === 2 && (v["value0"][0] instanceof TokSymbolName && (v["value0"][1] instanceof TokInt && v["value0"][1].value1 instanceof SmallInt)))) {
        return new Just(new Tuple(new QualifiedOperator(v["value0"][0].value0, OperatorValue.value, v["value0"][0].value1), v["value0"][1].value1.value0));
      }
      ;
      if (v instanceof Right && (v.value0.length === 3 && (v["value0"][0] instanceof TokSymbolName && (v["value0"][1] instanceof TokLowerName && (v["value0"][1].value0 instanceof Nothing && (v["value0"][1].value1 === "type" && (v["value0"][2] instanceof TokInt && v["value0"][2].value1 instanceof SmallInt))))))) {
        return new Just(new Tuple(new QualifiedOperator(v["value0"][0].value0, OperatorType.value, v["value0"][0].value1), v["value0"][2].value1.value0));
      }
      ;
      return Nothing.value;
    }(tokenStreamToArray(lex($90)));
  };
}();
var parseOperatorTable = /* @__PURE__ */ function() {
  var $91 = foldr(foldableArray)(uncurry(insertOperator))(empty2);
  var $92 = mapMaybe2(parseOperatorPrec);
  return function($93) {
    return $91($92($93));
  };
}();

// output/Tidy.Operators.Defaults/index.js
var defaultOperators = ["Control.Alt.($>) 4", "Control.Alt.(<#>) 1", "Control.Alt.(<$) 4", "Control.Alt.(<$>) 4", "Control.Alt.(<@>) 4", "Control.Alt.(<|>) 3", "Control.Alternative.($>) 4", "Control.Alternative.(*>) 4", "Control.Alternative.(<#>) 1", "Control.Alternative.(<$) 4", "Control.Alternative.(<$>) 4", "Control.Alternative.(<*) 4", "Control.Alternative.(<*>) 4", "Control.Alternative.(<@>) 4", "Control.Alternative.(<|>) 3", "Control.Applicative.($>) 4", "Control.Applicative.(*>) 4", "Control.Applicative.(<#>) 1", "Control.Applicative.(<$) 4", "Control.Applicative.(<$>) 4", "Control.Applicative.(<*) 4", "Control.Applicative.(<*>) 4", "Control.Applicative.(<@>) 4", "Control.Apply.($>) 4", "Control.Apply.(*>) 4", "Control.Apply.(<#>) 1", "Control.Apply.(<$) 4", "Control.Apply.(<$>) 4", "Control.Apply.(<*) 4", "Control.Apply.(<*>) 4", "Control.Apply.(<@>) 4", "Control.Biapply.(*>>) 4", "Control.Biapply.(<<$>>) 4", "Control.Biapply.(<<*) 4", "Control.Biapply.(<<*>>) 4", "Control.Bind.($>) 4", "Control.Bind.(*>) 4", "Control.Bind.(<#>) 1", "Control.Bind.(<$) 4", "Control.Bind.(<$>) 4", "Control.Bind.(<*) 4", "Control.Bind.(<*>) 4", "Control.Bind.(<=<) 1", "Control.Bind.(<@>) 4", "Control.Bind.(=<<) 1", "Control.Bind.(>=>) 1", "Control.Bind.(>>=) 1", "Control.Category.(<<<) 9", "Control.Category.(>>>) 9", "Control.Comonad.($>) 4", "Control.Comonad.(<#>) 1", "Control.Comonad.(<$) 4", "Control.Comonad.(<$>) 4", "Control.Comonad.(<<=) 1", "Control.Comonad.(<@>) 4", "Control.Comonad.(=<=) 1", "Control.Comonad.(=>=) 1", "Control.Comonad.(=>>) 1", "Control.Comonad.Cofree.(:<) 5", "Control.Coroutine.($$) 2", "Control.Coroutine.($~) 2", "Control.Coroutine.(/\\) 3", "Control.Coroutine.(\\/) 3", "Control.Coroutine.(~$) 2", "Control.Coroutine.(~~) 2", "Control.Extend.($>) 4", "Control.Extend.(<#>) 1", "Control.Extend.(<$) 4", "Control.Extend.(<$>) 4", "Control.Extend.(<<=) 1", "Control.Extend.(<@>) 4", "Control.Extend.(=<=) 1", "Control.Extend.(=>=) 1", "Control.Extend.(=>>) 1", "Control.Monad.($>) 4", "Control.Monad.(*>) 4", "Control.Monad.(<#>) 1", "Control.Monad.(<$) 4", "Control.Monad.(<$>) 4", "Control.Monad.(<*) 4", "Control.Monad.(<*>) 4", "Control.Monad.(<=<) 1", "Control.Monad.(<@>) 4", "Control.Monad.(=<<) 1", "Control.Monad.(>=>) 1", "Control.Monad.(>>=) 1", "Control.MonadPlus.($>) 4", "Control.MonadPlus.(*>) 4", "Control.MonadPlus.(<#>) 1", "Control.MonadPlus.(<$) 4", "Control.MonadPlus.(<$>) 4", "Control.MonadPlus.(<*) 4", "Control.MonadPlus.(<*>) 4", "Control.MonadPlus.(<=<) 1", "Control.MonadPlus.(<@>) 4", "Control.MonadPlus.(<|>) 3", "Control.MonadPlus.(=<<) 1", "Control.MonadPlus.(>=>) 1", "Control.MonadPlus.(>>=) 1", "Control.Plus.($>) 4", "Control.Plus.(<#>) 1", "Control.Plus.(<$) 4", "Control.Plus.(<$>) 4", "Control.Plus.(<@>) 4", "Control.Plus.(<|>) 3", "Control.Semigroupoid.(<<<) 9", "Control.Semigroupoid.(>>>) 9", "Data.Argonaut.(.!=) 6", "Data.Argonaut.(.:) 7", "Data.Argonaut.(.:!) 7", "Data.Argonaut.(.:?) 7", "Data.Argonaut.(:=) 7", "Data.Argonaut.(:=?) 7", "Data.Argonaut.(~>) 6", "Data.Argonaut.(~>?) 6", "Data.Argonaut.Decode.(.!=) 6", "Data.Argonaut.Decode.(.:) 7", "Data.Argonaut.Decode.(.:!) 7", "Data.Argonaut.Decode.(.:?) 7", "Data.Argonaut.Decode.Combinators.(.!=) 6", "Data.Argonaut.Decode.Combinators.(.:) 7", "Data.Argonaut.Decode.Combinators.(.:!) 7", "Data.Argonaut.Decode.Combinators.(.:?) 7", "Data.Argonaut.Encode.(:=) 7", "Data.Argonaut.Encode.(:=?) 7", "Data.Argonaut.Encode.(~>) 6", "Data.Argonaut.Encode.(~>?) 6", "Data.Argonaut.Encode.Combinators.(:=) 7", "Data.Argonaut.Encode.Combinators.(:=?) 7", "Data.Argonaut.Encode.Combinators.(~>) 6", "Data.Argonaut.Encode.Combinators.(~>?) 6", "Data.Array.(!!) 8", "Data.Array.(..) 8", "Data.Array.(:) 6", "Data.Array.(\\\\) 5", "Data.Array.NonEmpty.(!!) 8", "Data.Array.NonEmpty.(..) 8", "Data.Array.NonEmpty.(:) 6", "Data.Array.NonEmpty.(\\\\) 5", "Data.BooleanAlgebra.(&&) 3", "Data.BooleanAlgebra.(||) 2", "Data.Bounded.(<) 4", "Data.Bounded.(<=) 4", "Data.Bounded.(>) 4", "Data.Bounded.(>=) 4", "Data.CommutativeRing.(*) 7", "Data.CommutativeRing.(+) 6", "Data.CommutativeRing.(-) 6", "Data.DivisionRing.(*) 7", "Data.DivisionRing.(+) 6", "Data.DivisionRing.(-) 6", "Data.Either.Nested.(\\/) type 6", "Data.Either.Nested.(\\/) 6", "Data.Eq.(/=) 4", "Data.Eq.(==) 4", "Data.EuclideanRing.(*) 7", "Data.EuclideanRing.(+) 6", "Data.EuclideanRing.(-) 6", "Data.EuclideanRing.(/) 7", "Data.Field.(*) 7", "Data.Field.(+) 6", "Data.Field.(-) 6", "Data.Field.(/) 7", "Data.Function.(#) 1", "Data.Function.($) 0", "Data.Function.(<<<) 9", "Data.Function.(>>>) 9", "Data.Functor.($>) 4", "Data.Functor.(<#>) 1", "Data.Functor.(<$) 4", "Data.Functor.(<$>) 4", "Data.Functor.(<@>) 4", "Data.Functor.Contravariant.(>#<) 4", "Data.Functor.Contravariant.(>$<) 4", "Data.Functor.Coproduct.Nested.(<\\/>) type 6", "Data.Functor.Coproduct.Nested.(<\\/>) 6", "Data.Functor.Product.Nested.(</\\>) type 6", "Data.Functor.Product.Nested.(</\\>) 6", "Data.HeytingAlgebra.(&&) 3", "Data.HeytingAlgebra.(||) 2", "Data.HugeNum.(^) 8", "Data.Int.Bits.(.&.) 10", "Data.Int.Bits.(.^.) 10", "Data.Int.Bits.(.|.) 10", "Data.Lens.(%=) 4", "Data.Lens.(%~) 4", "Data.Lens.(&&&) 3", "Data.Lens.(&&=) 4", "Data.Lens.(&&~) 4", "Data.Lens.(***) 3", "Data.Lens.(*=) 4", "Data.Lens.(*~) 4", "Data.Lens.(+++) 2", "Data.Lens.(+=) 4", "Data.Lens.(+~) 4", "Data.Lens.(-=) 4", "Data.Lens.(-~) 4", "Data.Lens.(.=) 4", "Data.Lens.(.~) 4", "Data.Lens.(//=) 4", "Data.Lens.(//~) 4", "Data.Lens.(<>=) 4", "Data.Lens.(<>~) 4", "Data.Lens.(?=) 4", "Data.Lens.(?~) 4", "Data.Lens.(^.) 8", "Data.Lens.(^..) 8", "Data.Lens.(^?) 8", "Data.Lens.(||=) 4", "Data.Lens.(|||) 2", "Data.Lens.(||~) 4", "Data.Lens.Common.(&&&) 3", "Data.Lens.Common.(***) 3", "Data.Lens.Common.(+++) 2", "Data.Lens.Common.(|||) 2", "Data.Lens.Fold.(^..) 8", "Data.Lens.Fold.(^?) 8", "Data.Lens.Fold.Partial.(^?!) 8", "Data.Lens.Fold.Partial.(^@?!) 8", "Data.Lens.Getter.(^.) 8", "Data.Lens.Lens.Tuple.(&&&) 3", "Data.Lens.Lens.Tuple.(***) 3", "Data.Lens.Prism.Either.(+++) 2", "Data.Lens.Prism.Either.(|||) 2", "Data.Lens.Setter.(%=) 4", "Data.Lens.Setter.(%~) 4", "Data.Lens.Setter.(&&=) 4", "Data.Lens.Setter.(&&~) 4", "Data.Lens.Setter.(*=) 4", "Data.Lens.Setter.(*~) 4", "Data.Lens.Setter.(+=) 4", "Data.Lens.Setter.(+~) 4", "Data.Lens.Setter.(-=) 4", "Data.Lens.Setter.(-~) 4", "Data.Lens.Setter.(.=) 4", "Data.Lens.Setter.(.~) 4", "Data.Lens.Setter.(//=) 4", "Data.Lens.Setter.(//~) 4", "Data.Lens.Setter.(<>=) 4", "Data.Lens.Setter.(<>~) 4", "Data.Lens.Setter.(?=) 4", "Data.Lens.Setter.(?~) 4", "Data.Lens.Setter.(||=) 4", "Data.Lens.Setter.(||~) 4", "Data.List.(!!) 8", "Data.List.(..) 8", "Data.List.(:) 6", "Data.List.(\\\\) 5", "Data.List.Lazy.(!!) 8", "Data.List.Lazy.(..) 8", "Data.List.Lazy.(:) 6", "Data.List.Lazy.(\\\\) 5", "Data.List.Lazy.NonEmpty.(:) 6", "Data.List.Lazy.Types.(:) 6", "Data.List.NonEmpty.(!!) 8", "Data.List.NonEmpty.(:) 6", "Data.List.Types.(:) 6", "Data.Monoid.(<>) 5", "Data.NaturalTransformation.(~>) type 4", "Data.NonEmpty.(:|) 5", "Data.Number.(%) 7", "Data.Number.Approximate.(~=) 4", "Data.Number.Approximate.(\u2245) 4", "Data.Number.Approximate.(\u2247) 4", "Data.Options.(:=) 6", "Data.Ord.(<) 4", "Data.Ord.(<=) 4", "Data.Ord.(>) 4", "Data.Ord.(>=) 4", "Data.Profunctor.Choice.(+++) 2", "Data.Profunctor.Choice.(|||) 2", "Data.Profunctor.Strong.(&&&) 3", "Data.Profunctor.Strong.(***) 3", "Data.Ring.(*) 7", "Data.Ring.(+) 6", "Data.Ring.(-) 6", "Data.Semigroup.(<>) 5", "Data.Semiring.(*) 7", "Data.Semiring.(+) 6", "Data.Tuple.Nested.(/\\) type 6", "Data.Tuple.Nested.(/\\) 6", "Foreign.Index.(!) 9", "Parsing.Combinators.(!!) 8", "Parsing.Combinators.($>) 4", "Parsing.Combinators.(..) 8", "Parsing.Combinators.(:) 6", "Parsing.Combinators.(<#>) 1", "Parsing.Combinators.(<$) 4", "Parsing.Combinators.(<$>) 4", "Parsing.Combinators.(<?>) 4", "Parsing.Combinators.(<??>) 3", "Parsing.Combinators.(<@>) 4", "Parsing.Combinators.(<|>) 3", "Parsing.Combinators.(<~?>) 4", "Parsing.Combinators.(\\\\) 5", "Parsing.Indent.(<*/>) 11", "Parsing.Indent.(<+/>) 9", "Parsing.Indent.(<-/>) 10", "Parsing.Indent.(<?/>) 12", "Pathy.(<..>) 6", "Pathy.(<.>) 6", "Pathy.(</>) 6", "Pathy.Path.(<..>) 6", "Pathy.Path.(<.>) 6", "Pathy.Path.(</>) 6", "Prelude.(~>) type 4", "Prelude.(#) 1", "Prelude.($) 0", "Prelude.($>) 4", "Prelude.(&&) 3", "Prelude.(*) 7", "Prelude.(*>) 4", "Prelude.(+) 6", "Prelude.(-) 6", "Prelude.(/) 7", "Prelude.(/=) 4", "Prelude.(<) 4", "Prelude.(<#>) 1", "Prelude.(<$) 4", "Prelude.(<$>) 4", "Prelude.(<*) 4", "Prelude.(<*>) 4", "Prelude.(<<<) 9", "Prelude.(<=) 4", "Prelude.(<=<) 1", "Prelude.(<>) 5", "Prelude.(<@>) 4", "Prelude.(=<<) 1", "Prelude.(==) 4", "Prelude.(>) 4", "Prelude.(>=) 4", "Prelude.(>=>) 1", "Prelude.(>>=) 1", "Prelude.(>>>) 9", "Prelude.(||) 2", "StringParser.(<?>) 4", "StringParser.Combinators.(<?>) 4", "Test.QuickCheck.(/==) 2", "Test.QuickCheck.(/=?) 2", "Test.QuickCheck.(<=?) 2", "Test.QuickCheck.(<?) 2", "Test.QuickCheck.(<?>) 2", "Test.QuickCheck.(===) 2", "Test.QuickCheck.(==?) 2", "Test.QuickCheck.(>=?) 2", "Test.QuickCheck.(>?) 2", "Type.Function.(#) type 1", "Type.Function.($) type 0", "Type.Prelude.(+) type 0", "Type.Row.(+) type 0"];

// output/Tidy.Codegen/index.js
var unwrap4 = /* @__PURE__ */ unwrap();
var coerce5 = /* @__PURE__ */ coerce();
var map24 = /* @__PURE__ */ map(functorArray);
var map111 = /* @__PURE__ */ map(functorBinaryOp);
var append5 = /* @__PURE__ */ append(semigroupArray);
var map25 = /* @__PURE__ */ map(functorMaybe);
var map32 = /* @__PURE__ */ map(functorNonEmptyArray);
var pure8 = /* @__PURE__ */ pure(applicativeArray);
var zero2 = /* @__PURE__ */ zero(/* @__PURE__ */ semiringRecord()(/* @__PURE__ */ semiringRecordCons({
  reflectSymbol: function() {
    return "column";
  }
})()(/* @__PURE__ */ semiringRecordCons({
  reflectSymbol: function() {
    return "line";
  }
})()(semiringRecordNil)(semiringInt))(semiringInt)));
var append16 = /* @__PURE__ */ append(semigroupString);
var overTrailingComments2 = /* @__PURE__ */ overTrailingComments(overTrailingCommentsModul1);
var typeVarTypeVarBindingPref = {
  typeVar: function(dictToName) {
    var $263 = toName(dictToName);
    return function($264) {
      return TypeVarName.create(Prefixed(function(v) {
        return {
          prefix: Nothing.value,
          value: v
        };
      }($263($264))));
    };
  },
  typeVarKinded: function(dictToName) {
    var toName2 = toName(dictToName);
    return function(name2) {
      return function(value) {
        return new TypeVarKinded(toWrapped(tokLeftParen)(tokRightParen)({
          label: {
            prefix: Nothing.value,
            value: toName2(name2)
          },
          separator: tokDoubleColon,
          value
        }));
      };
    };
  }
};
var typeWildcard = /* @__PURE__ */ function() {
  return new TypeWildcard(tokUnderscore);
}();
var typeVar = function(dict) {
  return dict.typeVar;
};
var typeString = function(str) {
  return new TypeString(toSourceToken(new TokString(unwrap4(escapeSourceString(str)), str)), str);
};
var typeParens2 = /* @__PURE__ */ function() {
  var wrap4 = function() {
    var $271 = toWrapped(tokLeftParen)(tokRightParen);
    return function($272) {
      return TypeParens.create($271($272));
    };
  }();
  return function(v) {
    if (v instanceof TypeParens) {
      return v;
    }
    ;
    return wrap4(v);
  };
}();
var typeOp = function(ty) {
  var $275 = maybe(ty)(function() {
    var $278 = TypeOp.create(precType2(ty));
    return function($279) {
      return $278(coerce5($279));
    };
  }());
  var $276 = map24(map111(precType2));
  return function($277) {
    return $275(fromArray($276($277)));
  };
};
var typeKinded = function(a) {
  return function(b) {
    return new TypeKinded(precType0(a), tokDoubleColon, b);
  };
};
var typeVarType = {
  typeVar: function(dictToName) {
    var $280 = toName(dictToName);
    return function($281) {
      return TypeVar.create($280($281));
    };
  },
  typeVarKinded: function(dictToName) {
    var toName2 = toName(dictToName);
    return function(name2) {
      var $282 = typeKinded(typeParens2(new TypeVar(toName2(name2))));
      return function($283) {
        return typeParens2($282($283));
      };
    };
  }
};
var typeForall = function(vars) {
  return function(ty) {
    return maybe(ty)(function(vars$prime) {
      return new TypeForall(tokForall, vars$prime, tokDot, precType0(ty));
    })(fromArray(vars));
  };
};
var typeCtor = function(dictToQualifiedName) {
  var $284 = toQualifiedName(dictToQualifiedName);
  return function($285) {
    return TypeConstructor.create($284($285));
  };
};
var typeArrow = /* @__PURE__ */ flip(/* @__PURE__ */ foldr3(function(a) {
  return function(b) {
    return new TypeArrow(precType1(a), tokRightArrow, precType0(b));
  };
}));
var typeApp = function(ty) {
  var $286 = maybe(ty)(TypeApp.create(precType3(ty)));
  var $287 = map24(precType3);
  return function($288) {
    return $286(fromArray($287($288)));
  };
};
var toLabeled = function(dictToName) {
  var toName2 = toName(dictToName);
  return function(tok) {
    return function(v) {
      return {
        label: toName2(v.value0),
        separator: tok,
        value: v.value1
      };
    };
  };
};
var typeRecord = function(dictToName) {
  var toLabeled1 = toLabeled(dictToName);
  return function(lbls) {
    return function(ty) {
      return new TypeRecord(toWrapped(tokLeftBrace)(tokRightBrace)({
        labels: map25(function() {
          var $289 = toSeparated(tokComma);
          var $290 = map32(toLabeled1(tokDoubleColon));
          return function($291) {
            return $289($290($291));
          };
        }())(fromArray(lbls)),
        tail: map25(Tuple.create(tokPipe))(ty)
      }));
    };
  };
};
var typeRecordEmpty = /* @__PURE__ */ function() {
  return typeRecord(toNameLabelLabel)([])(Nothing.value);
}();
var typeRow = function(dictToName) {
  var toLabeled1 = toLabeled(dictToName);
  return function(lbls) {
    return function(ty) {
      return new TypeRow(toWrapped(tokLeftParen)(tokRightParen)({
        labels: map25(function() {
          var $292 = toSeparated(tokComma);
          var $293 = map32(toLabeled1(tokDoubleColon));
          return function($294) {
            return $292($293($294));
          };
        }())(fromArray(lbls)),
        tail: map25(Tuple.create(tokPipe))(ty)
      }));
    };
  };
};
var module_ = function(dictToName) {
  var toName2 = toName(dictToName);
  return function(name2) {
    return function(exports) {
      return function(imports) {
        return function(decls) {
          return {
            header: {
              keyword: tokModule,
              name: toName2(name2),
              exports: map25(toParenList)(fromArray(exports)),
              where: tokWhere,
              imports
            },
            body: {
              decls,
              trailingComments: [],
              end: zero2
            }
          };
        };
      };
    };
  };
};
var lineComments = /* @__PURE__ */ function() {
  var $296 = map24(function() {
    var $299 = append16("-- ");
    return function($300) {
      return Comment.create($299($300));
    };
  }());
  var $297 = split("\n");
  return function($298) {
    return $296($297($298));
  };
}();
var lineBreaks = /* @__PURE__ */ function() {
  var $301 = Line.create(LF.value);
  return function($302) {
    return pure8($301($302));
  };
}();
var printModuleWithOptions = function(options) {
  return function(mod4) {
    var formatOptions = {
      formatError: defaultFormatOptions(formatErrorVoid).formatError,
      importSort: defaultFormatOptions(formatErrorVoid).importSort,
      importWrap: options.importWrap,
      operators: force(options.operators),
      typeArrowPlacement: options.typeArrowPlacement,
      unicode: options.unicode
    };
    var dodoOptions = {
      indentUnit: options.indentUnit,
      indentWidth: options.indentWidth,
      pageWidth: options.pageWidth,
      ribbonRatio: options.ribbonRatio
    };
    var addTrailingBreak = function(comments) {
      var v = last2(comments);
      if (v instanceof Just && (v.value0 instanceof Line && v.value0.value1 > 0)) {
        return comments;
      }
      ;
      return append5(comments)(lineBreaks(1));
    };
    return print(plainText)(dodoOptions)(toDoc(formatModule(formatOptions)(overTrailingComments2(addTrailingBreak)(mod4))));
  };
};
var leading = function(dictOverLeadingComments) {
  var overLeadingComments2 = overLeadingComments(dictOverLeadingComments);
  return function(c) {
    return overLeadingComments2(append5(c));
  };
};
var instHead = function(dictToQualifiedName) {
  var toQualifiedName3 = toQualifiedName(dictToQualifiedName);
  return function(name2) {
    return function(constraints) {
      return function(className) {
        return function(types) {
          return {
            keyword: tokInstance,
            name: map25(flip(Tuple.create)(tokDoubleColon))(name2),
            constraints: map25(function() {
              var $307 = flip(Tuple.create)(tokRightFatArrow);
              return function($308) {
                return $307(toOneOrDelimited($308));
              };
            }())(fromArray(constraints)),
            className: toQualifiedName3(className),
            types: map24(precType3)(types)
          };
        };
      };
    };
  };
};
var importValue = function(dictToName) {
  var $309 = toName(dictToName);
  return function($310) {
    return ImportValue.create($309($310));
  };
};
var importTypeOp = function(dictToName) {
  var $311 = ImportTypeOp.create(tokType);
  var $312 = toName(dictToName);
  return function($313) {
    return $311(coerce5($312($313)));
  };
};
var importTypeAll = function(dictToName) {
  var $317 = flip(ImportType.create)(new Just(new DataAll(tokAll)));
  var $318 = toName(dictToName);
  return function($319) {
    return $317($318($319));
  };
};
var importType = function(dictToName) {
  var $320 = flip(ImportType.create)(Nothing.value);
  var $321 = toName(dictToName);
  return function($322) {
    return $320($321($322));
  };
};
var importOp = function(dictToName) {
  var $323 = toName(dictToName);
  return function($324) {
    return ImportOp.create(coerce5($323($324)));
  };
};
var importClass = function(dictToName) {
  var $325 = ImportClass.create(tokClass);
  var $326 = toName(dictToName);
  return function($327) {
    return $325($326($327));
  };
};
var exprTyped = function(a) {
  return function(b) {
    return new ExprTyped(precExpr0(a), tokDoubleColon, b);
  };
};
var exprIdent = function(dictToQualifiedName) {
  var $359 = toQualifiedName(dictToQualifiedName);
  return function($360) {
    return ExprIdent.create($359($360));
  };
};
var exprCtor = function(dictToQualifiedName) {
  var $363 = toQualifiedName(dictToQualifiedName);
  return function($364) {
    return ExprConstructor.create($363($364));
  };
};
var exprApp = function(head4) {
  var $367 = maybe(head4)(ExprApp.create(precExprApp(head4)));
  var $368 = precInitLast(function($370) {
    return AppTerm.create(precExprApp($370));
  })(function($371) {
    return AppTerm.create(precExprAppLast($371));
  });
  return function($369) {
    return $367($368($369));
  };
};
var exportValue = function(dictToName) {
  var $372 = toName(dictToName);
  return function($373) {
    return ExportValue.create($372($373));
  };
};
var exportTypeOp = function(dictToName) {
  var $374 = ExportTypeOp.create(tokType);
  var $375 = toName(dictToName);
  return function($376) {
    return $374(coerce5($375($376)));
  };
};
var exportTypeAll = function(dictToName) {
  var $380 = flip(ExportType.create)(new Just(new DataAll(tokAll)));
  var $381 = toName(dictToName);
  return function($382) {
    return $380($381($382));
  };
};
var exportType = function(dictToName) {
  var $383 = flip(ExportType.create)(Nothing.value);
  var $384 = toName(dictToName);
  return function($385) {
    return $383($384($385));
  };
};
var exportOp = function(dictToName) {
  var $386 = toName(dictToName);
  return function($387) {
    return ExportOp.create(coerce5($386($387)));
  };
};
var exportModule = function(dictToName) {
  var $388 = ExportModule.create(tokModule);
  var $389 = toName(dictToName);
  return function($390) {
    return $388($389($390));
  };
};
var exportClass = function(dictToName) {
  var $391 = ExportClass.create(tokClass);
  var $392 = toName(dictToName);
  return function($393) {
    return $391($392($393));
  };
};
var docComments = /* @__PURE__ */ function() {
  var $394 = map24(function() {
    var $397 = append16("-- | ");
    return function($398) {
      return Comment.create($397($398));
    };
  }());
  var $395 = split("\n");
  return function($396) {
    return $394($395($396));
  };
}();
var defaultPrintOptions = /* @__PURE__ */ function() {
  return {
    importWrap: ImportWrapSource.value,
    indentUnit: "  ",
    indentWidth: 2,
    operators: defer2(function(v) {
      return parseOperatorTable(defaultOperators);
    }),
    pageWidth: 160,
    ribbonRatio: 0.618,
    typeArrowPlacement: TypeArrowFirst.value,
    unicode: UnicodeSource.value
  };
}();
var printModule = /* @__PURE__ */ printModuleWithOptions(defaultPrintOptions);
var declValue = function(dictToName) {
  var toName2 = toName(dictToName);
  return function(dictToGuarded) {
    var toGuarded2 = toGuarded(dictToGuarded);
    return function(name2) {
      return function(binders) {
        return function(grd) {
          return new DeclValue({
            name: toName2(name2),
            binders,
            guarded: toGuarded2(tokEquals)(grd)
          });
        };
      };
    };
  };
};
var declTypeSignature = function(dictToName) {
  return curry(function() {
    var $402 = DeclKindSignature.create(tokType);
    var $403 = toLabeled(dictToName)(tokDoubleColon);
    return function($404) {
      return $402($403($404));
    };
  }());
};
var declType = function(dictToName) {
  var toName2 = toName(dictToName);
  return function(name2) {
    return function(vars) {
      return DeclType.create({
        keyword: tokType,
        name: toName2(name2),
        vars
      })(tokEquals);
    };
  };
};
var declSignature = function(dictToName) {
  return curry(function() {
    var $405 = toLabeled(dictToName)(tokDoubleColon);
    return function($406) {
      return DeclSignature.create($405($406));
    };
  }());
};
var declNewtype = function(dictToName) {
  var toName2 = toName(dictToName);
  return function(dictToName1) {
    var toName1 = toName(dictToName1);
    return function(name2) {
      return function(vars) {
        return function(ctor) {
          return DeclNewtype.create({
            keyword: tokNewtype,
            name: toName2(name2),
            vars
          })(tokEquals)(toName1(ctor));
        };
      };
    };
  };
};
var declImportAs = function(dictToName) {
  var toName2 = toName(dictToName);
  return function(dictToName1) {
    var toName1 = toName(dictToName1);
    return function(name2) {
      return function(imports) {
        return function(as) {
          return {
            keyword: tokImport,
            module: toName2(name2),
            names: map25(function() {
              var $417 = Tuple.create(Nothing.value);
              return function($418) {
                return $417(toParenList($418));
              };
            }())(fromArray(imports)),
            qualified: new Just(new Tuple(tokAs, toName1(as)))
          };
        };
      };
    };
  };
};
var declImport = function(dictToName) {
  var toName2 = toName(dictToName);
  return function(name2) {
    return function(imports) {
      return {
        keyword: tokImport,
        module: toName2(name2),
        names: map25(function() {
          var $419 = Tuple.create(Nothing.value);
          return function($420) {
            return $419(toParenList($420));
          };
        }())(fromArray(imports)),
        qualified: Nothing.value
      };
    };
  };
};
var declDerive = function(dictToQualifiedName) {
  var instHead1 = instHead(dictToQualifiedName);
  return function(name2) {
    return function(constraints) {
      return function(className) {
        return function(types) {
          return new DeclDerive(tokDerive, Nothing.value, instHead1(name2)(constraints)(className)(types));
        };
      };
    };
  };
};
var binaryOp = function(dictToQualifiedName) {
  var toQualifiedName3 = toQualifiedName(dictToQualifiedName);
  return function(a) {
    return function(b) {
      return new Tuple(toQualifiedName3(a), b);
    };
  };
};

// output/GraphQL.Client.CodeGen.UtilCst/index.js
var toQualifiedNameString2 = /* @__PURE__ */ toQualifiedNameString();
var typeCtor2 = /* @__PURE__ */ typeCtor(/* @__PURE__ */ toQualifiedNameString2(fromTokenQualifiedProper));
var toQualifiedName2 = /* @__PURE__ */ toQualifiedName(/* @__PURE__ */ toQualifiedNameQualified(toTokenProperProper));
var mapFlipped2 = /* @__PURE__ */ mapFlipped(functorMaybe);
var lookup4 = /* @__PURE__ */ lookup(ordString);
var typeCtor1 = /* @__PURE__ */ typeCtor(toQualifiedNameQualifiedN);
var leading2 = /* @__PURE__ */ leading(/* @__PURE__ */ overLeadingCommentsType(overLeadingCommentsVoid));
var fold5 = /* @__PURE__ */ fold(foldableMaybe)(monoidString);
var wrapNotNull = function(s) {
  return typeApp(typeCtor2("NotNull"))([s]);
};
var qualifiy = /* @__PURE__ */ function() {
  var $60 = toQualifiedName(toQualifiedNameProperProp);
  return function($61) {
    return $60(Proper($61));
  };
}();
var qualifiedTypeToName = function(v) {
  if (v.moduleName === "") {
    return qualifiy(v.typeName);
  }
  ;
  return toQualifiedName2(new Qualified(new Just(v.moduleName), v.typeName));
};
var typeName = function(gqlScalarsToPursTypes) {
  return function(id2) {
    return function(str) {
      return fromMaybe$prime(function(v) {
        var v1 = pascalCase(str);
        if (v1 === "Id") {
          return qualifiedTypeToName(id2);
        }
        ;
        if (v1 === "Float") {
          return qualifiy("Number");
        }
        ;
        if (v1 === "Numeric") {
          return qualifiy("Number");
        }
        ;
        if (v1 === "Bigint") {
          return qualifiy("Number");
        }
        ;
        if (v1 === "Smallint") {
          return qualifiy("Int");
        }
        ;
        if (v1 === "Integer") {
          return qualifiy("Int");
        }
        ;
        if (v1 === "Int") {
          return qualifiy("Int");
        }
        ;
        if (v1 === "Int2") {
          return qualifiy("Int");
        }
        ;
        if (v1 === "Int4") {
          return qualifiy("Int");
        }
        ;
        if (v1 === "Int8") {
          return qualifiy("Int");
        }
        ;
        if (v1 === "Text") {
          return qualifiy("String");
        }
        ;
        if (v1 === "Citext") {
          return qualifiy("String");
        }
        ;
        if (v1 === "Jsonb") {
          return qualifiedTypeToName({
            typeName: "Json",
            moduleName: "Data.Argonaut.Core"
          });
        }
        ;
        if (v1 === "Timestamp") {
          return qualifiedTypeToName({
            typeName: "DateTime",
            moduleName: "Data.DateTime"
          });
        }
        ;
        if (v1 === "Timestamptz") {
          return qualifiedTypeToName({
            typeName: "DateTime",
            moduleName: "Data.DateTime"
          });
        }
        ;
        return qualifiy(v1);
      })(mapFlipped2(lookup4(str)(gqlScalarsToPursTypes))(qualifiedTypeToName));
    };
  };
};
var namedTypeToPurs = function(gqlScalarsToPursTypes) {
  return function(id2) {
    return function(v) {
      return typeCtor1(typeName(gqlScalarsToPursTypes)(id2)(v));
    };
  };
};
var argTypeToPurs = function(gqlScalarsToPursTypes) {
  return function(id2) {
    return function(v) {
      if (v instanceof Type_NamedType) {
        return namedTypeToPurs(gqlScalarsToPursTypes)(id2)(v.value0);
      }
      ;
      if (v instanceof Type_ListType) {
        return argListTypeToPurs(gqlScalarsToPursTypes)(id2)(v.value0);
      }
      ;
      if (v instanceof Type_NonNullType) {
        return wrapNotNull(argNotNullTypeToPurs(gqlScalarsToPursTypes)(id2)(v.value0));
      }
      ;
      throw new Error("Failed pattern match at GraphQL.Client.CodeGen.UtilCst (line 92, column 42 - line 95, column 112): " + [v.constructor.name]);
    };
  };
};
var argNotNullTypeToPurs = function(gqlScalarsToPursTypes) {
  return function(id2) {
    return function(v) {
      if (v instanceof NonNullType_NamedType) {
        return namedTypeToPurs(gqlScalarsToPursTypes)(id2)(v.value0);
      }
      ;
      if (v instanceof NonNullType_ListType) {
        return argListTypeToPurs(gqlScalarsToPursTypes)(id2)(v.value0);
      }
      ;
      throw new Error("Failed pattern match at GraphQL.Client.CodeGen.UtilCst (line 98, column 49 - line 100, column 77): " + [v.constructor.name]);
    };
  };
};
var argListTypeToPurs = function(gqlScalarsToPursTypes) {
  return function(id2) {
    return function(v) {
      return typeApp(typeCtor2("Array"))([argTypeToPurs(gqlScalarsToPursTypes)(id2)(v)]);
    };
  };
};
var inputValueDefinitionToPurs = function(gqlScalarsToPursTypes) {
  return function(id2) {
    return function(v) {
      return new Tuple(v.name, leading2(docComments(fold5(v.description)))(argTypeToPurs(gqlScalarsToPursTypes)(id2)(v.type)));
    };
  };
};

// output/GraphQL.Client.CodeGen.Directive/index.js
var toQualifiedNameString3 = /* @__PURE__ */ toQualifiedNameString();
var toQualifiedNameString1 = /* @__PURE__ */ toQualifiedNameString3(fromTokenQualifiedProper);
var typeCtor3 = /* @__PURE__ */ typeCtor(toQualifiedNameString1);
var bind4 = /* @__PURE__ */ bind(bindList);
var pure9 = /* @__PURE__ */ pure(applicativeList);
var mempty7 = /* @__PURE__ */ mempty(monoidList);
var toNameStringIdent2 = /* @__PURE__ */ toNameStringIdent();
var declSignature2 = /* @__PURE__ */ declSignature(toNameStringIdent2);
var typeVar2 = /* @__PURE__ */ typeVar(typeVarTypeVarBindingPref)(toNameStringIdent2);
var typeVar1 = /* @__PURE__ */ typeVar(typeVarType)(toNameStringIdent2);
var declValue2 = /* @__PURE__ */ declValue(toNameStringIdent2)(toGuardedExpr);
var exprIdent2 = /* @__PURE__ */ exprIdent(/* @__PURE__ */ toQualifiedNameString3(fromTokenQualifiedIdent));
var exprCtor2 = /* @__PURE__ */ exprCtor(toQualifiedNameString1);
var fromFoldable6 = /* @__PURE__ */ fromFoldable3(foldableList);
var unwrap5 = /* @__PURE__ */ unwrap();
var mapFlipped3 = /* @__PURE__ */ mapFlipped(functorArray);
var append6 = /* @__PURE__ */ append(semigroupArray);
var binaryOp2 = /* @__PURE__ */ binaryOp(/* @__PURE__ */ toQualifiedNameString3(fromTokenQualifiedOperato));
var fold6 = /* @__PURE__ */ fold(foldableMaybe)(monoidString);
var typeRecord2 = /* @__PURE__ */ typeRecord(toNameStringLabel);
var toNameStringModuleName2 = /* @__PURE__ */ toNameStringModuleName();
var declImport2 = /* @__PURE__ */ declImport(toNameStringModuleName2);
var toNameStringProper2 = /* @__PURE__ */ toNameStringProper();
var importType2 = /* @__PURE__ */ importType(toNameStringProper2);
var importValue2 = /* @__PURE__ */ importValue(toNameStringIdent2);
var importTypeAll2 = /* @__PURE__ */ importTypeAll(toNameStringProper2);
var importTypeOp2 = /* @__PURE__ */ importTypeOp(/* @__PURE__ */ toNameStringSymbolName());
var foldMap8 = /* @__PURE__ */ foldMap(foldableList)(monoidArray);
var declTypeSignature2 = /* @__PURE__ */ declTypeSignature(toNameStringProper2);
var declType2 = /* @__PURE__ */ declType(toNameStringProper2);
var module_2 = /* @__PURE__ */ module_(toNameStringModuleName2);
var nilType = /* @__PURE__ */ typeCtor3("Nil'");
var getDirectiveDefinitions = function(defs) {
  return bind4(defs)(function(v) {
    if (v instanceof Definition_TypeSystemDefinition && v.value0 instanceof TypeSystemDefinition_DirectiveDefinition) {
      return pure9(v.value0.value0);
    }
    ;
    return mempty7;
  });
};
var executableDirectiveLocationtoPurs = function(v) {
  if (v instanceof QUERY) {
    return new Just(typeCtor3("QUERY"));
  }
  ;
  if (v instanceof MUTATION) {
    return new Just(typeCtor3("MUTATION"));
  }
  ;
  if (v instanceof SUBSCRIPTION) {
    return new Just(typeCtor3("SUBSCRIPTION"));
  }
  ;
  if (v instanceof FIELD) {
    return Nothing.value;
  }
  ;
  if (v instanceof FRAGMENT_DEFINITION) {
    return Nothing.value;
  }
  ;
  if (v instanceof FRAGMENT_SPREAD) {
    return Nothing.value;
  }
  ;
  if (v instanceof INLINE_FRAGMENT) {
    return Nothing.value;
  }
  ;
  throw new Error("Failed pattern match at GraphQL.Client.CodeGen.Directive (line 121, column 51 - line 128, column 33): " + [v.constructor.name]);
};
var directiveToApplierPurs = function(v) {
  return [declSignature2(v.name)(typeForall([typeVar2("q"), typeVar2("args")])(typeArrow([typeVar1("args"), typeVar1("q")])(typeApp(typeCtor3("ApplyDirective"))([typeString(v.name), typeVar1("args"), typeVar1("q")])))), declValue2(v.name)([])(exprApp(exprIdent2("applyDir"))([exprTyped(exprCtor2("Proxy"))(typeApp(typeWildcard)([typeString(v.name)]))]))];
};
var directiveLocationToPurs = function(v) {
  if (v instanceof DirectiveLocation_ExecutableDirectiveLocation) {
    return executableDirectiveLocationtoPurs(v.value0);
  }
  ;
  return Nothing.value;
};
var directiveToPurs = function(gqlScalarsToPursTypes) {
  return function(id2) {
    return function(v) {
      var locationsArr = fromFoldable6(unwrap5(v.directiveLocations));
      var locationTypes = mapMaybe2(directiveLocationToPurs)(locationsArr);
      var locations = function() {
        var v1 = uncons2(locationTypes);
        if (v1 instanceof Nothing) {
          return nilType;
        }
        ;
        if (v1 instanceof Just) {
          return typeOp(v1.value0.head)(mapFlipped3(append6(v1.value0.tail)([nilType]))(binaryOp2(":>")));
        }
        ;
        throw new Error("Failed pattern match at GraphQL.Client.CodeGen.Directive (line 96, column 29 - line 98, column 83): " + [v1.constructor.name]);
      }();
      var args = mapFlipped3(maybe([])(function($75) {
        return fromFoldable6(unwrap5($75));
      })(v.argumentsDefinition))(inputValueDefinitionToPurs(gqlScalarsToPursTypes)(id2));
      var $63 = $$null(locationTypes);
      if ($63) {
        return Nothing.value;
      }
      ;
      return new Just(typeApp(typeCtor3("Directive"))([typeString(v.name), typeString(fold6(v.description)), typeRecord2(args)(Nothing.value), locations]));
    };
  };
};
var getDocumentDirectivesPurs = function(gqlScalarsToPursTypes) {
  return function(id2) {
    return function(moduleName) {
      return function(v) {
        var imports = [declImport2("Prelude")([]), declImport2("GraphQL.Client.Args")([importType2("NotNull")]), declImport2("GraphQL.Client.Directive")([importType2("ApplyDirective"), importValue2("applyDir")]), declImport2("GraphQL.Client.Directive.Definition")([importType2("Directive")]), declImport2("GraphQL.Client.Directive.Location")([importType2("MUTATION"), importType2("QUERY"), importType2("SUBSCRIPTION")]), declImport2("GraphQL.Client.Operation")([importTypeAll2("OpMutation"), importTypeAll2("OpQuery"), importTypeAll2("OpSubscription")]), declImport2("Type.Data.List")([importTypeOp2(":>"), importType2("List'"), importType2("Nil'")]), declImport2("Type.Proxy")([importTypeAll2("Proxy")])];
        var exports = [];
        var directives = getDirectiveDefinitions(v);
        var directiveTypes = mapMaybe2(directiveToPurs(gqlScalarsToPursTypes)(id2))(fromFoldable6(directives));
        var directiveTypeWithNil = snoc$prime(directiveTypes)(typeCtor3("Nil'"));
        var directiveDefinitionsPurs = function() {
          var v1 = uncons3(directiveTypeWithNil);
          return typeOp(v1.head)(mapFlipped3(v1.tail)(binaryOp2(":>")));
        }();
        var directiveAppliers = foldMap8(directiveToApplierPurs)(directives);
        var decls = append6([declTypeSignature2("Directives")(typeApp(typeCtor3("List'"))([typeCtor3("Type")])), declType2("Directives")([])(directiveDefinitionsPurs)])(directiveAppliers);
        return printModule(module_2(moduleName)(exports)(imports)(decls));
      };
    };
  };
};

// output/GraphQL.Client.CodeGen.IntrospectionResult/index.js
var map26 = /* @__PURE__ */ map(functorEither);
var wrap2 = /* @__PURE__ */ wrap();
var gDecodeJsonCons2 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldId(decodeJsonString));
var gDecodeJsonCons1 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldMaybe(decodeJsonString));
var ofTypeIsSymbol = {
  reflectSymbol: function() {
    return "ofType";
  }
};
var nameIsSymbol = {
  reflectSymbol: function() {
    return "name";
  }
};
var kindIsSymbol = {
  reflectSymbol: function() {
    return "kind";
  }
};
var decodeJsonTypeRef = {
  decodeJson: function(a) {
    return map26(wrap2)(decodeJson(decodeRecord(gDecodeJsonCons2(gDecodeJsonCons1(gDecodeJsonCons(decodeFieldMaybe(decodeJsonTypeRef))(gDecodeJsonNil)(ofTypeIsSymbol)()())(nameIsSymbol)()())(kindIsSymbol)()())())(a));
  }
};

// output/Parsing/index.js
var ParseError = /* @__PURE__ */ function() {
  function ParseError2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ParseError2.create = function(value0) {
    return function(value1) {
      return new ParseError2(value0, value1);
    };
  };
  return ParseError2;
}();
var parseErrorMessage = function(v) {
  return v.value0;
};
var initialPos = {
  index: 0,
  line: 1,
  column: 1
};

// output/GraphQL.Client.CodeGen.DocumentFromIntrospection/index.js
var bind5 = /* @__PURE__ */ bind(bindEither);
var pure10 = /* @__PURE__ */ pure(applicativeEither);
var pure14 = /* @__PURE__ */ pure(applicativeList);
var wrap3 = /* @__PURE__ */ wrap();
var unwrap6 = /* @__PURE__ */ unwrap();
var fold7 = /* @__PURE__ */ fold(foldableMaybe)(monoidString);
var fromFoldable7 = /* @__PURE__ */ fromFoldable(foldableArray);
var map27 = /* @__PURE__ */ map(functorList);
var map112 = /* @__PURE__ */ map(functorMaybe);
var traverse2 = /* @__PURE__ */ traverse(traversableArray)(applicativeEither);
var map28 = /* @__PURE__ */ map(functorEither);
var append17 = /* @__PURE__ */ append(semigroupList);
var bind12 = /* @__PURE__ */ bind(bindMaybe);
var traverse12 = /* @__PURE__ */ traverse(traversableList)(applicativeEither);
var append24 = /* @__PURE__ */ append(/* @__PURE__ */ semigroupEither(semigroupList));
var gDecodeJsonCons3 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldMaybe(decodeJsonString));
var gDecodeJsonCons12 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldId(decodeJsonString));
var nameIsSymbol2 = {
  reflectSymbol: function() {
    return "name";
  }
};
var gDecodeJsonCons22 = /* @__PURE__ */ gDecodeJsonCons12(/* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldId(decodeJsonTypeRef))(gDecodeJsonNil)({
  reflectSymbol: function() {
    return "type";
  }
})()())(nameIsSymbol2)()();
var descriptionIsSymbol = {
  reflectSymbol: function() {
    return "description";
  }
};
var decodeArray3 = /* @__PURE__ */ decodeArray2(/* @__PURE__ */ decodeRecord(/* @__PURE__ */ gDecodeJsonCons3(/* @__PURE__ */ gDecodeJsonCons3(gDecodeJsonCons22)(descriptionIsSymbol)()())({
  reflectSymbol: function() {
    return "defaultValue";
  }
})()())());
var gDecodeJsonCons32 = /* @__PURE__ */ gDecodeJsonCons12(gDecodeJsonNil)(nameIsSymbol2)()();
var argsIsSymbol = {
  reflectSymbol: function() {
    return "args";
  }
};
var decodeRecord2 = /* @__PURE__ */ decodeRecord(/* @__PURE__ */ gDecodeJsonCons3(gDecodeJsonNil)(nameIsSymbol2)()())();
var gDecodeJsonCons4 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldMaybe(decodeRecord2));
var gDecodeJsonCons5 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldId(decodeJsonBoolean));
var isDeprecatedIsSymbol = {
  reflectSymbol: function() {
    return "isDeprecated";
  }
};
var deprecationReasonIsSymbol = {
  reflectSymbol: function() {
    return "deprecationReason";
  }
};
var gDecodeJsonCons6 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldMaybe(decodeArray3));
var gDecodeJsonCons7 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldMaybe(/* @__PURE__ */ decodeArray2(decodeJsonTypeRef)));
var lmap5 = /* @__PURE__ */ lmap(bifunctorEither);
var JsonDecodeError = /* @__PURE__ */ function() {
  function JsonDecodeError2(value0) {
    this.value0 = value0;
  }
  ;
  JsonDecodeError2.create = function(value0) {
    return new JsonDecodeError2(value0);
  };
  return JsonDecodeError2;
}();
var InvalidIntrospectionSchema = /* @__PURE__ */ function() {
  function InvalidIntrospectionSchema2(value0) {
    this.value0 = value0;
  }
  ;
  InvalidIntrospectionSchema2.create = function(value0) {
    return new InvalidIntrospectionSchema2(value0);
  };
  return InvalidIntrospectionSchema2;
}();
var toParserError = function(v) {
  if (v instanceof JsonDecodeError) {
    return new ParseError(printJsonDecodeError(v.value0), initialPos);
  }
  ;
  if (v instanceof InvalidIntrospectionSchema) {
    return new ParseError(v.value0, initialPos);
  }
  ;
  throw new Error("Failed pattern match at GraphQL.Client.CodeGen.DocumentFromIntrospection (line 241, column 17 - line 243, column 58): " + [v.constructor.name]);
};
var startsWith = function(pre) {
  return function(str) {
    return take4(length6(pre))(str) === pre;
  };
};
var noSchemaTypes = /* @__PURE__ */ filter3(/* @__PURE__ */ function() {
  var $260 = maybe(true)(not(heytingAlgebraFunction(heytingAlgebraFunction(heytingAlgebraBoolean)))(startsWith)("__"));
  return function($261) {
    return $260(function(v) {
      return v.name;
    }($261));
  };
}());
var documentFromIntrospection = /* @__PURE__ */ function() {
  var toDocument = function(v) {
    var toScalarDefinition = function(fullType) {
      return bind5(note("No name for scalar type")(fullType.name))(function(name2) {
        return pure10({
          description: fullType.description,
          name: name2,
          directives: Nothing.value
        });
      });
    };
    var toRootOp = function(opType) {
      return function(name2) {
        return pure14({
          namedType: wrap3(name2),
          operationType: opType
        });
      };
    };
    var toNamedType = function($262) {
      return NamedType(fold7(function(v1) {
        return v1.name;
      }(unwrap6($262))));
    };
    var toUnionMemberTypes = function() {
      var $263 = map27(toNamedType);
      return function($264) {
        return UnionMemberTypes($263(fromFoldable7($264)));
      };
    }();
    var toUnionDefinition = function(fullType) {
      return bind5(note("No name for union type")(fullType.name))(function(name2) {
        return pure10({
          description: fullType.description,
          directives: Nothing.value,
          name: name2,
          unionMemberTypes: map112(toUnionMemberTypes)(fullType.possibleTypes)
        });
      });
    };
    var toType = function(v1) {
      var v2 = function(v3) {
        var v4 = function(v5) {
          return new Type_NamedType(fold7(v1.name));
        };
        if (v1.kind === "NON_NULL") {
          if (v1.ofType instanceof Just) {
            return new Type_NonNullType(toNonNullType(v1.ofType.value0));
          }
          ;
          return v4(true);
        }
        ;
        return v4(true);
      };
      if (v1.kind === "LIST") {
        if (v1.ofType instanceof Just) {
          return new Type_ListType(toListType(v1.ofType.value0));
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
    var toNonNullType = function(v1) {
      var v2 = function(v3) {
        return new NonNullType_NamedType(fold7(v1.name));
      };
      if (v1.kind === "LIST") {
        if (v1.ofType instanceof Just) {
          return new NonNullType_ListType(toListType(v1.ofType.value0));
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
    var toListType = function(t) {
      return toType(t);
    };
    var toInputValueDefinition = function(inputValue) {
      return {
        defaultValue: Nothing.value,
        description: inputValue.description,
        directives: Nothing.value,
        name: inputValue.name,
        type: toType(inputValue.type)
      };
    };
    var toInputFieldsDefintion = function() {
      var $265 = map27(toInputValueDefinition);
      return function($266) {
        return InputFieldsDefinition($265(fromFoldable7($266)));
      };
    }();
    var toInputObjectDefinition = function(fullType) {
      return bind5(note("No name for input object type")(fullType.name))(function(name2) {
        return pure10({
          description: fullType.description,
          directives: Nothing.value,
          inputFieldsDefinition: map112(toInputFieldsDefintion)(fullType.inputFields),
          name: name2
        });
      });
    };
    var toEnumValueDefinition = function(enumValue) {
      return {
        description: enumValue.description,
        directives: Nothing.value,
        enumValue: wrap3(enumValue.name)
      };
    };
    var toEnumValuesDefintion = function() {
      var $267 = map27(toEnumValueDefinition);
      return function($268) {
        return EnumValuesDefinition($267(fromFoldable7($268)));
      };
    }();
    var toEnumDefinition = function(fullType) {
      return bind5(note("No name for enum type")(fullType.name))(function(name2) {
        return pure10({
          description: fullType.description,
          directives: Nothing.value,
          name: name2,
          enumValuesDefinition: map112(toEnumValuesDefintion)(fullType.enumValues)
        });
      });
    };
    var toDirectiveLocation = function(v1) {
      if (v1 === "QUERY") {
        return new Right(new DirectiveLocation_ExecutableDirectiveLocation(QUERY.value));
      }
      ;
      if (v1 === "MUTATION") {
        return new Right(new DirectiveLocation_ExecutableDirectiveLocation(MUTATION.value));
      }
      ;
      if (v1 === "SUBSCRIPTION") {
        return new Right(new DirectiveLocation_ExecutableDirectiveLocation(SUBSCRIPTION.value));
      }
      ;
      if (v1 === "FIELD") {
        return new Right(new DirectiveLocation_ExecutableDirectiveLocation(FIELD.value));
      }
      ;
      if (v1 === "FRAGMENT_DEFINITION") {
        return new Right(new DirectiveLocation_ExecutableDirectiveLocation(FRAGMENT_DEFINITION.value));
      }
      ;
      if (v1 === "FRAGMENT_SPREAD") {
        return new Right(new DirectiveLocation_ExecutableDirectiveLocation(FRAGMENT_SPREAD.value));
      }
      ;
      if (v1 === "INLINE_FRAGMENT") {
        return new Right(new DirectiveLocation_ExecutableDirectiveLocation(INLINE_FRAGMENT.value));
      }
      ;
      if (v1 === "SCHEMA") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(SCHEMA.value));
      }
      ;
      if (v1 === "SCALAR") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(SCALAR.value));
      }
      ;
      if (v1 === "OBJECT") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(OBJECT.value));
      }
      ;
      if (v1 === "FIELD_DEFINITION") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(FIELD_DEFINITION.value));
      }
      ;
      if (v1 === "ARGUMENT_DEFINITION") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(ARGUMENT_DEFINITION.value));
      }
      ;
      if (v1 === "INTERFACE") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(INTERFACE.value));
      }
      ;
      if (v1 === "UNION") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(UNION.value));
      }
      ;
      if (v1 === "ENUM") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(ENUM.value));
      }
      ;
      if (v1 === "ENUM_VALUE") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(ENUM_VALUE.value));
      }
      ;
      if (v1 === "INPUT_OBJECT") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(INPUT_OBJECT.value));
      }
      ;
      if (v1 === "INPUT_FIELD_DEFINITION") {
        return new Right(new DirectiveLocation_TypeSystemDirectiveLocation(INPUT_FIELD_DEFINITION.value));
      }
      ;
      return new Left("Unknown directive location: " + v1);
    };
    var toArgumentsDefinition = function() {
      var $269 = map27(toInputValueDefinition);
      return function($270) {
        return ArgumentsDefinition($269(fromFoldable7($270)));
      };
    }();
    var toDirectiveDefinition = function(directive) {
      return bind5(traverse2(toDirectiveLocation)(directive.locations))(function(directiveLocations) {
        return pure10(new Just({
          argumentsDefinition: new Just(toArgumentsDefinition(directive.args)),
          description: directive.description,
          directiveLocations: fromFoldable7(directiveLocations),
          name: directive.name
        }));
      });
    };
    var toFieldDefinition = function(field) {
      return {
        argumentsDefinition: map112(toArgumentsDefinition)(field.args),
        description: field.description,
        directives: Nothing.value,
        name: field.name,
        type: toType(field.type)
      };
    };
    var toFieldsDefinition = function() {
      var $271 = map27(toFieldDefinition);
      return function($272) {
        return FieldsDefinition($271(fromFoldable7($272)));
      };
    }();
    var toObjectDefinition = function(fullType) {
      return bind5(note("No name for object type")(fullType.name))(function(name2) {
        return pure10({
          description: fullType.description,
          name: name2,
          implementsInterfaces: Nothing.value,
          directives: Nothing.value,
          fieldsDefinition: map112(toFieldsDefinition)(fullType.fields)
        });
      });
    };
    var toTypeSystemDefinition = function(fullType) {
      if (fullType.kind === "OBJECT") {
        return map28(function($273) {
          return Just.create(TypeDefinition_ObjectTypeDefinition.create($273));
        })(toObjectDefinition(fullType));
      }
      ;
      if (fullType.kind === "INPUT_OBJECT") {
        return map28(function($274) {
          return Just.create(TypeDefinition_InputObjectTypeDefinition.create($274));
        })(toInputObjectDefinition(fullType));
      }
      ;
      if (fullType.kind === "ENUM") {
        return map28(function($275) {
          return Just.create(TypeDefinition_EnumTypeDefinition.create($275));
        })(toEnumDefinition(fullType));
      }
      ;
      if (fullType.kind === "SCALAR") {
        return map28(function($276) {
          return Just.create(TypeDefinition_ScalarTypeDefinition.create($276));
        })(toScalarDefinition(fullType));
      }
      ;
      if (fullType.kind === "UNION") {
        return map28(function($277) {
          return Just.create(TypeDefinition_UnionTypeDefinition.create($277));
        })(toUnionDefinition(fullType));
      }
      ;
      return new Left("Unsupported TypeDefinition kind: " + fullType.kind);
    };
    var root = bind5(note("No query type")(v["__schema"].queryType.name))(function(query) {
      return pure10(new Definition_TypeSystemDefinition(new TypeSystemDefinition_SchemaDefinition({
        directives: Nothing.value,
        rootOperationTypeDefinition: append17(toRootOp(Query.value)(query))(append17(maybe(Nil.value)(toRootOp(Mutation.value))(bind12(v["__schema"].mutationType)(function(v1) {
          return v1.name;
        })))(maybe(Nil.value)(toRootOp(Subscription.value))(bind12(v["__schema"].subscriptionType)(function(v1) {
          return v1.name;
        }))))
      })));
    });
    var nonSchemaTypes = noSchemaTypes(v["__schema"].types);
    var fullTypeToDefinition = function() {
      var $278 = map28(map112(function($280) {
        return Definition_TypeSystemDefinition.create(TypeSystemDefinition_TypeDefinition.create($280));
      }));
      return function($279) {
        return $278(toTypeSystemDefinition($279));
      };
    }();
    var typeDefinitions = map28(catMaybes)(traverse12(fullTypeToDefinition)(fromFoldable7(nonSchemaTypes)));
    var directiveToDefinition = function() {
      var $281 = map28(map112(function($283) {
        return Definition_TypeSystemDefinition.create(TypeSystemDefinition_DirectiveDefinition.create($283));
      }));
      return function($282) {
        return $281(toDirectiveDefinition($282));
      };
    }();
    var directiveDefinitions = map28(catMaybes)(traverse12(directiveToDefinition)(fromFoldable7(v["__schema"].directives)));
    return map28(Document)(append24(directiveDefinitions)(append24(map28(pure14)(root))(typeDefinitions)));
  };
  return composeKleisli(bindEither)(function() {
    var $284 = lmap5(JsonDecodeError.create);
    var $285 = decodeJson(decodeRecord(gDecodeJsonCons(decodeFieldId(decodeRecord(gDecodeJsonCons(decodeFieldId(decodeArray2(decodeRecord(gDecodeJsonCons(decodeFieldId(decodeArray3))(gDecodeJsonCons3(gDecodeJsonCons(decodeFieldId(decodeArray2(decodeJsonString)))(gDecodeJsonCons32)({
      reflectSymbol: function() {
        return "locations";
      }
    })()())(descriptionIsSymbol)()())(argsIsSymbol)()())())))(gDecodeJsonCons4(gDecodeJsonCons(decodeFieldId(decodeRecord2))(gDecodeJsonCons4(gDecodeJsonCons(decodeFieldId(decodeArray2(decodeRecord(gDecodeJsonCons3(gDecodeJsonCons(decodeFieldMaybe(decodeArray2(decodeRecord(gDecodeJsonCons3(gDecodeJsonCons3(gDecodeJsonCons5(gDecodeJsonCons32)(isDeprecatedIsSymbol)()())(descriptionIsSymbol)()())(deprecationReasonIsSymbol)()())())))(gDecodeJsonCons(decodeFieldMaybe(decodeArray2(decodeRecord(gDecodeJsonCons6(gDecodeJsonCons3(gDecodeJsonCons3(gDecodeJsonCons5(gDecodeJsonCons22)(isDeprecatedIsSymbol)()())(descriptionIsSymbol)()())(deprecationReasonIsSymbol)()())(argsIsSymbol)()())())))(gDecodeJsonCons6(gDecodeJsonCons7(gDecodeJsonCons12(gDecodeJsonCons3(gDecodeJsonCons7(gDecodeJsonNil)({
      reflectSymbol: function() {
        return "possibleTypes";
      }
    })()())(nameIsSymbol2)()())({
      reflectSymbol: function() {
        return "kind";
      }
    })()())({
      reflectSymbol: function() {
        return "interfaces";
      }
    })()())({
      reflectSymbol: function() {
        return "inputFields";
      }
    })()())({
      reflectSymbol: function() {
        return "fields";
      }
    })()())({
      reflectSymbol: function() {
        return "enumValues";
      }
    })()())(descriptionIsSymbol)()())())))(gDecodeJsonNil)({
      reflectSymbol: function() {
        return "types";
      }
    })()())({
      reflectSymbol: function() {
        return "subscriptionType";
      }
    })()())({
      reflectSymbol: function() {
        return "queryType";
      }
    })()())({
      reflectSymbol: function() {
        return "mutationType";
      }
    })()())({
      reflectSymbol: function() {
        return "directives";
      }
    })()())()))(gDecodeJsonNil)({
      reflectSymbol: function() {
        return "__schema";
      }
    })()())());
    return function($286) {
      return $284($285($286));
    };
  }())(function() {
    var $287 = lmap5(InvalidIntrospectionSchema.create);
    return function($288) {
      return $287(toDocument($288));
    };
  }());
}();

// output/GraphQL.Client.CodeGen.GetSymbols/index.js
var foldMap9 = /* @__PURE__ */ foldMap(foldableArray)(monoidString);
var show2 = /* @__PURE__ */ show(showString);
var nub3 = /* @__PURE__ */ nub2(ordString);
var bind6 = /* @__PURE__ */ bind(bindList);
var monoidFn2 = /* @__PURE__ */ monoidFn(monoidList);
var mempty8 = /* @__PURE__ */ mempty(monoidList);
var sort4 = /* @__PURE__ */ sort(ordString);
var nub1 = /* @__PURE__ */ nub(ordString);
var not3 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean));
var unwrap7 = /* @__PURE__ */ unwrap();
var symbolsToCode = function(dictFoldable) {
  var fromFoldable11 = fromFoldable3(dictFoldable);
  return function(modulePrefix) {
    return function(symbols) {
      var symbolsString = foldMap9(function(s) {
        return "\n" + (s + (" = Proxy :: Proxy" + show2(s)));
      })(nub3(fromFoldable11(symbols)));
      return "module " + (modulePrefix + ("Symbols where\n\nimport Type.Proxy (Proxy(..))\n" + symbolsString));
    };
  };
};
var keyword = /* @__PURE__ */ flip(/* @__PURE__ */ elem2(eqString))(["data", "type", "instance", "if", "then", "else"]);
var getSymbols = function(doc) {
  var inputValueDefinitionsToSymbols1 = mempty(monoidFn2);
  var argumentsDefinitionToSymbols = function(v) {
    return bind6(v)(inputValueDefinitionsToSymbols1);
  };
  var fieldDefinitionToSymbols = function(v) {
    return new Cons(v.name, maybe(mempty8)(argumentsDefinitionToSymbols)(v.argumentsDefinition));
  };
  var fieldsDefinitionToSymbols = function(v) {
    return bind6(v)(fieldDefinitionToSymbols);
  };
  var objectTypeDefinitionToSymbols = function(v) {
    return maybe(mempty8)(fieldsDefinitionToSymbols)(v.fieldsDefinition);
  };
  var typeDefinitionToSymbols = function(v) {
    if (v instanceof TypeDefinition_ScalarTypeDefinition) {
      return mempty8;
    }
    ;
    if (v instanceof TypeDefinition_ObjectTypeDefinition) {
      return objectTypeDefinitionToSymbols(v.value0);
    }
    ;
    if (v instanceof TypeDefinition_InterfaceTypeDefinition) {
      return mempty8;
    }
    ;
    if (v instanceof TypeDefinition_UnionTypeDefinition) {
      return mempty8;
    }
    ;
    if (v instanceof TypeDefinition_EnumTypeDefinition) {
      return mempty8;
    }
    ;
    if (v instanceof TypeDefinition_InputObjectTypeDefinition) {
      return mempty8;
    }
    ;
    throw new Error("Failed pattern match at GraphQL.Client.CodeGen.GetSymbols (line 52, column 29 - line 58, column 61): " + [v.constructor.name]);
  };
  var typeSystemDefinitionToSymbols = function(v) {
    if (v instanceof TypeSystemDefinition_SchemaDefinition) {
      return mempty8;
    }
    ;
    if (v instanceof TypeSystemDefinition_TypeDefinition) {
      return typeDefinitionToSymbols(v.value0);
    }
    ;
    if (v instanceof TypeSystemDefinition_DirectiveDefinition) {
      return mempty8;
    }
    ;
    throw new Error("Failed pattern match at GraphQL.Client.CodeGen.GetSymbols (line 46, column 35 - line 49, column 61): " + [v.constructor.name]);
  };
  var definitionToSymbols = function(v) {
    if (v instanceof Definition_ExecutableDefinition) {
      return mempty8;
    }
    ;
    if (v instanceof Definition_TypeSystemDefinition) {
      return typeSystemDefinitionToSymbols(v.value0);
    }
    ;
    if (v instanceof Definition_TypeSystemExtension) {
      return mempty8;
    }
    ;
    throw new Error("Failed pattern match at GraphQL.Client.CodeGen.GetSymbols (line 40, column 25 - line 43, column 51): " + [v.constructor.name]);
  };
  return sort4(nub1(filter(not3(keyword))(bind6(unwrap7(doc))(definitionToSymbols))));
};

// output/Data.CatQueue/index.js
var CatQueue = /* @__PURE__ */ function() {
  function CatQueue2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  CatQueue2.create = function(value0) {
    return function(value1) {
      return new CatQueue2(value0, value1);
    };
  };
  return CatQueue2;
}();
var uncons5 = function($copy_v) {
  var $tco_done = false;
  var $tco_result;
  function $tco_loop(v) {
    if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
      $tco_done = true;
      return Nothing.value;
    }
    ;
    if (v.value0 instanceof Nil) {
      $copy_v = new CatQueue(reverse(v.value1), Nil.value);
      return;
    }
    ;
    if (v.value0 instanceof Cons) {
      $tco_done = true;
      return new Just(new Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
    }
    ;
    throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v.constructor.name]);
  }
  ;
  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }
  ;
  return $tco_result;
};
var snoc5 = function(v) {
  return function(a) {
    return new CatQueue(v.value0, new Cons(a, v.value1));
  };
};
var $$null4 = function(v) {
  if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
    return true;
  }
  ;
  return false;
};
var empty5 = /* @__PURE__ */ function() {
  return new CatQueue(Nil.value, Nil.value);
}();

// output/Data.CatList/index.js
var CatNil = /* @__PURE__ */ function() {
  function CatNil2() {
  }
  ;
  CatNil2.value = new CatNil2();
  return CatNil2;
}();
var CatCons = /* @__PURE__ */ function() {
  function CatCons2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  CatCons2.create = function(value0) {
    return function(value1) {
      return new CatCons2(value0, value1);
    };
  };
  return CatCons2;
}();
var link = function(v) {
  return function(v1) {
    if (v instanceof CatNil) {
      return v1;
    }
    ;
    if (v1 instanceof CatNil) {
      return v;
    }
    ;
    if (v instanceof CatCons) {
      return new CatCons(v.value0, snoc5(v.value1)(v1));
    }
    ;
    throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v.constructor.name, v1.constructor.name]);
  };
};
var foldr9 = function(k) {
  return function(b) {
    return function(q) {
      var foldl6 = function($copy_v) {
        return function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v = $copy_v;
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1, v2) {
              if (v2 instanceof Nil) {
                $tco_done = true;
                return v1;
              }
              ;
              if (v2 instanceof Cons) {
                $tco_var_v = v;
                $tco_var_v1 = v(v1)(v2.value0);
                $copy_v2 = v2.value1;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
      };
      var go = function($copy_xs) {
        return function($copy_ys) {
          var $tco_var_xs = $copy_xs;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(xs, ys) {
            var v = uncons5(xs);
            if (v instanceof Nothing) {
              $tco_done1 = true;
              return foldl6(function(x) {
                return function(i) {
                  return i(x);
                };
              })(b)(ys);
            }
            ;
            if (v instanceof Just) {
              $tco_var_xs = v.value0.value1;
              $copy_ys = new Cons(k(v.value0.value0), ys);
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_xs, $copy_ys);
          }
          ;
          return $tco_result;
        };
      };
      return go(q)(Nil.value);
    };
  };
};
var uncons6 = function(v) {
  if (v instanceof CatNil) {
    return Nothing.value;
  }
  ;
  if (v instanceof CatCons) {
    return new Just(new Tuple(v.value0, function() {
      var $66 = $$null4(v.value1);
      if ($66) {
        return CatNil.value;
      }
      ;
      return foldr9(link)(CatNil.value)(v.value1);
    }()));
  }
  ;
  throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v.constructor.name]);
};
var empty6 = /* @__PURE__ */ function() {
  return CatNil.value;
}();
var append7 = link;
var semigroupCatList = {
  append: append7
};
var snoc6 = function(cat) {
  return function(a) {
    return append7(cat)(new CatCons(a, empty5));
  };
};

// output/Control.Monad.Free/index.js
var $runtime_lazy6 = function(name2, moduleName, init3) {
  var state2 = 0;
  var val;
  return function(lineNumber) {
    if (state2 === 2)
      return val;
    if (state2 === 1)
      throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
    state2 = 1;
    val = init3();
    state2 = 2;
    return val;
  };
};
var append8 = /* @__PURE__ */ append(semigroupCatList);
var Free = /* @__PURE__ */ function() {
  function Free2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Free2.create = function(value0) {
    return function(value1) {
      return new Free2(value0, value1);
    };
  };
  return Free2;
}();
var Return = /* @__PURE__ */ function() {
  function Return2(value0) {
    this.value0 = value0;
  }
  ;
  Return2.create = function(value0) {
    return new Return2(value0);
  };
  return Return2;
}();
var Bind = /* @__PURE__ */ function() {
  function Bind2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  Bind2.create = function(value0) {
    return function(value1) {
      return new Bind2(value0, value1);
    };
  };
  return Bind2;
}();
var toView = function($copy_v) {
  var $tco_done = false;
  var $tco_result;
  function $tco_loop(v) {
    var runExpF = function(v22) {
      return v22;
    };
    var concatF = function(v22) {
      return function(r) {
        return new Free(v22.value0, append8(v22.value1)(r));
      };
    };
    if (v.value0 instanceof Return) {
      var v2 = uncons6(v.value1);
      if (v2 instanceof Nothing) {
        $tco_done = true;
        return new Return(v.value0.value0);
      }
      ;
      if (v2 instanceof Just) {
        $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
        return;
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
    }
    ;
    if (v.value0 instanceof Bind) {
      $tco_done = true;
      return new Bind(v.value0.value0, function(a) {
        return concatF(v.value0.value1(a))(v.value1);
      });
    }
    ;
    throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
  }
  ;
  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }
  ;
  return $tco_result;
};
var runFree = function(dictFunctor) {
  var map117 = map(dictFunctor);
  return function(k) {
    var go = function($copy_f) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(f) {
        var v = toView(f);
        if (v instanceof Return) {
          $tco_done = true;
          return v.value0;
        }
        ;
        if (v instanceof Bind) {
          $copy_f = k(map117(v.value1)(v.value0));
          return;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 178, column 10 - line 180, column 33): " + [v.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_f);
      }
      ;
      return $tco_result;
    };
    return go;
  };
};
var fromView = function(f) {
  return new Free(f, empty6);
};
var freeMonad = {
  Applicative0: function() {
    return freeApplicative;
  },
  Bind1: function() {
    return freeBind;
  }
};
var freeFunctor = {
  map: function(k) {
    return function(f) {
      return bindFlipped(freeBind)(function() {
        var $189 = pure(freeApplicative);
        return function($190) {
          return $189(k($190));
        };
      }())(f);
    };
  }
};
var freeBind = {
  bind: function(v) {
    return function(k) {
      return new Free(v.value0, snoc6(v.value1)(k));
    };
  },
  Apply0: function() {
    return $lazy_freeApply(0);
  }
};
var freeApplicative = {
  pure: function($191) {
    return fromView(Return.create($191));
  },
  Apply0: function() {
    return $lazy_freeApply(0);
  }
};
var $lazy_freeApply = /* @__PURE__ */ $runtime_lazy6("freeApply", "Control.Monad.Free", function() {
  return {
    apply: ap(freeMonad),
    Functor0: function() {
      return freeFunctor;
    }
  };
});

// output/Data.Compactable/index.js
var toUnfoldable5 = /* @__PURE__ */ toUnfoldable2(unfoldableList);
var foldr10 = /* @__PURE__ */ foldr(foldableList);
var mapToList = function(dictOrd) {
  return toUnfoldable5;
};
var compactableMap = function(dictOrd) {
  var alter4 = alter(dictOrd);
  var mapToList1 = mapToList(dictOrd);
  var insert9 = insert(dictOrd);
  return {
    compact: function() {
      var select = function(v) {
        return function(m) {
          return alter4($$const(v.value1))(v.value0)(m);
        };
      };
      var $104 = foldr10(select)(empty2);
      return function($105) {
        return $104(mapToList1($105));
      };
    }(),
    separate: function() {
      var select = function(v) {
        return function(v1) {
          if (v.value1 instanceof Left) {
            return {
              left: insert9(v.value0)(v.value1.value0)(v1.left),
              right: v1.right
            };
          }
          ;
          if (v.value1 instanceof Right) {
            return {
              left: v1.left,
              right: insert9(v.value0)(v.value1.value0)(v1.right)
            };
          }
          ;
          throw new Error("Failed pattern match at Data.Compactable (line 142, column 44 - line 144, column 63): " + [v.value1.constructor.name]);
        };
      };
      var $106 = foldr10(select)({
        left: empty2,
        right: empty2
      });
      return function($107) {
        return $106(mapToList1($107));
      };
    }()
  };
};

// output/Data.Filterable/index.js
var foldr11 = /* @__PURE__ */ foldr(foldableList);
var toUnfoldable6 = /* @__PURE__ */ toUnfoldable2(unfoldableList);
var partitionMap = function(dict) {
  return dict.partitionMap;
};
var maybeBool = function(p) {
  return function(x) {
    var $66 = p(x);
    if ($66) {
      return new Just(x);
    }
    ;
    return Nothing.value;
  };
};
var filterMap = function(dict) {
  return dict.filterMap;
};
var filterDefault = function(dictFilterable) {
  var $121 = filterMap(dictFilterable);
  return function($122) {
    return $121(maybeBool($122));
  };
};
var filter4 = function(dict) {
  return dict.filter;
};
var eitherBool = function(p) {
  return function(x) {
    var $84 = p(x);
    if ($84) {
      return new Right(x);
    }
    ;
    return new Left(x);
  };
};
var partitionDefault = function(dictFilterable) {
  var partitionMap1 = partitionMap(dictFilterable);
  return function(p) {
    return function(xs) {
      var o = partitionMap1(eitherBool(p))(xs);
      return {
        no: o.left,
        yes: o.right
      };
    };
  };
};
var filterableMap = function(dictOrd) {
  var insert9 = insert(dictOrd);
  var alter4 = alter(dictOrd);
  var compactableMap2 = compactableMap(dictOrd);
  return {
    partitionMap: function(p) {
      return function(xs) {
        var select = function(v) {
          return function(v1) {
            var v2 = p(v.value1);
            if (v2 instanceof Left) {
              return {
                left: insert9(v.value0)(v2.value0)(v1.left),
                right: v1.right
              };
            }
            ;
            if (v2 instanceof Right) {
              return {
                left: v1.left,
                right: insert9(v.value0)(v2.value0)(v1.right)
              };
            }
            ;
            throw new Error("Failed pattern match at Data.Filterable (line 215, column 44 - line 217, column 57): " + [v2.constructor.name]);
          };
        };
        return foldr11(select)({
          left: empty2,
          right: empty2
        })(toUnfoldable6(xs));
      };
    },
    partition: function(p) {
      return partitionDefault(filterableMap(dictOrd))(p);
    },
    filterMap: function(p) {
      return function(xs) {
        var select = function(v) {
          return function(m) {
            return alter4($$const(p(v.value1)))(v.value0)(m);
          };
        };
        return foldr11(select)(empty2)(toUnfoldable6(xs));
      };
    },
    filter: function(p) {
      return filterDefault(filterableMap(dictOrd))(p);
    },
    Compactable0: function() {
      return compactableMap2;
    },
    Functor1: function() {
      return functorMap;
    }
  };
};

// output/Control.Monad.State.Trans/index.js
var runStateT = function(v) {
  return v;
};
var functorStateT = function(dictFunctor) {
  var map37 = map(dictFunctor);
  return {
    map: function(f) {
      return function(v) {
        return function(s) {
          return map37(function(v1) {
            return new Tuple(f(v1.value0), v1.value1);
          })(v(s));
        };
      };
    }
  };
};
var monadStateT = function(dictMonad) {
  return {
    Applicative0: function() {
      return applicativeStateT(dictMonad);
    },
    Bind1: function() {
      return bindStateT(dictMonad);
    }
  };
};
var bindStateT = function(dictMonad) {
  var bind10 = bind(dictMonad.Bind1());
  return {
    bind: function(v) {
      return function(f) {
        return function(s) {
          return bind10(v(s))(function(v1) {
            var v3 = f(v1.value0);
            return v3(v1.value1);
          });
        };
      };
    },
    Apply0: function() {
      return applyStateT(dictMonad);
    }
  };
};
var applyStateT = function(dictMonad) {
  var functorStateT1 = functorStateT(dictMonad.Bind1().Apply0().Functor0());
  return {
    apply: ap(monadStateT(dictMonad)),
    Functor0: function() {
      return functorStateT1;
    }
  };
};
var applicativeStateT = function(dictMonad) {
  var pure17 = pure(dictMonad.Applicative0());
  return {
    pure: function(a) {
      return function(s) {
        return pure17(new Tuple(a, s));
      };
    },
    Apply0: function() {
      return applyStateT(dictMonad);
    }
  };
};
var monadStateStateT = function(dictMonad) {
  var pure17 = pure(dictMonad.Applicative0());
  var monadStateT1 = monadStateT(dictMonad);
  return {
    state: function(f) {
      return function($200) {
        return pure17(f($200));
      };
    },
    Monad0: function() {
      return monadStateT1;
    }
  };
};

// output/Record.Builder/foreign.js
function copyRecord(rec) {
  var copy = {};
  for (var key in rec) {
    if ({}.hasOwnProperty.call(rec, key)) {
      copy[key] = rec[key];
    }
  }
  return copy;
}
function unsafeInsert(l) {
  return function(a) {
    return function(rec) {
      rec[l] = a;
      return rec;
    };
  };
}

// output/Record.Builder/index.js
var semigroupoidBuilder = semigroupoidFn;
var insert7 = function() {
  return function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(l) {
        return function(a) {
          return function(r1) {
            return unsafeInsert(reflectSymbol2(l))(a)(r1);
          };
        };
      };
    };
  };
};
var categoryBuilder = categoryFn;
var build = function(v) {
  return function(r1) {
    return v(copyRecord(r1));
  };
};
var buildFromScratch = /* @__PURE__ */ flip(build)({});

// output/Tidy.Codegen.Monad/index.js
var identity18 = /* @__PURE__ */ identity(categoryBuilder);
var eq112 = /* @__PURE__ */ eq(eqProper);
var eq212 = /* @__PURE__ */ eq(eqSymbolName);
var eq311 = /* @__PURE__ */ eq(eqIdent);
var compare76 = /* @__PURE__ */ compare(ordBoolean);
var compare111 = /* @__PURE__ */ compare(ordProper);
var compare211 = /* @__PURE__ */ compare(ordSymbolName);
var compare311 = /* @__PURE__ */ compare(ordIdent);
var compose1 = /* @__PURE__ */ compose(semigroupoidBuilder);
var insert8 = /* @__PURE__ */ insert7()();
var insert1 = /* @__PURE__ */ insert4(ordModuleName);
var alter3 = /* @__PURE__ */ alter(ordModuleName);
var importTypeAll1 = /* @__PURE__ */ importTypeAll(toNameProperProper);
var importType1 = /* @__PURE__ */ importType(toNameProperProper);
var importTypeOp1 = /* @__PURE__ */ importTypeOp(toNameSymbolNameSymbolNam);
var importClass1 = /* @__PURE__ */ importClass(toNameProperProper);
var importValue1 = /* @__PURE__ */ importValue(toNameIdentIdent);
var importOp1 = /* @__PURE__ */ importOp(toNameSymbolNameSymbolNam);
var exportTypeAll1 = /* @__PURE__ */ exportTypeAll(toNameProperProper);
var exportType1 = /* @__PURE__ */ exportType(toNameProperProper);
var exportTypeOp1 = /* @__PURE__ */ exportTypeOp(toNameSymbolNameSymbolNam);
var exportClass1 = /* @__PURE__ */ exportClass(toNameProperProper);
var exportValue1 = /* @__PURE__ */ exportValue(toNameIdentIdent);
var exportOp1 = /* @__PURE__ */ exportOp(toNameSymbolNameSymbolNam);
var exportModule1 = /* @__PURE__ */ exportModule(toNameModuleNameModuleNam);
var fold8 = /* @__PURE__ */ fold(foldableMaybe)(monoidArray);
var leading3 = /* @__PURE__ */ leading(overLeadingCommentsImport);
var bind7 = /* @__PURE__ */ bind(bindArray);
var toUnfoldable7 = /* @__PURE__ */ toUnfoldable2(unfoldableArray);
var toUnfoldable1 = /* @__PURE__ */ toUnfoldable4(unfoldableArray);
var pure11 = /* @__PURE__ */ pure(applicativeArray);
var declImportAs2 = /* @__PURE__ */ declImportAs(toNameModuleNameModuleNam)(toNameModuleNameModuleNam);
var map29 = /* @__PURE__ */ map(functorArray);
var declImport3 = /* @__PURE__ */ declImport(toNameModuleNameModuleNam);
var fromFoldable8 = /* @__PURE__ */ fromFoldable3(foldableSet);
var identity1 = /* @__PURE__ */ identity(categoryFn);
var comparing2 = /* @__PURE__ */ comparing(ordModuleName);
var append9 = /* @__PURE__ */ append(semigroupArray);
var map113 = /* @__PURE__ */ map(functorTuple);
var fromFoldable1 = /* @__PURE__ */ fromFoldable3(foldableList);
var runFree2 = /* @__PURE__ */ runFree(functorIdentity);
var coerce6 = /* @__PURE__ */ coerce();
var CodegenImportType = /* @__PURE__ */ function() {
  function CodegenImportType2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  CodegenImportType2.create = function(value0) {
    return function(value1) {
      return new CodegenImportType2(value0, value1);
    };
  };
  return CodegenImportType2;
}();
var CodegenImportTypeOp = /* @__PURE__ */ function() {
  function CodegenImportTypeOp2(value0) {
    this.value0 = value0;
  }
  ;
  CodegenImportTypeOp2.create = function(value0) {
    return new CodegenImportTypeOp2(value0);
  };
  return CodegenImportTypeOp2;
}();
var CodegenImportClass = /* @__PURE__ */ function() {
  function CodegenImportClass2(value0) {
    this.value0 = value0;
  }
  ;
  CodegenImportClass2.create = function(value0) {
    return new CodegenImportClass2(value0);
  };
  return CodegenImportClass2;
}();
var CodegenImportValue = /* @__PURE__ */ function() {
  function CodegenImportValue2(value0) {
    this.value0 = value0;
  }
  ;
  CodegenImportValue2.create = function(value0) {
    return new CodegenImportValue2(value0);
  };
  return CodegenImportValue2;
}();
var CodegenImportOp = /* @__PURE__ */ function() {
  function CodegenImportOp2(value0) {
    this.value0 = value0;
  }
  ;
  CodegenImportOp2.create = function(value0) {
    return new CodegenImportOp2(value0);
  };
  return CodegenImportOp2;
}();
var ImportName = /* @__PURE__ */ function() {
  function ImportName2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  ImportName2.create = function(value0) {
    return function(value1) {
      return new ImportName2(value0, value1);
    };
  };
  return ImportName2;
}();
var CodegenExportType = /* @__PURE__ */ function() {
  function CodegenExportType2(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  ;
  CodegenExportType2.create = function(value0) {
    return function(value1) {
      return new CodegenExportType2(value0, value1);
    };
  };
  return CodegenExportType2;
}();
var CodegenExportTypeOp = /* @__PURE__ */ function() {
  function CodegenExportTypeOp2(value0) {
    this.value0 = value0;
  }
  ;
  CodegenExportTypeOp2.create = function(value0) {
    return new CodegenExportTypeOp2(value0);
  };
  return CodegenExportTypeOp2;
}();
var CodegenExportClass = /* @__PURE__ */ function() {
  function CodegenExportClass2(value0) {
    this.value0 = value0;
  }
  ;
  CodegenExportClass2.create = function(value0) {
    return new CodegenExportClass2(value0);
  };
  return CodegenExportClass2;
}();
var CodegenExportValue = /* @__PURE__ */ function() {
  function CodegenExportValue2(value0) {
    this.value0 = value0;
  }
  ;
  CodegenExportValue2.create = function(value0) {
    return new CodegenExportValue2(value0);
  };
  return CodegenExportValue2;
}();
var CodegenExportOp = /* @__PURE__ */ function() {
  function CodegenExportOp2(value0) {
    this.value0 = value0;
  }
  ;
  CodegenExportOp2.create = function(value0) {
    return new CodegenExportOp2(value0);
  };
  return CodegenExportOp2;
}();
var CodegenExportModule = /* @__PURE__ */ function() {
  function CodegenExportModule2(value0) {
    this.value0 = value0;
  }
  ;
  CodegenExportModule2.create = function(value0) {
    return new CodegenExportModule2(value0);
  };
  return CodegenExportModule2;
}();
var toImportFromRecordNilReco = {
  toImportFromRecord: function(dictApplicative) {
    var pure17 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        return function(v2) {
          return pure17(identity18);
        };
      };
    };
  }
};
var toImportFromImportNameQua = {
  toImportFrom: function(dictApplicative) {
    return apply;
  }
};
var monadCodegenT = function(dictMonad) {
  return monadStateT(dictMonad);
};
var eqCodegenImport = {
  eq: function(x) {
    return function(y) {
      if (x instanceof CodegenImportType && y instanceof CodegenImportType) {
        return x.value0 === y.value0 && eq112(x.value1)(y.value1);
      }
      ;
      if (x instanceof CodegenImportTypeOp && y instanceof CodegenImportTypeOp) {
        return eq212(x.value0)(y.value0);
      }
      ;
      if (x instanceof CodegenImportClass && y instanceof CodegenImportClass) {
        return eq112(x.value0)(y.value0);
      }
      ;
      if (x instanceof CodegenImportValue && y instanceof CodegenImportValue) {
        return eq311(x.value0)(y.value0);
      }
      ;
      if (x instanceof CodegenImportOp && y instanceof CodegenImportOp) {
        return eq212(x.value0)(y.value0);
      }
      ;
      return false;
    };
  }
};
var ordCodegenImport = {
  compare: function(x) {
    return function(y) {
      if (x instanceof CodegenImportType && y instanceof CodegenImportType) {
        var v = compare76(x.value0)(y.value0);
        if (v instanceof LT) {
          return LT.value;
        }
        ;
        if (v instanceof GT) {
          return GT.value;
        }
        ;
        return compare111(x.value1)(y.value1);
      }
      ;
      if (x instanceof CodegenImportType) {
        return LT.value;
      }
      ;
      if (y instanceof CodegenImportType) {
        return GT.value;
      }
      ;
      if (x instanceof CodegenImportTypeOp && y instanceof CodegenImportTypeOp) {
        return compare211(x.value0)(y.value0);
      }
      ;
      if (x instanceof CodegenImportTypeOp) {
        return LT.value;
      }
      ;
      if (y instanceof CodegenImportTypeOp) {
        return GT.value;
      }
      ;
      if (x instanceof CodegenImportClass && y instanceof CodegenImportClass) {
        return compare111(x.value0)(y.value0);
      }
      ;
      if (x instanceof CodegenImportClass) {
        return LT.value;
      }
      ;
      if (y instanceof CodegenImportClass) {
        return GT.value;
      }
      ;
      if (x instanceof CodegenImportValue && y instanceof CodegenImportValue) {
        return compare311(x.value0)(y.value0);
      }
      ;
      if (x instanceof CodegenImportValue) {
        return LT.value;
      }
      ;
      if (y instanceof CodegenImportValue) {
        return GT.value;
      }
      ;
      if (x instanceof CodegenImportOp && y instanceof CodegenImportOp) {
        return compare211(x.value0)(y.value0);
      }
      ;
      throw new Error("Failed pattern match at Tidy.Codegen.Monad (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
    };
  },
  Eq0: function() {
    return eqCodegenImport;
  }
};
var insert22 = /* @__PURE__ */ insert4(ordCodegenImport);
var $$delete4 = /* @__PURE__ */ $$delete3(ordCodegenImport);
var member3 = /* @__PURE__ */ member2(ordCodegenImport);
var bindCodegenT = function(dictMonad) {
  return bindStateT(dictMonad);
};
var applicativeCodegenT = function(dictMonad) {
  return applicativeStateT(dictMonad);
};
var write3 = function(dictMonad) {
  var modify_2 = modify_(monadStateStateT(dictMonad));
  return function(decl) {
    return modify_2(function(st) {
      var $398 = {};
      for (var $399 in st) {
        if ({}.hasOwnProperty.call(st, $399)) {
          $398[$399] = st[$399];
        }
        ;
      }
      ;
      $398.declarations = new Cons(decl, st.declarations);
      return $398;
    });
  };
};
var monadTellArrayDeclaration = function(dictMonad) {
  var monadCodegenT1 = monadCodegenT(dictMonad);
  return {
    tell: traverse_(applicativeCodegenT(dictMonad))(foldableArray)(write3(dictMonad)),
    Semigroup0: function() {
      return semigroupArray;
    },
    Monad1: function() {
      return monadCodegenT1;
    }
  };
};
var withQualifiedName = function(dictToToken) {
  var toToken3 = toToken(dictToToken);
  return function(k) {
    return function(from3) {
      var v = toToken3(from3);
      return k(v.value1.value1)({
        module: v.value1.value0,
        name: v.value1.value1,
        token: toSourceToken(v.value0)
      });
    };
  };
};
var toImportFromRecord = function(dict) {
  return dict.toImportFromRecord;
};
var toImportFromRecordRecord = function() {
  return function(dictToImportFromRecord) {
    var toImportFromRecord1 = toImportFromRecord(dictToImportFromRecord);
    return {
      toImportFrom: function(dictApplicative) {
        var map211 = map(dictApplicative.Apply0().Functor0());
        var toImportFromRecord2 = toImportFromRecord1(dictApplicative);
        return function(k) {
          var $531 = map211(buildFromScratch);
          var $532 = toImportFromRecord2(k)($$Proxy.value);
          return function($533) {
            return $531($532($533));
          };
        };
      }
    };
  };
};
var toImportFrom = function(dict) {
  return dict.toImportFrom;
};
var toImportFromRecordConsRec = function(dictToImportFrom) {
  var toImportFrom1 = toImportFrom(dictToImportFrom);
  return function(dictToImportFromRecord) {
    var toImportFromRecord1 = toImportFromRecord(dictToImportFromRecord);
    return function(dictIsSymbol) {
      var insert42 = insert8(dictIsSymbol);
      var get4 = get(dictIsSymbol)();
      return function() {
        return function() {
          return function() {
            return {
              toImportFromRecord: function(dictApplicative) {
                var Apply0 = dictApplicative.Apply0();
                var apply6 = apply2(Apply0);
                var map211 = map(Apply0.Functor0());
                var toImportFrom2 = toImportFrom1(dictApplicative);
                var toImportFromRecord2 = toImportFromRecord1(dictApplicative);
                return function(k) {
                  return function(v) {
                    return function(r) {
                      return apply6(map211(function(imp) {
                        return function(builder) {
                          return compose1(insert42($$Proxy.value)(imp))(builder);
                        };
                      })(toImportFrom2(k)(get4($$Proxy.value)(r))))(toImportFromRecord2(k)($$Proxy.value)(r));
                    };
                  };
                };
              }
            };
          };
        };
      };
    };
  };
};
var runCodegenT = function(v) {
  return runStateT(v)({
    exports: empty4,
    importsOpen: empty4,
    importsFrom: empty2,
    importsQualified: empty2,
    declarations: Nil.value
  });
};
var importType3 = function(dictToToken) {
  return withQualifiedName(dictToToken)(function() {
    var $537 = CodegenImportType.create(false);
    return function($538) {
      return ImportName.create($537($538));
    };
  }());
};
var importFrom = function(dictMonad) {
  var applicativeCodegenT1 = applicativeCodegenT(dictMonad);
  var state2 = state(monadStateStateT(dictMonad));
  return function(dictToModuleName) {
    var toModuleName3 = toModuleName2(dictToModuleName);
    return function(dictToImportFrom) {
      var toImportFrom1 = toImportFrom(dictToImportFrom)(applicativeCodegenT1);
      return function(mod4) {
        return toImportFrom1(function(v) {
          return state2(function(st) {
            return new Tuple(v.value1, function() {
              if (v.value1.module instanceof Nothing) {
                var $423 = {};
                for (var $424 in st) {
                  if ({}.hasOwnProperty.call(st, $424)) {
                    $423[$424] = st[$424];
                  }
                  ;
                }
                ;
                $423.importsFrom = alter3(function(v2) {
                  if (v.value0 instanceof CodegenImportType && (v.value0.value0 && v2 instanceof Just)) {
                    return new Just(insert22(v.value0)($$delete4(new CodegenImportType(false, v.value0.value1))(v2.value0)));
                  }
                  ;
                  if (v.value0 instanceof CodegenImportType && (!v.value0.value0 && (v2 instanceof Just && member3(new CodegenImportType(true, v.value0.value1))(v2.value0)))) {
                    return new Just(v2.value0);
                  }
                  ;
                  if (v2 instanceof Just) {
                    return new Just(insert22(v.value0)(v2.value0));
                  }
                  ;
                  if (v2 instanceof Nothing) {
                    return new Just(singleton9(v.value0));
                  }
                  ;
                  throw new Error("Failed pattern match at Tidy.Codegen.Monad (line 243, column 13 - line 251, column 41): " + [v.value0.constructor.name, v2.constructor.name]);
                })(toModuleName3(mod4))(st.importsFrom);
                return $423;
              }
              ;
              if (v.value1.module instanceof Just) {
                var $428 = {};
                for (var $429 in st) {
                  if ({}.hasOwnProperty.call(st, $429)) {
                    $428[$429] = st[$429];
                  }
                  ;
                }
                ;
                $428.importsQualified = alter3(function(v2) {
                  if (v2 instanceof Nothing) {
                    return new Just(singleton9(v.value1.module.value0));
                  }
                  ;
                  if (v2 instanceof Just) {
                    return new Just(insert1(v.value1.module.value0)(v2.value0));
                  }
                  ;
                  throw new Error("Failed pattern match at Tidy.Codegen.Monad (line 257, column 13 - line 259, column 54): " + [v2.constructor.name]);
                })(toModuleName3(mod4))(st.importsQualified);
                return $428;
              }
              ;
              throw new Error("Failed pattern match at Tidy.Codegen.Monad (line 240, column 16 - line 262, column 10): " + [v.value1.module.constructor.name]);
            }());
          });
        });
      };
    };
  };
};
var codegenImportToCST = function(v) {
  if (v instanceof CodegenImportType) {
    if (v.value0) {
      return importTypeAll1(v.value1);
    }
    ;
    return importType1(v.value1);
  }
  ;
  if (v instanceof CodegenImportTypeOp) {
    return importTypeOp1(v.value0);
  }
  ;
  if (v instanceof CodegenImportClass) {
    return importClass1(v.value0);
  }
  ;
  if (v instanceof CodegenImportValue) {
    return importValue1(v.value0);
  }
  ;
  if (v instanceof CodegenImportOp) {
    return importOp1(v.value0);
  }
  ;
  throw new Error("Failed pattern match at Tidy.Codegen.Monad (line 380, column 22 - line 387, column 48): " + [v.constructor.name]);
};
var codegenExportToCST = function(v) {
  if (v instanceof CodegenExportType) {
    if (v.value0) {
      return exportTypeAll1(v.value1);
    }
    ;
    return exportType1(v.value1);
  }
  ;
  if (v instanceof CodegenExportTypeOp) {
    return exportTypeOp1(v.value0);
  }
  ;
  if (v instanceof CodegenExportClass) {
    return exportClass1(v.value0);
  }
  ;
  if (v instanceof CodegenExportValue) {
    return exportValue1(v.value0);
  }
  ;
  if (v instanceof CodegenExportOp) {
    return exportOp1(v.value0);
  }
  ;
  if (v instanceof CodegenExportModule) {
    return exportModule1(v.value0);
  }
  ;
  throw new Error("Failed pattern match at Tidy.Codegen.Monad (line 369, column 22 - line 377, column 56): " + [v.constructor.name]);
};
var moduleFromCodegenState = function(dictToName) {
  var module_3 = module_(dictToName);
  return function(name2) {
    return function(st) {
      var withLeadingBreaks = function() {
        var $559 = modifyAt2(0)(leading3(lineBreaks(2)));
        return function($560) {
          return fold8($559($560));
        };
      }();
      var importsQualified = bind7(toUnfoldable7(st.importsQualified))(function(v) {
        return bind7(toUnfoldable1(v.value1))(function(qual) {
          return pure11(new Tuple(v.value0, declImportAs2(v.value0)([])(qual)));
        });
      });
      var importsOpen = withLeadingBreaks(map29(flip(declImport3)([]))(fromFoldable8(st.importsOpen)));
      var importsFrom = bind7(toUnfoldable7(st.importsFrom))(function(v) {
        return pure11(new Tuple(v.value0, declImport3(v.value0)(map29(codegenImportToCST)(toUnfoldable1(v.value1)))));
      });
      var importsNamed = withLeadingBreaks(map29(function() {
        var $561 = either(identity1)(identity1);
        return function($562) {
          return $561(snd($562));
        };
      }())(sortBy2(comparing2(fst))(append9(map29(map113(Left.create))(importsFrom))(map29(map113(Right.create))(importsQualified)))));
      var exports = map29(codegenExportToCST)(fromFoldable8(st.exports));
      var decls = fromFoldable1(reverse(st.declarations));
      return module_3(name2)(exports)(append9(importsOpen)(importsNamed))(decls);
    };
  };
};
var runCodegenTModule = function(dictFunctor) {
  var map211 = map(dictFunctor);
  return function(dictToName) {
    var moduleFromCodegenState1 = moduleFromCodegenState(dictToName);
    return function(name2) {
      var $563 = map211(map113(moduleFromCodegenState1(name2)));
      return function($564) {
        return $563(runCodegenT($564));
      };
    };
  };
};
var runCodegenTModule1 = /* @__PURE__ */ runCodegenTModule(freeFunctor);
var codegenModule = function(dictToName) {
  var runCodegenTModule2 = runCodegenTModule1(dictToName);
  return function(name2) {
    var $565 = runFree2(coerce6);
    var $566 = runCodegenTModule2(name2);
    return function($567) {
      return snd($565($566($567)));
    };
  };
};

// output/GraphQL.Client.CodeGen.SchemaCst/index.js
var show3 = /* @__PURE__ */ show(showString);
var lookup5 = /* @__PURE__ */ lookup(ordString);
var toModuleNameString2 = /* @__PURE__ */ toModuleNameString();
var importType4 = /* @__PURE__ */ importType3(/* @__PURE__ */ toTokenStringQualifiedPro());
var any3 = /* @__PURE__ */ any(foldableList)(heytingAlgebraBoolean);
var unwrap8 = /* @__PURE__ */ unwrap();
var eq113 = /* @__PURE__ */ eq(operationTypeEq);
var fromFoldable9 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
var not4 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean));
var identity19 = /* @__PURE__ */ identity(categoryFn);
var codegenModule2 = /* @__PURE__ */ codegenModule(/* @__PURE__ */ toNameStringModuleName());
var bind8 = /* @__PURE__ */ bind(/* @__PURE__ */ bindCodegenT(freeMonad));
var importFrom2 = /* @__PURE__ */ importFrom(freeMonad)(toModuleNameString2);
var importFrom1 = /* @__PURE__ */ importFrom2(toImportFromImportNameQua);
var importFrom22 = /* @__PURE__ */ importFrom2(/* @__PURE__ */ toImportFromRecordRecord()(/* @__PURE__ */ toImportFromRecordConsRec(toImportFromImportNameQua)(toImportFromRecordNilReco)({
  reflectSymbol: function() {
    return "notNull";
  }
})()()()));
var mapFlipped4 = /* @__PURE__ */ mapFlipped(functorArray);
var filterableMap2 = /* @__PURE__ */ filterableMap(ordString);
var applicativeCodegenT2 = /* @__PURE__ */ applicativeCodegenT(freeMonad);
var $$for2 = /* @__PURE__ */ $$for(applicativeCodegenT2)(traversableMap);
var traverse3 = /* @__PURE__ */ traverse(traversableMap)(applicativeCodegenT2);
var typeCtor4 = /* @__PURE__ */ typeCtor(toQualifiedNameQualifiedN);
var typeCtor12 = /* @__PURE__ */ typeCtor(/* @__PURE__ */ toQualifiedNameString()(fromTokenQualifiedProper));
var leading4 = /* @__PURE__ */ leading(overLeadingCommentsQualif);
var toNameStringProper3 = /* @__PURE__ */ toNameStringProper();
var declType3 = /* @__PURE__ */ declType(toNameStringProper3);
var typeRow2 = /* @__PURE__ */ typeRow(toNameStringLabel);
var map30 = /* @__PURE__ */ map(functorArray);
var fromFoldable12 = /* @__PURE__ */ fromFoldable3(foldableList);
var pure15 = /* @__PURE__ */ pure(applicativeMaybe);
var none2 = /* @__PURE__ */ none(unfoldableMaybe);
var bind13 = /* @__PURE__ */ bind(bindMaybe);
var typeRecord3 = /* @__PURE__ */ typeRecord(toNameStringLabel);
var elem3 = /* @__PURE__ */ elem2(eqString);
var map114 = /* @__PURE__ */ map(functorMaybe);
var sort5 = /* @__PURE__ */ sort(inputValueDefinitionOrd);
var declNewtype2 = /* @__PURE__ */ declNewtype(toNameStringProper3)(toNameStringProper3);
var declDerive2 = /* @__PURE__ */ declDerive(toQualifiedNameQualifiedN);
var sort1 = /* @__PURE__ */ sort(fieldDefinitionOrd);
var fromFoldable22 = /* @__PURE__ */ fromFoldable(foldableMaybe);
var mempty9 = /* @__PURE__ */ mempty(monoidList);
var bind22 = /* @__PURE__ */ bind(bindList);
var sort22 = /* @__PURE__ */ sort(definitionOrd);
var tell2 = /* @__PURE__ */ tell(/* @__PURE__ */ monadTellArrayDeclaration(freeMonad));
var append18 = /* @__PURE__ */ append(semigroupArray);
var safeFieldname = function(s) {
  var isSafe = maybe(false)(function(c) {
    return c === "_" || isLower(codePointFromChar(c));
  })(charAt2(0)(s));
  if (isSafe) {
    return s;
  }
  ;
  return show3(s);
};
var qualify = /* @__PURE__ */ function() {
  var $302 = toQualifiedName(toQualifiedNameProperProp);
  var $303 = wrap();
  return function($304) {
    return $302($303($304));
  };
}();
var typeName2 = function(gqlToPursTypes) {
  return function(defaultTypes) {
    return function(str) {
      var v = lookup5(str)(gqlToPursTypes);
      if (v instanceof Just) {
        return v.value0;
      }
      ;
      var v1 = lookup5(toLower(str))(defaultTypes);
      if (v1 instanceof Just) {
        return v1.value0;
      }
      ;
      return qualify(pascalCase(str));
    };
  };
};
var namedTypeToPurs2 = function(gqlToPursTypes) {
  return function(defaultTypes) {
    return function(v) {
      return typeName2(gqlToPursTypes)(defaultTypes)(v);
    };
  };
};
var importQualified = function(dictMonad) {
  var importFrom3 = importFrom(dictMonad)(toModuleNameString2)(toImportFromImportNameQua);
  return function(moduleName) {
    return function(typeName$prime) {
      return importFrom3(moduleName)(importType4(moduleName + ("." + typeName$prime)));
    };
  };
};
var importQualified1 = /* @__PURE__ */ importQualified(freeMonad);
var hasRootOp = function(dictFoldable) {
  var any1 = any(dictFoldable)(heytingAlgebraBoolean);
  return function(defs) {
    return function(op) {
      return any1(function(v) {
        if (v instanceof Definition_TypeSystemDefinition && v.value0 instanceof TypeSystemDefinition_SchemaDefinition) {
          return any3(function() {
            var $305 = eq113(op);
            return function($306) {
              return $305(function(v1) {
                return v1.operationType;
              }(unwrap8($306)));
            };
          }())(v.value0.value0.rootOperationTypeDefinition);
        }
        ;
        return false;
      })(defs);
    };
  };
};
var hasRootOp1 = /* @__PURE__ */ hasRootOp(foldableList);
var getTypeName = function($copy_v) {
  var $tco_done = false;
  var $tco_result;
  function $tco_loop(v) {
    if (v instanceof Type_NamedType) {
      $tco_done = true;
      return v.value0;
    }
    ;
    if (v instanceof Type_ListType) {
      $copy_v = v.value0;
      return;
    }
    ;
    if (v instanceof Type_NonNullType) {
      $tco_done = true;
      return getNonNullTypeName(v.value0);
    }
    ;
    throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 469, column 15 - line 472, column 51): " + [v.constructor.name]);
  }
  ;
  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }
  ;
  return $tco_result;
};
var getNonNullTypeName = function(v) {
  if (v instanceof NonNullType_NamedType) {
    return v.value0;
  }
  ;
  if (v instanceof NonNullType_ListType) {
    return getTypeName(v.value0);
  }
  ;
  throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 475, column 22 - line 477, column 61): " + [v.constructor.name]);
};
var getDefaultTypeNames = function(v) {
  return fromFoldable9([new Tuple("id", v.id), new Tuple("json", v.json), new Tuple("jsonb", v.json), new Tuple("timestamp", v.dateTime), new Tuple("timestamptz", v.dateTime), new Tuple("float", qualify("Number")), new Tuple("numeric", qualify("Number")), new Tuple("bigint", qualify("Number")), new Tuple("number", qualify("Number")), new Tuple("smallint", qualify("Int")), new Tuple("integer", qualify("Int")), new Tuple("int", qualify("Int")), new Tuple("int2", qualify("Int")), new Tuple("int4", qualify("Int")), new Tuple("int8", qualify("Int")), new Tuple("text", qualify("String")), new Tuple("citext", qualify("String")), new Tuple("string", qualify("String")), new Tuple("boolean", qualify("Boolean")), new Tuple("bool", qualify("Boolean"))]);
};
var genImportUnqualified = function(dictMonad) {
  var importFrom3 = importFrom(dictMonad)(toModuleNameString2)(toImportFromImportNameQua);
  return function(t) {
    return importFrom3(t.moduleName)(importType4(t.typeName));
  };
};
var genImportsUnqualified = function(dictFilterable) {
  var filter5 = filter4(dictFilterable);
  return function(dictTraversable) {
    var traverse13 = traverse(dictTraversable);
    return function(dictMonad) {
      var traverse22 = traverse13(applicativeCodegenT(dictMonad));
      var genImportUnqualified1 = genImportUnqualified(dictMonad);
      return function() {
        var $307 = traverse22(genImportUnqualified1);
        var $308 = filter5(function() {
          var $310 = not4($$null2);
          return function($311) {
            return $310(function(v) {
              return v.moduleName;
            }($311));
          };
        }());
        return function($309) {
          return $307($308($309));
        };
      };
    };
  };
};
var genImportsUnqualified1 = /* @__PURE__ */ genImportsUnqualified(filterableMap2)(traversableMap)(freeMonad)();
var genImport = function(dictMonad) {
  var importFrom3 = importFrom(dictMonad)(toModuleNameString2)(toImportFromImportNameQua);
  return function(t) {
    return importFrom3(t.moduleName)(importType4(t.moduleName + ("." + t.typeName)));
  };
};
var genImports = function(dictFilterable) {
  var filter5 = filter4(dictFilterable);
  return function(dictTraversable) {
    var traverse13 = traverse(dictTraversable);
    return function(dictMonad) {
      var traverse22 = traverse13(applicativeCodegenT(dictMonad));
      var genImport1 = genImport(dictMonad);
      return function() {
        var $312 = traverse22(genImport1);
        var $313 = filter5(function() {
          var $315 = not4($$null2);
          return function($316) {
            return $315(function(v) {
              return v.moduleName;
            }($316));
          };
        }());
        return function($314) {
          return $312($313($314));
        };
      };
    };
  };
};
var genImports1 = /* @__PURE__ */ genImports(filterableMap2)(traversableMap)(freeMonad)();
var comment2 = function(dictOverLeadingComments) {
  return maybe(identity19)(function() {
    var $317 = leading(dictOverLeadingComments);
    return function($318) {
      return $317(docComments($318));
    };
  }());
};
var comment1 = /* @__PURE__ */ comment2(/* @__PURE__ */ overLeadingCommentsDeclar(overLeadingCommentsVoid));
var comment22 = /* @__PURE__ */ comment2(/* @__PURE__ */ overLeadingCommentsType(overLeadingCommentsVoid));
var gqlToPursSchema = function(v) {
  return function(directivesMName) {
    return function(mName) {
      return function(v1) {
        return function(enums) {
          return codegenModule2(mName)(bind8(importFrom1(directivesMName)(importType4("Directives")))(function(directives) {
            return bind8(importQualified1("Data.Void")("Void"))(function(voidT) {
              return bind8(importQualified1("Type.Proxy")("Proxy"))(function(proxyT) {
                return bind8(importQualified1("Data.Maybe")("Maybe"))(function(maybe_) {
                  return bind8(importQualified1("Data.Newtype")("Newtype"))(function(newType) {
                    return bind8(importFrom22("GraphQL.Client.Args")({
                      notNull: importType4("NotNull")
                    }))(function(argsM) {
                      return bind8(importQualified1("GraphQL.Client.Union")("GqlUnion"))(function(gqlUnion) {
                        return bind8(importFrom1("GraphQL.Client.AsGql")(importType4("AsGql")))(function(asGql) {
                          return bind8(function() {
                            if (v.idImport instanceof Nothing) {
                              return importQualified1("GraphQL.Client.ID")("ID");
                            }
                            ;
                            if (v.idImport instanceof Just) {
                              return importFrom1(v.idImport.value0.moduleName)(importType4("GraphQL.Client.ID." + v.idImport.value0.typeName));
                            }
                            ;
                            throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 56, column 11 - line 58, column 114): " + [v.idImport.constructor.name]);
                          }())(function(id2) {
                            var enumsMap = fromFoldable9(mapFlipped4(enums)(function(e) {
                              var name2 = pascalCase(e.name);
                              return new Tuple(name2, {
                                moduleName: mName + (".Enum." + name2),
                                typeName: name2
                              });
                            }));
                            return bind8(genImportsUnqualified1(enumsMap))(function(v2) {
                              return bind8(genImports1(v.gqlToPursTypes))(function(gqlToPursTypesMs) {
                                return bind8($$for2(v.fieldTypeOverrides)(genImports1))(function(fieldTypeOverridesMs) {
                                  return bind8($$for2(v.argTypeOverrides)(traverse3(genImports1)))(function(argTypeOverridesMs) {
                                    return bind8(importFrom1("Data.DateTime")(importType4("DateTime")))(function(dateTime) {
                                      return bind8(importQualified1("Data.Argonaut.Core")("Json"))(function(json) {
                                        var wrapNotNull2 = function(s) {
                                          return typeApp(typeCtor4(argsM.notNull))([s]);
                                        };
                                        var wrapMaybe = function(s) {
                                          return typeApp(typeCtor4(maybe_))([s]);
                                        };
                                        var wrapArray = function(s) {
                                          return typeApp(typeCtor12("Array"))([s]);
                                        };
                                        var unknownJson = function(tName) {
                                          return leading4(lineComments("Unknown scalar type. Add " + (tName + " to gqlToPursTypes in codegen options to override this behaviour")))(json);
                                        };
                                        var unionMemberTypeToPurs = function(ty) {
                                          return new Tuple(ty, typeCtor12(ty));
                                        };
                                        var unionTypeDefinitionToPurs = function(v3) {
                                          if (v3.directives instanceof Nothing && v3.unionMemberTypes instanceof Just) {
                                            return new Just(comment1(v3.description)(declType3(v3.name)([])(typeApp(typeCtor4(gqlUnion))([typeRow2(map30(function($319) {
                                              return unionMemberTypeToPurs(unwrap8($319));
                                            })(fromFoldable12(v3.unionMemberTypes.value0)))(Nothing.value)]))));
                                          }
                                          ;
                                          return Nothing.value;
                                        };
                                        var rootOperationTypeDefinitionToPurs = function(v3) {
                                          var opStr = function() {
                                            if (v3.operationType instanceof Query) {
                                              return "Query";
                                            }
                                            ;
                                            if (v3.operationType instanceof Mutation) {
                                              return "Mutation";
                                            }
                                            ;
                                            if (v3.operationType instanceof Subscription) {
                                              return "Subscription";
                                            }
                                            ;
                                            throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 123, column 17 - line 126, column 45): " + [v3.operationType.constructor.name]);
                                          }();
                                          var actualType = pascalCase(unwrap8(v3.namedType));
                                          var $199 = opStr !== actualType;
                                          if ($199) {
                                            return pure15(declType3(opStr)([])(typeCtor12(actualType)));
                                          }
                                          ;
                                          return none2;
                                        };
                                        var schemaDefinitionToPurs = function(v3) {
                                          return mapMaybe(rootOperationTypeDefinitionToPurs)(v3.rootOperationTypeDefinition);
                                        };
                                        var lookupOverride = function(objectName) {
                                          return function(fieldName) {
                                            return bind13(lookup5(objectName)(fieldTypeOverridesMs))(lookup5(fieldName));
                                          };
                                        };
                                        var imports = {
                                          json,
                                          id: id2,
                                          dateTime
                                        };
                                        var hasSubscription = hasRootOp1(v1)(Subscription.value);
                                        var hasMutation = hasRootOp1(v1)(Mutation.value);
                                        var schema = declType3("Schema")([])(typeRecord3([new Tuple("directives", typeApp(typeCtor4(proxyT))([typeCtor4(directives)])), new Tuple("query", typeCtor12("Query")), new Tuple("mutation", function() {
                                          if (hasMutation) {
                                            return typeCtor12("Mutation");
                                          }
                                          ;
                                          return typeCtor4(voidT);
                                        }()), new Tuple("subscription", function() {
                                          if (hasSubscription) {
                                            return typeCtor12("Subscription");
                                          }
                                          ;
                                          return typeCtor4(voidT);
                                        }())])(Nothing.value));
                                        var defaultTypes = getDefaultTypeNames(imports);
                                        var getPursTypeName = namedTypeToPurs2(gqlToPursTypesMs)(defaultTypes);
                                        var builtin = ["String", "Boolean", "Int", "Float"];
                                        var descriptionAndNameToPurs = function(description) {
                                          return function(name2) {
                                            var tName = pascalCase(name2);
                                            var scalarType = function() {
                                              var $206 = elem3(tName)(builtin);
                                              if ($206) {
                                                return Nothing.value;
                                              }
                                              ;
                                              var v3 = lookup5(name2)(gqlToPursTypesMs);
                                              if (v3 instanceof Just) {
                                                return new Just(v3.value0);
                                              }
                                              ;
                                              var v4 = lookup5(name2)(v.gqlToPursTypes);
                                              if (v4 instanceof Just) {
                                                return new Just(qualifiedTypeToName(v4.value0));
                                              }
                                              ;
                                              var v5 = lookup5(name2)(v2);
                                              if (v5 instanceof Just) {
                                                return new Just(v5.value0);
                                              }
                                              ;
                                              var v6 = lookup5(toLower(name2))(defaultTypes);
                                              if (v6 instanceof Just) {
                                                return new Just(v6.value0);
                                              }
                                              ;
                                              return new Just(unknownJson(name2));
                                            }();
                                            return map114(function() {
                                              var $320 = comment22(description);
                                              return function($321) {
                                                return $320(typeCtor4($321));
                                              };
                                            }())(scalarType);
                                          };
                                        };
                                        var scalarTypeDefinitionToPurs = function(v3) {
                                          var tName = pascalCase(v3.name);
                                          return map114(declType3(tName)([]))(descriptionAndNameToPurs(v3.description)(v3.name));
                                        };
                                        var annotateGqlType = function(gqlT) {
                                          return function(pursT) {
                                            return typeApp(typeCtor4(asGql))([typeString(unwrap8(gqlT)), pursT]);
                                          };
                                        };
                                        var namedTypeToPursNullable = function(t) {
                                          return wrapMaybe(annotateGqlType(t)(typeCtor4(getPursTypeName(t))));
                                        };
                                        var pursTypeCtr = function(gqlT) {
                                          return annotateGqlType(gqlT)(typeCtor4(getPursTypeName(gqlT)));
                                        };
                                        var argTypeToPurs2 = function(objectName) {
                                          return function(fieldName) {
                                            return function(argName) {
                                              return function(tipe) {
                                                if (tipe instanceof Type_NamedType) {
                                                  var v3 = bind13(bind13(lookup5(objectName)(argTypeOverridesMs))(lookup5(fieldName)))(lookup5(argName));
                                                  if (v3 instanceof Nothing) {
                                                    return pursTypeCtr(tipe.value0);
                                                  }
                                                  ;
                                                  if (v3 instanceof Just) {
                                                    return annotateGqlType(tipe.value0)(typeCtor4(v3.value0));
                                                  }
                                                  ;
                                                  throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 315, column 43 - line 317, column 63): " + [v3.constructor.name]);
                                                }
                                                ;
                                                if (tipe instanceof Type_ListType) {
                                                  return argListTypeToPurs2(objectName)(fieldName)(argName)(tipe.value0);
                                                }
                                                ;
                                                if (tipe instanceof Type_NonNullType) {
                                                  return wrapNotNull2(argNotNullTypeToPurs2(objectName)(fieldName)(argName)(tipe.value0));
                                                }
                                                ;
                                                throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 314, column 57 - line 319, column 122): " + [tipe.constructor.name]);
                                              };
                                            };
                                          };
                                        };
                                        var argNotNullTypeToPurs2 = function(objectName) {
                                          return function(fieldName) {
                                            return function(argName) {
                                              return function(v3) {
                                                if (v3 instanceof NonNullType_NamedType) {
                                                  var v4 = bind13(bind13(lookup5(objectName)(argTypeOverridesMs))(lookup5(fieldName)))(lookup5(argName));
                                                  if (v4 instanceof Nothing) {
                                                    return pursTypeCtr(v3.value0);
                                                  }
                                                  ;
                                                  if (v4 instanceof Just) {
                                                    return annotateGqlType(v3.value0)(typeCtor4(v4.value0));
                                                  }
                                                  ;
                                                  throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 323, column 40 - line 325, column 55): " + [v4.constructor.name]);
                                                }
                                                ;
                                                if (v3 instanceof NonNullType_ListType) {
                                                  return argListTypeToPurs2(objectName)(fieldName)(argName)(v3.value0);
                                                }
                                                ;
                                                throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 322, column 59 - line 326, column 87): " + [v3.constructor.name]);
                                              };
                                            };
                                          };
                                        };
                                        var argListTypeToPurs2 = function(objectName) {
                                          return function(fieldName) {
                                            return function(argName) {
                                              return function(v3) {
                                                return wrapArray(argTypeToPurs2(objectName)(fieldName)(argName)(v3));
                                              };
                                            };
                                          };
                                        };
                                        var inputValueDefinitionToPurs2 = function(objectName) {
                                          return function(fieldName) {
                                            return function(v3) {
                                              return new Tuple(safeFieldname(v3.name), comment22(v3.description)(function() {
                                                var v4 = lookupOverride(objectName)(v3.name);
                                                if (v4 instanceof Nothing) {
                                                  return argTypeToPurs2(objectName)(fieldName)(v3.name)(v3.type);
                                                }
                                                ;
                                                if (v4 instanceof Just) {
                                                  if (v3.type instanceof Type_NonNullType) {
                                                    return wrapNotNull2(annotateGqlType(getNonNullTypeName(v3.type.value0))(typeCtor4(v4.value0)));
                                                  }
                                                  ;
                                                  if (v3.type instanceof Type_ListType) {
                                                    return wrapArray(annotateGqlType(getTypeName(v3.type.value0))(typeCtor4(v4.value0)));
                                                  }
                                                  ;
                                                  if (v3.type instanceof Type_NamedType) {
                                                    return annotateGqlType(v3.type.value0)(typeCtor4(v4.value0));
                                                  }
                                                  ;
                                                  throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 228, column 23 - line 231, column 69): " + [v3.type.constructor.name]);
                                                }
                                                ;
                                                throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 226, column 9 - line 231, column 69): " + [v4.constructor.name]);
                                              }()));
                                            };
                                          };
                                        };
                                        var argumentsDefinitionToPurs = function(objectName) {
                                          return function(fieldName) {
                                            return function(v3) {
                                              return typeRecord3(map30(inputValueDefinitionToPurs2(objectName)(fieldName))(fromFoldable12(sort5(v3))))(Nothing.value);
                                            };
                                          };
                                        };
                                        var inputValueToFieldsDefinitionToPurs = function(objectName) {
                                          return function(fieldName) {
                                            return function(definitions) {
                                              return typeRecord3(map30(inputValueDefinitionToPurs2(objectName)(fieldName))(fromFoldable12(sort5(definitions))))(Nothing.value);
                                            };
                                          };
                                        };
                                        var inputObjectTypeDefinitionToPurs = function(fieldName) {
                                          return function(v3) {
                                            var tName = pascalCase(v3.name);
                                            var record = maybe(typeRecordEmpty)(function() {
                                              var $322 = inputValueToFieldsDefinitionToPurs(v3.name)(fieldName);
                                              return function($323) {
                                                return $322(unwrap8($323));
                                              };
                                            }())(v3.inputFieldsDefinition);
                                            return new Cons(comment1(v3.description)(declNewtype2(tName)([])(tName)(record)), new Cons(declDerive2(Nothing.value)([])(newType)([typeCtor12(tName), typeWildcard]), Nil.value));
                                          };
                                        };
                                        var typeToPurs = function(v3) {
                                          if (v3 instanceof Type_NamedType) {
                                            return annotateGqlType(v3.value0)(namedTypeToPursNullable(v3.value0));
                                          }
                                          ;
                                          if (v3 instanceof Type_ListType) {
                                            return listTypeToPursNullable(v3.value0);
                                          }
                                          ;
                                          if (v3 instanceof Type_NonNullType) {
                                            return notNullTypeToPurs(v3.value0);
                                          }
                                          ;
                                          throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 288, column 20 - line 291, column 76): " + [v3.constructor.name]);
                                        };
                                        var notNullTypeToPurs = function(v3) {
                                          if (v3 instanceof NonNullType_NamedType) {
                                            return pursTypeCtr(v3.value0);
                                          }
                                          ;
                                          if (v3 instanceof NonNullType_ListType) {
                                            return listTypeToPurs(v3.value0);
                                          }
                                          ;
                                          throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 306, column 27 - line 308, column 55): " + [v3.constructor.name]);
                                        };
                                        var listTypeToPursNullable = function(t) {
                                          return wrapMaybe(listTypeToPurs(t));
                                        };
                                        var listTypeToPurs = function(v3) {
                                          return wrapArray(typeToPurs(v3));
                                        };
                                        var fieldDefinitionToPurs = function(objectName) {
                                          return function(v3) {
                                            var pursType = comment22(v3.description)(function() {
                                              var v4 = lookupOverride(objectName)(v3.name);
                                              if (v4 instanceof Nothing) {
                                                return typeToPurs(v3.type);
                                              }
                                              ;
                                              if (v4 instanceof Just) {
                                                if (v3.type instanceof Type_NonNullType) {
                                                  return annotateGqlType(getNonNullTypeName(v3.type.value0))(typeCtor4(v4.value0));
                                                }
                                                ;
                                                if (v3.type instanceof Type_ListType) {
                                                  return wrapArray(annotateGqlType(getTypeName(v3.type.value0))(typeCtor4(v4.value0)));
                                                }
                                                ;
                                                if (v3.type instanceof Type_NamedType) {
                                                  return wrapMaybe(annotateGqlType(v3.type.value0)(typeCtor4(v4.value0)));
                                                }
                                                ;
                                                throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 202, column 23 - line 205, column 81): " + [v3.type.constructor.name]);
                                              }
                                              ;
                                              throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 200, column 40 - line 205, column 81): " + [v4.constructor.name]);
                                            }());
                                            return new Tuple(safeFieldname(v3.name), function() {
                                              if (v3.argumentsDefinition instanceof Nothing) {
                                                return pursType;
                                              }
                                              ;
                                              if (v3.argumentsDefinition instanceof Just) {
                                                return typeArrow([argumentsDefinitionToPurs(objectName)(v3.name)(v3.argumentsDefinition.value0)])(pursType);
                                              }
                                              ;
                                              throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 193, column 40 - line 197, column 33): " + [v3.argumentsDefinition.constructor.name]);
                                            }());
                                          };
                                        };
                                        var fieldsDefinitionToPurs = function(objectName) {
                                          return function(v3) {
                                            return typeRecord3(map30(fieldDefinitionToPurs(objectName))(fromFoldable12(sort1(v3))))(Nothing.value);
                                          };
                                        };
                                        var objectTypeDefinitionToPurs = function(v3) {
                                          var tName = pascalCase(v3.name);
                                          var record = maybe(typeRecordEmpty)(fieldsDefinitionToPurs(v3.name))(v3.fieldsDefinition);
                                          if (v.useNewtypesForRecords) {
                                            return new Cons(comment1(v3.description)(declNewtype2(tName)([])(tName)(record)), new Cons(declDerive2(Nothing.value)([])(newType)([typeCtor12(tName), typeWildcard]), Nil.value));
                                          }
                                          ;
                                          return new Cons(comment1(v3.description)(declType3(tName)([])(record)), Nil.value);
                                        };
                                        var typeDefinitionToPurs = function(v3) {
                                          if (v3 instanceof TypeDefinition_ScalarTypeDefinition) {
                                            return fromFoldable22(scalarTypeDefinitionToPurs(v3.value0));
                                          }
                                          ;
                                          if (v3 instanceof TypeDefinition_ObjectTypeDefinition) {
                                            return objectTypeDefinitionToPurs(v3.value0);
                                          }
                                          ;
                                          if (v3 instanceof TypeDefinition_InterfaceTypeDefinition) {
                                            return mempty9;
                                          }
                                          ;
                                          if (v3 instanceof TypeDefinition_UnionTypeDefinition) {
                                            return fromFoldable22(unionTypeDefinitionToPurs(v3.value0));
                                          }
                                          ;
                                          if (v3 instanceof TypeDefinition_EnumTypeDefinition) {
                                            return mempty9;
                                          }
                                          ;
                                          if (v3 instanceof TypeDefinition_InputObjectTypeDefinition) {
                                            return inputObjectTypeDefinitionToPurs(function(v4) {
                                              return v4.name;
                                            }(unwrap8(v3.value0)))(v3.value0);
                                          }
                                          ;
                                          throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 105, column 30 - line 112, column 114): " + [v3.constructor.name]);
                                        };
                                        var typeSystemDefinitionToPurs = function(v3) {
                                          if (v3 instanceof TypeSystemDefinition_SchemaDefinition) {
                                            return schemaDefinitionToPurs(v3.value0);
                                          }
                                          ;
                                          if (v3 instanceof TypeSystemDefinition_TypeDefinition) {
                                            return typeDefinitionToPurs(v3.value0);
                                          }
                                          ;
                                          if (v3 instanceof TypeSystemDefinition_DirectiveDefinition) {
                                            return mempty9;
                                          }
                                          ;
                                          throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 96, column 36 - line 99, column 84): " + [v3.constructor.name]);
                                        };
                                        var definitionToPurs = function(v3) {
                                          if (v3 instanceof Definition_ExecutableDefinition) {
                                            return mempty9;
                                          }
                                          ;
                                          if (v3 instanceof Definition_TypeSystemDefinition) {
                                            return typeSystemDefinitionToPurs(v3.value0);
                                          }
                                          ;
                                          if (v3 instanceof Definition_TypeSystemExtension) {
                                            return mempty9;
                                          }
                                          ;
                                          throw new Error("Failed pattern match at GraphQL.Client.CodeGen.SchemaCst (line 90, column 26 - line 93, column 55): " + [v3.constructor.name]);
                                        };
                                        var declarations = fromFoldable12(bind22(sort22(v1))(definitionToPurs));
                                        return tell2(append18([schema])(declarations));
                                      });
                                    });
                                  });
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          }));
        };
      };
    };
  };
};

// output/GraphQL.Client.CodeGen.Lines/index.js
var map31 = /* @__PURE__ */ map(functorArray);
var toLines = /* @__PURE__ */ split2(/* @__PURE__ */ unsafeRegex("\\n")(global));
var fromLines = /* @__PURE__ */ joinWith("\n");
var prependLines = function(pre) {
  var $8 = map31(function(l) {
    var $7 = l === "";
    if ($7) {
      return l;
    }
    ;
    return pre + l;
  });
  return function($9) {
    return fromLines($8(toLines($9)));
  };
};
var commentPrefix = " -- | ";
var docComment = function(dictFoldable) {
  return foldMap(dictFoldable)(monoidString)(function(str) {
    return "\n" + (prependLines(commentPrefix)(str) + "\n");
  });
};

// output/GraphQL.Client.CodeGen.Template.Enum/index.js
var guard5 = /* @__PURE__ */ guard(monoidString);
var not5 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean));
var intercalate7 = /* @__PURE__ */ intercalate(foldableArray)(monoidString);
var mapFlipped5 = /* @__PURE__ */ mapFlipped(functorArray);
var map33 = /* @__PURE__ */ map(functorArray);
var fromJust6 = /* @__PURE__ */ fromJust();
var show4 = /* @__PURE__ */ show(showInt);
var docComment2 = /* @__PURE__ */ docComment(foldableMaybe);
var defaultEnumValueName = function(s) {
  var alphaStart = guard5(maybe(false)(function() {
    var $30 = not5(isAlpha);
    return function($31) {
      return $30(codePointFromChar($31));
    };
  }())(charAt2(0)(s)))("ENUM_");
  return alphaStart + (toUpper3(take4(1)(s)) + drop4(1)(s));
};
var template = function(modulePrefix) {
  return function(v) {
    var enumValueName = fromMaybe(defaultEnumValueName)(v.enumValueNameTransform);
    var showMember = intercalate7("\n")(mapFlipped5(v.values)(function(v12) {
      return "    " + (enumValueName(v12) + (' -> "' + (v12 + '"')));
    }));
    var enumCtrs = intercalate7("\n  | ")(map33(enumValueName)(v.values));
    var decodeMember = intercalate7("\n")(mapFlipped5(v.values)(function(v12) {
      return '    "' + (v12 + ('" -> pure ' + (enumValueName(v12) + "")));
    }));
    var v1 = fromJust6(uncons2(v.values));
    var v2 = fromJust6(unsnoc2(v.values));
    var valuesAndTransforms = mapFlipped5(v.values)(function(v3) {
      return {
        gql: v3,
        transformed: enumValueName(v3)
      };
    });
    var makeAdjacent = function($$this) {
      return function(adjacent) {
        return enumValueName($$this) + (" -> Just " + enumValueName(adjacent));
      };
    };
    var predMembers = enumValueName(v1.head) + (" -> Nothing \n    " + intercalate7("\n    ")(zipWith2(makeAdjacent)(v1.tail)(v2.init)));
    var succMembers = intercalate7("\n    ")(zipWith2(makeAdjacent)(v2.init)(v1.tail)) + ("\n    " + (enumValueName(v2.last) + " -> Nothing"));
    var ints = range2(0)(length3(v.values) - 1 | 0);
    var toEnumMembers = function() {
      var makeToEnum = function($$int) {
        return function(value) {
          return show4($$int) + (" -> Just " + enumValueName(value));
        };
      };
      return intercalate7("\n    ")(zipWith2(makeToEnum)(ints)(v.values)) + "\n    _ -> Nothing";
    }();
    var fromEnumMembers = function() {
      var makeFromEnum = function(value) {
        return function($$int) {
          return enumValueName(value) + (" -> " + show4($$int));
        };
      };
      return intercalate7("\n    ")(zipWith2(makeFromEnum)(v.values)(ints));
    }();
    return "module " + (modulePrefix + ("Schema." + (v.schemaName + (".Enum." + (v.name + (" where\n\nimport Prelude\n\nimport Data.Argonaut.Decode (class DecodeJson, JsonDecodeError(..), decodeJson)\nimport Data.Argonaut.Encode (class EncodeJson, encodeJson)\nimport Data.Bounded (class Bounded)\nimport Data.Enum (class Enum, class BoundedEnum, Cardinality(..))\nimport Data.Either (Either(..))\nimport Data.Function (on)\nimport Data.Maybe (Maybe(..))\nimport GraphQL.Client.ToGqlString (class GqlArgString)\nimport GraphQL.Hasura.Decode (class DecodeHasura)\nimport GraphQL.Hasura.Encode (class EncodeHasura)\n" + (intercalate7("\n")(v.imports) + ("\n\n" + (docComment2(v.description) + ("data " + (v.name + (" \n  = " + (enumCtrs + ("\n" + (v.customCode({
      name: v.name,
      values: valuesAndTransforms
    }) + ("\n\ninstance eq" + (v.name + (" :: Eq " + (v.name + (" where \n  eq = eq `on` show\n\ninstance ord" + (v.name + (" :: Ord " + (v.name + (" where\n  compare = compare `on` show\n\ninstance gqlArgString" + (v.name + (" :: GqlArgString " + (v.name + (" where\n  toGqlArgStringImpl = show\n\ninstance decodeJson" + (v.name + (" :: DecodeJson " + (v.name + (" where\n  decodeJson = decodeJson >=> case _ of \n" + (decodeMember + ('\n    s -> Left $ TypeMismatch $ "Not a ' + (v.name + (': " <> s\n\ninstance encodeJson' + (v.name + (" :: EncodeJson " + (v.name + (" where \n  encodeJson = show >>> encodeJson\n\ninstance decdoeHasura" + (v.name + (" :: DecodeHasura " + (v.name + (" where \n  decodeHasura = decodeJson\n\ninstance encodeHasura" + (v.name + (" :: EncodeHasura " + (v.name + (" where \n  encodeHasura = encodeJson\n\ninstance show" + (v.name + (" :: Show " + (v.name + (" where\n  show a = case a of \n" + (showMember + ("\n\ninstance enum" + (v.name + (" :: Enum " + (v.name + (" where\n  succ a = case a of \n    " + (succMembers + ("\n  pred a = case a of \n    " + (predMembers + ("\n\ninstance bounded" + (v.name + (" :: Bounded " + (v.name + (" where\n  top = " + (enumValueName(v2.last) + ("\n  bottom = " + (enumValueName(v1.head) + ("\n\ninstance boundedEnum" + (v.name + (" :: BoundedEnum " + (v.name + (" where\n  cardinality = Cardinality " + (show4(length3(v.values)) + ("\n  toEnum a = case a of\n    " + (toEnumMembers + ("\n  fromEnum a = case a of\n    " + (fromEnumMembers + "\n\n")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  };
};

// output/Data.Profunctor.Choice/index.js
var right = function(dict) {
  return dict.right;
};
var choiceFn = {
  left: function(v) {
    return function(v1) {
      if (v1 instanceof Left) {
        return new Left(v(v1.value0));
      }
      ;
      if (v1 instanceof Right) {
        return new Right(v1.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 35, column 16): " + [v.constructor.name, v1.constructor.name]);
    };
  },
  right: /* @__PURE__ */ map(functorEither),
  Profunctor0: function() {
    return profunctorFn;
  }
};

// output/Data.Profunctor.Strong/index.js
var strongFn = {
  first: function(a2b) {
    return function(v) {
      return new Tuple(a2b(v.value0), v.value1);
    };
  },
  second: /* @__PURE__ */ map(functorTuple),
  Profunctor0: function() {
    return profunctorFn;
  }
};

// output/Data.Lens.Internal.Wander/index.js
var alaF3 = /* @__PURE__ */ alaF()()()();
var wanderFunction = {
  wander: function(t) {
    return alaF3(Identity)(t(applicativeIdentity));
  },
  Strong0: function() {
    return strongFn;
  },
  Choice1: function() {
    return choiceFn;
  }
};
var wander = function(dict) {
  return dict.wander;
};

// output/Data.Lens.Iso/index.js
var coerce7 = /* @__PURE__ */ coerce();
var iso = function(f) {
  return function(g) {
    return function(dictProfunctor) {
      var dimap2 = dimap(dictProfunctor);
      return function(pab) {
        return dimap2(f)(g)(pab);
      };
    };
  };
};
var coerced = function() {
  return function() {
    return function(dictProfunctor) {
      return iso(coerce7)(coerce7)(dictProfunctor);
    };
  };
};

// output/Data.Lens.Iso.Newtype/index.js
var coerced2 = /* @__PURE__ */ coerced()();
var _Newtype = function() {
  return function() {
    return function(dictProfunctor) {
      return coerced2(dictProfunctor);
    };
  };
};

// output/Data.Lens.Prism/index.js
var identity20 = /* @__PURE__ */ identity(categoryFn);
var prism = function(to2) {
  return function(fro) {
    return function(dictChoice) {
      var Profunctor0 = dictChoice.Profunctor0();
      var dimap2 = dimap(Profunctor0);
      var right2 = right(dictChoice);
      var rmap2 = rmap(Profunctor0);
      return function(pab) {
        return dimap2(fro)(either(identity20)(identity20))(right2(rmap2(to2)(pab)));
      };
    };
  };
};
var prism$prime = function(to2) {
  return function(fro) {
    return function(dictChoice) {
      return prism(to2)(function(s) {
        return maybe(new Left(s))(Right.create)(fro(s));
      })(dictChoice);
    };
  };
};

// output/Data.Lens.Setter/index.js
var over2 = function(l) {
  return l;
};

// output/Data.Lens.Traversal/index.js
var traversed = function(dictTraversable) {
  var traverse5 = traverse(dictTraversable);
  return function(dictWander) {
    return wander(dictWander)(function(dictApplicative) {
      return traverse5(dictApplicative);
    });
  };
};

// output/GraphQL.Client.CodeGen.Transform.NullableOverrides/index.js
var traversed2 = /* @__PURE__ */ traversed(traversableList);
var lookup6 = /* @__PURE__ */ lookup(ordString);
var _Newtype2 = /* @__PURE__ */ _Newtype()()(profunctorFn);
var traversed1 = /* @__PURE__ */ traversed(traversableMaybe)(wanderFunction);
var traversed22 = /* @__PURE__ */ traversed2(wanderFunction);
var uPrism = /* @__PURE__ */ uncurry(prism$prime);
var setNullable = function(v) {
  return function(v1) {
    if (v && (v1 instanceof Type_NonNullType && v1.value0 instanceof NonNullType_NamedType)) {
      return new Type_NamedType(v1.value0.value0);
    }
    ;
    if (v && (v1 instanceof Type_NonNullType && v1.value0 instanceof NonNullType_ListType)) {
      return new Type_ListType(v1.value0.value0);
    }
    ;
    if (!v && v1 instanceof Type_NamedType) {
      return new Type_NonNullType(new NonNullType_NamedType(v1.value0));
    }
    ;
    if (!v && v1 instanceof Type_ListType) {
      return new Type_NonNullType(new NonNullType_ListType(v1.value0));
    }
    ;
    return v1;
  };
};
var objectTypeDefinitionLens = function(dictChoice) {
  return function(dictWander) {
    var $96 = uPrism(_Document)(dictChoice);
    var $97 = traversed2(dictWander);
    var $98 = uPrism(_Definition_TypeSystemDefinition)(dictChoice);
    var $99 = uPrism(_TypeSystemDefinition_TypeDefinition)(dictChoice);
    var $100 = uPrism(_TypeDefinition_ObjectTypeDefinition)(dictChoice);
    return function($101) {
      return $96($97($98($99($100($101)))));
    };
  };
};
var objectTypeDefinitionLens1 = /* @__PURE__ */ objectTypeDefinitionLens(choiceFn)(wanderFunction);
var inputObjectTypeDefinitionLens = function(dictChoice) {
  return function(dictWander) {
    var $102 = uPrism(_Document)(dictChoice);
    var $103 = traversed2(dictWander);
    var $104 = uPrism(_Definition_TypeSystemDefinition)(dictChoice);
    var $105 = uPrism(_TypeSystemDefinition_TypeDefinition)(dictChoice);
    var $106 = uPrism(_TypeDefinition_InputObjectTypeDefinition)(dictChoice);
    return function($107) {
      return $102($103($104($105($106($107)))));
    };
  };
};
var inputObjectTypeDefinitionLens1 = /* @__PURE__ */ inputObjectTypeDefinitionLens(choiceFn)(wanderFunction);
var inputFieldsLens = function(dictTraversable) {
  var traversed3 = traversed(dictTraversable);
  return function(dictWander) {
    var $108 = traversed3(dictWander);
    var $109 = uPrism(_InputFieldsDefinition)(dictWander.Choice1());
    var $110 = traversed2(dictWander);
    return function($111) {
      return $108($109($110($111)));
    };
  };
};
var inputFieldsLens1 = /* @__PURE__ */ inputFieldsLens(traversableMaybe)(wanderFunction);
var applyNullableOverrides = function(overrides) {
  var applyToInputFieldsDefinition = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return v1;
      };
      var $60 = lookup6(v1.name)(v);
      if ($60 instanceof Just) {
        var $61 = {};
        for (var $62 in v1) {
          if ({}.hasOwnProperty.call(v1, $62)) {
            $61[$62] = v1[$62];
          }
          ;
        }
        ;
        $61.type = setNullable($60.value0)(v1.type);
        return $61;
      }
      ;
      return v2(true);
    };
  };
  var applyToInputDefinition = function(v) {
    var v1 = function(v2) {
      return v;
    };
    var $69 = lookup6(v.name)(overrides);
    if ($69 instanceof Just) {
      var $70 = {};
      for (var $71 in v) {
        if ({}.hasOwnProperty.call(v, $71)) {
          $70[$71] = v[$71];
        }
        ;
      }
      ;
      $70.inputFieldsDefinition = over2(function($112) {
        return inputFieldsLens1(_Newtype2($112));
      })(applyToInputFieldsDefinition($69.value0))(v.inputFieldsDefinition);
      return $70;
    }
    ;
    return v1(true);
  };
  var applyToFieldsDefinition = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return v1;
      };
      var $80 = lookup6(v1.name)(v);
      if ($80 instanceof Just) {
        var $81 = {};
        for (var $82 in v1) {
          if ({}.hasOwnProperty.call(v1, $82)) {
            $81[$82] = v1[$82];
          }
          ;
        }
        ;
        $81.type = setNullable($80.value0)(v1.type);
        return $81;
      }
      ;
      return v2(true);
    };
  };
  var applyToTypeDefinition = function(v) {
    var v1 = function(v2) {
      return v;
    };
    var $89 = lookup6(v.name)(overrides);
    if ($89 instanceof Just) {
      var $90 = {};
      for (var $91 in v) {
        if ({}.hasOwnProperty.call(v, $91)) {
          $90[$91] = v[$91];
        }
        ;
      }
      ;
      $90.fieldsDefinition = over2(function($113) {
        return traversed1(_Newtype2(traversed22(_Newtype2($113))));
      })(applyToFieldsDefinition($89.value0))(v.fieldsDefinition);
      return $90;
    }
    ;
    return v1(true);
  };
  var $114 = over2(function($117) {
    return objectTypeDefinitionLens1(_Newtype2($117));
  })(applyToTypeDefinition);
  var $115 = over2(function($118) {
    return inputObjectTypeDefinitionLens1(_Newtype2($118));
  })(applyToInputDefinition);
  return function($116) {
    return $114($115($116));
  };
};

// output/GraphQL.Client.CodeGen.Schema/index.js
var fromFoldable10 = /* @__PURE__ */ fromFoldable3(foldableList);
var mapFlipped6 = /* @__PURE__ */ mapFlipped(functorList);
var unwrap9 = /* @__PURE__ */ unwrap();
var foldMap10 = /* @__PURE__ */ foldMap(foldableArray)(monoidString);
var mapFlipped1 = /* @__PURE__ */ mapFlipped(functorEither);
var lmap6 = /* @__PURE__ */ lmap(bifunctorEither);
var pure16 = /* @__PURE__ */ pure(applicativeAff);
var bind9 = /* @__PURE__ */ bind(bindAff);
var bind14 = /* @__PURE__ */ bind(bindMaybe);
var gDecodeJsonCons8 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldId(decodeJsonString));
var gDecodeJsonCons13 = /* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldId(/* @__PURE__ */ decodeArray2(decodeJsonString)))(gDecodeJsonNil);
var valuesIsSymbol = {
  reflectSymbol: function() {
    return "values";
  }
};
var nameIsSymbol3 = {
  reflectSymbol: function() {
    return "name";
  }
};
var descriptionIsSymbol2 = {
  reflectSymbol: function() {
    return "description";
  }
};
var symbolsIsSymbol = {
  reflectSymbol: function() {
    return "symbols";
  }
};
var moduleNameIsSymbol = {
  reflectSymbol: function() {
    return "moduleName";
  }
};
var mainSchemaCodeIsSymbol = {
  reflectSymbol: function() {
    return "mainSchemaCode";
  }
};
var enumsIsSymbol = {
  reflectSymbol: function() {
    return "enums";
  }
};
var directivesIsSymbol = {
  reflectSymbol: function() {
    return "directives";
  }
};
var decodeJson2 = /* @__PURE__ */ decodeJson(/* @__PURE__ */ decodeRecord(/* @__PURE__ */ gDecodeJsonCons8(/* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldId(/* @__PURE__ */ decodeArray2(/* @__PURE__ */ decodeRecord(/* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldMaybe(decodeJsonString))(/* @__PURE__ */ gDecodeJsonCons8(/* @__PURE__ */ gDecodeJsonCons13(valuesIsSymbol)()())(nameIsSymbol3)()())(descriptionIsSymbol2)()())())))(/* @__PURE__ */ gDecodeJsonCons8(/* @__PURE__ */ gDecodeJsonCons8(/* @__PURE__ */ gDecodeJsonCons13(symbolsIsSymbol)()())(moduleNameIsSymbol)()())(mainSchemaCodeIsSymbol)()())(enumsIsSymbol)()())(directivesIsSymbol)()())());
var discard2 = /* @__PURE__ */ discard(discardUnit)(bindAff);
var gEncodeJsonCons2 = /* @__PURE__ */ gEncodeJsonCons(encodeJsonJString);
var gEncodeJsonCons1 = /* @__PURE__ */ gEncodeJsonCons(/* @__PURE__ */ encodeJsonArray(encodeJsonJString))(gEncodeJsonNil);
var encodeJson2 = /* @__PURE__ */ encodeJson(/* @__PURE__ */ encodeRecord(/* @__PURE__ */ gEncodeJsonCons2(/* @__PURE__ */ gEncodeJsonCons(/* @__PURE__ */ encodeJsonArray(/* @__PURE__ */ encodeRecord(/* @__PURE__ */ gEncodeJsonCons(/* @__PURE__ */ encodeJsonMaybe(encodeJsonJString))(/* @__PURE__ */ gEncodeJsonCons2(/* @__PURE__ */ gEncodeJsonCons1(valuesIsSymbol)())(nameIsSymbol3)())(descriptionIsSymbol2)())()))(/* @__PURE__ */ gEncodeJsonCons2(/* @__PURE__ */ gEncodeJsonCons2(/* @__PURE__ */ gEncodeJsonCons1(symbolsIsSymbol)())(moduleNameIsSymbol)())(mainSchemaCodeIsSymbol)())(enumsIsSymbol)())(directivesIsSymbol)())());
var mapFlipped22 = /* @__PURE__ */ mapFlipped(functorArray);
var compare77 = /* @__PURE__ */ compare(ordString);
var bind23 = /* @__PURE__ */ bind(bindArray);
var symbolsToCode2 = /* @__PURE__ */ symbolsToCode(foldableArray);
var traverse4 = /* @__PURE__ */ traverse(traversableArray)(applicativeAff);
var map34 = /* @__PURE__ */ map(functorAff);
var sequence2 = /* @__PURE__ */ sequence(traversableArray)(applicativeEither);
var map115 = /* @__PURE__ */ map(functorEither);
var gqlToPursMainSchemaCode = function(opts) {
  return function(directiveModuleName) {
    return function(moduleName) {
      return function(doc) {
        return function(enums) {
          return printModule(gqlToPursSchema(opts)(directiveModuleName)(moduleName)(doc)(enums));
        };
      };
    };
  };
};
var getDocumentEnums = /* @__PURE__ */ function() {
  var enumValuesDefinitionToPurs = function(def) {
    return fromFoldable10(mapFlipped6(unwrap9(def))(function(v) {
      return unwrap9(v.enumValue);
    }));
  };
  var typeDefinitionToPurs = function(v) {
    if (v instanceof TypeDefinition_EnumTypeDefinition) {
      return new Just({
        name: pascalCase(v.value0.name),
        description: v.value0.description,
        values: maybe([])(enumValuesDefinitionToPurs)(v.value0.enumValuesDefinition)
      });
    }
    ;
    return Nothing.value;
  };
  var typeSystemDefinitionToPurs = function(v) {
    if (v instanceof TypeSystemDefinition_TypeDefinition) {
      return typeDefinitionToPurs(v.value0);
    }
    ;
    return Nothing.value;
  };
  var definitionToEnum = function(v) {
    if (v instanceof Definition_TypeSystemDefinition) {
      return typeSystemDefinitionToPurs(v.value0);
    }
    ;
    return Nothing.value;
  };
  var $155 = mapMaybe(definitionToEnum);
  return function($156) {
    return fromFoldable10($155(unwrap9($156)));
  };
}();
var defaultIdImport = {
  typeName: "ID",
  moduleName: "GraphQL.Client.ID"
};
var schemaFromGqlToPurs = function(opts) {
  return function(v) {
    var modulePrefix = foldMap10(function(v1) {
      return v1 + ".";
    })(opts.modulePath);
    return mapFlipped1(mapFlipped1(lmap6(toParserError)(documentFromIntrospection(v.schema)))(applyNullableOverrides(opts.nullableOverrides)))(function(ast) {
      var symbols = fromFoldable10(getSymbols(ast));
      var enums = getDocumentEnums(ast);
      var directivesModuleName = modulePrefix + ("Directives." + v.moduleName);
      return {
        mainSchemaCode: gqlToPursMainSchemaCode(opts)(directivesModuleName)(modulePrefix + ("Schema." + v.moduleName))(ast)(enums),
        enums,
        directives: getDocumentDirectivesPurs(opts.gqlToPursTypes)(fromMaybe(defaultIdImport)(opts.idImport))(directivesModuleName)(ast),
        symbols,
        moduleName: v.moduleName
      };
    });
  };
};
var schemaFromGqlToPursWithCache = function(opts) {
  return function(v) {
    var stringSchema = stringify(v.schema);
    var go = function(v1) {
      if (v1 instanceof Nothing) {
        return pure16(schemaFromGqlToPurs(opts)({
          schema: v.schema,
          moduleName: v.moduleName
        }));
      }
      ;
      if (v1 instanceof Just) {
        return bind9(v1.value0.get(stringSchema))(function(jsonMay) {
          var v2 = bind14(jsonMay)(function($157) {
            return hush(decodeJson2($157));
          });
          if (v2 instanceof Nothing) {
            return bind9(go(Nothing.value))(function(eVal) {
              return discard2(function() {
                var v3 = schemaFromGqlToPurs(opts)({
                  schema: v.schema,
                  moduleName: v.moduleName
                });
                if (v3 instanceof Right) {
                  return v1.value0.set({
                    key: stringSchema,
                    val: encodeJson2(v3.value0)
                  });
                }
                ;
                return pure16(unit);
              }())(function() {
                return pure16(eVal);
              });
            });
          }
          ;
          if (v2 instanceof Just) {
            return pure16(new Right(v2.value0));
          }
          ;
          throw new Error("Failed pattern match at GraphQL.Client.CodeGen.Schema (line 92, column 5 - line 99, column 35): " + [v2.constructor.name]);
        });
      }
      ;
      throw new Error("Failed pattern match at GraphQL.Client.CodeGen.Schema (line 88, column 3 - line 88, column 70): " + [v1.constructor.name]);
    };
    return go(opts.cache);
  };
};
var schemasFromGqlToPurs = function(opts) {
  var modulePrefix = foldMap10(function(v) {
    return v + ".";
  })(opts.modulePath);
  var collectSchemas = function(pursGqls) {
    return {
      schemas: mapFlipped22(pursGqls)(function(pg) {
        return {
          code: pg.mainSchemaCode,
          path: opts.dir + ("/Schema/" + (pg.moduleName + ".purs"))
        };
      }),
      enums: nubBy2(on(compare77)(function(v) {
        return v.path;
      }))(bind23(pursGqls)(function(pg) {
        return mapFlipped22(pg.enums)(function(v) {
          return {
            code: template(modulePrefix)({
              name: v.name,
              schemaName: pg.moduleName,
              values: v.values,
              description: v.description,
              imports: opts.enumImports,
              customCode: opts.customEnumCode,
              enumValueNameTransform: opts.enumValueNameTransform
            }),
            path: opts.dir + ("/Schema/" + (pg.moduleName + ("/Enum/" + (v.name + ".purs"))))
          };
        });
      })),
      symbols: function(syms) {
        return {
          path: opts.dir + "/Symbols.purs",
          code: symbolsToCode2(modulePrefix)(syms)
        };
      }(bind23(pursGqls)(function(v) {
        return v.symbols;
      })),
      directives: mapFlipped22(pursGqls)(function(pg) {
        return {
          code: pg.directives,
          path: opts.dir + ("/Directives/" + (pg.moduleName + ".purs"))
        };
      })
    };
  };
  var $158 = map34(map115(collectSchemas));
  var $159 = map34(sequence2);
  var $160 = traverse4(schemaFromGqlToPursWithCache(opts));
  return function($161) {
    return $158($159($160($161)));
  };
};

// output/Untagged.TypeCheck/foreign.js
function getProperty(name2) {
  return function(x) {
    return x[name2];
  };
}

// output/Untagged.TypeCheck/index.js
var hasRuntimeTypeRecordRLNil = {
  hasRuntimeTypeRecRL: function(v) {
    return function(v1) {
      return true;
    };
  }
};
var hasRuntimeTypeRecRL = function(dict) {
  return dict.hasRuntimeTypeRecRL;
};
var hasRuntimeType = function(dict) {
  return dict.hasRuntimeType;
};
var hasRuntimeTypeRecordRLCons = function(dictHasRuntimeTypeRecordRL) {
  var hasRuntimeTypeRecRL1 = hasRuntimeTypeRecRL(dictHasRuntimeTypeRecordRL);
  return function(dictHasRuntimeType) {
    var hasRuntimeType1 = hasRuntimeType(dictHasRuntimeType);
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return {
        hasRuntimeTypeRecRL: function(v) {
          return function(x) {
            var propertyName = reflectSymbol2($$Proxy.value);
            var property = getProperty(propertyName)(x);
            var hasRuntimeTypeA = hasRuntimeType1($$Proxy.value);
            return hasRuntimeTypeA(property) && hasRuntimeTypeRecRL1($$Proxy.value)(x);
          };
        }
      };
    };
  };
};
var hasJsType = function(name2) {
  return function(x) {
    return typeOf(x) === name2;
  };
};
var hasRuntimeTypeRecord = function() {
  return function(dictHasRuntimeTypeRecordRL) {
    var hasRuntimeTypeRecRL1 = hasRuntimeTypeRecRL(dictHasRuntimeTypeRecordRL);
    return {
      hasRuntimeType: function(v) {
        return function(x) {
          return hasJsType("object")(x) && hasRuntimeTypeRecRL1($$Proxy.value)(unsafeToForeign(x));
        };
      }
    };
  };
};
var hasRuntimeTypeString = {
  hasRuntimeType: function(v) {
    return hasJsType("string");
  }
};

// output/Untagged.Union/index.js
var withOneOf = function(dictHasRuntimeType) {
  var hasRuntimeType2 = hasRuntimeType(dictHasRuntimeType);
  return function(f) {
    return function(g) {
      return function(o) {
        var isTypeA = hasRuntimeType2($$Proxy.value);
        var $42 = isTypeA(unsafeToForeign(o));
        if ($42) {
          return f(o);
        }
        ;
        return g(o);
      };
    };
  };
};
var toEither1 = function(dictHasRuntimeType) {
  return withOneOf(dictHasRuntimeType)(Left.create)(Right.create);
};

// output/GraphQL.Client.CodeGen.Js/index.js
var fromFoldableWithIndex2 = /* @__PURE__ */ fromFoldableWithIndex(ordString)(foldableWithIndexObject);
var map35 = /* @__PURE__ */ map(functorObject);
var map116 = /* @__PURE__ */ map(functorMap);
var map210 = /* @__PURE__ */ map(functorMaybe);
var mapFlipped7 = /* @__PURE__ */ mapFlipped(functorMaybe);
var map36 = /* @__PURE__ */ map(functorFn);
var map42 = /* @__PURE__ */ map(functorAff);
var mempty10 = /* @__PURE__ */ mempty(monoidString);
var monoidRecord2 = /* @__PURE__ */ monoidRecord();
var mempty14 = /* @__PURE__ */ mempty(/* @__PURE__ */ monoidRecord2(/* @__PURE__ */ monoidRecordCons({
  reflectSymbol: function() {
    return "directives";
  }
})(monoidArray)()(/* @__PURE__ */ monoidRecordCons({
  reflectSymbol: function() {
    return "enums";
  }
})(monoidArray)()(/* @__PURE__ */ monoidRecordCons({
  reflectSymbol: function() {
    return "schemas";
  }
})(monoidArray)()(/* @__PURE__ */ monoidRecordCons({
  reflectSymbol: function() {
    return "symbols";
  }
})(/* @__PURE__ */ monoidRecord2(/* @__PURE__ */ monoidRecordCons({
  reflectSymbol: function() {
    return "code";
  }
})(monoidString)()(/* @__PURE__ */ monoidRecordCons({
  reflectSymbol: function() {
    return "path";
  }
})(monoidString)()(monoidRecordNil))))()(monoidRecordNil))))));
var fromQualifiedTypeJs = /* @__PURE__ */ function() {
  var $63 = either(identity(categoryFn))(function(v) {
    return {
      typeName: v,
      moduleName: ""
    };
  });
  var $64 = toEither1(hasRuntimeTypeRecord()(hasRuntimeTypeRecordRLCons(hasRuntimeTypeRecordRLCons(hasRuntimeTypeRecordRLNil)(hasRuntimeTypeString)({
    reflectSymbol: function() {
      return "typeName";
    }
  }))(hasRuntimeTypeString)({
    reflectSymbol: function() {
      return "moduleName";
    }
  })));
  return function($65) {
    return $63($64($65));
  };
}();
var fromNullable = function(a) {
  var $66 = fromMaybe(a);
  return function($67) {
    return $66(toMaybe($67));
  };
};
var schemasFromGqlToPursJs = /* @__PURE__ */ function() {
  var go = function(optsJs) {
    var opts = {
      gqlToPursTypes: fromFoldableWithIndex2(map35(fromQualifiedTypeJs)(fromNullable(empty3)(optsJs.gqlToPursTypes))),
      fieldTypeOverrides: map116(fromFoldableWithIndex2)(fromFoldableWithIndex2(map35(map35(fromQualifiedTypeJs))(fromNullable(empty3)(optsJs.fieldTypeOverrides)))),
      argTypeOverrides: map116(function() {
        var $68 = map116(function() {
          var $70 = map116(fromQualifiedTypeJs);
          return function($71) {
            return $70(fromFoldableWithIndex2($71));
          };
        }());
        return function($69) {
          return $68(fromFoldableWithIndex2($69));
        };
      }())(fromFoldableWithIndex2(fromNullable(empty3)(optsJs.argTypeOverrides))),
      nullableOverrides: map116(fromFoldableWithIndex2)(fromFoldableWithIndex2(fromNullable(empty3)(optsJs.nullableOverrides))),
      dir: fromNullable("")(optsJs.dir),
      modulePath: fromNullable([])(optsJs.modulePath),
      useNewtypesForRecords: fromNullable(true)(optsJs.useNewtypesForRecords),
      enumImports: fromNullable([])(optsJs.enumImports),
      customEnumCode: fromNullable($$const(""))(optsJs.customEnumCode),
      idImport: map210(fromQualifiedTypeJs)(toMaybe(optsJs.idImport)),
      enumValueNameTransform: toMaybe(optsJs.enumValueNameTransform),
      cache: mapFlipped7(toMaybe(optsJs.cache))(function(v) {
        return {
          get: map36(function() {
            var $72 = map42(toMaybe);
            return function($73) {
              return $72(toAff($73));
            };
          }())(v.get),
          set: map36(toAff)(v.set)
        };
      })
    };
    var getError = function(err) {
      return {
        parseError: parseErrorMessage(err),
        argsTypeError: mempty10,
        result: mempty14
      };
    };
    var $74 = map42(either(getError)(function(v) {
      return {
        result: v,
        parseError: "",
        argsTypeError: ""
      };
    }));
    var $75 = schemasFromGqlToPurs(opts);
    return function($76) {
      return fromAff($74($75($76)));
    };
  };
  return mkFn2(go);
}();
export {
  fromNullable,
  fromQualifiedTypeJs,
  schemasFromGqlToPursJs
};
